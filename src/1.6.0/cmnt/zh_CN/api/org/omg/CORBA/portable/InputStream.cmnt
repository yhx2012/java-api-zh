<!-- BEGIN KEY -->
public abstract class org.omg.CORBA.portable.InputStream extends java.io.InputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
InputStream 是用来从 CDR 编组流中读取 IDL 类型的 Java API。这些方法供 ORB 用来解组 IDL 类型以及从 Any 中析取 IDL。<code>_array</code> 形式的方法可以直接用来读取 IDL 类型的序列和数组。

@version 1.12, 04/22/98
@since   JDK1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract boolean org.omg.CORBA.portable.InputStream.read_boolean()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 boolean 值。

@return 从此输入流中读取的 <code>boolean</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract char org.omg.CORBA.portable.InputStream.read_char()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 char 值。

@return 从此输入流中读取的 <code>char</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract char org.omg.CORBA.portable.InputStream.read_wchar()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 wide char 值。

@return 从此输入流中读取的 <code>char</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract byte org.omg.CORBA.portable.InputStream.read_octet()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个八位组（即 byte）值。

@return 从此输入流中读取的 <code>byte</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract short org.omg.CORBA.portable.InputStream.read_short()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 short 值。

@return 从此输入流中读取的 <code>short</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract short org.omg.CORBA.portable.InputStream.read_ushort()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个无符号 short 值。

@return 从此输入流中读取的 <code>short</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int org.omg.CORBA.portable.InputStream.read_long()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 CORBA long（即 Java int）值。

@return 从此输入流中读取的 <code>int</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int org.omg.CORBA.portable.InputStream.read_ulong()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个无符号 CORBA long（即 Java int）值。

@return 从此输入流中读取的 <code>int</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract long org.omg.CORBA.portable.InputStream.read_longlong()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 CORBA longlong（即 Java long）值。

@return 从此输入流中读取的 <code>long</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract long org.omg.CORBA.portable.InputStream.read_ulonglong()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 CORBA 无符号 longlong（即 Java long）值。

@return 从此输入流中读取的 <code>long</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract float org.omg.CORBA.portable.InputStream.read_float()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 float 值。

@return 从此输入流中读取的 <code>float</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract double org.omg.CORBA.portable.InputStream.read_double()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 double 值。

@return 从此输入流中读取的 <code>double</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String org.omg.CORBA.portable.InputStream.read_string()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 string 值。

@return 从此输入流中读取的 <code>String</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String org.omg.CORBA.portable.InputStream.read_wstring()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 wide string 值。

@return 从此输入流中读取的 <code>String</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_boolean_array(boolean[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 boolean 数组。
@param value 返回的 boolean 数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_char_array(char[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 char 数组。
@param value 返回的 char 数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_wchar_array(char[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 wide char 数组。
@param value 返回的 wide char 数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_octet_array(byte[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个八位组（即 bytes）数组。
@param value 返回的八位组（即 byte）数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_short_array(short[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 short 数组。
@param value 返回的 short 数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_ushort_array(short[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个无符号 short 数组。
@param value 返回的 short 数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_long_array(int[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 CORBA long（即 Java int）数组。
@param value 返回的 CORBA long（即 Java int）数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_ulong_array(int[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个无符号 CORBA long（即 Java int）数组。
@param value 返回的 CORBA long（即 Java int）数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_longlong_array(long[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 CORBA longlong（即 Java long）数组。
@param value 返回的 CORBA long（即 Java long）数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_ulonglong_array(long[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个无符号 CORBA longlong（即 Java long）数组。
@param value 返回的 CORBA long（即 Java long）数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_float_array(float[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 float 数组。
@param value 返回的 float 数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.InputStream.read_double_array(double[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 double 数组。
@param value 返回的 double 数组。
@param offset 流中的偏移量。
@param length 要读取的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.Object org.omg.CORBA.portable.InputStream.read_Object()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 CORBA 对象。

@return 从此输入流中读取的 <code>Object</code> 实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.TypeCode org.omg.CORBA.portable.InputStream.read_TypeCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 <code>TypeCode</code>。

@return 从此输入流中读取的 <code>TypeCode</code> 实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.Any org.omg.CORBA.portable.InputStream.read_any()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此输入流中读取一个 Any。

@return 从此输入流中读取的 <code>Any</code> 实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Principal org.omg.CORBA.portable.InputStream.read_Principal()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回调用的 principal。
@return 调用主体。
@deprecated 已由 CORBA 2.2 取代。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.CORBA.portable.InputStream.read() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
@see <a href="package-summary.html#unimpl"><code>portable</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigDecimal org.omg.CORBA.portable.InputStream.read_fixed()
<!-- END KEY -->
<!-- BEGIN DATA -->
读取一个 BigDecimal 数。
@return 一个 java.math.BigDecimal 数

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Context org.omg.CORBA.portable.InputStream.read_Context()
<!-- END KEY -->
<!-- BEGIN DATA -->
从流中读取一个 CORBA 上下文。
@return CORBA 上下文
@see <a href="package-summary.html#unimpl"><code>portable</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CORBA.portable.InputStream.read_Object(java.lang.Class clz)
<!-- END KEY -->
<!-- BEGIN DATA -->
取消对象的编组并返回一个 CORBA Object，该对象是作为参数传递的类的实例。此类是预期类型的 stub 类。

@param clz 与能肯定预期类型相对应的 stub 类的 Class 对象，或能肯定预期的 RMI/IDL 接口类型的 Class 对象。
@return 从此流中读取的 clz 的 Object 实例

@see <a href="package-summary.html#unimpl"><code>portable</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.ORB org.omg.CORBA.portable.InputStream.orb()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回创建此 InputStream 的 ORB。

@return 创建此流的 <code>ORB</code> 对象

@see <a href="package-summary.html#unimpl"><code>portable</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->