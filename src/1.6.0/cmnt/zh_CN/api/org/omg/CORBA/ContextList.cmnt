<!-- BEGIN KEY -->
public abstract class org.omg.CORBA.ContextList extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
一个对象，它包含表示属性名称的 <code>String</code> 对象所组成的可修改列表。此类在 <code>Request</code> 操作中使用，用于描述需要解析并与调用一起发送的上下文。（上下文是通过给定属性名称并取回与之关联的值来解析的。）这通过调用 <code>Context</code> 方法 <code>get_values</code> 并提供取自 <code>ContextList</code> 对象的字符串作为第三个参数来实现。<code>get_values</code> 方法返回一个包含 <code>NamedValue</code> 对象的 <code>NVList</code> 对象，NamedValue 保存由给定字符串标识的值。
 <P>
<code>ContextList</code> 对象由 ORB 创建，如下所示：
 <PRE>
   ORB orb = ORB.init(args, null);
   org.omg.CORBA.ContextList ctxList = orb.create_context_list();
 </PRE>
变量 <code>ctxList</code> 表示空 <code>ContextList</code> 对象。使用方法 <code>add</code> 将 String 添加到列表中，使用方法 <code>item</code> 访问，使用方法 <code>remove</code> 删除。

@see Context
@version 1.2, 09/09/97
@since   JDK1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int org.omg.CORBA.ContextList.count()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>ContextList</code> 对象中的 <code>String</code> 对象数。

@return			表示此 <code>ContextList</code> 对象中 <code>String</code> 数量的 <code>int</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.ContextList.add(String ctx)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>String</code> 对象添加到此 <code>ContextList</code> 对象中。


@param ctx		要添加的 <code>String</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String org.omg.CORBA.ContextList.item(int index) throws org.omg.CORBA.Bounds
<!-- END KEY -->
<!-- BEGIN DATA -->
返回位于给定索引的 <code>String</code> 对象。


@param index		所需字符串的索引，其中 0 为第一个字符串的索引
@return			给定索引处的字符串
@exception org.omg.CORBA.Bounds  如果索引大于或等于此 <code>ContextList</code> 对象中的字符串数

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.ContextList.remove(int index) throws org.omg.CORBA.Bounds
<!-- END KEY -->
<!-- BEGIN DATA -->
移除给定索引处的 <code>String</code> 对象。注意，被移除对象后面的所有字符串的索引都向下移动一位。


@param index	将要移除的 <code>String</code> 对象的索引，0 表示第一个字符串
@exception org.omg.CORBA.Bounds  如果该索引大于或等于此 <code>ContextList</code> 对象中的 <code>String</code> 对象数

<!-- END DATA -->
