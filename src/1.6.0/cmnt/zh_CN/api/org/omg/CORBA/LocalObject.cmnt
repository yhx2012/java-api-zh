<!-- BEGIN KEY -->
public class org.omg.CORBA.LocalObject extends java.lang.Object implements org.omg.CORBA.Object
<!-- END KEY -->
<!-- BEGIN DATA -->

<P>用作 Java 语言映射中的本地 IDL 接口实现的基本类。该类实现了 <tt>org.omg.CORBA.Object</tt> 接口中的所有操作。 
<P>本地接口是通过使用 CORBA::LocalObject 实现的，它提供 <code>Object</code> 伪操作的实现以及任何其他适用于这些对象的特定于 ORB 的支持机制。对象实现技术本来就是特定于语言映射的。因此，<code>LocalObject</code> 类型不是在 IDL 中定义的，而是在每个语言映射中指定的。
<P>没有应用于本地对象的方法抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally contrained object&quot;。试图使用 <TT>LocalObject</TT> 创建 DII 请求将导致 NO_IMPLEMENT 系统异常。试图编组或字符串化 <TT>LocalObject</TT> 将导致 MARSHAL 系统异常。必须像对常规对象引用那样来缩小或扩大对 <TT>LocalObjects</TT> 的引用。
<P><code>LocalObject</code> 被用作本地受约束对象（比如 PortableServer 模块中的那些对象）的基本类。此规范基于 CORBA Components Volume I - orbos/99-07-01。<P>
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.LocalObject()
<!-- END KEY -->
<!-- BEGIN DATA -->

构造一个默认 <code>LocalObject</code> 实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.CORBA.LocalObject._is_equivalent(Object that)
<!-- END KEY -->
<!-- BEGIN DATA -->
<P>在 ORB 确定时所需开销不大的范围内确定两个对象引用是否相等。两个等同的对象引用是相等的。两个实际引用相同对象的不同对象引用也是相等的。但是，ORB 不需要尝试确定两个不同的对象引用是否引用了相同的对象，因为这种确定所需的开销可能非常昂贵。
<P>此方法是 org.omg.CORBA.Object 方法的默认实现。 <P>

@param that 用来检查相等性的对象引用
@return 如果已知此对象引用与给定对象引用相等，则返回 <code>true</code>。注意，<code>false</code> 只指示两个对象引用不同，不一定指示它们所引用的对象不同。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.CORBA.LocalObject._non_existent()
<!-- END KEY -->
<!-- BEGIN DATA -->
总是返回 <code>false</code>。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>

@return <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.CORBA.LocalObject._hash(int maximum)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与对象的生命周期一致的哈希值，使用给定数字作为最大值。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@param maximum 一个 <code>int</code> 值，它标识哈希码的最大值
@return 此实例的哈希码

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.CORBA.LocalObject._is_a(String repository_id)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法并不应用于本地对象，所以没有实现。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>

@param repository_id  <code>String</code>
@return NO_IMPLEMENT，因为此为本地受约束对象，并且此方法并不应用于本地对象
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CORBA.LocalObject._duplicate()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@return 此 <code>LocalObject</code> 实例的副本。
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.LocalObject._release()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Request org.omg.CORBA.LocalObject._request(String operation)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>

@param operation 一个 <code>String</code>，它提供将由返回的请求所执行的操作的名称
@return 具有给定操作的 <code>Request</code> 对象
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Request org.omg.CORBA.LocalObject._create_request(Context ctx, String operation, NVList arg_list, NamedValue result)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>

@param ctx          包含属性列表的 <code>Context</code> 对象
@param operation    表示将被调用的方法名称的 <code>String</code>
@param arg_list     包含实际调用的方法参数的 <code>NVList</code>
@param result       将用作该方法返回值容器的 <code>NamedValue</code> 对象
@return 使用给定参数初始化的新 <code>Request</code> 对象
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Request org.omg.CORBA.LocalObject._create_request(Context ctx, String operation, NVList arg_list, NamedValue result, ExceptionList exceptions, ContextList contexts)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>

@param ctx          包含属性列表的 <code>Context</code> 对象
@param operation    将被调用的方法的名称
@param arg_list     包含实际调用的方法参数的 <code>NVList</code>
@param result       将用作该方法返回值容器的 <code>NamedValue</code> 对象
@param exceptions  一个 <code>ExceptionList</code> 对象，包含该方法可能抛出的异常所组成的列表 
@param contexts     一个 <code>ContextList</code> 对象，包含需要解析并随 <code>Request</code> 实例一起发送的上下文字符串所组成的列表
@return 使用给定参数初始化的新 <code>Request</code> 对象
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CORBA.LocalObject._get_interface()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法并不应用于本地对象，所以没有实现。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@return NO_IMPLEMENT，因为此为本地受约束对象，并且此方法并不应用于本地对象
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CORBA.LocalObject._get_interface_def()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.ORB org.omg.CORBA.LocalObject._orb()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@return 创建此 <code>ObjectImpl</code> 中所包含 Delegate 的 ORB 实例
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Policy org.omg.CORBA.LocalObject._get_policy(int policy_type)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法并不应用于本地对象，所以没有实现。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@param policy_type <code>int</code> 值
@return NO_IMPLEMENT，因为此为本地受约束对象，并且此方法并不应用于本地对象
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.DomainManager[] org.omg.CORBA.LocalObject._get_domain_managers()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法并不应用于本地对象，所以没有实现。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CORBA.LocalObject._set_policy_override(org.omg.CORBA.Policy[] policies, SetOverrideType set_add)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法并不应用于本地对象，所以没有实现。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。

@param policies 一个数组
@param set_add 一个标志
@return NO_IMPLEMENT，因为此为本地受约束对象，并且此方法并不应用于本地对象
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.CORBA.LocalObject._is_local()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
对于此 <code>LocalObject</code> 实例返回 <code>true</code>。<P>
@return 总是返回 <code>true</code>
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.portable.ServantObject org.omg.CORBA.LocalObject._servant_preinvoke(String operation, java.lang.Class expectedType)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@param operation 指示将提前调用哪一项操作的 <code>String</code>
@param expectedType 上述操作类型的类
@return NO_IMPLEMENT，因为此为本地受约束对象，并且此方法并不应用于本地对象
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.LocalObject._servant_postinvoke(ServantObject servant)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@param servant 进行后调用的 servant 对象
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.portable.OutputStream org.omg.CORBA.LocalObject._request(String operation, boolean responseExpected)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。
<P>此方法由 stub 调用，以获得用于编组参数的 OutputStream。stub 必须提供操作名称，并指示是否希望应答（即是否为单向调用）。<P>
@param operation 被请求的操作的名称
@param responseExpected 如果期望应答，则该值为 <code>true</code>；如果该调用是单向调用，则该值为 <code>false</code>
@return NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.portable.InputStream org.omg.CORBA.LocalObject._invoke(OutputStream output) throws org.omg.CORBA.portable.ApplicationException, org.omg.CORBA.portable.RemarshalException
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。
<P>可调用此方法来调用某项操作。stub 提供以前由 <code>_request()</code> 调用返回的 <code>OutputStream</code>。<code>_invoke</code> 返回一个包含已编组应答的 <code>InputStream</code>。如果发生异常，则 <code>_invoke</code> 抛出 <code>ApplicationException</code> 对象，该对象包含一个 <code>InputStream</code>，从中可解组用户异常状态。<P>
@param output 要调用的 <code>OutputStream</code>
@return NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@throws ApplicationException 如果发生异常，则 <code>_invoke</code> 抛出 <code>ApplicationException</code> 对象，该对象包含一个 <code>InputStream</code>，从中可解组用户异常状态。
@throws RemarshalException 如果发生异常，则 <code>_invoke</code> 抛出 <code>ApplicationException</code> 对象，该对象包含一个 <code>InputStream</code>，从中可解组用户异常状态。
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.LocalObject._releaseReply(InputStream input)
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。
<P>stub 可以有选择地调用此方法，以在完成解组时将应答流释放回 ORB。stub 传递由 <code>_invoke()</code> 或 <code>ApplicationException.getInputStream()</code> 返回的 <code>InputStream</code>。还可以将 null 值传递给 <code>_releaseReply</code>，在这种情况下，此方法不执行任何操作。<P>
@param input 释放回 ORB 的应答流或 null
@exception NO_IMPLEMENT
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.CORBA.LocalObject.validate_connection()
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 <code>org.omg.CORBA.NO_IMPLEMENT</code> 异常，并带有消息 &quot;This is a locally constrained object&quot;。此方法并不应用于本地对象，所以没有实现。此方法是 <code>org.omg.CORBA.Object</code> 方法的默认实现。<P>
@return NO_IMPLEMENT，因为此为本地受约束对象，并且此方法并不应用于本地对象
@exception NO_IMPLEMENT 因为此为本地受约束对象，并且此方法并不应用于本地对象
@see <a href="package-summary.html#unimpl"><code>CORBA</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
