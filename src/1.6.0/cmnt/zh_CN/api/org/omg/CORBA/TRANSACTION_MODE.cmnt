<!-- BEGIN KEY -->
public final class org.omg.CORBA.TRANSACTION_MODE extends org.omg.CORBA.SystemException
<!-- END KEY -->
<!-- BEGIN DATA -->
如果客户端 ORB 检测到 IOR 中的 InvocationPolicy 与选中的调用路径（即直接或路由调用）不匹配，则它将抛出 CORBA <code>TRANSACTION_MODE</code> 异常。它包含次要代码 (minor code) 和完成状态 (completion status)，次要代码提供有关造成该异常原因的信息。它可能还包含描述该异常的字符串。OMG CORBA 核心 2.4 规范中有详细说明。

@see <A href="../../../../technotes/guides/idl/jidlExceptions.html">关于 Java IDL 异常的文档</A>
@version     1.0 10/22/2000

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TRANSACTION_MODE()
<!-- END KEY -->
<!-- BEGIN DATA -->
使用默认次要代码 0、完成状态 CompletionStatus.COMPLETED_NO 和 null 描述构造一个 <code>TRANSACTION_MODE</code> 异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TRANSACTION_MODE(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定描述消息、次要代码 0 和完成状态 COMPLETED_NO 构造一个 <code>TRANSACTION_MODE</code> 异常。
@param s 包含详细消息的 String

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TRANSACTION_MODE(int minor, CompletionStatus completed)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定次要代码和完成状态构造一个 <code>TRANSACTION_MODE</code> 异常。
@param minor 次要代码
@param completed 完成状态

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TRANSACTION_MODE(String s, int minor, CompletionStatus completed)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定描述消息、次要代码和完成状态构造一个 <code>TRANSACTION_MODE</code> 异常。
@param s 包含描述消息的 String
@param minor 次要代码
@param completed 完成状态

<!-- END DATA -->
