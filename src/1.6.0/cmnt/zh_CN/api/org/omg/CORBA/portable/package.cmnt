<!-- BEGIN KEY -->
org.omg.CORBA.portable
<!-- END KEY -->
<!-- BEGIN DATA -->

提供可移植性层，即可以使一个供应商生成的代码运行在另一个供应商 ORB 上的 ORB API 集合。Stub 和其他代码（通过 IDL 或用 Java 编程语言编写的接口生成）可以调入这些 ORB API。


<p>
<a name="unimpl"></a>
<hr>
<h1>CORBA Features Throwing NO_IMPLEMENT() 异常</h1>
<hr>
一些方法在默认情况下抛出 NO_IMPLEMENT() 异常，但是 ORB 供应商可以重写这些方法以提供实在的实现。包含在 Java[tm] Platform，Standard Edition 6 这一版本中的 ORB 包括以下方法的实现。
<p>
<h2><code>org.omg.CORBA.portable</code> 包中未实现特性的列表</h2>
<p>
<h3><code>org.omg.CORBA.portable</code> 包中未实现的接口</h3>
  <ul>
<code>
    <li>InvokeHandler
    <li>ResponseHandler</code>
  </ul>
<p>
<h3><code>org.omg.CORBA.portable</code> 包中未实现的方法</h3>
<ul>
<code>
<li>InputStream
  <ul>
    <li>public int read()
    <li>public.math.BigDecimal read_fixed()
    <li>public org.omg.CORBA.Context read_Context() 
    <li>public  org.omg.CORBA.Object read_Object(java.lang.Class clz)
    <li>public org.omg.CORBA.ORB orb() 
  </ul>
<li>OutputStream
  <ul>
    <li>public org.omg.CORBA.ORB orb()
    <li>public void write_Context(org.omg.CORBA.Context ctx, org.omg.CORBA.ContextList contexts) 
    <li>public void write_fixed(java.math.BigDecimal value) 
    <li>public void write(int b) 
  </ul>
<li>Delegate
  <ul>
    <li>public void releaseReply(org.omg.CORBA.Object self, InputStream input)
    <li>public InputStream invoke(org.omg.CORBA.Object self, OutputStream output)
    <li>public OutputStream request(org.omg.CORBA.Object self, String operation, boolean responseExpected)
    <li>public org.omg.CORBA.Object set_policy_override(org.omg.CORBA.Object self, org.omg.CORBA.Policy[] policies, org.omg.CORBA.SetOverrideType set_add)
    <li>public org.omg.CORBA.DomainManager[] get_domain_managers( org.omg.CORBA.Object self)
    <li>public org.omg.CORBA.Policy get_policy(org.omg.CORBA.Object self, int policy_type)
  </ul>
</code>
</ul>

@since JDK1.2
@serial exclude

<!-- END DATA -->
