<!-- BEGIN KEY -->
public final class org.omg.CORBA.AnyHolder extends java.lang.Object implements org.omg.CORBA.portable.Streamable
<!-- END KEY -->
<!-- BEGIN DATA -->
<tt>Any</tt> 的 Holder。关于 Holder 文件的更多信息，请参阅<a href="doc-files/generatedfiles.html#holder">&ldquo;生成的文件：Holder 文件&rdquo;</a>。<P>
<code>Any</code> 对象的 Holder 类，用于存储 IDL 方法中的 &quot;out&quot; 和 &quot;inout&quot; 参数。如果 IDL 方法签名将 IDL <code>any</code> 作为 &quot;out&quot; 或 &quot;inout&quot; 参数，则程序员必须传递 <code>AnyHolder</code> 实例作为方法调用中的相应参数；对于 &quot;inout&quot; 参数，程序员还必须填充将发送到服务器的 &quot;in&quot; 值。在方法调用返回之前，ORB 将填充与从服务器返回的 &quot;out&quot; 值对应的值。
 <P>
如果 <code>myAnyHolder</code> 是 <code>AnyHolder</code> 的实例，则可以使用 <code>myAnyHolder.value</code> 访问存储在其 <code>value</code> 字段中的值。

@version	1.14, 09/09/97
@since       JDK1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Any org.omg.CORBA.AnyHolder.value
<!-- END KEY -->
<!-- BEGIN DATA -->
此 <code>AnyHolder</code> 对象保存的 <code>Any</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.AnyHolder()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的 <code>AnyHolder</code> 对象，将其 <code>value</code> 字段初始化为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.AnyHolder(Any initial)
<!-- END KEY -->
<!-- BEGIN DATA -->
为给定的 <code>Any</code> 对象构造一个新 <code>AnyHolder</code> 对象。
@param initial 用来初始化新 <code>AnyHolder</code> 对象 <code>value</code> 字段的 <code>Any</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.AnyHolder._read(InputStream input)
<!-- END KEY -->
<!-- BEGIN DATA -->
从 <code>input</code> 中读取数据，并使用已解组数据初始化 Holder 中的值。

@param input 包含从导线获取的 CDR 格式数据的 InputStream。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.AnyHolder._write(OutputStream output)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>AnyHolder</code> 对象中的值编组到 <code>output</code>。

@param output 将包含 CDR 格式数据的 OutputStream。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TypeCode org.omg.CORBA.AnyHolder._type()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对应于此 <code>AnyHolder</code> 对象中保存值的 <code>TypeCode</code> 对象。

@return    此 <code>AnyHolder</code> 对象中所保存值的 TypeCode

<!-- END DATA -->
