<!-- BEGIN KEY -->
public abstract class org.omg.CORBA.NVList extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
包含 <code>NamedValue</code> 对象所组成的可修改列表。
 <P>
<code>NVList</code> 类的用途如下：
 <UL>
<LI>描述动态调用接口 (Dynamic Invocation Interface) 和动态框架接口 (Dynamic Skeleton Interface) 中 <code>Request</code> 对象的参数
<LI>描述 <code>Context</code> 对象中的上下文值
 </UL>
 <P>
每个 <code>NamedValue</code> 对象都由以下部分组成：
 <UL>
<LI>一个名称，该名称是一个 <code>String</code> 对象
<LI>一个值，该值是一个 <code>Any</code> 对象
<LI>一个参数模式标志
 </UL>
 <P>
可以使用以下 <code>ORB</code> 方法之一创建 <code>NVList</code> 对象：
 <OL>
 <LI><code>org.omg.CORBA.ORB.create_list</code>
 <PRE>
    org.omg.CORBA.NVList nv = orb.create_list(3);
 </PRE>
变量 <code>nv</code> 表示一个新创建的 <code>NVList</code> 对象。该参数是 orb 的内存管理提示，并不意味着实际的列表长度。例如，如果要在某一请求中使用 <code>NVList</code> 对象，则将被调用的方法将采用三个参数，您可以通过向 <code>create_list</code> 方法提供 3 来优化此操作。注意，新的 <code>NVList</code> 没必要将长度设置为 3；例如，它可以将长度设置为 2 或 4。还要注意的是，您可以将任意数量的 <code>NamedValue</code> 对象添加到此列表中，不管其原始长度如何。
 <P>
 <LI><code>org.omg.CORBA.ORB.create_operation_list</code>
 <PRE>
    org.omg.CORBA.NVList nv = orb.create_operation_list(myOperationDef);
 </PRE>
变量 <code>nv</code> 表示新创建的 <code>NVList</code> 对象，该对象包含对给定 <code>OperationDef</code> 对象中所描述方法的参数的描述。
 </OL>
 <P>
<code>NVList</code> 类中的方法都要处理列表中的 <code>NamedValue</code> 对象。有三个方法可用于添加 <code>NamedValue</code> 对象，一个方法用于获得列表中 <code>NamedValue</code> 对象的计数，另一个方法用于检索给定索引处的 <code>NamedValue</code> 对象，还有一个方法用于移除给定索引处的 <code>NamedValue</code> 对象。

@see org.omg.CORBA.Request
@see org.omg.CORBA.ServerRequest
@see org.omg.CORBA.NamedValue
@see org.omg.CORBA.Context

@version 1.14 ,09/09/97
@since       JDK1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int org.omg.CORBA.NVList.count()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回已添加到此 <code>NVList</code> 对象的 <code>NamedValue</code> 对象数。

@return			指示此 <code>NVList</code> 中 <code>NamedValue</code> 对象数的 <code>int</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.NamedValue org.omg.CORBA.NVList.add(int flags)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的 <code>NamedValue</code> 对象，使用给定标志初始化该对象，并将它添加到此 <code>NVList</code> 对象的末尾。该标志可以是以下参数传递模式之一：<code>ARG_IN.value</code>、<code>ARG_OUT.value</code> 或 <code>ARG_INOUT.value</code>。

@param flags		参数模式标志之一
@return			新创建的 <code>NamedValue</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.NamedValue org.omg.CORBA.NVList.add_item(String item_name, int flags)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的 <code>NamedValue</code> 对象，使用给定名称和标志初始化该对象，并将它添加到此 <code>NVList</code> 对象的末尾。该标志可以是以下参数传递模式之一：<code>ARG_IN.value</code>、<code>ARG_OUT.value</code> 或 <code>ARG_INOUT.value</code>。


@param item_name	新 <code>NamedValue</code> 对象的名称
@param flags		参数模式标志之一
@return			新创建的 <code>NamedValue</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.NamedValue org.omg.CORBA.NVList.add_value(String item_name, Any val, int flags)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的 <code>NamedValue</code> 对象，使用给定名称、值和标志初始化该对象，并将它添加到此 <code>NVList</code> 对象的末尾。


@param item_name	新 <code>NamedValue</code> 对象的名称
@param val	  包含新 <code>NamedValue</code> 对象值的 <code>Any</code> 对象
@param flags	  以下参数传递模式之一：<code>ARG_IN.value</code>、<code>ARG_OUT.value</code> 或 <code>ARG_INOUT.value</code>
@return		  新创建的 <code>NamedValue</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.NamedValue org.omg.CORBA.NVList.item(int index) throws org.omg.CORBA.Bounds
<!-- END KEY -->
<!-- BEGIN DATA -->
检索给定索引处的 <code>NamedValue</code> 对象。


@param index		所需 <code>NamedValue</code> 对象的索引，该索引必须在 0 与列表长度减 1（包括两者）之间。第一个项位于索引 0 处。
@return			位于给定索引处的 <code>NamedValue</code> 对象
@exception org.omg.CORBA.Bounds  如果索引大于或等于此 <code>NamedValue</code> 对象的个数

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.NVList.remove(int index) throws org.omg.CORBA.Bounds
<!-- END KEY -->
<!-- BEGIN DATA -->
移除位于给定索引处的 <code>NamedValue</code> 对象。注意，被移除对象之后的所有 <code>NamedValue</code> 对象的索引都将向下移动一位。


@param index		要移除的 <code>NamedValue</code> 对象的索引，该索引必须在 0 与列表长度减 1（包括两者）之间。第一个项位于索引 0 处。
@exception org.omg.CORBA.Bounds  如果索引大于或等于列表中 <code>NamedValue</code> 对象的个数

<!-- END DATA -->
