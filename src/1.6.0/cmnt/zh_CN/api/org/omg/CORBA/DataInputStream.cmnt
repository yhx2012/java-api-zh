<!-- BEGIN KEY -->
public interface org.omg.CORBA.DataInputStream extends org.omg.CORBA.portable.ValueBase
<!-- END KEY -->
<!-- BEGIN DATA -->
定义用来从输入流读取基本数据类型的方法，以便解组自定义值类型。此接口供用户编写的自定义值类型的自定义解组代码使用。
@see org.omg.CORBA.DataOutputStream
@see org.omg.CORBA.CustomMarshal
@version 1.11 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Any org.omg.CORBA.DataInputStream.read_any()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL <code>Any</code> 值。
@return 读取的 <code>Any</code> 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.CORBA.DataInputStream.read_boolean()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL boolean 值。
@return 读取的 boolean 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public char org.omg.CORBA.DataInputStream.read_char()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL 字符值。
@return 读取的字符。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public char org.omg.CORBA.DataInputStream.read_wchar()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL 宽字符值。
@return 读取的宽字符。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte org.omg.CORBA.DataInputStream.read_octet()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL octet 值。
@return     读取的 octet 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public short org.omg.CORBA.DataInputStream.read_short()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL short 值。
@return 读取的 short 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public short org.omg.CORBA.DataInputStream.read_ushort()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取无符号 IDL short 值。
@return 读取的无符号 short 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.CORBA.DataInputStream.read_long()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL long 值。
@return 读取的 long 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.CORBA.DataInputStream.read_ulong()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取无符号 IDL long 值。
@return 读取的无符号 long 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public long org.omg.CORBA.DataInputStream.read_longlong()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL long long 值。
@return 读取的 long long 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public long org.omg.CORBA.DataInputStream.read_ulonglong()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取无符号 IDL long long 值。
@return 读取的无符号 long long 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float org.omg.CORBA.DataInputStream.read_float()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL float 值。
@return 读取的 float 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public double org.omg.CORBA.DataInputStream.read_double()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL double 值。
@return 读取的 double 值。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.CORBA.DataInputStream.read_string()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL 字符串值。
@return 读取的字符串。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.CORBA.DataInputStream.read_wstring()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL 宽字符串值。
@return 读取的宽字符串。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CORBA.DataInputStream.read_Object()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL CORBA::Object。
@return     读取的 CORBA::Object。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object org.omg.CORBA.DataInputStream.read_Abstract()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL Abstract 接口。
@return 读取的 Abstract 接口。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Serializable org.omg.CORBA.DataInputStream.read_Value()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL 值类型。
@return 读取的值类型。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TypeCode org.omg.CORBA.DataInputStream.read_TypeCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL typecode 值。
@return 读取的 typecode。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_any_array(AnySeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL Any 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_boolean_array(BooleanSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL boolean 数组中 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_char_array(CharSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL 字符数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_wchar_array(WCharSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL 宽字符数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_octet_array(OctetSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL octet 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_short_array(ShortSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL short 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_ushort_array(UShortSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取无符号 IDL short 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_long_array(LongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL long 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_ulong_array(ULongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取无符号 IDL long 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_ulonglong_array(ULongLongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取无符号 IDL long long 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_longlong_array(LongLongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL long long 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_float_array(FloatSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL float 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_double_array(DoubleSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流读取 IDL double 数组中从 offset 处开始的 length 个元素。
@param seq 将读取的数组的 out 参数 holder。
@param offset 将从输入流读取的第一个元素在 seq 中的索引。
@param length 从输入流读取的元素个数。
@throws <code>org.omg.CORBA.MARSHAL</code> 如果检测到不一致的地方（包括没有注册流策略），则会引发标准系统异常 MARSHAL。

<!-- END DATA -->
