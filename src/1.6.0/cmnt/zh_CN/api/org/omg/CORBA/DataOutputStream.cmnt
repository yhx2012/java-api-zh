<!-- BEGIN KEY -->
public interface org.omg.CORBA.DataOutputStream extends org.omg.CORBA.portable.ValueBase
<!-- END KEY -->
<!-- BEGIN DATA -->
定义用来将基本数据类型写入输出流的方法，以便编组自定义值类型。此接口供编写用于自定义值类型的自定义编组代码的用户使用。
@see org.omg.CORBA.DataInputStream
@see org.omg.CORBA.CustomMarshal
@version 1.13 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_any(Any value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 Any 值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_boolean(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 boolean 值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_char(char value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL 字符值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_wchar(char value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL 宽字符值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_octet(byte value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL octet 值（以一个 Java 字节的形式表示）写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_short(short value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL short 值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ushort(short value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将无符号 IDL short 值（以 Java short 值的形式表示）写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_long(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL long 值（以 Java int 的形式表示）写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulong(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将无符号 IDL long 值（以 Java int 的形式表示）写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_longlong(long value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL long long 值（以 Java long 的形式表示）写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulonglong(long value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将无符号 IDL long long 值（以 Java long 的形式表示）写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_float(float value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL float 值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_double(double value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL double 值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_string(String value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL string 值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_wstring(String value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL 宽字符串值（以 Java String 的形式表示）写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_Object(Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL CORBA::Object 值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_Abstract(Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL Abstract 接口类型写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_Value(Serializable value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL value 类型值写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_TypeCode(TypeCode value)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 typecode 写入输出流。
@param  value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_any_array(org.omg.CORBA.Any[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL Any 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_boolean_array(boolean[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL boolean 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_char_array(char[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL 字符数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_wchar_array(char[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL 宽字符数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_octet_array(byte[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL octet 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_short_array(short[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL short 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ushort_array(short[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将无符号 IDL short 数组中从 offset 处开始的 length 个元素（以 Java short 的形式表示）写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_long_array(int[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL long 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulong_array(int[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将无符号 IDL long 数组中从 offset 处开始的 length 个元素（以 Java int 的形式表示）写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulonglong_array(long[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将无符号 IDL long long 数组中从 offset 处开始的 length 个元素（以 Java long 的形式表示）写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_longlong_array(long[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL long long 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_float_array(float[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL float 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_double_array(double[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

将 IDL double 数组中从 offset 处开始的 length 个元素写入输出流。
@param seq 将元素写入其中的数组。
@param offset 将写入输出流的第一个元素在 seq 中的索引。
@param length 写入输出流的元素个数。

<!-- END DATA -->
