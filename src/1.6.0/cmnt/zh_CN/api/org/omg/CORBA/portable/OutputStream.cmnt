<!-- BEGIN KEY -->
public abstract class org.omg.CORBA.portable.OutputStream extends java.io.OutputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
OuputStream 是用来将 IDL 类型写入 CDR 编组流的 Java API。这些方法供 ORB 用来编组 IDL 类型以及将 IDL 插入 Any。这些 <code>_array</code> 形式的方法可以直接用于写入 IDL 类型的序列和数组。

@version 1.13, 04/22/98
@since   JDK1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.omg.CORBA.portable.InputStream org.omg.CORBA.portable.OutputStream.create_input_stream()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个具有相同缓冲区的输入流。
@return 具有相同缓冲区的输入流。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_boolean(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 boolean 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_char(char value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 char 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_wchar(char value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 wide char 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_octet(byte value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 CORBA 八位组（即字节）写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_short(short value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 short 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_ushort(short value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个无符号 short 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_long(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 CORBA long（即 Java int）值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_ulong(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个无符号 CORBA long（即 Java int）值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_longlong(long value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 CORBA longlong（即 Java long）值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_ulonglong(long value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个无符号 CORBA longlong（即 Java long）值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_float(float value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 float 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_double(double value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 double 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_string(String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 string 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_wstring(String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 wide string 值写入此流。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_boolean_array(boolean[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 boolean 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_char_array(char[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 char 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_wchar_array(char[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 wide char 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_octet_array(byte[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 CORBA 八位组 (byte) 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_short_array(short[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 short 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_ushort_array(short[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个无符号 short 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_long_array(int[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 CORBA long（即 Java int）数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_ulong_array(int[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个无符号 CORBA long（即 Java int）数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_longlong_array(long[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 CORBA longlong（即 Java int）数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_ulonglong_array(long[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个无符号 CORBA longlong（即 Java int）数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_float_array(float[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输入流上写入一个 float 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_double_array(double[] value, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输入流上写入一个 double 数组。
@param value 要写入的数组。
@param offset 流中的偏移量。
@param length 要写入的缓冲区长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_Object(Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输入流上写入一个 CORBA Object。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_TypeCode(TypeCode value)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 TypeCode。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void org.omg.CORBA.portable.OutputStream.write_any(Any value)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 Any。
@param value 要写入的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.portable.OutputStream.write_Principal(Principal value)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此输出流上写入一个 Principle。
@param value 要写入的值。
@deprecated 已由 CORBA 2.2 取代。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.portable.OutputStream.write(int b) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

将一个 integer（数组长度）写入此流。
@param b 要写入的值。
@throws java.io.IOException 如果存在输入/输出错误
@see <a href="package-summary.html#unimpl"><code>portable</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.portable.OutputStream.write_fixed(BigDecimal value)
<!-- END KEY -->
<!-- BEGIN DATA -->

写入一个 BigDecimal 数。
@param value 要写入的值 BidDecimal。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.portable.OutputStream.write_Context(Context ctx, ContextList contexts)
<!-- END KEY -->
<!-- BEGIN DATA -->

在此流上写入一个 CORBA 上下文。该上下文被编组为一个 string 序列。实际上只写入那些在 contexts 参数中指定的 Context 值。
@param ctx CORBA 上下文
@param contexts <code>ContextList</code> 对象，包含要写入的 context 列表
@see <a href="package-summary.html#unimpl"><code>portable</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.ORB org.omg.CORBA.portable.OutputStream.orb()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回创建此 OutputStream 的 ORB。
@return 返回创建此 OutputStream 的 ORB
@see <a href="package-summary.html#unimpl"><code>portable</code> 包中有关未实现特性的注释</a>

<!-- END DATA -->
