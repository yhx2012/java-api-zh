<!-- BEGIN KEY -->
public class org.omg.CosNaming._NamingContextExtStub extends org.omg.CORBA.portable.ObjectImpl implements org.omg.CosNaming.NamingContextExt
<!-- END KEY -->
<!-- BEGIN DATA -->

<code>NamingContextExt</code> 是 <code>NamingContext</code>（它包含一组名称绑定，在这些名称绑定中，每个名称都是唯一的）的扩展，并且是互操作命名服务 (Interoperable Naming Service) 的一部分。可以同时将不同名称绑定到相同或不同上下文中的对象。通过 <tt>NamingContextExt</tt>，可以使用基于 URL 的名称进行绑定和解析。 <p>
 
请参阅 <a href="http://www.omg.org/technology/documents/formal/naming_service.htm">CORBA COS 命名规范</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.CosNaming._NamingContextExtStub.to_string(org.omg.CosNaming.NameComponent[] n) throws org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->
此操作从 Name 组件数组创建字符串化的名称。
 
@param n 对象名 <p>
 
@exception org.omg.CosNaming.NamingContextExtPackage.InvalidName 指示名称不标识绑定。<p>
 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CosNaming.NameComponent[] org.omg.CosNaming._NamingContextExtStub.to_name(String sn) throws org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->
此操作将&ldquo;字符串化的名称&rdquo;转换为等效的&ldquo;名称组件&rdquo;数组。 
 
@param sn 对象的&ldquo;字符串化的名称&rdquo; <p>
 
@exception org.omg.CosNaming.NamingContextExtPackage.InvalidName 指示名称不标识绑定。<p>
 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.CosNaming._NamingContextExtStub.to_url(String addr, String sn) throws org.omg.CosNaming.NamingContextExtPackage.InvalidAddress, org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->
此操作根据对象的&ldquo;字符串化的名称&rdquo;创建基于 URL 的 &quot;iiopname://&quot; 格式的名称。
 
@param addr 运行&ldquo;命名服务&rdquo;的主机基于 Internet 的地址 <p>
@param sn 对象的&ldquo;字符串化的名称&rdquo; <p>
 
@exception org.omg.CosNaming.NamingContextExtPackage.InvalidName 指示名称不标识绑定。<p>
@exception org.omg.CosNaming.NamingContextPackage.InvalidAddress 指示主机基于 Internet 的地址不正确 <p>
 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CosNaming._NamingContextExtStub.resolve_str(String sn) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->
此操作将&ldquo;字符串化的&rdquo;名称解析为对象引用。 
 
@param sn 对象的&ldquo;字符串化的名称&rdquo; <p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示不存在给定名称的对象引用。 <p>
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示给定的组合名称不正确 <p>
@exception org.omg.CosNaming.NamingContextExtPackage.InvalidName 指示名称不标识绑定。<p>
 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CosNaming._NamingContextExtStub.bind(org.omg.CosNaming.NameComponent[] n, Object obj) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName, org.omg.CosNaming.NamingContextPackage.AlreadyBound
<!-- END KEY -->
<!-- BEGIN DATA -->
在命名上下文中创建名称和对象的绑定。在传递组合名称以进行解析时，使用 bind 绑定的命名上下文不参与名称解析。 
 
@param n 对象名 <p>
 
@param obj 要与给定名称绑定在一起的对象<p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示名称不标识绑定。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示由于某种原因放弃了实现。不过，客户端也可能在返回的命名上下文中继续该操作。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.InvalidName 指示名称无效。 <p>

@exception org.omg.CosNaming.NamingContextPackage.AlreadyBound 指示已将对象绑定到指定名称。<p> 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CosNaming._NamingContextExtStub.bind_context(org.omg.CosNaming.NameComponent[] n, NamingContext nc) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName, org.omg.CosNaming.NamingContextPackage.AlreadyBound
<!-- END KEY -->
<!-- BEGIN DATA -->
命名作为命名上下文的对象。在传递组合名称以进行解析时，使用 bind_context() 绑定的命名上下文参与名称解析。
 
@param n 对象名 <p>
 
@param nc 要与给定名称绑定在一起的 NamingContect 对象 <p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示名称不标识绑定。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示由于某种原因放弃了实现。不过，客户端也可能在返回的命名上下文中继续该操作。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.InvalidName 指示名称无效。 <p>

@exception org.omg.CosNaming.NamingContextPackage.AlreadyBound 指示已将对象绑定到指定名称。<p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CosNaming._NamingContextExtStub.rebind(org.omg.CosNaming.NameComponent[] n, Object obj) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->
在命名上下文中创建名称和对象的绑定，即使该名称已经绑定在上下文中。在传递组合名称以进行解析时，使用 rebind 绑定的命名上下文不参与名称解析。
 
@param n 对象名 <p>
 
@parm obj 要与给定名称重新绑定在一起的对象 <p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示名称不标识绑定。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示由于某种原因放弃了实现。不过，客户端也可能在返回的命名上下文中继续该操作。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.InvalidName 指示名称无效。 <p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CosNaming._NamingContextExtStub.rebind_context(org.omg.CosNaming.NameComponent[] n, NamingContext nc) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->

在命名上下文中创建名称和命名上下文的绑定，即使该名称已经绑定在上下文中。在传递组合名称以进行解析时，使用 rebind_context() 绑定的命名上下文参与名称解析。
 
@param n 对象名 <p>
 
@param nc 要与给定名称重新绑定在一起的 NamingContect 对象 <p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示名称不标识绑定。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示由于某种原因放弃了实现。不过，客户端也可能在返回的命名上下文中继续该操作。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.InvalidName 指示名称无效。 <p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CosNaming._NamingContextExtStub.resolve(org.omg.CosNaming.NameComponent[] n) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->

解析操作是指检索绑定到给定上下文中名称的对象的过程。给定名称必须与绑定名称完全匹配。命名服务不返回对象的类型。客户端负责将对象&ldquo;收缩&rdquo;为适当的类型。即客户端通常将返回对象由 Object 强制转换为更专用的接口。
 
@param n 对象名 <p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示名称不标识绑定。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示由于某种原因放弃了实现。不过，客户端也可能在返回的命名上下文中继续该操作。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.InvalidName 指示名称无效。 <p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CosNaming._NamingContextExtStub.unbind(org.omg.CosNaming.NameComponent[] n) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->

unbind 操作从上下文移除名称绑定。
 
@param n 对象名 <p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示名称不标识绑定。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示由于某种原因放弃了实现。不过，客户端也可能在返回的命名上下文中继续该操作。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.InvalidName 指示名称无效。 <p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CosNaming._NamingContextExtStub.list(int how_many, BindingListHolder bl, BindingIteratorHolder bi)
<!-- END KEY -->
<!-- BEGIN DATA -->
列表操作允许客户端迭代命名上下文中的一组绑定。 <p>
 
list 操作在 BindingList bl 中返回最多可以达到的请求绑定数。
 <ul>
<li>如果命名上下文包含附加绑定，则 list 操作将返回带有附加绑定的 BindingIterator。 
<li>如果命名上下文不包含附加绑定，则绑定迭代器为 nil 对象引用。
 </ul>
 
@param how_many 要返回的最大绑定数 <p>
 
@param bl 返回的绑定列表 <p>
 
@param bi 返回的绑定迭代器 <p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CosNaming.NamingContext org.omg.CosNaming._NamingContextExtStub.new_context()
<!-- END KEY -->
<!-- BEGIN DATA -->
此操作返回调用该操作的上下文的命名服务器实现的命名上下文。没有将新上下文绑定到任何名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CosNaming.NamingContext org.omg.CosNaming._NamingContextExtStub.bind_new_context(org.omg.CosNaming.NameComponent[] n) throws org.omg.CosNaming.NamingContextPackage.NotFound, org.omg.CosNaming.NamingContextPackage.AlreadyBound, org.omg.CosNaming.NamingContextPackage.CannotProceed, org.omg.CosNaming.NamingContextPackage.InvalidName
<!-- END KEY -->
<!-- BEGIN DATA -->
此操作创建新上下文并将其绑定到作为参数提供的名称。新创建的上下文由将其绑定到的上下文的命名服务器（即实现名称参数（最后一个组件除外）表示的上下文的命名服务器）实现。
 
@param n 对象名 <p>
 
@exception org.omg.CosNaming.NamingContextPackage.NotFound 指示名称不标识绑定。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.AlreadyBound 指示已将对象绑定到指定名称。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.CannotProceed 指示由于某种原因放弃了实现。不过，客户端也可能在返回的命名上下文中继续该操作。<p>
 
@exception org.omg.CosNaming.NamingContextPackage.InvalidName 指示名称无效。 <p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CosNaming._NamingContextExtStub.destroy() throws org.omg.CosNaming.NamingContextPackage.NotEmpty
<!-- END KEY -->
<!-- BEGIN DATA -->

destroy 操作删除命名上下文。如果命名上下文包含绑定，则引发 NotEmpty 异常。
 
@exception org.omg.CosNaming.NamingContextPackage.NotEmpty 指示命名上下文包含绑定。

<!-- END DATA -->
