<!-- BEGIN KEY -->
public interface org.omg.DynamicAny.DynSequenceOperations extends org.omg.DynamicAny.DynAnyOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
DynSequence 对象支持对 IDL 序列的操作。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.DynamicAny.DynSequenceOperations.get_length()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回序列的当前长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynSequenceOperations.set_length(int len) throws org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
设置序列的长度。增加序列的长度将在尾部添加新元素，同时不影响现有元素的值。新添加的元素按默认方式初始化。如果上一个当前位置是 -1，则增加序列的长度会将当前位置设置为第一个新添加的元素。如果上一个当前位置不是 -1，则该操作对当前位置没有影响。减少序列的长度将从尾部移除元素，同时不影响剩余元素的值。减少序列长度后，新的当前位置用以下方式确定：
 <UL>
<LI>如果将序列长度设置为 0，则当前位置被设置为 -1。
<LI>如果减少长度前当前位置为 -1，则其仍然为 -1。
<LI>如果当前位置指示一个有效元素，而该元素在减少长度后没有被移除，则当前位置保持不变。
<LI>如果当前位置指示一个有效元素，但该元素在减少长度后被移除，则将当前位置设置为 -1。
 </UL>

@exception InvalidValue 如果此为有界序列且 len 大于其界限

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Any[] org.omg.DynamicAny.DynSequenceOperations.get_elements()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回序列的元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynSequenceOperations.set_elements(org.omg.CORBA.Any[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
设置序列的元素。将 DynSequence 的长度设置为 value 的长度。如果 value 的长度不为 0，则将当前位置设置为 0；如果 value 是长度为 0 的序列，则将当前位置设置为 -1。

@exception TypeMismatch 如果 value 包含一个或多个元素，而这些元素的 TypeCode 不等于 DynSequence 的 TypeCode 元素
@exception InvalidValue 如果 value 的长度超出有界序列的界限

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.DynamicAny.DynAny[] org.omg.DynamicAny.DynSequenceOperations.get_elements_as_dyn_any()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示序列元素的 DynAny。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynSequenceOperations.set_elements_as_dyn_any(org.omg.DynamicAny.DynAny[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 DynAny 设置序列的元素。将 DynSequence 的长度设置为 value 的长度。如果 value 的长度不为 0，则将当前位置设置为 0；如果 value 是长度为 0 的序列，则将当前位置设置为 -1。

@exception TypeMismatch 如果 value 包含一个或多个元素，而这些元素的 TypeCode 不等于 DynSequence 的 TypeCode 元素
@exception InvalidValue 如果 value 的长度超出有界序列的界限

<!-- END DATA -->
