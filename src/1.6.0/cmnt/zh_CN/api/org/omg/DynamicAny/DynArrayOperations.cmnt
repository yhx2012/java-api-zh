<!-- BEGIN KEY -->
public interface org.omg.DynamicAny.DynArrayOperations extends org.omg.DynamicAny.DynAnyOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
DynArray 对象支持对 IDL 数组的操作。注意，数组的维数包含在可通过类型属性访问的 TypeCode 中。也可以通过调用 component_count 操作得到。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Any[] org.omg.DynamicAny.DynArrayOperations.get_elements()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 DynArray 的元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynArrayOperations.set_elements(org.omg.CORBA.Any[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 DynArray 以包含传递的元素。

@exception TypeMismatch 如果一个或多个元素具有与 DynArrays TypeCode 不一致的类型
@exception InvalidValue 如果序列包含的元素数与数组维数不同

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.DynamicAny.DynAny[] org.omg.DynamicAny.DynArrayOperations.get_elements_as_dyn_any()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 DynAny 的形式返回 DynArray 的元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynArrayOperations.set_elements_as_dyn_any(org.omg.DynamicAny.DynAny[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 DynArray 以包含传递的元素。

@exception TypeMismatch 如果一个或多个元素具有与 DynArrays TypeCode 不一致的类型
@exception InvalidValue 如果序列包含的元素数与数组维数不同

<!-- END DATA -->
