<!-- BEGIN KEY -->
public interface org.omg.DynamicAny.DynStructOperations extends org.omg.DynamicAny.DynAnyOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
DynStruct 对象支持对 IDL 结构数据 (struct) 和异常 (exception) 值的操作。对异常成员的处理方式与对结构数据成员一样。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.DynamicAny.DynStructOperations.current_member_name() throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前位置的成员的名称。此操作可能返回空字符串，因为所操作的值的 TypeCode 可能不包含成员名称。

@exception TypeMismatch 如果 DynStruct 表示空异常。
@exception InvalidValue 如果当前位置不指示成员

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TCKind org.omg.DynamicAny.DynStructOperations.current_member_kind() throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与当前位置的成员关联的 TCKind。

@exception TypeMismatch 如果 DynStruct 表示空异常。
@exception InvalidValue 如果当前位置不指示成员

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.DynamicAny.NameValuePair[] org.omg.DynamicAny.DynStructOperations.get_members()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 NameValuePair 序列，这些 NameValuePair 描述与 DynStruct 对象关联的结构数据中每个成员的名称和值。该序列所含成员的顺序与成员的声明顺序（由 DynStruct 的 TypeCode 指示）相同。当前位置不受影响。如果 DynStruct 的 TypeCode 不包含成员名称，则返回序列中的成员名称将为空字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynStructOperations.set_members(org.omg.DynamicAny.NameValuePair[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
初始化与 NameValuePair 序列中的 DynStruct 对象关联的结构数据值。如果传递的序列长度不为 0，则操作将当前位置设置为 0。如果传递的是空序列，则将当前位置设置为 -1。
<P>根据 DynStruct 的 TypeCode 的指示，成员在 NameValuePair 中必须按它们在结构数据的 IDL 规范中的显示顺序显示，除非它们为空字符串。该操作不尝试根据成员名称分配成员值。

@exception TypeMismatch 如果所传递序列中提供的成员名称与 DynStruct 的 TypeCode 中相应成员名称不匹配，并且它们都不是空字符串
@exception InvalidValue 如果所传递序列的元素数与 DynStruct 的 TypeCode 指示的成员数不一致

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.DynamicAny.NameDynAnyPair[] org.omg.DynamicAny.DynStructOperations.get_members_as_dyn_any()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 NameDynAnyPair 序列，这些 NameDynAnyPair 描述与 DynStruct 对象关联的结构数据中每个成员的名称和值。该序列所含成员的顺序与成员的声明顺序（由 DynStruct 的 TypeCode 指示）相同。当前位置不受影响。如果 DynStruct 的 TypeCode 不包含成员名称，则返回序列中的成员名称将为空字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynStructOperations.set_members_as_dyn_any(org.omg.DynamicAny.NameDynAnyPair[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
初始化与 NameDynAnyPair 序列中的 DynStruct 对象关联的结构数据值。如果传递的序列长度不为 0，则操作将当前位置设置为 0。如果传递的是空序列，则将当前位置设置为 -1。
<P>根据 DynStruct 的 TypeCode 的指示，成员在 NameDynAnyPair 中必须按它们在结构数据的 IDL 规范中的显示顺序显示，除非它们为空字符串。该操作不尝试根据成员名称分配成员值。

@exception TypeMismatch 如果所传递序列中提供的成员名称与 DynStruct 的 TypeCode 中相应成员名称不匹配，并且它们都不是空字符串
@exception InvalidValue 如果所传递序列的元素数与 DynStruct 的 TypeCode 指示的成员数不一致

<!-- END DATA -->
