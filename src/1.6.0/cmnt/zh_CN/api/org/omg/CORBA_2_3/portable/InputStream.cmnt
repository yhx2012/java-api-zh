<!-- BEGIN KEY -->
public abstract class org.omg.CORBA_2_3.portable.InputStream extends org.omg.CORBA.portable.InputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
InputStream 提供从流读取所有映射的 IDL 类型的接口。它扩展 org.omg.CORBA.portable.InputStream。此类定义 CORBA 2.3 添加的新方法。

@see org.omg.CORBA.portable.InputStream
@author  OMG
@version 1.15 11/17/05
@since   JDK1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Serializable org.omg.CORBA_2_3.portable.InputStream.read_value()
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流解组值类型。
@return 从输入流解组的值类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Serializable org.omg.CORBA_2_3.portable.InputStream.read_value(java.lang.Class clz)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流解组值类型。
@param clz 要解组的值的声明类型
@return 从输入流解组的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Serializable org.omg.CORBA_2_3.portable.InputStream.read_value(BoxedValueHelper factory)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流解组值类型。
@param factory 用于解组值类型的帮助器的实例
@return 从输入流解组的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Serializable org.omg.CORBA_2_3.portable.InputStream.read_value(String rep_id)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流解组值类型。
@param rep_id 标识要解组的值的类型
@return 从输入流解组的值类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Serializable org.omg.CORBA_2_3.portable.InputStream.read_value(Serializable value)
<!-- END KEY -->
<!-- BEGIN DATA -->
从输入流解组值类型。
@param value 在调用 Streamable._read() 或 CustomMarshal.unmarshal() 解组值前添加到 orb 的间接寻址表的未初始化的值。
@return 从输入流解组的值类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object org.omg.CORBA_2_3.portable.InputStream.read_abstract_interface()
<!-- END KEY -->
<!-- BEGIN DATA -->
解组值对象或适当的 stub 对象。
@return 返回值对象或适当的 stub 对象的 ORB 运行时。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object org.omg.CORBA_2_3.portable.InputStream.read_abstract_interface(java.lang.Class clz)
<!-- END KEY -->
<!-- BEGIN DATA -->
解组与传递类型相对应的类对象或 stub 类。
@param clz 与能肯定预期的类型相对应的 stub 类的 Class 对象。
@return 返回值对象或适当 stub 对象的 ORB 运行时。

<!-- END DATA -->
