<!-- BEGIN KEY -->
public interface org.omg.PortableServer.CurrentOperations extends org.omg.CORBA.CurrentOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
从 CORBA::Current 中派生的 PortableServer::Current 接口，它提供一些能够访问调用方法的对象身份的方法实现。提供 Current 接口是为了支持实现多个对象，但可以在任一 servant 上 POA 调度的方法调用的上下文中使用的 servant。如果要提供位置透明性，则 ORB 必须支持在本地和远程调用操作的上下文中都使用 Current。通过进行 CORBA::ORB::resolve_initial_references(&quot;POACurrent&quot;) 操作，应用程序可获得 Current 的实例。此后，它便可以在 POA 指派的方法的上下文中使用，以获取标识调用操作的对象的 POA 和 ObjectId。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableServer.POA org.omg.PortableServer.CurrentOperations.get_POA() throws org.omg.PortableServer.CurrentPackage.NoContext
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对 POA 的引用，该 POA 实现此方法在其上下文中调用的对象。 

@return 实现对象的 POA。
 
@exception NoContext 在操作超出 POA 调度的操作范围时引发。

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] org.omg.PortableServer.CurrentOperations.get_object_id() throws org.omg.PortableServer.CurrentPackage.NoContext
<!-- END KEY -->
<!-- BEGIN DATA -->

返回一个 ObjectId，标识此方法在其上下文中调用的对象。 

@return 对象的 ObjectId

@exception NoContext 在超出 POA 调度的操作范围调用该操作时引发。

<!-- END DATA -->
