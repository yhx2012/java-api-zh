<!-- BEGIN KEY -->
public abstract class org.omg.PortableServer.Servant extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
定义本机 <code>Servant</code> 类型。在 Java 中，<code>Servant</code> 类型被映射到 Java <code>org.omg.PortableServer.Servant</code> 类。它充当所有 POA servant 实现的基类，提供许多可由应用程序员调用的方法，以及可由 POA 本身调用（也可由用户重写）以控制 servant 行为各方面的方法。基于 IDL to Java 规范。(CORBA V2.3.1) ptc/00-01-08.pdf。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final org.omg.PortableServer.portable.Delegate org.omg.PortableServer.Servant._get_delegate()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 <code>PortableServer::Servant</code> 特定于供应商的 ORB 实现。
@return <code>_delegate</code>，<code>PortableServer::Servant</code> 特定于供应商的 ORB 实现

<!-- END DATA -->
<!-- BEGIN KEY -->
public final void org.omg.PortableServer.Servant._set_delegate(Delegate delegate)
<!-- END KEY -->
<!-- BEGIN DATA -->
此操作支持 Java ORB 可移植性接口，它向通过代理支持 ORB 可移植性的类提供一个设置其委托的方法。
@param delegate <code>PortableServer::Servant</code> 特定于供应商的 ORB 实现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final org.omg.CORBA.Object org.omg.PortableServer.Servant._this_object()
<!-- END KEY -->
<!-- BEGIN DATA -->
允许 servant 获取为请求实现的目标 CORBA 对象的对象引用。
@return 关联请求的 <code>this_object</code> <code>Object</code> 引用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final org.omg.CORBA.Object org.omg.PortableServer.Servant._this_object(ORB orb)
<!-- END KEY -->
<!-- BEGIN DATA -->
允许 servant 获取为请求实现的目标 CORBA 对象的对象引用。
@param orb 与 servant 关联的 ORB。
@return 与请求关联的 <code>_this_object</code> 引用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final org.omg.CORBA.ORB org.omg.PortableServer.Servant._orb()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前与 <code>Servant</code> 关联的 ORB 实例（便捷方法）。
@return 当前与 <code>Servant</code> 关联的 ORB 实例 <code>orb</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final org.omg.PortableServer.POA org.omg.PortableServer.Servant._poa()
<!-- END KEY -->
<!-- BEGIN DATA -->
允许便捷地执行共用方法，等效于 <code>PortableServer::Current:get_POA</code>。
@return 与 servant 关联的 POA <code>poa</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final byte[] org.omg.PortableServer.Servant._object_id()
<!-- END KEY -->
<!-- BEGIN DATA -->
允许便捷地执行公共方法，等效于调用 <code>PortableServer::Current::get_object_id</code>。
@return 与此 servant 关联的 <code>Object</code> ID <code>object_id</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableServer.POA org.omg.PortableServer.Servant._default_POA()
<!-- END KEY -->
<!-- BEGIN DATA -->
从与 servant 关联的 ORB 实例返回根 POA。子类可重写此方法来返回不同的 POA。
@return 与 <code>Servant</code> 关联的 POA <code>default_POA</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.PortableServer.Servant._is_a(String repository_id)
<!-- END KEY -->
<!-- BEGIN DATA -->
查看指定的 <code>repository_id</code> 是否存在于 <code>_all_interfaces()</code> 返回的列表，或者其是否是一般 CORBA 对象的 <code>repository_id</code>。
@param repository_id 要在存储库列表中检查（或根据通用 CORBA 对象的 id 检查）的 <code>repository_id</code>。
@return <code>is_a</code> boolean 值，指示指定的 <code>repository_id</code> 是否在存储列表中或者其是否与 CORBA 对象的相同。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.PortableServer.Servant._non_existent()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查 <code>Object</code> 是否存在。<code>Servant</code> 提供 <code>_non_existent()</code> 的默认实现，该实现可通过派生的 servant 重写。
@return 如果该对象不存在，则返回 <code>true</code>；否则返回 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.PortableServer.Servant._get_interface_def()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 <code>CORBA::Object</code> 的形式返回 <code>InterfaceDef</code> 对象，该对象定义由 <code>Servant</code> 实现的 <code>CORBA::Object</code> 的运行时类型。<code>_get_interface_def</code> 的调用者必须缩小 <code>InterfaceDef</code> 的结果以便使用。
<P>如果默认行为无法满足要求，则可以通过派生的 servant 重写此 <code>_get_interface_def()</code> 默认实现。根据 CORBA 2.3.1 规范第 11.3.1 小节中的定义，<code>_get_interface_def()</code> 的默认行为是使用静态 servant 的最终派生接口或者从动态 servant 中得到的最终派生接口来获取 <code>InterfaceDef</code>。实现 <code>Servant</code> 的 <code>Delegate</code> 必须支持此行为。
@return <code>get_interface_def</code>（<code>CORBA::Object</code> 形式的 <code>InterfaceDef</code> 对象），它定义由 <code>Servant</code> 实现的 <code>CORBA::Object</code> 的运行时类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String[] org.omg.PortableServer.Servant._all_interfaces(POA poa, byte[] objectId)
<!-- END KEY -->
<!-- BEGIN DATA -->
ORB 使用此操作从 servant 获取完整的类型信息。
@param poa 与 servant 关联的 POA。
@param objectId 对应于与此 servant 关联的对象的 id。
@return 对象类型信息列表。

<!-- END DATA -->
