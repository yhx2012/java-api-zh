<!-- BEGIN KEY -->
public interface org.xml.sax.Attributes
<!-- END KEY -->
<!-- BEGIN DATA -->
关于 XML 属性列表的接口。

 <blockquote>
<em>此模块（包括源代码和文档）在公共域中，同时 <strong>没有担保</strong>。</em>有关更多信息，请参阅<a href='http://www.saxproject.org'>http://www.saxproject.org</a>。
 </blockquote>

<p>此接口允许用以下三种不同方式访问属性列表：</p>

 <ol>
<li>通过属性索引；</li>
<li>通过名称空间限定的名称；或者</li>
<li>通过限定（前缀）名。</li>
 </ol>

<p>该列表将不包括被声明为 #IMPLIED、但未在启动标记中指定的那些属性。还不包括用作名称空间声明 (xmlns*) 的属性，除非 <code>http://xml.org/sax/features/namespace-prefixes</code> 功能设置为 <var>true</var>（默认情况下是 <var>false</var>）。由于 SAX2 与原始的 &quot;Namespaces in XML&quot; 建议一致，所以它一般不为名称空间声明属性提供名称空间 URI。
 </p>

<p>有些 SAX2 解析器可能支持使用可选的功能标记 (<code>http://xml.org/sax/features/xmlns-uris</code>) 请求为这些属性提供 URI，以便与该建议书以后的向后兼容的版本一致。（属性的&ldquo;本地名称&rdquo;将成为前缀，而在定义默认的元素名称空间时 &quot;xmlns&quot; 将成为前缀。）为了具有可移植性，处理程序代码应该始终解析该冲突，而不是要求解析器能够改变该功能标记的设置。  </p>

<p>如果名称空间前缀功能（参见上述内容）为 <var>false</var>，则可能无法通过限定名访问；如果 <code>http://xml.org/sax/features/namespaces</code> 功能为 <var>false</var>，则也无法通过名称空间限定名访问。</p>

<p>此接口取代现在不推荐使用的 SAX1 {@link org.xml.sax.AttributeList AttributeList} 接口，后者不包括名称空间支持。除名称空间支持外，它还增加了 <var>getIndex</var> 方法（见下面）。</p>

<p>列表中属性的顺序没有指定，并且实现与实现之间也各不相同。</p>

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.helpers.AttributesImpl
@see org.xml.sax.ext.DeclHandler#attributeDecl

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.Attributes.getLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此列表中的属性个数。

<p>一旦知道了属性个数，就可以迭代列表。</p>

@return 此列表中属性的个数。
@see #getURI(int)
@see #getLocalName(int)
@see #getQName(int)
@see #getType(int)
@see #getValue(int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getURI(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过索引查找属性的名称空间 URI。

@param index 属性索引（从零开始）。
@return 名称空间 URI，如果没有可用的，则返回空字符串；如果该索引超出范围，则返回 null。
@see #getLength

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getLocalName(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过索引查找属性的本地名称。

@param index 属性索引（从零开始）。
@return 本地名称，如果未执行名称空间处理，则返回空字符串，如果该索引超出范围，则返回 null。
@see #getLength

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getQName(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过索引查找属性的 XML 限定（前缀）名。

@param index 属性索引（从零开始）。
@return XML 限定名，如果没有可用的，则返回空字符串，如果该索引超出范围，则返回 null。
@see #getLength

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getType(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过索引查找属性的类型。

<p>属性类型是下列字符串之一：&quot;CDATA&quot;、&quot;ID&quot;、&quot;IDREF&quot;、&quot;IDREFS&quot;、&quot;NMTOKEN&quot;、&quot;NMTOKENS&quot;、&quot;ENTITY&quot;、&quot;ENTITIES&quot; 或 &quot;NOTATION&quot;（始终用大写字母）。</p>

<p>如果解析器尚未读取属性的声明，或者解析器没有报告属性类型，则必须返回值 &quot;CDATA&quot;，如在&ldquo;XML 1.0 Recommendation&rdquo;（第 3.3.3 节 &quot;Attribute-Value Normalization&quot;）中规定的。</p>

<p>对于不是注释的可枚举的属性，解析器将把类型报告为 &quot;NMTOKEN&quot;。</p>

@param index 属性索引（从零开始）。
@return 字符串形式的属性类型，如果该索引超出范围，则返回 null。
@see #getLength

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getValue(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过索引查找属性的值。

<p>如果属性值是标记（IDREFS、ENTITIES 或 NMTOKENS）列表，则将把这些标记串接成一个字符串,每个标记用单个空格分隔。</p>

@param index 属性索引（从零开始）。
@return 字符串形式的属性值，如果该索引超出范围，则返回 null。
@see #getLength

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.Attributes.getIndex(String uri, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过名称空间的名称查找属性的索引。

@param uri 名称空间 URI，如果该名称没有名称空间 URI，则返回空字符串。
@param localName 属性的本地名称。
@return 属性的索引，如果未出现在该列表中，则返回 -1。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.Attributes.getIndex(String qName)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过 XML 限定（前缀）名查找属性的索引。

@param qName 限定（前缀）名。
@return 属性的索引，如果未出现在列表中，则返回 -1。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getType(String uri, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据名称空间的名称查找属性的类型。

<p>关于可能的类型的描述请参阅 {@link #getType(int) getType(int)}。</p>

@param uri 名称空间 URI，如果该名称没有名称空间 URI，则返回空字符串。
@param localName 属性的本地名称。
@return 字符串形式的属性类型，如果该属性不在列表中，或者未执行名称空间处理，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getType(String qName)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过 XML 限定（前缀）名查找属性的类型。

<p>关于可能的类型的描述请参阅 {@link #getType(int) getType(int)}。</p>

@param qName XML 限定名。
@return 字符串形式的属性类型，如果该属性不在列表中，或者限定名不可用，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getValue(String uri, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据名称空间的名称查找属性的值。

<p>关于可能的值的描述请参阅 {@link #getValue(int) getValue(int)}。</p>

@param uri 名称空间 URI，如果名称没有名称空间 URI，则返回空字符串。
@param localName 属性的本地名称。
@return 字符串形式的属性值，如果该属性未在列表中，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.Attributes.getValue(String qName)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过 XML 限定（前缀）名查找属性的值。

<p>关于可能的值的描述，请参阅 {@link #getValue(int) getValue(int)}。</p>

@param qName XML 限定名。
@return 字符串形式的属性值，如果属性不在列表中，或者限定名不可用，则返回 null。

<!-- END DATA -->
