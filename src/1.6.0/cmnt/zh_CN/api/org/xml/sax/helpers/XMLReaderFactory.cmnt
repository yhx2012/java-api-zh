<!-- BEGIN KEY -->
public final class org.xml.sax.helpers.XMLReaderFactory extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
创建 XML 阅读器的工厂。

 <blockquote>
<em>此模块（包括源代码和文档）位于公共域中，对该模块<strong>不提供担保</strong>。</em>有关更多信息，请参阅<a href='http://www.saxproject.org'>http://www.saxproject.org</a>。
 </blockquote>

<p>此类包含用于从显式类名称或基于运行时默认值创建 XML 阅读器的静态方法：</p>

 <pre>
 try {
   XMLReader myReader = XMLReaderFactory.createXMLReader();
 } catch (SAXException e) {
   System.err.println(e.getMessage());
 }
 </pre>

<p><strong>注意，分发与解析程序绑定在一起：</strong>应该修改无参数 <em>createXMLReader</em> 的实现，来处理外部配置机制未设置的情况。当位于类路径时，该方法应该尽力返回解析器，甚至没有一个将其类名绑定到 <code>org.xml.sax.driver</code>，使这些配置机制能够看到它。</p>

@since SAX 2.0
@author David Megginson, David Brownell
@version 2.0.1 (sax2r2)

<!-- END DATA -->
<!-- BEGIN KEY -->
public static org.xml.sax.XMLReader org.xml.sax.helpers.XMLReaderFactory.createXMLReader() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
尝试从系统默认值创建一个 XMLReader。在可以支持它的环境下，XMLReader 类的名称通过顺序尝试这些选项中的每一个来确定，并且使用第一个成功的：</p> <ul>

<li>如果系统属性 <code>org.xml.sax.driver</code> 有一个值，该值将被用做 XMLReader 类名称。 </li>

<li>JAR &quot;Services API&quot; 被用于在 <em>META-INF/services/org.xml.sax.driver</em> 文件中查找类名称，该文件在运行时可用的 jarfiles 中。</li>

<li> 强烈建议使用 SAX 解析器分发提供默认的 XMLReader 类名称，该类名称只在以前的选项（在此列表上）不成功时才生效。</li>

<li>最后，如果 {@link ParserFactory#makeParser()} 可以返回系统默认 SAX1 解析器，该解析器将包装在 {@link ParserAdapter} 中。(这是一个用于 SAX1 环境的迁移帮助，其中 <code>org.xml.sax.parser</code> 系统属性经常是可用的。) </li>

 </ul>

<p> 在诸如小型嵌套系统的环境中，这样的环境不能支持灵活性，使用确定默认值的其他机制。 </p>

<p>注意，许多 Java 环境允许系统属性在命令行初始化。这意味着，<em>在多数情况下</em>为该属性设置一个较好的值可确保对此方法的调用能够成功，除了安全策略干扰时。具有低健壮性的此方法的实现 能够使应用程序向旧的 SAX 环境的可移值性最大化。
 </p>

@return 新的 XMLReader。
@exception org.xml.sax.SAXException 如果不能识别或实例化默认 XMLReader 类。
@see #createXMLReader(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public static org.xml.sax.XMLReader org.xml.sax.helpers.XMLReaderFactory.createXMLReader(String className) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
尝试从类名称创建一个 XML 阅读器。

<p>给定一个类名称，此方法尝试加载该类或将其实例化为 XML 阅读器。</p>

<p>注意，此方法在以下环境中不可用：即不允许调用者（也可能是 applet）动态加载类。</p>

@return 新的 XML 阅读器。
@exception org.xml.sax.SAXException 如果此类不能被加载、实例化、或强制转化成 XMLReader。
@see #createXMLReader()

<!-- END DATA -->
