<!-- BEGIN KEY -->
public class org.xml.sax.helpers.XMLReaderAdapter extends java.lang.Object implements org.xml.sax.Parser, org.xml.sax.ContentHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
将 SAX2 XMLReader 适配为 SAX1 解析器。

 <blockquote>
<em>此模块（包括源代码和文档）位于公共域中，对该模块<strong>不提供担保</strong>。</em>有关更多信息，请参阅<a href='http://www.saxproject.org'>http://www.saxproject.org</a>。
 </blockquote>

<p>此类包装 SAX2 {@link org.xml.sax.XMLReader XMLReader} 并且使之充当 SAX1 {@link org.xml.sax.Parser Parser}。XMLReader 必须支持 http://xml.org/sax/features/namespace-prefixes 属性的 true 值，否则解析将会失败，并抛出 {@link org.xml.sax.SAXException SAXException}；如果 XMLReader 支持 http://xml.org/sax/features/namespaces 属性的 false 值，这也将会被用于提高效率。</p>

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.Parser
@see org.xml.sax.XMLReader

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.XMLReaderAdapter() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的适配器。

<p>使用 &quot;org.xml.sax.driver&quot; 属性来查找要嵌入的 SAX2 驱动程序。</p>

@exception org.xml.sax.SAXException 如果无法实例化嵌入的驱动程序，或者未指定 org.xml.sax.driver 属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.XMLReaderAdapter(XMLReader xmlReader)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的适配器。

<p>创建一个新的适配器，包装 SAX2 XMLReader。适配器将使 XMLReader 的作用与 SAX1 解析器类似。</p>

@param xmlReader 要包装的 SAX2 XMLReader。
@exception java.lang.NullPointerException 如果参数为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setLocale(Locale locale) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置错误报告的语言环境。

<p>SAX2 中不支持这么做，并且总是抛出异常。</p>

@param locale 错误报告的语言环境。
@see org.xml.sax.Parser#setLocale
@exception org.xml.sax.SAXException 如果不重写则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver(EntityResolver resolver)
<!-- END KEY -->
<!-- BEGIN DATA -->
注册实体解析器。

@param resolver 新的解析器。
@see org.xml.sax.Parser#setEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler(DTDHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
注册 DTD 事件处理程序。

@param handler 新的 DTD 事件处理程序。
@see org.xml.sax.Parser#setDTDHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler(DocumentHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
注册 SAX1 文档事件处理程序。

<p>注意，SAX1 文档处理程序不支持名称空间。</p>

@param handler 新的 SAX1 文档事件处理程序。
@see org.xml.sax.Parser#setDocumentHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler(ErrorHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
注册错误事件处理程序。

@param handler 新的错误事件处理程序。
@see org.xml.sax.Parser#setErrorHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.parse(String systemId) throws java.io.IOException, org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
解析文档。

<p>如果嵌入的 XMLReader 不支持 http://xml.org/sax/features/namespace-prefixes 属性，此方法将抛出异常。</p>

@param systemId 文档的绝对 URL。
@exception java.io.IOException 如果在读取文档的原始内容时存在问题。
@exception org.xml.sax.SAXException 如果在处理文档时存在问题。
@see #parse(org.xml.sax.InputSource)
@see org.xml.sax.Parser#parse(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.parse(InputSource input) throws java.io.IOException, org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
解析文档。

<p>如果嵌入的 XMLReader 不支持 http://xml.org/sax/features/namespace-prefixes 属性，此方法将抛出异常。</p>

@param input 文档的输入源。
@exception java.io.IOException 如果在读取文档的原始内容时存在问题。
@exception org.xml.sax.SAXException 如果在处理文档时存在问题。
@see #parse(java.lang.String)
@see org.xml.sax.Parser#parse(org.xml.sax.InputSource)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator(Locator locator)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置文档定位器。

@param locator 文档定位器。
@see org.xml.sax.ContentHandler#setDocumentLocator

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.startDocument() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
开始文档事件。

@exception org.xml.sax.SAXException 客户端可能引发一个处理异常。
@see org.xml.sax.ContentHandler#startDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.endDocument() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
结束文档事件。

@exception org.xml.sax.SAXException 客户端可能引发一个处理异常。
@see org.xml.sax.ContentHandler#endDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping(String prefix, String uri)
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 开始前缀映射事件。

@param prefix 映射的前缀。
@param uri 要映射到的名称空间 URI。
@see org.xml.sax.ContentHandler#startPrefixMapping

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping(String prefix)
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 结束前缀映射事件。

@param prefix 映射的前缀。
@see org.xml.sax.ContentHandler#endPrefixMapping

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.startElement(String uri, String localName, String qName, Attributes atts) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 开始元素事件。

@param uri 名称空间 URI。
@param localName 名称空间本地名称。
@param qName 限定的（前缀）名称。
@param atts SAX2 属性。
@exception org.xml.sax.SAXException 客户端可能引发一个处理异常。
@see org.xml.sax.ContentHandler#endDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.endElement(String uri, String localName, String qName) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 结束元素事件。

@param uri 名称空间 URI。
@param localName 名称空间本地名称。
@param qName 限定的（前缀）名称。
@exception org.xml.sax.SAXException 客户端可能引发一个处理异常。
@see org.xml.sax.ContentHandler#endElement

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.characters(char[] ch, int start, int length) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 字符事件。

@param ch 字符数组。
@param start 数组中的开始位置。
@param length 要使用的字符数。
@exception org.xml.sax.SAXException 客户端可能引发一个处理异常。
@see org.xml.sax.ContentHandler#characters

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace(char[] ch, int start, int length) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 忽略空白事件。

@param ch 字符数组。
@param start 数组中的开始位置。
@param length 要使用的字符数。
@exception org.xml.sax.SAXException 客户端可能引发一个处理异常。
@see org.xml.sax.ContentHandler#ignorableWhitespace

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.processingInstruction(String target, String data) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 处理指令事件。

@param target 处理指令目标。
@param data 处理指令的剩余部分
@exception org.xml.sax.SAXException 客户端可能引发处理异常。
@see org.xml.sax.ContentHandler#processingInstruction

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.skippedEntity(String name) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
适配 SAX2 跳过的实体事件。

@param name 跳过的实体的名称。
@see org.xml.sax.ContentHandler#skippedEntity
@exception org.xml.sax.SAXException 可由子类抛出。

<!-- END DATA -->
