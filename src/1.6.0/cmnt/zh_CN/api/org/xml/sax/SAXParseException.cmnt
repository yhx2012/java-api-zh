<!-- BEGIN KEY -->
public class org.xml.sax.SAXParseException extends org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
封装 XML 解析错误或警告。

 <blockquote>
<em>此模块（包括源代码和文档）在公共域中，同时 <strong>没有担保</strong>。</em>有关更多信息，请参阅<a href='http://www.saxproject.org'>http://www.saxproject.org</a>。
 </blockquote>

<p>此异常好像来源于 {@link Locator} 对象那样可以包括用来在原始 XML 文档中查找错误的信息。注意，尽管应用程序将接收 SAXParseException 作为 {@link org.xml.sax.ErrorHandler ErrorHandler} 接口中处理程序的参数，但实际上应用程序不需要抛出异常；它可以只是读取其中的信息，并采取不同的操作。</p>

<p>因为此异常是 {@link org.xml.sax.SAXException SAXException} 的子类，所以它继承了包装其他异常的能力。</p>

@since SAX 1.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.SAXException
@see org.xml.sax.Locator
@see org.xml.sax.ErrorHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String org.xml.sax.SAXParseException.publicId
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 公共标识符或 null。
@see #getPublicId

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String org.xml.sax.SAXParseException.systemId
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 系统标识符或 null。
@see #getSystemId

<!-- END DATA -->
<!-- BEGIN KEY -->
private int org.xml.sax.SAXParseException.lineNumber
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 行号或 -1。
@see #getLineNumber

<!-- END DATA -->
<!-- BEGIN KEY -->
private int org.xml.sax.SAXParseException.columnNumber
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 列号或 -1。
@see #getColumnNumber

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXParseException(String message, Locator locator)
<!-- END KEY -->
<!-- BEGIN DATA -->
从消息和 Locator 创建新的 SAXParseException。

<p>当应用程序从 {@link org.xml.sax.ContentHandler ContentHandler} 回调内创建其自己的异常时，此构造方法尤其有用。</p>

@param message 错误或警告消息。
@param locator 错误或警告的 locator 对象（可以为 null）。
@see org.xml.sax.Locator

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXParseException(String message, Locator locator, Exception e)
<!-- END KEY -->
<!-- BEGIN DATA -->
将现有的异常包装在 SAXParseException 中。

<p>当应用程序从 {@link org.xml.sax.ContentHandler ContentHandler} 回调内创建其自己的异常，并且需要包装不是 {@link org.xml.sax.SAXException SAXException} 的子类的现有异常时，此构造方法尤其有用。</p>

@param message 错误或警告消息；或者为 null，以便使用来自于嵌入异常的消息。
@param locator 错误或警告的 locator 对象（可以为 null）。
@param e 任何异常。
@see org.xml.sax.Locator

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXParseException(String message, String publicId, String systemId, int lineNumber, int columnNumber)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 SAXParseException。

<p>此构造方法对解析器编写者最为有用。</p>

<p>除消息之外的所有参数好像都是由 {@link Locator} 提供的。例如，如果系统标识符是一个 URL（包括相对文件名），则调用者必须在创建异常之前完全解析它。</p>

@param message 错误或警告消息。
@param publicId 生成错误或警告的实体的公共标识符。
@param systemId 生成错误或警告的实体的系统标识符。
@param lineNumber 引起错误或警告的文本结尾的行号。
@param columnNumber 引起错误或警告的文本结尾的列号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXParseException(String message, String publicId, String systemId, int lineNumber, int columnNumber, Exception e)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有嵌入异常的新 SAXParseException。

<p>对于需要包装不是 {@link org.xml.sax.SAXException SAXException} 的子类的异常的解析器编写者，此构造方法最有用。</p>

<p>除消息和异常之外的所有参数好像都是由 {@link Locator} 提供的。例如，如果系统标识符是 URL（包括相对文件名），则调用者必须在创建该异常之前完全解析它。</p>

@param message 错误或警告消息，或者 null，以便使用来自于嵌入的异常的消息。
@param publicId 生成错误或警告的实体的公共标识符。
@param systemId 生成错误或警告的实体的系统标识符。
@param lineNumber 引起错误或警告的文本结尾的行号。
@param columnNumber 引起错误或警告的文本结尾的列号。
@param e 嵌入到此异常中的其他异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.SAXParseException.getPublicId()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取发生异常的实体的公共标识符。

@return 包含公共标识符的字符串，如果没有可用的，则返回 null。
@see org.xml.sax.Locator#getPublicId

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.SAXParseException.getSystemId()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取发生异常的实体的系统标识符。

<p>如果系统标识符是 URL，则已得到了完全解析。</p>

@return 包含系统标识符的字符串，如果没有可用的，则返回 null。
@see org.xml.sax.Locator#getSystemId

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.SAXParseException.getLineNumber()
<!-- END KEY -->
<!-- BEGIN DATA -->
发生异常的文本结尾的行号。

<p>第一行就是行 1。</p>

@return 代表行号的整数，如果没有可用的，则返回 -1。
@see org.xml.sax.Locator#getLineNumber

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.SAXParseException.getColumnNumber()
<!-- END KEY -->
<!-- BEGIN DATA -->
发生异常的文本结尾的列号。

<p>行中的第一列就是位置 1。</p>

@return 代表列号的整数，如果没有可用的，则返回 -1。
@see org.xml.sax.Locator#getColumnNumber

<!-- END DATA -->
