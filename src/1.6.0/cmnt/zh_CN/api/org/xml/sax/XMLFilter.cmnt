<!-- BEGIN KEY -->
public interface org.xml.sax.XMLFilter extends org.xml.sax.XMLReader
<!-- END KEY -->
<!-- BEGIN DATA -->
用于 XML 过滤器的接口。

 <blockquote>
<em>此模块（包括源代码和文档）在公共域中，同时 <strong>没有担保</strong>。</em>有关更多信息，请参阅<a href='http://www.saxproject.org'>http://www.saxproject.org</a>。
 </blockquote>

<p>除了 XML 过滤器是从另外的 XML 阅读器中获取其事件，而不是从诸如 XML 文档或数据库之类的基本源获取事件，XML 过滤器就像一个 XML 阅读器。过滤器可以在它们将事件传递给最终应用程序时修改这些事件的流。</p>

<p>通过自动传递所有的 {@link org.xml.sax.EntityResolver EntityResolver}、{@link org.xml.sax.DTDHandler DTDHandler}、{@link org.xml.sax.ContentHandler ContentHandler} 和 {@link org.xml.sax.ErrorHandler ErrorHandler} 事件，XMLFilterImpl helper 类为创建 SAX2 过滤器提供了便捷的基类。</p>

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.helpers.XMLFilterImpl

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.XMLFilter.setParent(XMLReader parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置父阅读器。

<p>此方法允许应用程序将过滤器链接到父阅读器（可以是另外的过滤器）。参数不能为 null。</p>

@param parent 父阅读器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.XMLReader org.xml.sax.XMLFilter.getParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取父阅读器。

<p>此方法允许应用程序查询父阅读器（可以是另外的过滤器）。一般说来，最好不要在父阅读器上直接执行所有的操作：它们都必须通过此过滤器。</p>

@return 父过滤器，如果未设置，则返回 null。

<!-- END DATA -->
