<!-- BEGIN KEY -->
public interface org.w3c.dom.events.DocumentEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>DocumentEvent</code> 接口提供一种机制，通过该机制用户可以创建实现支持的 Event 类型。期望将在支持 Event 模型的实现中实现 <code>Document</code> 接口的同一个对象上实现 <code>DocumentEvent</code> 接口。 
<p>另请参见《<a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113'>Document Object Model (DOM) Level 2 Events Specification</a>》。
@since DOM Level 2

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.events.Event org.w3c.dom.events.DocumentEvent.createEvent(String eventType) throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
 
@param eventType <code>eventType</code> 参数指定要创建的 <code>Event</code> 接口的类型。如果实现支持指定的 <code>Event</code> 接口，则此方法将返回请求的接口类型的新 <code>Event</code>。如果通过 <code>dispatchEvent</code> 方法指派 <code>Event</code>，则必须在事件创建之后调用适当事件的 init 方法以初始化 <code>Event</code> 的值。例如，希望综合某种 <code>UIEvent</code> 事件的用户应使用参数 &quot;UIEvents&quot; 调用 <code>createEvent</code>。然后可以在新创建的 <code>UIEvent</code> 上调用 <code>initUIEvent</code> 方法来设置要指派的特定类型的 UIEvent 并设置其上下文信息。在用户自己不方便或不必创建 <code>Event</code> 时，<code>createEvent</code> 方法用于创建 <code>Event</code>。在实现提供的 <code>Event</code> 不够的情况下，用户可以提供自己的 <code>Event</code> 实现用来和 <code>dispatchEvent</code> 方法一起使用。
@return 新创建的 <code>Event</code>
@exception  DOMException NOT_SUPPORTED_ERR: 如果实现不支持请求的 <code>Event</code> 接口类型，则引发该异常。

<!-- END DATA -->
