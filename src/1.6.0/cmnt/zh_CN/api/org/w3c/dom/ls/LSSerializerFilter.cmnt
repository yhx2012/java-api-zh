<!-- BEGIN KEY -->
public interface org.w3c.dom.ls.LSSerializerFilter extends org.w3c.dom.traversal.NodeFilter
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>LSSerializerFilter</code> 为应用程序提供了在序列化节点时检查节点以及决定哪些节点应该或不应该序列化的能力。<code>LSSerializerFilter</code> 接口基于 [<a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>DOM Level 2 Traversal and Range</a>] 中定义的 <code>NodeFilter</code> 接口。 
<p> <code>Document</code>、<code>DocumentType</code>、<code>DocumentFragment</code>、<code>Notation</code>、<code>Entity</code> 和 <code>Attr</code> 节点的子节点不传递给过滤器。如果通过方法 <code>LSParserFilter.acceptNode()</code> 跳过 <code>EntityReference</code> 节点，则仅将 <code>EntityReference</code> 节点的子节点传递给过滤器。 
<p> 当序列化 <code>Element</code> 时，在将它的所有属性传递给过滤器前将该元素传递给过滤器。从不将名称空间声明属性和默认属性（除了在 &quot; discard-default-content&quot; 设置为 <code>false</code> 时）传递给过滤器。 
<p> 任何尝试修改传递给 <code>LSSerializerFilter</code> 的节点的结果都将具有实现依赖性。 
<p> DOM 应用程序不能引发过滤器中的异常。从过滤器中抛出异常的效果具有 DOM 实现依赖性。 
<p> 为了提高效率，传递给过滤器的节点不能与实际在树中的节点相同。并且实际的节点（节点对象标识）可以在文档过滤和序列化期间重新使用。 
<p>另请参见《<a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407'>Document Object Model (DOM) Level 3 Load and Save Specification</a>》。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.ls.LSSerializerFilter.getWhatToShow()
<!-- END KEY -->
<!-- BEGIN DATA -->
告诉 <code>LSSerializer</code> 向过滤器显示什么类型的节点。如果未将节点显示给使用此属性的过滤器，则将自动序列化。有关对常量的定义请参见 <code>NodeFilter</code>。常量 <code>SHOW_DOCUMENT</code>、<code>SHOW_DOCUMENT_TYPE</code>、<code>SHOW_DOCUMENT_FRAGMENT</code>、<code>SHOW_NOTATION</code> 和 <code>SHOW_ENTITY</code> 在此无意义，从不会将此类节点传递给 <code>LSSerializerFilter</code>。<br> 与 [<a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>DOM Level 2 Traversal and Range</a>] 不同，<code>SHOW_ATTRIBUTE</code> 常量表示显示 <code>Attr</code> 节点并将它传递给过滤器。<br> 此处使用的常量在 [<a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>DOM Level 2 Traversal and      Range</a>] 中定义。 

<!-- END DATA -->
