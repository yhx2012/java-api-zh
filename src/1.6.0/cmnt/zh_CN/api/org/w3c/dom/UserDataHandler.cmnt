<!-- BEGIN KEY -->
public interface org.w3c.dom.UserDataHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
当使用 <code>Node.setUserData()</code> 将一个对象与节点上的键相关联时，当克隆、导入或重命名该对象关联的节点时应用程序可以提供调用的处理程序。应用程序可以使用此方法实现与它与 DOM 节点相关联的数据有关的各种行为。此接口定义该处理程序。 
<p>另请参见 <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>。
@since DOM Level 3

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_CLONED
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 <code>Node.cloneNode()</code> 克隆节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_IMPORTED
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 <code>Document.importNode()</code> 导入节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_DELETED
<!-- END KEY -->
<!-- BEGIN DATA -->
删除节点。
<p ><b>注：</b>在某些环境（如 Java）中，此方法可能不被支持或可能不可靠，在此情况下，实现不具备真正控制何时实际删除对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_RENAMED
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 <code>Document.renameNode()</code> 重命名节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_ADOPTED
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 <code>Document.adoptNode()</code> 采用节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.UserDataHandler.handle(short operation, String key, Object data, Node src, Node dst)
<!-- END KEY -->
<!-- BEGIN DATA -->
每当导入或克隆为其注册此处理程序的节点时，调用此方法。<br> DOM 应用程序不能在 <code>UserDataHandler</code> 中引发异常。从处理程序抛出异常所产生的影响与 DOM 实现有关。
@param operation 指定在节点上正在执行的操作的类型。
@param key 指定正在为其调用此处理程序的键。
@param data 指定正在为其调用此处理程序的数据。
@param src 指定正在被克隆、采用、导入或重命名的节点。正在删除节点时，这为 <code>null</code>。
@param dst 指定新创建的节点（如果有），或 <code>null</code>。

<!-- END DATA -->
