<!-- BEGIN KEY -->
public interface org.w3c.dom.DOMImplementationSource
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口允许 DOM 实现程序根据请求的功能和版本提供一个或多个实现，如下所述。每个实现的 <code>DOMImplementationSource</code> 对象都在可用源的特定于绑定的列表中列出，所以可使其 <code>DOMImplementation</code> 对象可用。
<p>另请参见 <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>。
@since DOM Level 3

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.DOMImplementation org.w3c.dom.DOMImplementationSource.getDOMImplementation(String features)
<!-- END KEY -->
<!-- BEGIN DATA -->
请求支持指定的功能的第一个 DOM 实现的方法。
@param features 指定所需功能和版本的字符串。这是一个空格分隔的列表，其中每个功能都由其名称指定，后面可以选择跟一个空格或版本号。此方法返回由 <code>getDOMImplementationList</code> 返回的列表中的第一个项。例如，字符串 <code>&quot;XML 3.0 Traversal +Events 2.0&quot;</code> 将请求支持其 3.0 版本 &quot;XML&quot; 模块的 DOM 实现，该模块支持任何版本的 &quot;Traversal&quot; 模块，以及其 2.0 版的 &quot;Events&quot; 模块。模块 &quot;Events&quot; 必须能够使用方法 <code>Node.getFeature()</code> 和 <code>DOMImplementation.getFeature()</code> 访问。
@return 支持所需功能的第一个 DOM 实现；如果此源没有 DOM 实现，则返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.DOMImplementationList org.w3c.dom.DOMImplementationSource.getDOMImplementationList(String features)
<!-- END KEY -->
<!-- BEGIN DATA -->
请求支持指定功能和版本的 DOM 实现的列表的方法，如下所述。
@param features 指定所需功能和版本的字符串。这是一个空格分隔的列表，其中每个功能都由其名称指定，后面可以选择跟一个空格或版本号。此列表的形式如下：&quot;XML 3.0 Traversal +Events 2.0&quot;
@return 支持所需功能的 DOM 实现的列表。

<!-- END DATA -->
