<!-- BEGIN KEY -->
public class java.rmi.UnmarshalException extends java.rmi.RemoteException
<!-- END KEY -->
<!-- BEGIN DATA -->
在解组参数时或者如果发生以下任何情况导致远程方法调用，则抛出 <code>UnmarshalException</code>：
 <ul>
<li> 如果在解组调用标题时发生异常
<li> 如果返回值的协议无效
<li> 如果解组参数（在服务器端）或返回值（在客户机端）时发生 <code>java.io.IOException</code>。
<li> 如果在解组参数或返回值的过程中发生 <code>java.lang.ClassNotFoundException</code>
<li> 如果在服务器端不能加载 skeleton（注意，在 1.1 stub 协议中需要 skeleton，但在 1.2 stub 协议中不需要）。
<li> 如果方法哈希无效（即缺少方法）。
<li> 如果在解组时创建远程对象的 stub 的远程引用对象失败。
 </ul>
 
@version 1.12, 12/19/03
@author  Ann Wollrath
@since   JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.UnmarshalException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 <code>UnmarshalException</code>。

@param s  详细消息
@since   JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.UnmarshalException(String s, Exception ex)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息和嵌入异常的 <code>UnmarshalException</code>。

@param s  详细消息
@param ex  嵌入异常
@since JDK1.1

<!-- END DATA -->
