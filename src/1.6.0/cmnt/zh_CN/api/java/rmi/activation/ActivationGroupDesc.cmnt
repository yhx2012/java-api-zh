<!-- BEGIN KEY -->
public final class java.rmi.activation.ActivationGroupDesc extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
激活组描述符包含了创建/重建在其中激活对象的一个激活组所必需的信息。这种描述符包含： <ul>
<li> 组的类名，
<li> 组的代码基（组类中的位置），以及
<li> 一个能包含特定于组的初始化数据的&ldquo;编组&rdquo;对象。 </ul> <p>

组类必须是 <code>ActivationGroup</code> 的一个具体子类。<code>ActivationGroup</code> 子类通过 <code>ActivationGroup.createGroup</code> 静态方法来创建/重建，此静态方法调用带有两个参数的特殊构造方法： <ul>

<li> 组的 <code>ActivationGroupID</code> 方法，以及
<li> 组的初始化数据（在 <code>java.rmi.MarshalledObject</code> 中）</ul><p>

@version	1.28, 12/19/03
@author	Ann Wollrath
@since	1.2
@see		ActivationGroup
@see		ActivationGroupID

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.rmi.activation.ActivationGroupDesc.className
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 组的完全限定包的类名。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.rmi.activation.ActivationGroupDesc.location
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 要加载组类的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.rmi.MarshalledObject<?> java.rmi.activation.ActivationGroupDesc.data
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 组的初始化数据。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.rmi.activation.ActivationGroupDesc.CommandEnvironment java.rmi.activation.ActivationGroupDesc.env
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 在另一个进程中执行 VM 的控制选项。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.util.Properties java.rmi.activation.ActivationGroupDesc.props
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 一个将重写子进程环境中默认设置的属性映射表。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroupDesc(Properties overrides, ActivationGroupDesc.CommandEnvironment cmd)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用组实现的系统默认值和代码基来构造一个组描述符。属性指定 Java 环境重写（将重写组实现的 VM 中的系统属性）。命令环境能控制用于启动子 VM 的精确命令/选项，或者可以为 <code>null</code>，表示接受 rimid 的默认值。

<p>此构造方法将创建一个带有 <code>null</code> 组类名的 <code>ActivationGroupDesc</code>，这表示了系统默认的 <code>ActivationGroup</code> 实现。

@param overrides 当组被重建时要设置的属性集合。
@param cmd 在另一个进程中执行 VM 的控制选项（或者为 <code>null</code>）。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroupDesc(String className, String location, java.rmi.MarshalledObject<?> data, Properties overrides, ActivationGroupDesc.CommandEnvironment cmd)
<!-- END KEY -->
<!-- BEGIN DATA -->
指定一个用于该组的替代组实现和执行环境。
 
@param className 组的完全限定包的类名，或者为 <code>null</code>。<code>null</code> 组类名表示系统默认的 <code>ActivationGroup</code> 实现。
@param location 要加载组的类的位置
@param data 以编组形式包含的组的初始化数据（例如，可以包含属性）
@param overrides 将重写子进程环境中默认设置的属性映射表（将被转换成 <code>-D</code> 选项），或者为 <code>null</code>。
@param cmd 在另一个进程中执行 VM 的控制选项（或者为 <code>null</code>）。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.rmi.activation.ActivationGroupDesc.getClassName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回组的类名（可能为 <code>null</code>）。<code>null</code> 组类名指示系统默认的 <code>ActivationGroup</code> 实现。
@return 组的类名
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.rmi.activation.ActivationGroupDesc.getLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回组的代码基。
@return 组的代码基
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.MarshalledObject<?> java.rmi.activation.ActivationGroupDesc.getData()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回组的初始化数据。
@return 组的初始化数据
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Properties java.rmi.activation.ActivationGroupDesc.getPropertyOverrides()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回组的重写属性列表。
@return 重写属性列表，或者为 <code>null</code>
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroupDesc.CommandEnvironment java.rmi.activation.ActivationGroupDesc.getCommandEnvironment()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回组的命令环境控制对象。
@return 命令环境对象，或者为 <code>null</code>
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.rmi.activation.ActivationGroupDesc.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较两个激活组描述符的内容相等性。

@param	obj	要与之比较的 Object
@return	如果这些 Object 相等，则返回 true；否则返回 false。
@see		java.util.Hashtable
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.rmi.activation.ActivationGroupDesc.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
为类似的 <code>ActivationGroupDesc</code> 产生同样的数。
@return 一个整数
@see java.util.Hashtable

<!-- END DATA -->
