<!-- BEGIN KEY -->
public class java.rmi.server.ServerCloneException extends java.lang.CloneNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
如果在复制 <code>UnicastRemoteObject</code> 的过程中发生远程异常，则抛出 <code>ServerCloneException</code>。

<p>从版本 1.4 开始，已对此异常作出改进，以符合通用异常链机制。可在构造时提供并通过公共 {@link #detail} 字段访问的&ldquo;嵌入的异常&rdquo;现在称为 <i>cause</i>，该异常也能通过 {@link Throwable#getCause()} 方法以及前述的&ldquo;遗留字段&rdquo;访问。

<p>在 <code>ServerCloneException</code> 的实例上调用方法 {@link Throwable#initCause(Throwable)} 始终抛出 {@link IllegalStateException}。

@version 1.20, 12/19/03
@author  Ann Wollrath
@since   JDK1.1
@see     java.rmi.server.UnicastRemoteObject#clone()

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception java.rmi.server.ServerCloneException.detail
<!-- END KEY -->
<!-- BEGIN DATA -->
异常原因。

<p>此字段早于通用异常链设施。{@link Throwable#getCause()} 方法现在是获取此信息的首选方法。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.server.ServerCloneException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 <code>ServerCloneException</code>。

@param   s   详细消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.server.ServerCloneException(String s, Exception cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息和原因的 <code>ServerCloneException</code>。

@param   s   详细消息。
@param cause 原因

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.rmi.server.ServerCloneException.getMessage()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此异常的详细信息，包括原因的消息（如果有）。
 
@return  详细消息

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable java.rmi.server.ServerCloneException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此异常的原因。此方法返回 {@link #detail} 字段的值。

@return  原因，它可以为 <tt>null</tt>。
@since   1.4

<!-- END DATA -->
