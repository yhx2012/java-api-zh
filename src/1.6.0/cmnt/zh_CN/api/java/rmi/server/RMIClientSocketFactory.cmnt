<!-- BEGIN KEY -->
public interface java.rmi.server.RMIClientSocketFactory
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>RMIClientSocketFactory</code> 实例由 RMI 运行时使用，以便获得 RMI 调用的客户机套接字。通过构造方法或 <code>java.rmi.server.UnicastRemoteObject</code> 和 <code>java.rmi.activation.Activatable</code> 的 <code>exportObject</code> 方法创建/导出远程对象时，可以将其与 <code>RMIClientSocketFactory</code> 关联。

<p>在 RMI 调用中传送远程对象引用时，将把与远程对象关联的 <code>RMIClientSocketFactory</code> 实例下载到客户机。此 <code>RMIClientSocketFactory</code> 将用于创建到远程方法调用的远程对象的连接。

<p><code>RMIClientSocketFactory</code> 实例也可以与远程对象注册表关联，所以客户机可以使用自定义套接字与远程对象注册表进行通信。

<p>此接口的实现应该是可序列化的，并且应该实现 {@link Object#equals}，以便在传递表示相同（功能上等效）客户机套接字工厂实例时返回 <code>true</code>；传递的实例不同时返回 <code>false</code>（并且它还应实现 {@link Object#hashCode} 与其 <code>Object.equals</code> 实现的一致性）。

@version 1.11, 12/19/03
@author  Ann Wollrath
@author  Peter Jones
@since   1.2
@see     java.rmi.server.UnicastRemoteObject
@see     java.rmi.activation.Activatable
@see     java.rmi.registry.LocateRegistry

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.net.Socket java.rmi.server.RMIClientSocketFactory.createSocket(String host, int port) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建连接到指定主机和端口的客户机套接字。
@param  host   主机名
@param  port   端口号
@return 连接到指定主机和端口的套接字。
@exception  IOException 如果在套接字创建过程中发生 I/O 错误
@since 1.2

<!-- END DATA -->
