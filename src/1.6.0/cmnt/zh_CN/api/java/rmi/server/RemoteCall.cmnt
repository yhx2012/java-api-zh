<!-- BEGIN KEY -->
public interface java.rmi.server.RemoteCall
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>RemoteCall</code> 是一个只供 RMI 运行时（与远程对象的 stub 和 skeleton 一起）使用来执行远程对象调用的抽象。因为 <code>RemoteCall</code> 接口只供过时的 <code>java.rmi.server.RemoteRef</code> 方法使用，所以该接口已过时。

@version 1.19, 05/18/04
@since   JDK1.1
@author  Ann Wollrath
@author  Roger Riggs
@see     java.rmi.server.RemoteRef
@deprecated 无替代版本。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.ObjectOutput java.rmi.server.RemoteCall.getOutputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 stub/skeleton 应将参数/结果放入其中的输出流。

@return 参数/结果的输出流
@exception java.io.IOException 如果发生 I/O 错误。
@since JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.rmi.server.RemoteCall.releaseOutputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
释放输出流；这应以某些传送方式释放该流。

@exception java.io.IOException 如果发生 I/O 错误。
@since JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.ObjectInput java.rmi.server.RemoteCall.getInputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 stub/skeleton 应从中获取结果/参数的输入流。

@return 用于读取参数/结果的输入流
@exception java.io.IOException 如果发生 I/O 错误。
@since JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.rmi.server.RemoteCall.releaseInputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
释放输入流。这允许某些传送方式尽早释放通道。

@exception java.io.IOException 如果发生 I/O 错误。
@since JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.ObjectOutput java.rmi.server.RemoteCall.getResultStream(boolean success) throws java.io.IOException, java.io.StreamCorruptedException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回输出流（可以输出与成功调用相关的头信息）。每个远程调用只能成功一次。

@param success 如果为 true，则指示正常返回；否则指示异常返回。
@return 用于写入调用结果的输出流
@exception java.io.IOException     如果发生 I/O 错误。
@exception java.io.StreamCorruptedException 如果已被调用。
@since JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.rmi.server.RemoteCall.executeCall() throws java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
采取一切措施执行调用。

@exception java.lang.Exception 如果发生常规异常。
@since JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.rmi.server.RemoteCall.done() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
允许在远程调用完成后执行清除。

@exception java.io.IOException 如果发生 I/O 错误。
@since JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
