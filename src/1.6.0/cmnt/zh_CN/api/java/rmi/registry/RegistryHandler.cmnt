<!-- BEGIN KEY -->
public interface java.rmi.registry.RegistryHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>RegistryHandler</code> 是在以前的实现版本中由 RMI 运行时内部使用的接口。该接口永远不应该通过应用程序代码访问。

@version 1.14, 05/18/04
@author  Ann Wollrath
@since   JDK1.1
@deprecated 无替代版本

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.registry.Registry java.rmi.registry.RegistryHandler.registryStub(String host, int port) throws java.rmi.RemoteException, java.rmi.UnknownHostException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回连接指定主机和端口上的远程注册表的 &quot;stub&quot;。

@deprecated 无替代版本。从 Java 2 平台 1.2 版本开始，RMI 不再使用 <code>RegistryHandler</code> 获取注册表的 stub。
@param host 远程注册表主机的名称
@param port 远程注册表端口
@return 远程注册表 stub
@throws RemoteException 如果发生远程错误
@throws UnknownHostException 如果不能解析给定的主机名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.registry.Registry java.rmi.registry.RegistryHandler.registryImpl(int port) throws java.rmi.RemoteException
<!-- END KEY -->
<!-- BEGIN DATA -->
在指定端口上构造并导出一个 Registry。端口必须为非 0。

@deprecated 无替代版本。从 Java 2 平台 1.2 版本开始，RMI 不再使用 <code>RegistryHandler</code> 获取注册表的实现。
@param port 要在其上导出注册表的端口
@return 注册表 stub
@throws RemoteException 如果发生远程错误

<!-- END DATA -->
