<!-- BEGIN KEY -->
public class java.rmi.RMISecurityManager extends java.lang.SecurityManager
<!-- END KEY -->
<!-- BEGIN DATA -->
由使用下载的代码的 RMI 应用程序使用的 {@link SecurityManager} 的子类。如果尚未设置安全管理器，则 RMI 的类加载器不会从远程位置下载任何子类。<code>RMISecurityManager</code> 不用于 applet，它们的运行受其浏览器的安全管理器保护。<code>RMISecurityManager</code> 实现一个与 {@link SecurityManager} 实现的策略相同的策略。因此，RMI 应用程序应该使用 <code>SecurityManager</code> 类或其他代替此类的特定于应用程序的 <code>SecurityManager</code> 实现。

<p>要在应用程序中使用 <code>SecurityManager</code>，则将以下语句添加到您的代码（它需要在 RMI 从远程主机下载代码前执行，所以它最可能需要在应用程序的 <code>main</code> 方法中出现）中：

 <pre>
 System.setSecurityManager(new SecurityManager());
 </pre>

@version 1.31, 12/19/03
@author  Roger Riggs
@author  Peter Jones
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.RMISecurityManager()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的 <code>RMISecurityManager</code>。
@since JDK1.1

<!-- END DATA -->
