<!-- BEGIN KEY -->
public interface java.sql.Struct
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>用于 SQL 结构化类型的 Java 编程语言中的标准映射关系。<code>Struct</code> 对象为它所表示的 SQL 结构化类型的每个属性包含一个值。默认情况下，只要应用程序可以引用 <code>Struct</code> 实例，该实例就有效。
 <p>
如果 JDBC 驱动程序支持该数据类型，则必须完全实现 <code>Struct</code> 接口上的所有方法。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.sql.Struct.getSQLTypeName() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>Struct</code> 对象所表示 SQL 结构的完全限定的 SQL 名称。

@return SQL 结构化类型的完全限定的类型名称，此 <code>Struct</code> 对象是该名称的一般表示形式
@exception SQLException 如果发生数据库访问错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] java.sql.Struct.getAttributes() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
生成此 <code>Struct</code> 对象所表示的 SQL 结构类型属性的有序值。与处理每个属性一样，此方法使用与连接关联的类型映射来自定义类型映射关系。如果在连接类型映射中不存在与属性所表示的结构类型匹配的条目，则驱动程序使用标准映射关系。
 <p>
从概念上讲，此方法对结构化类型的每个属性都调用 <code>getObject</code> 方法并返回包含结果的 Java 数组。

@return 包含有序属性值的数组
@exception SQLException 如果发生数据库访问错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] java.sql.Struct.getAttributes(java.util.Map<java.lang.String, java.lang.Class<?>> map) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
生成此 <code>Struct</code> 对象所表示的 SQL 结构类型的属性的有序值。与处理每个属性一样，此方法使用给定类型映射表来自定义类型映射关系。如果在给定类型映射表中不存在与属性所表示的结构类型匹配的条目，则驱动程序使用标准映射关系。此方法永远不使用与 connection 关联的类型映射表。
 <p>
从概念上讲，此方法对结构化类型的每个属性都调用 <code>getObject</code> 方法并返回包含结果的 Java 数组。

@param map 从 SQL 类型名称到 Java 类的映射
@return 包含有序属性值的数组
@exception SQLException 如果发生数据库访问错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
