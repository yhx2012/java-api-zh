<!-- BEGIN KEY -->
public interface java.sql.Blob
<!-- END KEY -->
<!-- BEGIN DATA -->
SQL <code>BLOB</code> 值在 Java<sup><font size=-2>TM</font></sup> 编程语言中的表示形式（映射关系）。SQL <code>BLOB</code> 是内置类型，它将二进制大对象 (Binary Large Object) 存储为数据库表某一行中的一个列值。默认情况下，驱动程序使用 SQL <code>locator(BLOB)</code> 实现 <code>Blob</code>，这意味着 <code>Blob</code> 对象包含一个指向 SQL <code>BLOB</code> 数据的逻辑指针而不是数据本身。<code>Blob</code> 对象在它被创建的事务处理期间有效。
 
<P>接口 {@link ResultSet}、{@link CallableStatement} 和 {@link PreparedStatement} 中的方法（如 <code>getBlob</code> 和 <code>setBlob</code>）允许编程人员访问 SQL <code>BLOB</code> 值。<code>Blob</code> 接口提供一些方法来获取 SQL <code>BLOB</code> (Binary Large Object) 值的长度、在客户端实现 <code>BLOB</code> 值以及确定 <code>BLOB</code> 值中某一字节样本的位置。此外，此接口还有更新 <code>BLOB</code> 值的方法。
<p>
 如果 JDBC 驱动程序支持该数据类型，则必须完全实现 <code>Blob</code> 接口的所有方法。

@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.sql.Blob.length() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>Blob</code> 对象指定的 <code>BLOB</code> 值中的字节数。
@return <code>BLOB</code> 的字节长度
@exception SQLException 如果访问 <code>BLOB</code> 的长度时发生错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.sql.Blob.getBytes(long pos, int length) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
以 byte 数组的形式获取此 <code>Blob</code> 对象表示的全部或部分 <code>BLOB</code> 值。此 <code>byte</code> 数组包含从位置 <code>pos</code> 开始的 <code>length</code> 个连续字节。

@param pos 要提取的 <code>BLOB</code> 值中第一个字节的顺序位置；第一个字节位于位置 1 处
@param length 要复制的连续字节的数量；length 的值必须大于等于 0
@return 一个字节数组，它包含此 <code>Blob</code> 对象指定的 <code>BLOB</code> 值中的 <code>length</code> 个连续字节（从位置 <code>pos</code> 处的字节开始）
@exception SQLException 如果访问 <code>BLOB</code> 值时发生错误；如果 pos 小于 1 或 length 小于 0
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #setBytes
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream java.sql.Blob.getBinaryStream() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
以流的形式获取此 <code>Blob</code> 实例指定的 <code>BLOB</code> 值。

@return 包含 <code>BLOB</code> 数据的流
@exception SQLException 如果访问 <code>BLOB</code> 值时发生错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #setBinaryStream
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.sql.Blob.position(byte[] pattern, long start) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->

获取此 <code>Blob</code> 对象表示的 <code>BLOB</code> 值中指定 byte 数组 <code>pattern</code> 开始处的字节位置。对 <code>pattern</code> 的搜索从位置 <code>start</code> 开始。  

@param pattern 要搜索的字节数组
@param start 开始搜索的位置；第一个位置是 1
@return  pattern 出现的位置，否则返回 -1
@exception SQLException 如果访问 <code>BLOB</code> 时发生错误或者 start 小于 1
 @exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.sql.Blob.position(Blob pattern, long start) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->

获取此 <code>Blob</code> 对象指定的 <code>BLOB</code> 值中 <code>pattern</code> 开始处的字节位置。从位置 <code>start</code> 开始搜索。

@param pattern 指定要搜索的 <code>BLOB</code> 值的 <code>Blob</code> 对象
@param start <code>BLOB</code> 值中开始进行搜索的位置；第一个位置是 1
@return pattern 开始处的位置，否则返回 -1
@exception SQLException 如果访问 <code>BLOB</code> 值时发生错误或者 start 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Blob.setBytes(long pos, byte[] bytes) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
从位置 <code>pos</code> 处开始，将给定 byte 数组写入此 <code>Blob</code> 对象表示的 <code>BLOB</code> 值，并返回写入的字节数。该 byte 数组将从位置 <code>pos</code> 开始重写 <code>Blob</code> 对象中的现有字节。如果在写 byte 数组时到达 <code>Blob</code> 值的末尾，则将增加 <code>Blob</code> 值的长度，以容纳额外的字节。
 <p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>BLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param pos <code>BLOB</code> 对象开始进行写入操作的位置；第一个位置是 1
@param bytes 要写入此 <code>Blob</code> 对象表示的 <code>BLOB</code> 值中的 byte 数组
@return 写入的字节数
@exception SQLException 如果访问 <code>BLOB</code> 值时发生错误或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #getBytes
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Blob.setBytes(long pos, byte[] bytes, int offset, int len) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将所有或部分给定的 <code>byte</code> 数组写入此 <code>Blob</code> 对象表示的 <code>BLOB</code> 值中，并返回写入的字节数。写入操作从 <code>BLOB</code> 值中的位置 <code>pos</code> 处开始；写入给定 byte 数组中的 <code>len</code> 个字节。该 byte 数组将从位置 <code>pos</code> 开始重写 <code>Blob</code> 对象中的现有字节。如果在写 byte 数组时到达 <code>Blob</code> 值的末尾，则将增加 <code>Blob</code> 值的长度，以容纳额外的字节。
 <p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>BLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param pos <code>BLOB</code> 对象开始进行写入操作的位置；第一个位置是 1
@param bytes 要写入此 <code>BLOB</code> 对象中的 byte 数组
@param offset 数组 <code>bytes</code> 中的偏移量，从此处开始读取要设置的字节
@param len 要从 byte 数组 <code>bytes</code> 中写入 <code>BLOB</code> 值的字节数
@return 写入的字节数
@exception SQLException 如果访问 <code>BLOB</code> 值时发生错误或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #getBytes
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.OutputStream java.sql.Blob.setBinaryStream(long pos) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于写入此 <code>Blob</code> 对象表示的 <code>BLOB</code> 值的流。该流从位置 <code>pos</code> 处开始。写入流中的字节将从位置 <code>pos</code> 开始重写 <code>Blob</code> 对象中的现有字节。如果在写入流时到达 <code>Blob</code> 值的末尾，则将增加 <code>Blob</code> 值的长度，以容纳额外的字节。
 <p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>BLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param pos <code>BLOB</code> 值中开始进行写入操作的位置；第一个位置是 1
@return 可以将数据写入其中的 <code>java.io.OutputStream</code> 对象
@exception SQLException 如果访问 <code>BLOB</code> 值时发生错误或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #getBinaryStream
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Blob.truncate(long len) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
截取此 <code>Blob</code> 对象表示的 <code>BLOB</code> 值，使其长度为 <code>len</code> 个字节。
<p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>BLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param len 此 <code>Blob</code> 对象表示的 <code>BLOB</code> 值将被截取的字节长度
@exception SQLException 如果访问 <code>BLOB</code> 值时发生错误或者 len 小于 0
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Blob.free() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
 此方法释放 <code>Blob</code> 对象以及它所占用的资源。调用 <code>free</code> 方法后，该对象将无效。
<p>
 在调用 <code>free</code> 方法之后，试图调用 <code>free</code> 之外的方法将导致抛出 <code>SQLException</code>。如果多次调用 <code>free</code>，则对 <code>free</code> 的后续调用被视为无操作 (no-op)。
<p>
 
@throws SQLException 如果在释放 Blob 的资源时发生错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream java.sql.Blob.getBinaryStream(long pos, long length) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回包含部分 <code>Blob</code> 值的 <code>InputStream</code> 对象，该值从 pos 指定的字节开始，长度为 length 个字节。

 @param pos 将获取的部分值第一个字节的偏移量。<code>Blob</code> 中的第一个字节在位置 1 处
 @param length 将获取的部分值的字节长度
 @return 将从中读取部分 <code>Blob</code> 值的 <code>InputStream</code>。
 @throws SQLException 如果 pos 小于 1，或者 pos 大于 <code>Blob</code> 中的字节数，或者 pos + length 大于 <code>Blob</code> 中的字节数

 @exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
 @since 1.6

<!-- END DATA -->
