<!-- BEGIN KEY -->
public interface java.sql.Ref
<!-- END KEY -->
<!-- BEGIN DATA -->
Java 编程语言中 SQL <code>REF</code> 值的映射关系，它是到数据库中的 SQL 结构类型值的引用。
 <P>
SQL <code>REF</code> 值存储在一个包含可引用 SQL 结构类型实例的表中，每个 <code>REF</code> 值都是该表中一个实例的唯一标识符。SQL <code>REF</code> 值可用作表中的列值或结构类型中的属性值，取代它所引用的 SQL 结构类型。
 <P>
因为 SQL <code>REF</code> 值是一个指向 SQL 结构类型的逻辑指针，所以在默认情况下 <code>Ref</code> 对象也是一个逻辑指针。因此，以 <code>Ref</code> 对象的形式获取 SQL <code>REF</code> 值不会在客户端上实现结构类型的属性。
 <P>
可以使用 <code>PreparedStatement.setRef</code> 方法在数据库中存储 <code>Ref</code> 对象。
 <p>
如果 JDBC 驱动程序支持数据类型，那么 <code>Ref</code> 接口上的所有方法必须完全实现。
 
@see Struct
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.sql.Ref.getBaseTypeName() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>Ref</code> 对象所引用 SQL 结构类型的完全限定的 SQL 名称。
 
@return SQL 结构类型引用的完全限定的 SQL 名称
@exception SQLException 如果发生数据库访问错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.sql.Ref.getObject(java.util.Map<java.lang.String, java.lang.Class<?>> map) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取引用对象并使用给定类型映射表将其映射到 Java 类型。

@param map 包含要使用的映射关系的 <code>java.util.Map</code> 对象（要引用的 SQL 结构类型的完全限定名和将 SQL 结构类型映射到的 <code>SQLData</code> 实现的类对象）
@return   Java <code>Object</code>，它是此 <code>Ref</code> 对象引用的 SQL 结构类型的自定义映射关系
@exception SQLException 如果发生数据库访问错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.4
@see #setObject

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.sql.Ref.getObject() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>Ref</code> 对象引用的 SQL 结构类型实例。如果连接的类型映射具有一个结构类型的项，则实例将被自定义映射到类型映射中指示的 Java 类。否则，结构类型实例被映射到 <code>Struct</code> 对象。

@return  Java <code>Object</code>，它是此 <code>Ref</code> 对象引用的 SQL 结构类型的映射关系
@exception SQLException 如果发生数据库访问错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.4
@see #setObject

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Ref.setObject(Object value) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>Ref</code> 对象引用的结构类型值设置为给定的 <code>Object</code> 实例。在将该值发送到数据库时，驱动程序将它转换成一个 SQL 结构类型值。

@param value 一个 <code>Object</code>，表示此 <code>Ref</code> 对象将引用的 SQL 结构类型实例
@exception SQLException 如果发生数据库访问错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.4
@see #getObject()
@see #getObject(Map)
@see PreparedStatement#setObject(int, Object)
@see CallableStatement#setObject(String, Object)

<!-- END DATA -->
