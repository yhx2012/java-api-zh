<!-- BEGIN KEY -->
public final class java.sql.SQLPermission extends java.security.BasicPermission
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>SecurityManager</code> 将用来检查在 applet 中运行的代码何时调用 <code>DriverManager.setLogWriter</code> 方法或 <code>DriverManager.setLogStream</code>（不建议使用）方法的权限。如果不存在 <code>SQLPermission</code> 对象，则这些方法将抛出 <code>java.lang.SecurityException</code> 作为运行时异常。
 <P> 
<code>SQLPermission</code> 对象包含一个名称（也称为&ldquo;目标名称&rdquo;），但没有动作列表；可能有指定的权限，也可能没有。目标名称是权限的名称（参见下面内容）。命名约定遵守层次结构属性命名约定。此外，名称的末尾可能有一个星号，星号前有一个 &quot;.&quot;，该星号用来表示通配符。例如：<code>loadLibrary.*</code> 或 <code>*</code> 是有效的，而 <code>*loadLibrary</code> 或 <code>a*b</code> 则无效。
 <P>
下表列出了所有可能的 <code>SQLPermission</code> 目标名称。目前，只有 <code>setLog</code> 是允许的名称。该表提供了允许权限的说明，并讨论了授权代码权限的风险。
 <P>
 <table border=1 cellpadding=5 summary="permission target name, what the permission allows, and associated risks">
 <tr>
<th>权限目标名称</th>
<th>允许的权限</th>
<th>允许此权限所带来的风险</th>
 </tr>

 <tr>
   <td>setLog</td>
<td>日志流的设置</td>
<td>授予该权限是危险的。日志的内容可能包含用户名和密码、SQL 语句和 SQL 数据。</td>
 </tr>
 
 </table>

运行 applet 的人员可以决定允许使用哪些权限，并通过运行 <code>Policy Tool</code> 在策略文件中创建 <code>SQLPermission</code>。程序员不是直接使用构造方法来创建 <code>SQLPermission</code> 实例，而是使用工具进行创建。
@since 1.3
@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.SQLPermission(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定名称的新 <code>SQLPermission</code> 对象。该名称是 <code>SQLPermission</code> 的符号名；目前只有 &quot;setLog&quot; 是允许的名称。

@param name 此 <code>SQLPermission</code> 对象的名称，该名称必须为 <code>setLog</code>
@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.SQLPermission(String name, String actions)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定名称的新 <code>SQLPermission</code> 对象。该 name 是 <code>SQLPermission</code> 的符号名；目前未使用 actions <code>String</code>，应该为 <code>null</code>。

@param name 此 <code>SQLPermission</code> 对象的名称，该名称必须为 <code>setLog</code>
@param actions 应该为 <code>null</code>
@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空。


<!-- END DATA -->
