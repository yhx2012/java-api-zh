<!-- BEGIN KEY -->
public class java.sql.Date extends java.util.Date
<!-- END KEY -->
<!-- BEGIN DATA -->
<P>一个包装了毫秒值的瘦包装器 (thin wrapper)，它允许 JDBC 将毫秒值标识为 SQL <code>DATE</code> 值。毫秒值表示自 1970 年 1 月 1 日 00:00:00 GMT 以来经过的毫秒数。
 <p>
为了与 SQL <code>DATE</code> 的定义一致，由 <code>java.sql.Date</code> 实例包装的毫秒值必须通过将小时、分钟、秒和毫秒设置为与该实例相关的特定时区中的零来&ldquo;规范化&rdquo;。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.Date(int year, int month, int day)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个使用给定 year、month 和 day 初始化的 <code>Date</code> 对象。
 <P>
如果给定参数超出范围，则结果是不确定的。

@param year year 减去 1900，它必须是 0 到 8099 之间的数。（注意，8099 是由 9999 减去 1900 得到的。）
@param month 0 到 11 之间的数
@param day 1 到 31 之间的数
@deprecated 使用构造方法 <code>Date(long date)</code> 替代

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.Date(long date)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用给定毫秒时间值构造一个 <code>Date</code> 对象。如果给定毫秒值包含时间信息，则驱动程序会将时间组件设置为对应于零 GMT 的默认时区（运行应用程序的 Java 虚拟机的时区）中的时间。

@param date 不超过 year 8099 的毫秒表示的自 1970 年 1 月 1 日 00:00:00 GMT 以来的毫秒数。负数指示在 1970 年 1 月 1 日 00:00:00 GMT 之前的毫秒数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Date.setTime(long date)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用给定毫秒时间值设置现有 <code>Date</code> 对象。如果给定毫秒值包含时间信息，则驱动程序会将时间组件设置为对应于零 GMT 的默认时区（运行应用程序的 Java 虚拟机的时区）中的时间。

@param date 不超过 year 8099 的毫秒表示的自 1970 年 1 月 1 日 00:00:00 GMT 以来的毫秒数。负数指示在 1970 年 1 月 1 日 00:00:00 GMT 之前的毫秒数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.sql.Date java.sql.Date.valueOf(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 JDBC 日期转义形式的字符串转换成 <code>Date</code> 值。

@param s 表示 &quot;yyyy-mm-dd&quot; 形式的日期的 <code>String</code> 对象
@return 表示给定日期的 <code>java.sql.Date</code> 对象
@throws IllegalArgumentException 如果给定日期不是 JDBC 日期转义形式 (yyyy-mm-dd)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.sql.Date.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
格式化日期转义形式 yyyy-mm-dd 的日期。  
 <P>

@return 一个 yyyy-mm-dd 形式的 String

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Date.getHours()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为 SQL Date 值没有时间组件，所以不建议并且不应使用此方法。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #setHours

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Date.getMinutes()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为 SQL Date 值没有时间组件，所以不建议并且不应使用此方法。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #setMinutes

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Date.getSeconds()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为 SQL Date 值没有时间组件，所以不建议并且不应使用此方法。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #setSeconds

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Date.setHours(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为 SQL Date 值没有时间组件，所以不建议并且不应使用此方法。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #getHours

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Date.setMinutes(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为 SQL Date 值没有时间组件，所以不建议并且不应使用此方法。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #getMinutes

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Date.setSeconds(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为 SQL Date 值没有时间组件，所以不建议并且不应使用此方法。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #getSeconds

<!-- END DATA -->
