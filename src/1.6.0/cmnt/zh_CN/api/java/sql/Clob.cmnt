<!-- BEGIN KEY -->
public interface java.sql.Clob
<!-- END KEY -->
<!-- BEGIN DATA -->
SQL 类型 <code>CLOB</code> 在 Java<sup><font size=-2>TM</font></sup> 编程语言中的映射关系。SQL <code>CLOB</code> 是内置类型，它将字符大对象 (Character Large Object) 存储为数据库表某一行中的一个列值。默认情况下，驱动程序使用 SQL <code>locator(CLOB)</code> 实现 <code>Clob</code> 对象，这意味着 <code>CLOB</code> 对象包含一个指向 SQL <code>CLOB</code> 数据的逻辑指针而不是数据本身。<code>Clob</code> 对象在它被创建的事务处理期间有效。
<P><code>CLOB</code> 接口提供一些方法来获取 SQL <code>CLOB</code> (Character Large Object) 值长度、在客户端实现 <code>CLOB</code> 值以及搜索 <code>CLOB</code> 值中的子字符串或 <code>CLOB</code> 对象。接口 {@link ResultSet}、{@link CallableStatement} 和 {@link PreparedStatement} 中的方法（如 <code>getClob</code> 和 <code>setClob</code>）允许编程人员访问 SQL <code>CLOB</code> 值。此外，此接口还拥有更新 <code>CLOB</code> 值的方法。
 <p>
 如果 JDBC 驱动程序支持该数据类型，则必须完全实现 <code>Clob</code> 接口上的所有方法。
 
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.sql.Clob.length() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>Clob</code> 对象指定的 <code>CLOB</code> 值中的字符数。

@return <code>CLOB</code> 的字符长度
@exception SQLException 如果访问 <code>CLOB</code> 值的长度时发生错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.sql.Clob.getSubString(long pos, int length) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>Clob</code> 对象指定的 <code>CLOB</code> 值中指定子字符串的副本。子字符串开始于位置 <code>pos</code> 处，有 <code>length</code> 个连续字符。

@param pos 要提取的子字符串的第一个字符。第一个字符位于位置 1 处。
@param length 要复制的连续字符的数量；length 的值必须大于等于 0 
@return 一个 <code>String</code>，它是由此 <code>Clob</code> 对象指定的 <code>CLOB</code> 值中的指定子字符串
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误；如果 pos 小于 1 或者 length 小于 0
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Reader java.sql.Clob.getCharacterStream() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
以 <code>java.io.Reader</code> 对象形式（或字符流形式）获取此 <code>Clob</code> 对象指定的 <code>CLOB</code> 值。

@return 包含 <code>CLOB</code> 数据的 <code>java.io.Reader</code> 对象
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #setCharacterStream
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream java.sql.Clob.getAsciiStream() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
以 ascii 流形式获取此 <code>Clob</code> 对象指定的 <code>CLOB</code> 值。

@return 包含 <code>CLOB</code> 数据的 <code>java.io.InputStream</code> 对象
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #setAsciiStream
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.sql.Clob.position(String searchstr, long start) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->

获取此 <code>Clob</code> 对象表示的 SQL <code>CLOB</code> 值中指定子字符串 <code>searchstr</code> 出现的字符位置。从位置 <code>start</code> 开始搜索。

@param searchstr 要搜索的子字符串
@param start 开始搜索的位置；第一个位置是 1
@return  子字符串出现的位置；如果没有出现，则返回 -1；第一个位置是 1
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误，或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.sql.Clob.position(Clob searchstr, long start) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->

获取此 <code>Clob</code> 对象中指定的 <code>Clob</code> 对象 <code>searchstr</code> 出现的字符位置。从位置 <code>start</code> 开始搜索。

@param searchstr 要搜索的 <code>Clob</code> 对象
@param start 开始搜索的位置；第一个位置是 1
@return   <code>Clob</code> 对象出现的位置；如果没有出现，则返回 -1；第一个位置是 1
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误，或者 start 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Clob.setString(long pos, String str) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
在位置 <code>pos</code> 处将给定 Java <code>String</code> 写入此 <code>Clob</code> 对象指定的 <code>CLOB</code> 值中。该字符串将从位置 <code>pos</code> 开始重写 <code>Clob</code> 对象中的现有字节。如果在写入给定字符串时到达 <code>Clob</code> 值的末尾，则将增加 <code>Clob</code> 值的长度，以容纳额外的字符。
 <p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>CLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param pos 开始写入此 <code>Clob</code> 对象表示的 <code>CLOB</code> 值的位置；第一个位置是 1
@param str 要写入此 <code>Clob</code> 指定的 <code>CLOB</code> 值中的字符串
@return 写入的字符数
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误，或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Clob.setString(long pos, String str, int offset, int len) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>str</code> 的 <code>len</code> 个字符（从字符 <code>offset</code> 开始）写入此 <code>Clob</code> 表示的 <code>CLOB</code> 值中。该字符串将从位置 <code>pos</code> 开始重写 <code>Clob</code> 对象中的现有字节。如果在写入给定字符串时到达 <code>Clob</code> 值的末尾，则将增加 <code>Clob</code> 值的长度，以容纳额外的字符。
 <p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>CLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param pos 开始写入此 <code>CLOB</code> 对象的位置；第一个位置是 1
@param str 要写入此 <code>Clob</code> 对象表示的 <code>CLOB</code> 值中的字符串
@param offset <code>str</code> 中开始读取要写入字符的偏移量
@param len 要写入的字符数 
@return 写入的字符数
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误，或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.OutputStream java.sql.Clob.setAsciiStream(long pos) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于将 Ascii 字符写入此 <code>Clob</code> 对象表示的 <code>Clob</code> 值中的流，从位置 <code>pos</code> 处开始。写入流中的字符将从位置 <code>pos</code> 开始重写 <code>Clob</code> 对象中的现有字节。如果在将字符写入流中时到达 <code>Clob</code> 值的末尾，则将增加 <code>Clob</code> 值的长度，以容纳额外的字符。
 <p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>CLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param pos 开始写入此 <code>CLOB</code> 对象中的位置；第一个位置是 1
@return 可以将 ASCII 编码字符写入其中的流
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误，或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #getBinaryStream

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Writer java.sql.Clob.setCharacterStream(long pos) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于将 Unicode 字符流写入此 <code>Clob</code> 对象表示的 <code>CLOB</code> 值中（位置 <code>pos</code> 处）的流。写入流中的字符将从位置 <code>pos</code> 开始重写 <code>Clob</code> 对象中的现有字节。如果在将字符写入流中时到达 <code>Clob</code> 值的末尾，则将增加 <code>Clob</code> 值的长度，以容纳额外的字符。
 <p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>CLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param  pos 开始写入 <code>CLOB</code> 值中的位置；第一个位置是 1

@return 可将 Unicode 编码字符写入其中的流
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误，或者 pos 小于 1
@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@see #getCharacterStream

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Clob.truncate(long len) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
截取此 <code>Clob</code> 指定的 <code>CLOB</code> 值，使其长度为 <code>len</code> 个字符。

<p>
 <b>注：</b>如果为 <code>pos</code> 指定的值大于 <code>CLOB</code> 值的长度+1，则行为是不确定的。一些 JDBC 驱动程序可能抛出 <code>SQLException</code>，而另一些驱动程序可能支持此操作。

@param len <code>CLOB</code> 值应被截取的字符长度
@exception SQLException 如果访问 <code>CLOB</code> 值时发生错误，或者 len 小于 0

@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Clob.free() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
 此方法释放 <code>Clob</code> 对象以及它所占用的资源。调用 <code>free</code> 方法后，该对象无效。
 <p>
在调用 <code>free</code> 方法之后，试图调用 <code>free</code> 之外的方法将导致抛出 <code>SQLException</code>。如果多次调用 <code>free</code>，则对 <code>free</code> 的后续调用被视为无操作 (no-op)。
 <p>
@throws SQLException 如果释放 Clob 的资源时发生错误

@exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Reader java.sql.Clob.getCharacterStream(long pos, long length) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回包含部分 <code>Clob</code> 值的 <code>Reader</code> 对象，该值从 pos 指定的字符开始，长度为 length 个字符。

 @param pos 将获取的部分值第一个字符的偏移量。Clob 中的第一个字符在位置 1 处。
 @param length 要获取的部分值的字符长度。
 @return <code>Reader</code>，可以通过它来读取部分 <code>Clob</code> 值。
 @throws SQLException 如果 pos 小于 1，或者 pos 大于 <code>Clob</code> 中的字符数，或者 pos + length 大于 <code>Clob</code> 中的字符数

 @exception SQLFeatureNotSupportedException 如果 JDBC 驱动程序不支持此方法
 @since 1.6

<!-- END DATA -->
