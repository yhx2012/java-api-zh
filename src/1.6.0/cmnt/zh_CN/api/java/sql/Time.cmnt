<!-- BEGIN KEY -->
public class java.sql.Time extends java.util.Date
<!-- END KEY -->
<!-- BEGIN DATA -->
<P>一个与 <code>java.util.Date</code> 类有关的瘦包装器 (thin wrapper)，它允许 JDBC 将该类标识为 SQL <code>TIME</code> 值。<code>Time</code> 类添加格式化和解析操作以支持时间值的 JDBC 转义语法。
<p>应该将日期组件设置为 1970 年 1 月 1 日的 &quot;zero epoch&quot; 值并且不应访问该值。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.Time(int hour, int minute, int second)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>Time</code> 对象，用小时、分钟和秒钟的给定值对其进行初始化。驱动程序将日期组件设置为 1970 年 1 月 1 日。尝试访问 <code>Time</code> 对象的日期组件的任何方法都将抛出 <code>java.lang.IllegalArgumentException</code>。
 <P>
如果给定的参数超出范围，则结果是不确定的。

@param hour 0 到 23
@param minute 0 到 59
@param second 0 到 59

@deprecated 使用采用毫秒值的构造方法取代此构造方法

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.Time(long time)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用毫秒时间值构造 <code>Time</code> 对象。

@param time 自从 1970 年 1 月 1 日 00:00:00 GMT 以来的毫秒数；负数表示在 1970 年 1 月 1 日 00:00:00 GMT 之前的毫秒数

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setTime(long time)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用毫秒时间值设置 <code>Time</code> 对象。

@param time 自从 1970 年 1 月 1 日 00:00:00 GMT 以来的毫秒数；负数表示在 1970 年 1 月 1 日 00:00:00 GMT 之前的毫秒数

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.sql.Time java.sql.Time.valueOf(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
将使用 JDBC 时间转义格式的字符串转换为 <code>Time</code> 值。

@param s 使用 &quot;hh:mm:ss&quot; 格式的时间
@return 相应的 <code>Time</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.sql.Time.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 JDBC 时间转义格式对时间进行格式化。  

@return 使用 hh:mm:ss 格式的 <code>String</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getYear()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法已不建议使用并且不应再使用，因为 SQL <code>TIME</code> 值没有年 (year) 组件。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #setYear

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getMonth()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法已不建议使用并且不应再使用，因为 SQL <code>TIME</code> 值没有月 (month) 组件。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #setMonth

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getDay()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法已不建议使用并且不应再使用，因为 SQL <code>TIME</code> 值没有日 (day) 组件。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getDate()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法已不建议使用并且不应再使用，因为 SQL <code>TIME</code> 值没有日期 (date) 组件。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #setDate

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setYear(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法已不建议使用并且不应再使用，因为 SQL <code>TIME</code> 值没有年 (year) 组件。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #getYear

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setMonth(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法已不建议使用并且不应再使用，因为 SQL <code>TIME</code> 值没有月 (month) 组件。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #getMonth

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setDate(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法已不建议使用并且不应再使用，因为 SQL <code>TIME</code> 值没有日期 (date) 组件。

@deprecated
@exception java.lang.IllegalArgumentException 如果调用此方法
@see #getDate

<!-- END DATA -->
