<!-- BEGIN KEY -->
public interface java.sql.BaseQuery
<!-- END KEY -->
<!-- BEGIN DATA -->
 The interface that needs to be extended by all Query interfaces in order 
 to free up the resources that this Query object uses. After the <code>close()</code>
 method is called, the Query object is no longer usable. The <code>isClosed()</code>
 method is used to determine whether the Query object is still valid or has
 been closed.
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.BaseQuery.close()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Closes this Query Object and makes it no longer usable. All the resources held by this
 object are released
 @exception SQLRuntimeException if an access error occurs
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.sql.BaseQuery.isClosed()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method returns the status of this object, the return value determining whether the
 object can be used or not.
 @return true if the Query Object is closed, false otherwise.
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.SQLWarning java.sql.BaseQuery.getWarnings()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the first warning reported by  invoking methods on this 
 Query object. Subsequent Query object warnings will be chained to this
 <code>SQLWarning</code> object.

 <p>The warning chain is automatically cleared each time
 a method is (re)executed. This method may not be called on a closed
 Query object; doing so will cause an <code>SQLRuntimeException</code>
 to be thrown.

 @return the first <code>SQLWarning</code> object or <code>null</code> 
         if there are no warnings
 @exception SQLRuntimeException if a database access error occurs or this 
            method is called on a closed Query Object
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.BaseQuery.clearWarnings()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clears all warnings reported on this Query object.
 After this method is called, the method <code>getWarnings</code>
 returns <code>null</code> until a new warning is
 reported for this Query object.  

 @exception SQLRuntimeException if a database access error occurs
 @since 1.6

<!-- END DATA -->
