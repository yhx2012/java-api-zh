<!-- BEGIN KEY -->
public interface java.applet.AppletContext
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口对应于 applet 的环境：包含 applet 的文档以及同一文档中的其他 applet。
 <p>
applet 可以使用此接口中的方法获取有关其环境的信息。

@author 	Arthur van Hoff
@version     1.31, 05/05/04
@since       JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.applet.AudioClip java.applet.AppletContext.getAudioClip(URL url)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建音频剪辑。

@param   url   给出音频剪辑位置的绝对 URL。
@return  指定 URL 处的音频剪辑。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Image java.applet.AppletContext.getImage(URL url)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回能被绘制到屏幕上的 <code>Image</code> 对象。作为参数传递的 <code>url</code> 必须指定绝对 URL。
 <p>
不管图像存在与否，此方法总是立即返回。当此 applet 试图在屏幕上绘制图像时，数据将被加载。绘制图像的图形图元将逐渐绘制到屏幕上。

@param   url   给出图像位置的绝对 URL。
@return     指定 URL 处的图像。
@see     java.awt.Image

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.applet.Applet java.applet.AppletContext.getApplet(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过给定名称找到并返回此 applet 上下文表示的文档中的 applet。名称可以在 HTML 标记中通过设置 <code>name</code> 属性来设置。

@param name applet 名称。
@return  具有给定名称的 applet；如果未找到，则返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration<java.applet.Applet> java.applet.AppletContext.getApplets()
<!-- END KEY -->
<!-- BEGIN DATA -->
找到此 applet 上下文表示的文档中的所有 applet。

@return  此 applet 上下文表示的文档中所有 applet 的枚举。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.applet.AppletContext.showDocument(URL url)
<!-- END KEY -->
<!-- BEGIN DATA -->
请求浏览器或 applet viewer 显示 <code>url</code> 参数指示的 Web 页面。浏览器或 applet viewer 确定使用哪个窗口或窗体来显示 Web 页面。非浏览器的 applet 上下文可以忽略此方法。

@param   url   给出文档位置的绝对 URL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.applet.AppletContext.showDocument(URL url, String target)
<!-- END KEY -->
<!-- BEGIN DATA -->
请求浏览器或 applet viewer 显示由 <code>url</code> 参数所指示的 Web 页。<code>target</code> 参数指示在哪个 HTML 窗体中显示文档。target 参数的解释如下:
 <p>
 <center><table border="3" summary="Target arguments and their descriptions">
<tr><th>Target 参数</th><th>描述</th></tr>
 <tr><td><code>&quot;_self&quot;</code>  <td>在包含 applet 的窗口和窗体中显示。</tr>
 <tr><td><code>&quot;_parent&quot;</code><td>在 applet 的父窗体中显示。如果 applet 的窗体没有父窗体，执行与 &quot;_self&quot; 相同的动作。</tr>
 <tr><td><code>&quot;_top&quot;</code>   <td>在 applet 窗口的顶层窗体中显示。如果 applet 窗体是顶层窗体，执行与 &quot;_self&quot; 相同的动作。</tr>
 <tr><td><code>&quot;_blank&quot;</code> <td>在一个新的、未命名的顶层窗口中显示。</tr>
<tr><td><i>name</i><td>在名为 <i>name</i> 的窗体或窗口中显示。如果名为 <i>name</i> 的 target 尚未存在，将创建一个具有指定名称的新顶层窗口，文档将在该窗口中显示。</tr>
 </table> </center>
 <p>
applet viewer 或浏览器可以随意地忽略 <code>showDocument</code>。

@param   url   给定文档位置的绝对 URL。
@param   target   指示在哪里显示页面的 <code>String</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.applet.AppletContext.showStatus(String status)
<!-- END KEY -->
<!-- BEGIN DATA -->
请求参数字符串显示在“状态窗口”中。很多浏览器和 applet viewer 提供这种窗口，应用程序可以通过该窗口将其当前状态通知给用户。

@param   status   在状态窗口中显示的字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.applet.AppletContext.setStream(String key, InputStream stream) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
在此 applet 上下文中用指定的键关联指定的流。如果 applet 上下文以前包含了一个此键的映射关系，那么将替换旧值。 
 <p>
出于安全性考虑，每个代码基都存在流和键的映射。换句话说，一个代码基中的 applet 不能访问不同代码基中的 applet 创建的流。
 <p>
@param key 指定值要关联的键。
@param stream 指定键要关联的流。如果此参数为 <code>null</code>，则在此 applet 上下文中将移除指定键。
@throws <code>IOException</code> 如果流大小超过了一定大小限制。大小限制由此接口的实现者确定。
@since JDK1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream java.applet.AppletContext.getStream(String key)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 applet 上下文中指定键所关联的流。如果 applet 上下文中不包含此键对应的流，则返回 <tt>null</tt>。  
 <p>
由于安全性考虑，每个代码基都存在流和键的映射。换句话说，一个代码基中的 applet 不能访问不同代码基中的 applet 创建的流。
 <p>
@return 此 applet 上下文将键映射到的流
@param key 要返回其关联流的键。
@since JDK1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Iterator<java.lang.String> java.applet.AppletContext.getStreamKeys()
<!-- END KEY -->
<!-- BEGIN DATA -->
找到此 applet 上下文中所有流对应的键。
 <p>
由于安全性考虑，每个代码基都存在流和键的映射。换句话说，一个代码基中的 applet 不能访问不同代码基中的 applet 创建的流。
 <p>
@return  返回此 applet 上下文中所有流名称的迭代器。
@since JDK1.4

<!-- END DATA -->
