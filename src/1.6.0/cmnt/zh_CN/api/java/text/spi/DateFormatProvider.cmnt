<!-- BEGIN KEY -->
public abstract class java.text.spi.DateFormatProvider extends java.util.spi.LocaleServiceProvider
<!-- END KEY -->
<!-- BEGIN DATA -->
提供 {@link java.text.DateFormat DateFormat} 类具体实现的服务提供者的抽象类。

@since        1.6
@version     
@(#)DateFormatProvider.java	1.2 05/11/17

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.text.spi.DateFormatProvider()
<!-- END KEY -->
<!-- BEGIN DATA -->
唯一的构造方法。（由子类构造方法调用，通常是隐式的）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.text.DateFormat java.text.spi.DateFormatProvider.getTimeInstance(int style, Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个新的 <code>DateFormat</code> 实例，此实例使用指定语言环境的给定格式化风格来格式化时间。
@param style 给定的格式化风格。{@link java.text.DateFormat#SHORT DateFormat.SHORT}、{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM}、{@link java.text.DateFormat#LONG DateFormat.LONG} 或 {@link java.text.DateFormat#FULL DateFormat.FULL} 之一。
@param locale 所需的语言环境。
@exception IllegalArgumentException 如果 <code>style</code> 无效，或者 <code>locale</code> 不是 {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()} 返回的语言环境之一。
@exception NullPointerException 如果 <code>locale</code> 为 null
@return 一个时间格式器
@see java.text.DateFormat#getTimeInstance(int, java.util.Locale)

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.text.DateFormat java.text.spi.DateFormatProvider.getDateInstance(int style, Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回新的 <code>DateFormat</code> 实例，此实例使用指定语言环境的给定格式化风格来格式化日期。
@param style 给定的格式化风格。{@link java.text.DateFormat#SHORT DateFormat.SHORT}、{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM}、{@link java.text.DateFormat#LONG DateFormat.LONG} 或 {@link java.text.DateFormat#FULL DateFormat.FULL} 之一。
@param locale 所需的语言环境。
@exception IllegalArgumentException 如果 <code>style</code> 无效，或者 <code>locale</code> 不是 {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()} 返回的语言环境之一。
@exception NullPointerException 如果 <code>locale</code> 为 null
@return 一个日期格式器
@see java.text.DateFormat#getDateInstance(int, java.util.Locale)

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.text.DateFormat java.text.spi.DateFormatProvider.getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回新的 <code>DateFormat</code> 实例，此实例使用指定语言环境的给定格式化风格来格式化日期和时间。
@param dateStyle 给定的日期格式化风格。{@link java.text.DateFormat#SHORT DateFormat.SHORT}、{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM}、{@link java.text.DateFormat#LONG DateFormat.LONG} 或 {@link java.text.DateFormat#FULL DateFormat.FULL} 之一。
@param timeStyle 给定的时间格式化风格。{@link java.text.DateFormat#SHORT DateFormat.SHORT}、{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM}、{@link java.text.DateFormat#LONG DateFormat.LONG} 或 {@link java.text.DateFormat#FULL DateFormat.FULL} 之一。
@param locale 所需的语言环境。
@exception IllegalArgumentException 如果 <code>dateStyle</code> 或 <code>timeStyle</code> 无效，如果 <code>locale</code> 不是 {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()} 返回的语言环境之一。
@exception NullPointerException 如果 <code>locale</code> 为 null
@return 一个 日期/时间格式器。
@see java.text.DateFormat#getDateTimeInstance(int, int, java.util.Locale)

<!-- END DATA -->
