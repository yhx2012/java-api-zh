<!-- BEGIN KEY -->
public static class java.text.MessageFormat.Field extends java.text.Format.Field
<!-- END KEY -->
<!-- BEGIN DATA -->
在从 <code>MessageFormat.formatToCharacterIterator</code> 返回的 <code>AttributedCharacterIterator</code> 中定义用作属性键的常量。

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.text.MessageFormat.Field java.text.MessageFormat.Field.ARGUMENT
<!-- END KEY -->
<!-- BEGIN DATA -->
标识消息某一部分的常量，其中此消息是从传入 <code>formatToCharacterIterator</code> 的参数生成的。与键关联的值将是一个 <code>Integer</code>，指示从其生成文本的 <code>arguments</code> 参数数组中的索引。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.text.MessageFormat.Field(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定名称的 Field。

@param name 属性名称

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object java.text.MessageFormat.Field.readResolve() throws java.io.InvalidObjectException
<!-- END KEY -->
<!-- BEGIN DATA -->
将正被反序列化的实例解析为预定义的常量。

@throws InvalidObjectException 如果常量无法解析。
@return 解析后的 MessageFormat.Field 常量

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object java.text.MessageFormat.Field.readResolve() throws java.io.InvalidObjectException
<!-- END KEY -->
<!-- BEGIN DATA -->
把正被反序列化的实例解析为预定义的常量。

@throws InvalidObjectException 如果常量无法解析。
@return 解析后的 MessageFormat.Field 常量

<!-- END DATA -->
