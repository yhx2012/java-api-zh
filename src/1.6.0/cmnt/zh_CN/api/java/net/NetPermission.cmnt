<!-- BEGIN KEY -->
public final class java.net.NetPermission extends java.security.BasicPermission
<!-- END KEY -->
<!-- BEGIN DATA -->
此类可用于各种网络权限。NetPermission 包含一个名称（也称为&ldquo;目标名称&rdquo;），但没有动作列表；可能有指定的权限，也可能没有。
 <P>
目标名称是网络权限的名称（参见以下内容）。命名约定遵守层次结构属性命名约定。另外，名称的末尾可能有一个星号，星号前有一个 &quot;.&quot;，用来表示通配符。例如：&quot;foo.*&quot; 或 &quot;*&quot; 是有效的，而 &quot;*foo&quot; 或 &quot;a*b&quot; 则无效。
 <P>
下表列出了所有可能的 NetPermission 目标名称，并提供了权限所允许的操作的简要说明，还讨论了授予代码该权限的风险。
 <P>

 <table border=1 cellpadding=5 summary="Permission target name, what the permission allows, and associated risks">
 <tr>
<th>权限目标名称</th>
<th>权限所允许的操作</th>
<th>允许此权限所带来的风险</th>
 </tr>

 <tr>
   <td>setDefaultAuthenticator</td>
<td>设置代理或 HTTP 服务器请求验证时获取验证信息的方式的能力</td>
<td>恶意代码可以设置一个 authenticator，在获取用户输入时能监控和盗取用户的验证输入。</td>
 </tr>

 <tr>
   <td>requestPasswordAuthentication</td>
<td>要求在系统中注册的 authenticator 提供密码的能力</td>
<td>恶意代码可能盗取此密码。</td>
 </tr>

 <tr>
   <td>specifyStreamHandler</td>
<td>在构造 URL 时指定流处理程序的能力</td>
<td>恶意代码可能利用它通常不可访问的资源（如 file:/foo/fum/）创建 URL，指定从它可以访问的某个位置获取实际代码的流处理程序。因此，它也许能欺骗系统，使其创建类事件的 ProtectionDomain/CodeSource，尽管该类实际上并非源于该位置。</td>
 </tr>

 <tr> 
   <td>setProxySelector</td>
<td>设置用于决定要在建立网络连接时使用的代理的代理选择器的能力。</td>
<td>恶意代码可以设置一个 ProxySelector，将网络流量定向到任意网络主机。</td>
 </tr>

 <tr> 
   <td>getProxySelector</td>
<td>获取用于决定要在建立网络连接时使用的代理的代理选择器的能力。</td>
<td>恶意代码可以获取 ProxySelector 以发现内部网络中的代理主机和端口，从而其可能成为攻击的目标。</td>
 </tr>

 <tr> 
   <td>setCookieHandler</td>
<td>设置用于为 Http 会话处理高度安全性敏感 cookie 的 cookie 处理程序的能力。</td>
<td>恶意代码可以设置 cookie 处理程序以达到对高度安全性敏感 cookie 信息的访问。有些 Web 服务器使用 cookie 来保存用户私有信息（如访问控制信息）或者跟踪用户浏览习惯。</td>
   </tr>

 <tr> 
   <td>getCookieHandler</td>
<td>获取用于为 Http 会话处理高度安全性敏感 cookie 的 cookie 处理程序的能力。</td>
<td>恶意代码可以获得 cookie 处理程序以达到对高度安全性敏感 cookie 信息的访问。有些 Web 服务器使用 cookie 来保存用户私有信息（如访问控制信息）或者跟踪用户浏览习惯。</td>
   </tr>

 <tr> 
   <td>setResponseCache</td>
<td>设置提供本地响应缓存的访问权限的响应缓存的能力。</td>
<td>获取本地响应缓存的访问权限的恶意代码可以访问安全性敏感信息，也可以在响应缓存中创建 false 条目。</td>
   </tr>

 <tr> 
   <td>getResponseCache</td>
<td>获取提供本地响应缓存的访问权限的响应缓存的能力。</td>
<td>获取本地响应缓存的访问权限的恶意代码可以访问安全性敏感信息。</td>
   </tr>

 </table>

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

@version 1.51 06/04/21

@author Marianne Mueller
@author Roland Schemers

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.net.NetPermission(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定名称的新 NetPermission。此名称是 NetPermission 的符号名，比如&ldquo;setDefaultAuthenticator&rdquo;等等。名称的末尾可能出现一个星号来表示通配符，其前面有一个&ldquo;.&rdquo;（也可能没有）。

@param name NetPermission 的名称。

@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.net.NetPermission(String name, String actions)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定名称的新 NetPermission。此名称是 NetPermission 的符号名，而当前不使用动作 String，该字符串应该为 null。

@param name NetPermission 的名称。
@param actions 应该为 null。

@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
