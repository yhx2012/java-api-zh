<!-- BEGIN KEY -->
public class java.net.InterfaceAddress extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
此类表示网络接口地址。简言之，对于 IPv4 地址，是指 IP 地址、子网掩码和广播地址。对于 IPv6 地址，是指 IP 地址和网络前缀长度。

@see java.net.NetworkInterface 
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.net.InetAddress java.net.InterfaceAddress.getAddress()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此地址的 <code>InetAddress</code>。

@return 此地址的 <code>InetAddress</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.net.InetAddress java.net.InterfaceAddress.getBroadcast()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 InterfaceAddress 广播地址的 <code>InetAddress</code>。
 <p>
只有 IPv4 网络具有广播地址，因此对于 IPv6 网络将返回 <code>null</code>。

@return 表示广播地址的 <code>InetAddress</code>；如果没有广播地址，则返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public short java.net.InterfaceAddress.getNetworkPrefixLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此地址的网络前缀长度。网络前缀长度在 IPv4 地址上下文中也称为子网掩码。典型的 IPv4 值是 8 (255.0.0.0)、16 (255.255.0.0) 或 24 (255.255.255.0)。 <p>
典型的 IPv6 值是 128 (::1/128) 或 10 (fe80::203:baff:fe27:1243/10)

@return 表示该地址子网前缀长度的 <code>short</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.net.InterfaceAddress.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此对象与指定对象比较。当且仅当参数不为 <code>null</code>，并且它表示与此对象相同的接口地址时，结果才为 <code>true</code>。
 <p>
如果 <code>InterfaceAddress</code> 两个实例的 InetAddress、前缀长度和广播地址都相同，则它们表示相同的地址。

@param obj 要与之比较的对象。
@return  如果对象相同，则返回 <code>true</code>；否则，返回 <code>false</code>。
@see     java.net.InterfaceAddress#hashCode()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.net.InterfaceAddress.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此接口地址的哈希码。

@return  此接口地址的哈希码值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.net.InterfaceAddress.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
将此接口地址转换为 <code>String</code>。返回的字符串具有以下形式：InetAddress /前缀长度[广播地址]。

@return  此接口地址的字符串表示形式。

<!-- END DATA -->
