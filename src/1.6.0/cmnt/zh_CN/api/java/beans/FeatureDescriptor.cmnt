<!-- BEGIN KEY -->
public class java.beans.FeatureDescriptor extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
FeatureDescriptor 类是 PropertyDescriptor、EventSetDescriptor 和 MethodDescriptor 等的公共基类。
 <p>
它支持一些可以设置和检索任意的内省描述符的公共信息。
 <p>
此外，它还提供了一种扩展机制，从而任意属性/值对都可以与设计特性相关联。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.FeatureDescriptor()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>FeatureDescriptor</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.beans.FeatureDescriptor.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得此特性的编程名称。

@return 属性/方法/事件的编程名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setName(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此特性的编程名称。

@param name 属性/方法/事件的编程名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.beans.FeatureDescriptor.getDisplayName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得此特性的本地化显示名称。

@return 属性/方法/事件的本地化显示名称。此名称默认与 getName 返回的编程名称相同。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setDisplayName(String displayName)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此特性的本地化显示名称。

@param displayName 属性/方法/事件的本地化显示名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.FeatureDescriptor.isExpert()
<!-- END KEY -->
<!-- BEGIN DATA -->
&quot;expert&quot; 标志用于区分那些打算供高级用户使用的特性与那些打算供普通用户使用的特性。

@return 如果此特性只打算供高级用户使用，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setExpert(boolean expert)
<!-- END KEY -->
<!-- BEGIN DATA -->
&quot;expert&quot; 标志用于区分打算供高级用户使用的特性和那些打算供普通用户使用的特性。

@param expert 如果此特性只打算供高级用户使用，则该参数为 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.FeatureDescriptor.isHidden()
<!-- END KEY -->
<!-- BEGIN DATA -->
&quot;hidden&quot; 标志用于标识只打算供工具使用、不应对人类开放的特性。

@return 如果应对人类用户隐藏此特性，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setHidden(boolean hidden)
<!-- END KEY -->
<!-- BEGIN DATA -->
&quot;hidden&quot; 标志用于标识只打算供工具使用、不应对人类开放的特性。

@param hidden 如果应对人类用户隐藏此特性，则该参数为 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.FeatureDescriptor.isPreferred()
<!-- END KEY -->
<!-- BEGIN DATA -->
&quot;preferred&quot; 标志用于标识呈现给用户的特别重要的特性。

@return 如果应该优先向人类用户显示此特性，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setPreferred(boolean preferred)
<!-- END KEY -->
<!-- BEGIN DATA -->
&quot;preferred&quot; 标志用于标识呈现给用户的特别重要的特性。

@param preferred   如果应该优先向人类用户显示此特性，则该参数为 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.beans.FeatureDescriptor.getShortDescription()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得此特性的简短描述。

@return  与此属性/方法/事件有关的本地化简短描述。默认简短描述为显示名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setShortDescription(String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
可以将简短描述性字符串与某一特性相关联。这些描述性字符串通常应该少于 40 个字符。
@param text  与此属性/方法/事件有关的（本地化）简短描述。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setValue(String attributeName, Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将某一指定属性与此特性相关联。

@param attributeName  与语言环境无关的属性名称
@param value  值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.beans.FeatureDescriptor.getValue(String attributeName)
<!-- END KEY -->
<!-- BEGIN DATA -->
利用此特性检索指定属性。

@param attributeName  与语言环境无关的属性名称
@return  属性值。如果属性是未知的，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration<java.lang.String> java.beans.FeatureDescriptor.attributeNames()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得与语言环境无关的此特性名称的枚举。

@return  已向 setValue 注册的与语言环境无关的所有属性名称的枚举。

<!-- END DATA -->
