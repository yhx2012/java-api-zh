<!-- BEGIN KEY -->
public interface java.beans.DesignMode
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>
此接口由 java.beans.beancontext.BeanContext 的实例实现或委托，以便将当前的 &quot;designTime&quot; 属性传播到 java.beans.beancontext.BeanContextChild 实例的嵌套层次结构。
 <p>
JavaBeans 规范将设计时间的概念定义为某种模式，在这种模式下，JavaBeans 实例应该在其交互设计、合成或构造工具的组合和自定义期间运行，在 JavaBean 是 applet、应用程序或其他激活的 Java 可执行抽象概念的一部分时，设计时间与运行时间相对应。

@author Laurence P. G. Cable
@version 1.15, 11/17/05
@since 1.2

@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextChild
@see java.beans.beancontext.BeanContextMembershipListener
@see java.beans.PropertyChangeEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String java.beans.DesignMode.PROPERTYNAME
<!-- END KEY -->
<!-- BEGIN DATA -->
从 BeanContext 或 PropertyChangeEvent 的其他源激发的 propertyName 的标准值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.DesignMode.setDesignTime(boolean designTime)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 &quot;designTime&quot; 属性的 &quot;value&quot;。
 <p>
如果实现对象是 java.beans.beancontext.BeanContext 的一个实例，或是其中的一个子接口，则 BeanContext 将使用以下参数对已注册的 BeanContextMembershipListeners 激发一个 PropertyChangeEvent：
 <ul>
<li><code>propertyName</code> - <code>java.beans.DesignMode.PROPERTYNAME</code>
<li><code>oldValue</code> - &quot;designTime&quot; 以前的值
<li><code>newValue</code> - &quot;designTime&quot; 的当前值
 </ul>
注意，BeanContextChild 调用与其中嵌套的 BeanContext 相关联的此方法是不合法的。

@param designTime  &quot;designTime&quot; 属性的当前 &quot;value&quot;
@see java.beans.beancontext.BeanContext
@see java.beans.beancontext.BeanContextMembershipListener
@see java.beans.PropertyChangeEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.DesignMode.isDesignTime()
<!-- END KEY -->
<!-- BEGIN DATA -->
值为 true 表示 JavaBeans 应该在设计时间模式下运转，而 false 表示应该在运行时运转。

@return   &quot;designTime&quot; 属性的当前 &quot;value&quot;。

<!-- END DATA -->
