<!-- BEGIN KEY -->
public class java.beans.beancontext.BeanContextServiceAvailableEvent extends java.beans.beancontext.BeanContextEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>
BeanContextServicesListener 使用此事件类型来标识将被注册的服务。
 </p>

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Class java.beans.beancontext.BeanContextServiceAvailableEvent.serviceClass
<!-- END KEY -->
<!-- BEGIN DATA -->
新近可用服务的 <code>Class</code> 引用

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.beancontext.BeanContextServiceAvailableEvent(BeanContextServices bcs, java.lang.Class sc)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>BeanContextAvailableServiceEvent</code>。
@param bcs 服务在其中变得可用的上下文
@param sc 新近可用服务的 <code>Class</code> 引用

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.beancontext.BeanContextServices java.beans.beancontext.BeanContextServiceAvailableEvent.getSourceAsBeanContextServices()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得作为 <code>BeanContextServices</code> 类型引用的源。
@return 服务在其中已变得可用的上下文

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Class java.beans.beancontext.BeanContextServiceAvailableEvent.getServiceClass()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得作为此通知主题的服务类。
@return 新近可用服务的 <code>Class</code> 引用

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Iterator java.beans.beancontext.BeanContextServiceAvailableEvent.getCurrentServiceSelectors()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得与服务相关的选择器列表。
@return 可从该服务中得到的当前选择器

<!-- END DATA -->
