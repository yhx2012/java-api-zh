<!-- BEGIN KEY -->
public interface java.security.cert.X509Extension
<!-- END KEY -->
<!-- BEGIN DATA -->
X.509 扩展的接口。

<p>为 X.509 v3 {@link X509Certificate Certificates} 和 v2 {@link X509CRL CRLs}（证书撤消列表）所定义的扩展提供了各种方法，用于将其他属性与用户或公钥相关联、管理证书层次结构和管理 CRL 的分发。X.509 扩展格式还允许各种团体定义私有扩展，以承载这些团体的惟一信息。

<p>证书/CRL 中的每种扩展都可以指定为关键的或非关键的。如果使用证书/CRL 的系统（验证证书/CRL 的应用程序）遇到了它无法识别的关键扩展，则它必须拒绝该证书/CRL。如果该系统无法识别非关键扩展，则可将其忽略。
 <p>
此内容的 ASN.1 定义如下：
 <pre>
 Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension

 Extension  ::=  SEQUENCE  {
     extnId        OBJECT IDENTIFIER,
     critical      BOOLEAN DEFAULT FALSE,
     extnValue     OCTET STRING
                   -- contains a DER encoding of a value
                   -- of the type registered for use with
                   -- the extnId object identifier value
 }
 </pre>
由于并非所有的扩展都是已知的，所以 <code>getExtensionValue</code> 方法返回扩展值（也就是 <code>extnValue</code>）的 DER 编码形式的 OCTET STRING。然后可由识别该扩展的<em>类</em> 来处理该返回值。

@author Hemma Prafullchandra
@version 1.22 03/12/19

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.security.cert.X509Extension.hasUnsupportedCriticalExtension()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查是否存在不支持的关键扩展。
 
@return 如果找到了不支持的关键扩展，则返回 <tt>true</tt>；否则返回 <tt>false</tt>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.lang.String> java.security.cert.X509Extension.getCriticalExtensionOIDs()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取实现此接口的对象所管理的证书/CRL 中，被标记为 CRITICAL 的扩展的 OID 字符串 Set。

下面的示例代码从 X509Certificate 中获取一个关键扩展的 Set 并打印 OID：
 <pre><code>
 InputStream inStrm = new FileInputStream(&quot;DER-encoded-Cert&quot;);
 CertificateFactory cf = CertificateFactory.getInstance(&quot;X.509&quot;);
 X509Certificate cert = (X509Certificate)cf.generateCertificate(inStrm);
 inStrm.close();<p>

 Set critSet = cert.getCriticalExtensionOIDs();
 if (critSet != null &amp;&amp; !critSet.isEmpty()) {
     System.out.println(&quot;Set of critical extensions:&quot;);
     for (Iterator i = critSet.iterator(); i.hasNext();) {
         String oid = (String)i.next();
         System.out.println(oid);
     }
 }
 </code></pre>
@return 标记为关键扩展的扩展 OID 字符串 Set（如果没有标记为关键的扩展，则返回一个空 Set）。如果根本没有扩展，则此方法返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.lang.String> java.security.cert.X509Extension.getNonCriticalExtensionOIDs()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取实现此接口的对象所管理的证书/CRL 中，被标记为 NON-CRITICAL 的扩展的 OID 字符串 Set。

下面的示例代码从 X509CRL 已撤消证书项中获取一个非关键扩展的 Set 并打印 OID：
 <pre><code>
 InputStream inStrm = new FileInputStream(&quot;DER-encoded-CRL&quot;);
 CertificateFactory cf = CertificateFactory.getInstance(&quot;X.509&quot;);
 X509CRL crl = (X509CRL)cf.generateCRL(inStrm);
 inStrm.close();<p>

 byte[] certData = &lt;DER-encoded certificate data&gt;
 ByteArrayInputStream bais = new ByteArrayInputStream(certData);
 X509Certificate cert = (X509Certificate)cf.generateCertificate(bais);
 bais.close();
 X509CRLEntry badCert =
              crl.getRevokedCertificate(cert.getSerialNumber());<p>

 if (badCert != null) {
     Set nonCritSet = badCert.getNonCriticalExtensionOIDs();<p>
     if (nonCritSet != null)
         for (Iterator i = nonCritSet.iterator(); i.hasNext();) {
             String oid = (String)i.next();
             System.out.println(oid);
         }
 }
 </code></pre>

@return 标记为非关键扩展的扩展 OID 字符串 Set（如果没有标记为非关键的扩展，则返回一个空 Set）。如果根本没有扩展，则此方法返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.security.cert.X509Extension.getExtensionValue(String oid)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取扩展值 (<em>extnValue</em>) 的 DER 编码 OCTET 字符串，该扩展值由传入的 <code>oid</code> String 标识。该 <code>oid</code> 字符串由一组句点分隔的非负整数集来表示。

<p>例如：<br>
 <table border=groove summary="Examples of OIDs and extension names">
 <tr>
<th>OID<em>（对象标识符）</em></th>
<th>扩展名</th></tr>
 <tr><td>2.5.29.14</td>
 <td>SubjectKeyIdentifier</td></tr>
 <tr><td>2.5.29.15</td>
 <td>KeyUsage</td></tr>
 <tr><td>2.5.29.16</td>
 <td>PrivateKeyUsage</td></tr>
 <tr><td>2.5.29.17</td>
 <td>SubjectAlternativeName</td></tr>
 <tr><td>2.5.29.18</td>
 <td>IssuerAlternativeName</td></tr>
 <tr><td>2.5.29.19</td>
 <td>BasicConstraints</td></tr>
 <tr><td>2.5.29.30</td>
 <td>NameConstraints</td></tr>
 <tr><td>2.5.29.33</td>
 <td>PolicyMappings</td></tr>
 <tr><td>2.5.29.35</td>
 <td>AuthorityKeyIdentifier</td></tr>
 <tr><td>2.5.29.36</td>
 <td>PolicyConstraints</td></tr>
 </table>

@param oid 该扩展的对象标识符值。
@return 扩展值的 DER 编码的八位字节字符串，如果不存在，则返回 null。

<!-- END DATA -->
