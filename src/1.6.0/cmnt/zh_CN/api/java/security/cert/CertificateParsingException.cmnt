<!-- BEGIN KEY -->
public class java.security.cert.CertificateParsingException extends java.security.cert.CertificateException
<!-- END KEY -->
<!-- BEGIN DATA -->
证书解析异常。只要解析了无效的 DER 编码证书或者在该 Certificate 中发现了不受支持的 DER 功能，就抛出此异常。

@author Hemma Prafullchandra 1.12

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.CertificateParsingException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造不带详细消息的 CertificateParsingException。详细消息是描述此特定异常的字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.CertificateParsingException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 CertificateParsingException。详细消息是描述此特定异常的字符串。
   
@param message 详细消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.CertificateParsingException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定详细消息和原因的 <code>CertificateParsingException</code>。

@param message 详细消息（保存此消息，以便以后通过 {@link #getMessage()} 方法获取它）。
@param cause cause（保存此 cause，以便以后通过 {@link #getCause()} 方法获取它）。（允许使用 <tt>null</tt> 值，指出 cause 是不存在的或是未知的。）
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.CertificateParsingException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定原因和详细消息的 <code>CertificateParsingException</code>，详细消息是 <tt>(cause==null ? null :cause.toString())</tt>&#xFF08;&#x5B83;&#x901A;&#x5E38;&#x5305;&#x542B; <tt>cause</tt> &#x7684;&#x7C7B;&#x548C;&#x8BE6;&#x7EC6;&#x6D88;&#x606F;&#xFF09;&#x3002;

@param cause cause（保存此 cause，以便以后通过 {@link #getCause()} 方法获取它）。（允许使用 <tt>null</tt> 值，指出 cause 是不存在的或是未知的。）
@since 1.5

<!-- END DATA -->
