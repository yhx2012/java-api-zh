<!-- BEGIN KEY -->
public class java.security.ProviderException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->

用于 Provider 异常(例如误配置错误或不可恢复的内部错误）的运行时异常，Provider 可以为它创建子类以抛出特殊的、特定于 provider 的运行时错误。

@version 1.16, 12/19/03
@author Benjamin Renaud

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.ProviderException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造不带详细消息的 ProviderException。详细消息是描述此特定异常的字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.ProviderException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 ProviderException。详细消息是描述此特定异常的字符串。  

@param s 详细消息。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.ProviderException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定的详细消息和 cause 的 <code>ProviderException</code>。

@param message 详细消息（保存此消息，以便以后通过 {@link #getMessage()} 方法获取它）。
@param  cause cause（保存此 cause，以便以后通过 {@link #getCause()} 方法获取它）。（允许使用 <tt>null</tt> 值，指示 cause 是不存在的或未知的。）
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.ProviderException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定的 cause 和详细消息的 <code>ProviderException</code>，详细消息是 <tt>(cause==null ? null :cause.toString())</tt>（它通常包含 <tt>cause</tt> 的类和详细消息）。

@param  cause cause（保存此 cause，以便以后通过 {@link #getCause()} 方法获取它）。（允许使用 <tt>null</tt> 值，指示 cause 是不存在的或未知的。）
@since 1.5

<!-- END DATA -->
