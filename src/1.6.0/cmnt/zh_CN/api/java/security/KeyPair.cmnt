<!-- BEGIN KEY -->
public final class java.security.KeyPair extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
此类是简单的密钥对（公钥和私钥）持有者。它没有增强任何安全性，另外初始化时应该将它当作 PrivateKey 对待。

@see PublicKey
@see PrivateKey

@version 1.15 03/12/19
@author Benjamin Renaud

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyPair(PublicKey publicKey, PrivateKey privateKey)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的公钥和私钥构造密钥对。

<p>注意，此构造方法只在生成的密钥对中存储对公钥和私钥组件的引用。这是安全的，因为 <code>Key</code> 对象是不可变的。

@param publicKey 公钥。

@param privateKey 私钥。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.PublicKey java.security.KeyPair.getPublic()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对此密钥对的公钥组件的引用。

@return 对公钥的一个引用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.PrivateKey java.security.KeyPair.getPrivate()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对此密钥对的私钥组件的引用。

@return 对私钥的一个引用。

<!-- END DATA -->
