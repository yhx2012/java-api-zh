<!-- BEGIN KEY -->
public class java.security.spec.RSAPrivateCrtKeySpec extends java.security.spec.RSAPrivateKeySpec
<!-- END KEY -->
<!-- BEGIN DATA -->
为了提高效率，此类根据 PKCS#1 标准所定义的，使用 Chinese Remainder Theorem（中国剩余定理，CRT）信息值指定一个 RSA 专用密钥。

@author Jan Luehe

@version 1.12 03/12/19

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see PKCS8EncodedKeySpec
@see RSAPrivateKeySpec
@see RSAPublicKeySpec

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.RSAPrivateCrtKeySpec(BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger primeP, BigInteger primeQ, BigInteger primeExponentP, BigInteger primeExponentQ, BigInteger crtCoefficient)
<!-- END KEY -->
<!-- BEGIN DATA -->
给定在 PKCS#1 v2.1 中所定义的系数、publicExponent、privateExponent、 primeP、primeQ、primeExponentP、primeExponentQ 和 crtCoefficient，创建一个新的 <code>RSAPrivateCrtKeySpec</code>。

@param modulus 系数 n
@param publicExponent 公用指数 e
@param privateExponent 专用指数 d
@param primeP n 的素数因子 p
@param primeQ n 的素数因子 q
@param primeExponentP 这是 d 除以 (p-1) 所得的余数
@param primeExponentQ 这是 d 除以 (q-1) 所得的余数
@param crtCoefficient Chinese Remainder Theorem 系数 q-1 除以 p 所得的余数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAPrivateCrtKeySpec.getPublicExponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回公用指数。

@return 该公用指数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAPrivateCrtKeySpec.getPrimeP()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeP。

@return primeP

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAPrivateCrtKeySpec.getPrimeQ()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeQ。

@return  primeQ

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentP()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeExponentP。

@return  primeExponentP

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentQ()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeExponentQ。

@return  primeExponentQ

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAPrivateCrtKeySpec.getCrtCoefficient()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 crtCoefficient。

@return crtCoefficient

<!-- END DATA -->
