<!-- BEGIN KEY -->
public class java.security.spec.EllipticCurve extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
此不可变类持有表示椭圆曲线所必需的值。

@see ECField
@see ECFieldFp
@see ECFieldF2m

@author Valerie Peng
@version 1.3, 12/19/03
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.EllipticCurve(ECField field, BigInteger a, BigInteger b)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的椭圆字段 <code>field</code> 以及系数 <code>a</code> 和 <code>b</code> 创建椭圆曲线。
@param field 此椭圆曲线结束的有限字段。
@param a 此椭圆曲线的第一个系数。
@param b 此椭圆曲线的第二个系数。
@exception NullPointerException 如果 <code>field</code>、<code>a</code> 或 <code>b</code> 为 null。
@exception IllegalArgumentException 如果 <code>a</code> 或 <code>b</code> 不为 null，并且不在 <code>field</code> 中。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.EllipticCurve(ECField field, BigInteger a, BigInteger b, byte[] seed)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的椭圆字段 <code>field</code>、系数 <code>a</code> 和 <code>b</code>，以及用于生成曲线的 <code>seed</code> 创建椭圆曲线。
@param field 此椭圆曲线结束的有限字段。
@param a 此椭圆曲线的第一个系数。
@param b 此椭圆曲线的第二个系数。
@param seed 曲线生成期间使用的字节，用于以后验证。复制此数组的内容，以防止随后进行修改。
@exception NullPointerException 如果 <code>field</code>、<code>a</code> 或 <code>b</code> 为 null。
@exception IllegalArgumentException 如果 <code>a</code> 或 <code>b</code> 不为 null，并且不在 <code>field</code> 中。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.ECField java.security.spec.EllipticCurve.getField()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此椭圆曲线结束的有限字段 <code>field</code>。
@return 此曲线结束的字段 <code>field</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.EllipticCurve.getA()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回椭圆曲线的第一个系数 <code>a</code>。
@return 第一个系数 <code>a</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.EllipticCurve.getB()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回椭圆曲线的第二个系数 <code>b</code>。
@return 第二个系数 <code>b</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.security.spec.EllipticCurve.getSeed()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回曲线生成期间所使用的种子字节 <code>seed</code>。如果没有指定，则可以为 null。
@return 种子字节 <code>seed</code>。每次调用此方法时，都返回一个新数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.security.spec.EllipticCurve.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较此椭圆曲线与指定对象的相等性。
@param obj 要比较的对象。
@return 如果 <code>obj</code> 是 EllipticCurve 的一个实例，并且字段 A、B 和种子字节匹配，则返回 true，否则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.spec.EllipticCurve.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此椭圆曲线的哈希码值。
@return 哈希码值。

<!-- END DATA -->
