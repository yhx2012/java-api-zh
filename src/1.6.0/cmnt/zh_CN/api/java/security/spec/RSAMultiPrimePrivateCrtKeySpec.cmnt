<!-- BEGIN KEY -->
public class java.security.spec.RSAMultiPrimePrivateCrtKeySpec extends java.security.spec.RSAPrivateKeySpec
<!-- END KEY -->
<!-- BEGIN DATA -->
如 PKCS#1 v2.1 中所定义的，此类为了提高效率，使用 Chinese Remainder Theorem (CRT) 信息值指定 RSA 多素数专用密钥。

@author Valerie Peng

@version 1.8 03/12/19

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see PKCS8EncodedKeySpec
@see RSAPrivateKeySpec
@see RSAPublicKeySpec
@see RSAOtherPrimeInfo

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.RSAMultiPrimePrivateCrtKeySpec(BigInteger modulus, BigInteger publicExponent, BigInteger privateExponent, BigInteger primeP, BigInteger primeQ, BigInteger primeExponentP, BigInteger primeExponentQ, BigInteger crtCoefficient, java.security.spec.RSAOtherPrimeInfo[] otherPrimeInfo)
<!-- END KEY -->
<!-- BEGIN DATA -->
给定系数、publicExponent、privateExponent、primeP、primeQ、primeExponentP、primeExponentQ、crtCoefficient 和如 PKCS#1 v2.1 中所定义的 otherPrimeInfo，创建一个新的 <code>RSAMultiPrimePrivateCrtKeySpec</code>。

<p>注意，要复制 <code>otherPrimeInfo</code> 的内容，以防止以后在构造此对象时发生修改。

@param modulus 系数 n。
@param publicExponent 公用指数 e。
@param privateExponent 专用指数 d。
@param primeP n 的素数因子 p。
@param primeQ n 的素数因子 q。
@param primeExponentP 这是 d mod (p-1)。
@param primeExponentQ 这是 d mod (q-1)。
@param crtCoefficient Chinese Remainder Theorem 系数 q-1 除以 p 所得的余数。
@param otherPrimeInfo 其余素数的三元组，如果仅有两个素数因子（p 和 q），则可以指定 null。
@exception NullPointerException 如果任一参数（即：<code>modulus</code>、<code>publicExponent</code>、<code>privateExponent</code>、<code>primeP</code>、<code>primeQ</code>、<code>primeExponentP</code>、<code>primeExponentQ</code> 和 <code>crtCoefficient</code>）为 null。
@exception IllegalArgumentException 如果为空（即：长度为 0），则指定 <code>otherPrimeInfo</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPublicExponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回公用指数。

@return 该公用指数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeP()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeP。

@return primeP。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeQ()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeQ。

@return primeQ。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentP()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeExponentP。

@return  primeExponentP。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentQ()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primeExponentQ。

@return  primeExponentQ。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getCrtCoefficient()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 crtCoefficient。

@return crtCoefficient。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.RSAOtherPrimeInfo[] java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getOtherPrimeInfo()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 otherPrimeInfo 的副本，如果仅有两个素数因子（p 和 q），则返回 null。

@return otherPrimeInfo。每次调用此方法时，都返回一个新数组。

<!-- END DATA -->
