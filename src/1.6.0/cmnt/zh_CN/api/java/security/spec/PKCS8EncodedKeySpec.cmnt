<!-- BEGIN KEY -->
public class java.security.spec.PKCS8EncodedKeySpec extends java.security.spec.EncodedKeySpec
<!-- END KEY -->
<!-- BEGIN DATA -->
此类表示按照 ASN.1 类型 <code>PrivateKeyInfo</code> 进行编码的专用密钥的 ASN.1 编码。PKCS#8 中定义的 <code>PrivateKeyInfo</code> 语法如下：

 <pre>
 PrivateKeyInfo ::= SEQUENCE {
   version Version,
   privateKeyAlgorithm PrivateKeyAlgorithmIdentifier,
   privateKey PrivateKey,
   attributes [0] IMPLICIT Attributes OPTIONAL }

 Version ::= INTEGER

 PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier

 PrivateKey ::= OCTET STRING

 Attributes ::= SET OF Attribute
 </pre>

@author Jan Luehe

@version 1.22, 11/17/05

@see java.security.Key
@see java.security.KeyFactory
@see KeySpec
@see EncodedKeySpec
@see X509EncodedKeySpec

@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.PKCS8EncodedKeySpec(byte[] encodedKey)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的编码密钥创建一个新的 PKCS8EncodedKeySpec。

@param encodedKey 假设按照 PKCS #8 标准对其进行编码的密钥。复制数组的内容，以防随后的修改。
@exception NullPointerException 如果 <code>encodedKey</code> 为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.security.spec.PKCS8EncodedKeySpec.getEncoded()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回按照 PKCS #8 标准编码的密钥字节。

@return 密钥的 PKCS #8 编码。每次调用此方法时，都返回一个新数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String java.security.spec.PKCS8EncodedKeySpec.getFormat()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此密钥规范关联的编码格式的名称。

@return 字符串 <code>&quot;PKCS#8&quot;</code>。

<!-- END DATA -->
