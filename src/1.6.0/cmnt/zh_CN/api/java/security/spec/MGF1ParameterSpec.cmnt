<!-- BEGIN KEY -->
public class java.security.spec.MGF1ParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
<!-- END KEY -->
<!-- BEGIN DATA -->
此类指定 OAEP Padding 和 RSA-PSS 签名方案中的掩码生成函数 MGF1（如 <a href="http://www.ietf.org/rfc/rfc3447.txt">PKCS #1 v2.1</a> 标准中所定义的）使用的参数集。
 
<p>它在 PKCS#1 标准中的 ASN.1 定义描述如下：
 <pre>
 MGF1Parameters ::= OAEP-PSSDigestAlgorthms
 </pre>
其中
 <pre>
 OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {
   { OID id-sha1 PARAMETERS NULL   }|
   { OID id-sha256 PARAMETERS NULL }|
   { OID id-sha384 PARAMETERS NULL }|
   { OID id-sha512 PARAMETERS NULL },
   ...  -- Allows for future expansion --
 }
 </pre>

@see PSSParameterSpec
@see javax.crypto.spec.OAEPParameterSpec

@author Valerie Peng

@version 1.3, 01/27/04
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.security.spec.MGF1ParameterSpec java.security.spec.MGF1ParameterSpec.SHA1
<!-- END KEY -->
<!-- BEGIN DATA -->
使用&ldquo;SHA-1&rdquo;消息摘要的 MGF1ParameterSpec。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.security.spec.MGF1ParameterSpec java.security.spec.MGF1ParameterSpec.SHA256
<!-- END KEY -->
<!-- BEGIN DATA -->
使用&ldquo;SHA-256&rdquo;消息摘要的 MGF1ParameterSpec。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.security.spec.MGF1ParameterSpec java.security.spec.MGF1ParameterSpec.SHA384
<!-- END KEY -->
<!-- BEGIN DATA -->
 使用&ldquo;SHA-384&rdquo;消息摘要的 MGF1ParameterSpec。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.security.spec.MGF1ParameterSpec java.security.spec.MGF1ParameterSpec.SHA512
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 SHA-512 消息摘要的 MGF1ParameterSpec。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.MGF1ParameterSpec(String mdName)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造如 PKCS #1 标准中所定义的掩码生成函数 MGF1 的参数集。

@param mdName 此掩码生成函数 MGF1 中使用的消息摘要的算法名称。
@exception NullPointerException 如果 <code>mdName</code> 为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.spec.MGF1ParameterSpec.getDigestAlgorithm()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回掩码生成函数使用的消息摘要的算法名称。 

@return 消息摘要的算法名称。 

<!-- END DATA -->
