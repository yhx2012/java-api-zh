<!-- BEGIN KEY -->
public interface java.security.acl.Group extends java.security.Principal
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口用于表示一个主体组。（主体表示一种实体，如单个用户或一家公司）。 <p>     

注意，Group 扩展了 Principal。因此，可将 Principal 或 Group 作为参数传入到包含 Principal 参数的方法中。例如，可以通过调用 Group 对象的 <code>addMember</code> 方法来向该对象添加 Principal 或 Group，将其传递到 Principal 或 Group。

@author 	Satish Dharmaraj

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.security.acl.Group.addMember(Principal user)
<!-- END KEY -->
<!-- BEGIN DATA -->
向组中添加指定的成员。 
  
@param user 要添加到此组中的主体。
 
@return 如果成功添加了该成员，则返回 true；如果该主体已经是一个成员，则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.security.acl.Group.removeMember(Principal user)
<!-- END KEY -->
<!-- BEGIN DATA -->
从组中移除指定的成员。
 
@param user 从此组中移除的主体。
 
@return 如果移除了该主体，则返回 true；如果该主体不是一个成员，则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.security.acl.Group.isMember(Principal member)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果传递的主体是组的一个成员，则返回 true。此方法执行递归搜索，所以如果主体所属的组是此组的一个成员，则返回 true。
 
@param member 要检查其成员关系的主体。
 
@return 如果该主体是此组的一个成员，则返回 true；否则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration<? extends java.security.Principal> java.security.acl.Group.members()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此组中成员的枚举。返回的对象可以是 Principal 或 Group（它是 Principal 的一个子类）的一个实例。
 
@return 组成员的一个枚举。

<!-- END DATA -->
