<!-- BEGIN KEY -->
public abstract class java.security.PolicySpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
此类为 <code>Policy</code> 类定义<i>服务提供者接口</i> (<b>SPI</b>)。每个想要提供 Policy 实现的服务提供者都必须实现此类中的所有抽象方法。

<p> 此抽象类的子类实现必须提供可将 <code>Policy.Parameters</code> 对象作为输入参数的公共构造方法。如果此构造方法不理解 <code>Policy.Parameters</code> 输入，它同样必须抛出 IllegalArgumentException。

@version 1.2, 11/17/05

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract boolean java.security.PolicySpi.engineImplies(ProtectionDomain domain, Permission permission)
<!-- END KEY -->
<!-- BEGIN DATA -->
检查该策略是否已将 Permission 授予 ProtectionDomain。

@param domain 要检查的 ProtectionDomain。

@param permission 检查是否已将此权限授予指定的域。

@return 如果已将此权限授予该域，则返回 boolean 值 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.security.PolicySpi.engineRefresh()
<!-- END KEY -->
<!-- BEGIN DATA -->
刷新/重载策略配置。此方法的行为取决于实现。例如，对基于文件的策略调用 <code>refresh</code> 将导致重新读取该文件。

<p> 此方法的默认实现不执行任何操作。如果策略实现支持刷新操作，则应该重写此方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.security.PermissionCollection java.security.PolicySpi.engineGetPermissions(CodeSource codesource)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回包含授予指定 CodeSource 的权限集的 PermissionCollection 对象。

<p> 此方法的默认实现返回 Policy.UNSUPPORTED_EMPTY_COLLECTION 对象。如果策略实现可以返回授予 CodeSource 的权限集，则可以重写此方法。

@param codesource 授予了返回 PermissionCollection 的 CodeSource。

@return 授予指定 CodeSource 的权限集。如果支持此操作，则返回的权限集必须是可变的新实例，并且它必须支持不同的 Permission 类型。如果不支持此操作，则返回 Policy.UNSUPPORTED_EMPTY_COLLECTION。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.security.PermissionCollection java.security.PolicySpi.engineGetPermissions(ProtectionDomain domain)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回包含授予指定 ProtectionDomain 的权限集的 PermissionCollection 对象。

<p> 此方法的默认实现返回 Policy.UNSUPPORTED_EMPTY_COLLECTION 对象。如果策略实现可以返回授予 ProtectionDomain 的权限集，则可以重写此方法。

@param domain 授予了返回 PermissionCollection 的 ProtectionDomain。

@return 授予指定 ProtectionDomain 的权限集。如果支持此操作，则返回的权限集必须是可变的新实例，并且它必须支持不同的 Permission 类型。如果不支持此操作，则返回 Policy.UNSUPPORTED_EMPTY_COLLECTION。

<!-- END DATA -->
