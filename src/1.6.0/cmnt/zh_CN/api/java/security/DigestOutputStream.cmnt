<!-- BEGIN KEY -->
public class java.security.DigestOutputStream extends java.io.FilterOutputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
使用通过流的位更新关联消息摘要的透明流。

<p>要完成消息摘要计算，先要调用此摘要输出流的一个 {@link #write(int) write} 方法，之后在关联的消息摘要上调用 <code>digest</code> 方法之一。

<p>开启或关闭此流都是可能的（参见 {@link #on(boolean) on}）。开启时，调用 <code>write</code> 方法之一将导致消息摘要的更新。但是关闭时，不更新消息摘要。流在默认情况下是开启的。

@see MessageDigest
@see DigestInputStream

@version 1.31 03/12/19
@author Benjamin Renaud

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.security.MessageDigest java.security.DigestOutputStream.digest
<!-- END KEY -->
<!-- BEGIN DATA -->
与此流关联的消息摘要。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.DigestOutputStream(OutputStream stream, MessageDigest digest)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的输出流和消息摘要创建一个摘要输出流。

@param stream 输出流。

@param digest 要与此流关联的消息摘要。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.MessageDigest java.security.DigestOutputStream.getMessageDigest()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此流关联的消息摘要。

@return 与此流关联的消息摘要。
@see #setMessageDigest(java.security.MessageDigest)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.security.DigestOutputStream.setMessageDigest(MessageDigest digest)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的消息摘要与此流相关联。

@param digest 要与此流关联的消息摘要。
@see #getMessageDigest()

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.security.DigestOutputStream.write(int b) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的字节更新消息摘要（如果开启了摘要功能），并将字节写入输出流（不管是否开启了摘要功能）。即如果开启摘要功能（参见 {@link #on(boolean) on}），则此方法将在与此流关联的消息摘要上调用 <code>update</code>，将字节 <code>b</code> 传递给该方法。然后，此方法将字节写入输出流，在实际写入字节前一直为阻塞状态。

@param b 要用于更新和写入输出流的字节。

@exception  IOException 如果发生 I/O 错误。

@see MessageDigest#update(byte)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.security.DigestOutputStream.write(byte[] b, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的子数组更新消息摘要（如果开启了摘要功能），并将子数组写入输出流（不管是否开启了摘要功能）。即如果开启摘要功能（参见 {@link #on(boolean) on}），则此方法将在与此流关联的消息摘要上调用 <code>update</code>，将子数组规范传递给该方法。然后，此方法将子数组字节写入输出流，在实际写入字节前一直为阻塞状态。

@param b 要用于更新和写入输出流的包含子数组的数组。

@param off 要更新和写入的第一个字节在 <code>b</code> 中的偏移量。

@param len 要根据 <code>b</code> 更新和写入的数据的字节数，从偏移量 <code>off</code> 开始。

@exception  IOException 如果发生 I/O 错误。

@see MessageDigest#update(byte[], int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.security.DigestOutputStream.on(boolean on)
<!-- END KEY -->
<!-- BEGIN DATA -->
开启或关闭摘要功能。默认为开启。开启时，调用 <code>write</code> 方法之一将导致消息摘要的更新。但是关闭时，不更新消息摘要。

@param on 为 true 表示开启摘要功能，为 false 表示关闭。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.DigestOutputStream.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
打印此摘要输出流及其关联的消息摘要对象的字符串表示形式。

<!-- END DATA -->
