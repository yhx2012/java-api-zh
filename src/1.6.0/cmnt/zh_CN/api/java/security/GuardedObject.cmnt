<!-- BEGIN KEY -->
public class java.security.GuardedObject extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
GuardedObject 是一个用来保护对另一个对象的访问的对象。

<p>GuardedObject 封装一个目标对象和一个 Guard 对象，仅当 Guard 对象允许时才可能对目标对象进行访问。一旦 GuardedObject 封装了某个对象，<code>getObject</code> 方法就会控制对该对象的访问,这一方法将对保护访问的 Guard 对象调用 <code>checkGuard</code> 方法。如果不允许访问，则抛出异常。

@see Guard
@see Permission

@version 1.15 03/12/19
@author Roland Schemers
@author Li Gong

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.GuardedObject(Object object, Guard guard)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的对象和 guard 构造 GuardedObject。如果 Guard 对象为 null，则对于谁可以访问对象没有任何限制。

@param object 要保护的对象。

@param guard 保护对对象的访问的 Guard 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.security.GuardedObject.getObject() throws java.lang.SecurityException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取受保护对象；如果 guard 拒绝了对受保护对象的访问，则抛出异常。

@return 受保护对象

@exception SecurityException 如果拒绝对受保护对象的访问。

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.security.GuardedObject.writeObject(ObjectOutputStream oos) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将此对象写出到流中（即将其序列化）。如果存在 guard，则检查它。

<!-- END DATA -->
