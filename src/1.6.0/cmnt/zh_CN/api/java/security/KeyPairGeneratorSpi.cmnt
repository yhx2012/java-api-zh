<!-- BEGIN KEY -->
public abstract class java.security.KeyPairGeneratorSpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<p> 此类为用来生成公钥和私钥的 <code>KeyPairGenerator</code> 类定义了<i>服务提供者接口</i> (<b>SPI</b>)。

<p> 每个希望为特定算法提供密钥对生成器实现的密码服务提供者，都必须实现此类中的所有抽象方法。
 
<p> 每个 provider 都必须提供（并记录）一种默认的初始化，以防客户端没有显式初始化 KeyPairGenerator（通过调用 <code>initialize</code> 方法）。例如，<i>Sun</i> provider 使用 1024 位的默认模大小（密钥大小）。

@author Benjamin Renaud

@version 1.14, 12/19/03

@see KeyPairGenerator
@see java.security.spec.AlgorithmParameterSpec

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.security.KeyPairGeneratorSpi.initialize(int keysize, SecureRandom random)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用默认参数集初始化确定密钥大小的密钥对生成器。

@param keysize 密钥大小。这是特定于算法的度量（如模长度），以位数的形式指定。

@param random 此生成器的随机源。

@exception InvalidParameterException 如果 <code>keysize</code> 不受此 KeyPairGeneratorSpi 对象支持。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.security.KeyPairGeneratorSpi.initialize(AlgorithmParameterSpec params, SecureRandom random) throws java.security.InvalidAlgorithmParameterException
<!-- END KEY -->
<!-- BEGIN DATA -->
用指定参数集合和用户提供的随机源初始化密钥对生成器。

<p>已将此具体方法添加到以前定义的这个抽象类中。（为了向后兼容性，它不能是抽象的）。provider 可以重写它来初始化密钥对生成器。如果参数不适合此密钥对生成器，这种重写将会抛出 InvalidAlgorithmParameterException。如果不重写此方法，它总是抛出 UnsupportedOperationException。

@param params 用于生成密钥的参数集合。

@param random 此生成器的随机源。

@exception InvalidAlgorithmParameterException 如果给定的参数不适合此密钥对生成器。

@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.security.KeyPair java.security.KeyPairGeneratorSpi.generateKeyPair()
<!-- END KEY -->
<!-- BEGIN DATA -->
生成密钥对。如果没有使用 KeyPairGenerator 接口调用初始化方法，则将使用特定于算法的默认值。每次调用此方法都将生成新的密钥对。

@return 新生成的 <tt>KeyPair</tt>

<!-- END DATA -->
