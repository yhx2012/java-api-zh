<!-- BEGIN KEY -->
public class java.security.DigestInputStream extends java.io.FilterInputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
使用通过流的位更新关联消息摘要的透明流。

<p>要完成消息摘要计算，先要调用此摘要输入流的一个 {@link #read() read} 方法，之后在关联的消息摘要上调用一个 <code>digest</code> 方法。

<p>开启或关闭此流都是可能的（请参见 {@link #on(boolean) on}）。开启时，调用 <code>read</code> 方法之一将导致消息摘要的更新。但是关闭时，不更新消息摘要。流在默认情况下是开启的。

<p>注意，摘要对象只能计算一个摘要（参见 {@link MessageDigest}），因此，为了计算中间摘要，调用者应该保留到摘要对象的句柄并为要计算的每一个摘要复制该对象，不改动原始摘要。

@see MessageDigest

@see DigestOutputStream

@version 1.37 03/12/19
@author Benjamin Renaud

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.security.MessageDigest java.security.DigestInputStream.digest
<!-- END KEY -->
<!-- BEGIN DATA -->
与此流关联的消息摘要。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.DigestInputStream(InputStream stream, MessageDigest digest)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的输入流和消息摘要创建一个摘要输入流。

@param stream 输入流。

@param digest 要与此流关联的消息摘要。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.MessageDigest java.security.DigestInputStream.getMessageDigest()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此流关联的消息摘要。

@return 与此流关联的消息摘要。
@see #setMessageDigest(java.security.MessageDigest)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.security.DigestInputStream.setMessageDigest(MessageDigest digest)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的消息摘要与此流相关联。

@param digest 要与此流关联的消息摘要。
@see #getMessageDigest()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.DigestInputStream.read() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
读取字节并更新消息摘要（如果开启了摘要功能）。即此方法从输入流读取字节，在实际读取字节前一直为阻塞状态。如果开启摘要功能（参见 {@link #on(boolean) on}），则此方法将在与此流关联的消息摘要上调用 <code>update</code>，将读取的字节传递给该方法。

@return 读取的字节。

@exception  IOException 如果发生 I/O 错误。


@see MessageDigest#update(byte)

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.DigestInputStream.read(byte[] b, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
读入 byte 数组并更新消息摘要（如果开启了摘要功能）。即此方法从输入流将至多 <code>len</code> 个字节读入数组 <code>b</code>，从偏移量 <code>off</code> 开始。此方法在实际读取数据前一直阻塞。如果开启摘要功能（参见 {@link #on(boolean) on}），则此方法将在与此流关联的消息摘要上调用 <code>update</code>，将数据传递给该方法。

@param b	从中读取数据的数组。

@param off <code>b</code> 中的偏移量，应将数据从此处开始放入数组。

@param len 从输入流读入 b 的最大字节数，从偏移量 <code>off</code> 开始。

@return     读取的实际字节数。如果在读取 <code>len</code> 个字节前到达了流的末尾，则其小于 <code>len</code>。如果因为进行调用时已经到达了流的末尾而没有读取任何字节，则返回 -1。

@exception  IOException 如果发生 I/O 错误。

@see MessageDigest#update(byte[], int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.security.DigestInputStream.on(boolean on)
<!-- END KEY -->
<!-- BEGIN DATA -->
开启或关闭摘要功能。默认为开启。开启时，调用 <code>read</code> 方法之一将导致消息摘要的更新。但是关闭时，不更新消息摘要。

@param on 为 true 表示开启摘要功能，为 false 表示关闭。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.DigestInputStream.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
打印此摘要输入流及其关联的消息摘要对象的字符串表示形式。

<!-- END DATA -->
