<!-- BEGIN KEY -->
public static final class java.security.KeyStore.PrivateKeyEntry extends java.lang.Object implements java.security.KeyStore.Entry
<!-- END KEY -->
<!-- BEGIN DATA -->
保存 <code>PrivateKey</code> 和相应证书链的 <code>KeyStore</code> 项。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyStore.PrivateKeyEntry(PrivateKey privateKey, java.security.cert.Certificate[] chain)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带 <code>PrivateKey</code> 和相应证书链的 <code>PrivateKeyEntry</code>。

<p> 在将指定的 <code>chain</code> 存储进新的 <code>PrivateKeyEntry</code> 对象前将其复制。

@param privateKey <code>PrivateKey</code>
@param chain 表示证书链的 <code>Certificate</code> 数组。证书链必须是有序的并且在索引 0 处包含与私钥相对应的 <code>Certificate</code>。

@exception NullPointerException 如果 <code>privateKey</code> 或 <code>chain</code> 为 <code>null</code>
@exception IllegalArgumentException 如果指定的证书链长度为 0、指定的证书链不包含相同类型的 <code>Certificate</code>、或者 <code>PrivateKey</code> 算法与在终端实体 <code>Certificate</code>（索引 0 处）中 <code>PublicKey</code> 的算法不匹配

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.PrivateKey java.security.KeyStore.PrivateKeyEntry.getPrivateKey()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此项获取 <code>PrivateKey</code>。

@return 此项中的 <code>PrivateKey</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.Certificate[] java.security.KeyStore.PrivateKeyEntry.getCertificateChain()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此项获取 <code>Certificate</code> 链。

<p> 存储的链在返回前被复制。

@return 与公钥的证书链相对应的 <code>Certificate</code> 数组。如果证书的类型是 X.509，返回数组的运行时类型是 <code>X509Certificate[]</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.Certificate java.security.KeyStore.PrivateKeyEntry.getCertificate()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此项中的证书链获取终端实体 <code>Certificate</code>。

@return 此项中证书链的终端实体 <code>Certificate</code>（索引 0 处）。如果证书的类型是 X.509，返回证书的运行时类型是 <code>X509Certificate</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.KeyStore.PrivateKeyEntry.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 PrivateKeyEntry 的字符串表示形式。
@return 此 PrivateKeyEntry 的字符串表示形式。

<!-- END DATA -->
