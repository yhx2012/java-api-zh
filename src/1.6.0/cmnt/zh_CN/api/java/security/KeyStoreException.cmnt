<!-- BEGIN KEY -->
public class java.security.KeyStoreException extends java.security.GeneralSecurityException
<!-- END KEY -->
<!-- BEGIN DATA -->
这是一般的 KeyStore 异常。 
 
@author Jan Luehe

@version 1.12, 12/19/03

@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyStoreException()
<!-- END KEY -->
<!-- BEGIN DATA -->

构造不带详细消息的 KeyStoreException。（详细消息是描述此特定异常的 String）。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyStoreException(String msg)
<!-- END KEY -->
<!-- BEGIN DATA -->

构造带指定详细消息的 KeyStoreException。（详细消息是描述此特定异常的 String）。

@param msg 详细消息。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyStoreException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定的详细消息和 cause 的 <code>KeyStoreException</code>。

@param message 详细消息（保存此消息，以便以后通过 {@link #getMessage()} 方法获取它）。
@param cause cause（保存此 cause，以便以后通过 {@link #getCause()} 方法获取它）。（允许 <tt>null</tt> 值，指出原因是不存在的或是未知的。）
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyStoreException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定 cause 和详细消息的 <code>KeyException</code>，详细消息是 <tt>(cause==null ? null :cause.toString())</tt>（它通常包含 <tt>cause</tt> 的类和详细消息）。

@param cause cause（保存此 cause，以便以后通过 {@link #getCause()} 方法获取它）。（允许 <tt>null</tt> 值，指出原因是不存在的或是未知的。）
@since 1.5

<!-- END DATA -->
