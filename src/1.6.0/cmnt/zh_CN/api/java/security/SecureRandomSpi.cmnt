<!-- BEGIN KEY -->
public abstract class java.security.SecureRandomSpi extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
此类为 <code>SecureRandom</code> 类定义了<i>服务提供者接口</i> (<b>SPI</b>)。此类中的所有抽象方法必须由这样的服务提供者来实现：该服务提供者希望提供加密的强伪随机数生成器的实现。

@version 1.13, 11/17/05

@see SecureRandom
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void java.security.SecureRandomSpi.engineSetSeed(byte[] seed)
<!-- END KEY -->
<!-- BEGIN DATA -->
重新提供此随机对象的种子。给定种子补充而不是取代现有的种子。因此，重复调用保证了始终不会降低随机性。

@param seed 种子。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void java.security.SecureRandomSpi.engineNextBytes(byte[] bytes)
<!-- END KEY -->
<!-- BEGIN DATA -->
生成用户指定的随机字节数。

 <p> 如果以前没有调用 <code>engineSetSeed</code>，则第一次调用此方法会强制将此 SecureRandom 实现设置为自身的种子。如果以前调用了 <code>engineSetSeed</code>，则不会发生此操作。
 
@param bytes 用随机字节填充的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract byte[] java.security.SecureRandomSpi.engineGenerateSeed(int numBytes)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定的种子字节数。此调用可用来作为其他随机数生成器的种子。

@param numBytes 将生成的种子字节的数量。
 
@return 种子字节。

<!-- END DATA -->
