<!-- BEGIN KEY -->
public interface java.io.Externalizable extends java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
Externalizable 实例类的唯一特性是可以被写入序列化流中，该类负责保存和恢复实例内容。

若某个要完全控制某一对象及其超类型的流格式和内容，则它要实现 Externalizable 接口的 writeExternal 和 readExternal 方法。这些方法必须显式与超类型进行协调以保存其状态。这些方法将代替定制的 writeObject 和 readObject 方法实现。<br>

Serialization 对象将使用 Serializable 和 Externalizable 接口。对象持久性机制也可以使用它们。要存储的每个对象都需要检测是否支持 Externalizable 接口。如果对象支持 Externalizable，则调用 writeExternal 方法。如果对象不支持 Externalizable 但实现了 Serializable，则使用 ObjectOutputStream 保存该对象。<br>在重构 Externalizable 对象时，先使用无参数的公共构造方法创建一个实例，然后调用 readExternal 方法。通过从 ObjectInputStream 中读取 Serializable 对象可以恢复这些对象。<br>

Externalizable 实例可以通过 Serializable 接口中记录的 writeReplace 和 readResolve 方法来指派一个替代对象。<br>

@author  unascribed
@version 1.19, 01/12/04
@see java.io.ObjectOutputStream
@see java.io.ObjectInputStream
@see java.io.ObjectOutput
@see java.io.ObjectInput
@see java.io.Serializable
@since   JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.Externalizable.writeExternal(ObjectOutput out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
对象可实现 writeExternal 方法以保存其内容，它可以通过调用 DataOutput 的方法来保存其基本值，或调用 ObjectOutput 的 writeObject 方法来保存对象、字符串和数组。

@serialData 重写方法时应使用该标记来描述此 Externalizable 对象的数据布局。列出元素类型的顺序，如有可能，将元素与某一公共/受保护字段和/或此 Externalizable 类的方法相关联。

@param out 要将对象写入的流
@exception IOException 包含可能发生的所有 I/O 异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.Externalizable.readExternal(ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
对象实现 readExternal 方法来恢复其内容，它通过调用 DataInput 的方法来恢复其基础类型，调用 readObject 来恢复对象、字符串和数组。readExternal 方法必须按照与 writeExternal 方法写入值时使用的相同顺序和类型来读取这些值。

@param in 为了恢复对象而从中读取数据的流
@exception IOException 如果发生 I/O 错误
@exception ClassNotFoundException 如果无法找到需要恢复的某个对象的类。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.Externalizable.readExternal(ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
对象实现 readExternal 方法来恢复其内容，它通过调用 DataInput 的方法来恢复其基础类型，调用 readObject 来恢复对象、字符串和数组。readExternal 方法必须按照与 writeExternal 方法写入值时使用的相同顺序和类型来读取这些值。

@param in 为了恢复对象而从中读取数据的流
@exception IOException 如果发生 I/O 错误
@exception ClassNotFoundException 如果无法找到需要恢复的某个对象的类。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.Externalizable.writeExternal(ObjectOutput out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
该对象可实现 writeExternal 方法来保存其内容，它可以通过调用 DataOutput 的方法来保存其基本值，或调用 ObjectOutput 的 writeObject 方法来保存对象、字符串和数组。

@serialData 重写方法时应使用该标记来描述此 Externalizable 对象的数据布局。列出元素类型的顺序，如有可能，将元素与某一公共/受保护字段和/或此 Externalizable 类的方法相关联。

@param out 要写入对象的流
@exception IOException 包含可能发生的所有 I/O 异常

<!-- END DATA -->
