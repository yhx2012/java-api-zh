<!-- BEGIN KEY -->
public class java.io.FileWriter extends java.io.OutputStreamWriter
<!-- END KEY -->
<!-- BEGIN DATA -->
用来写入字符文件的便捷类。此类的构造方法假定默认字符编码和默认字节缓冲区大小都是可接受的。要自己指定这些值，可以先在 FileOutputStream 上构造一个 OutputStreamWriter。

<p>文件是否可用或是否可以被创建取决于底层平台。特别是某些平台一次只允许一个 <tt>FileWriter</tt>（或其他文件写入对象）打开文件进行写入。在这种情况下，如果所涉及的文件已经打开，则此类中的构造方法将失败。

<p><code>FileWriter</code> 用于写入字符流。要写入原始字节流，请考虑使用 <code>FileOutputStream</code>。

@see OutputStreamWriter
@see FileOutputStream

@version 	1.18, 03/12/19
@author	Mark Reinhold
@since	JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.FileWriter(String fileName) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的文件名构造一个 FileWriter 对象。

@param fileName  一个字符串，表示与系统有关的文件名。
@throws IOException 如果指定文件存在，但它是一个目录，而不是一个常规文件；或者该文件不存在，但无法创建它；抑或因为其他某些原因而无法打开它

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.FileWriter(String fileName, boolean append) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的文件名以及指示是否附加写入数据的 boolean 值来构造 FileWriter 对象。

@param fileName  一个字符串，表示与系统有关的文件名。
@param append   一个 boolean 值，如果为 <code>true</code>，则将数据写入文件末尾处，而不是写入文件开始处。
@throws IOException 如果指定文件存在，但它是一个目录，而不是一个常规文件；或者该文件不存在，但无法创建它；抑或因为其他某些原因而无法打开它

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.FileWriter(File file) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的 File 对象构造一个 FileWriter 对象。

@param file  要写入数据的 File 对象。
@throws IOException 如果该文件存在，但它是一个目录，而不是一个常规文件；或者该文件不存在，但无法创建它；抑或因为其他某些原因而无法打开它

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.FileWriter(File file, boolean append) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的 File 对象构造一个 FileWriter 对象。如果第二个参数为 <code>true</code>，则将字节写入文件末尾处，而不是写入文件开始处。

@param     file        要写入数据的 File 对象
@param     append      如果为 <code>true</code>，则将字节写入文件末尾处，而不是写入文件开始处
@throws IOException  如果该文件存在，但它是一个目录，而不是一个常规文件；或者该文件不存在，但无法创建它；抑或因为其他某些原因而无法打开它
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.FileWriter(FileDescriptor fd)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造与某个文件描述符相关联的 FileWriter 对象。

@param fd  要写入数据的 FileDescriptor 对象。

<!-- END DATA -->
