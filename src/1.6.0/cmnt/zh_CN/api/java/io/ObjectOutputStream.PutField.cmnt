<!-- BEGIN KEY -->
public abstract static class java.io.ObjectOutputStream.PutField extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
提供对要写入 ObjectOutput 的持久字段的编程访问。

@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, boolean val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 boolean 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>boolean</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, byte val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 byte 字段值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>byte</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, char val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 char 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>char</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, short val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 short 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>short</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, int val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 int 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>int</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, long val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 long 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>long</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, float val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 float 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>float</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, double val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 double 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是 <code>double</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.put(String name, Object val)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的 Object 字段的值置于持久字段中。

@param  name 可序列化字段的名称
@param  val 将分配给字段的值（该值可能为 <code>null</code>）
@throws IllegalArgumentException 如果 <code>name</code> 与该类（其字段正被写入）的可序列化字段的名称不匹配，或者指定字段的类型不是引用类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.io.ObjectOutputStream.PutField.write(ObjectOutput out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将数据和字段写入指定的 ObjectOutput 流，该流必须与生成此 <code>PutField</code> 对象的流相同。
 
@param  out 将写入数据和字段的流
@throws IOException 如果写入底层流时发生 I/O 错误
@throws IllegalArgumentException 如果指定的流与生成此 <code>PutField</code> 对象的流不同
@deprecated 此方法不能以正确格式写入 <code>PutField</code> 对象中包含的值，并且可能导致序列化流的损坏。写入 <code>PutField</code> 数据的正确方法是调用 {@link java.io.ObjectOutputStream#writeFields()} 方法。

<!-- END DATA -->
