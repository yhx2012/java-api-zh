<!-- BEGIN KEY -->
public final class java.io.SerializablePermission extends java.security.BasicPermission
<!-- END KEY -->
<!-- BEGIN DATA -->
此类用于可序列化权限。SerializablePermission 包含一个名称（也称为&ldquo;目标名称&rdquo;），但没有动作列表；可以使用，也可以不使用指定权限。

 <P>
目标名称是可序列化权限的名称（参见下面内容）。

 <P>
下表列出了所有可能的 SerializablePermission 目标名称，并描述了每个名称允许何种权限，还讨论了授权代码权限的风险。
 <P>

 <table border=1 cellpadding=5 summary="Permission target name, what the permission allows, and associated risks">
 <tr>
<th>权限目标名称</th>
<th>允许的权限</th>
<th>允许此权限所带来的风险</th>
 </tr>

 <tr>
   <td>enableSubclassImplementation</td>
<td>ObjectOutputStream 或 ObjectInputStream 的子类实现，可分别重写对象的默认序列化或反序列化</td>
<td>代码可以使用此实现以恶意方式序列化或反序列化类。例如，在序列化过程中，恶意代码可以使用此实现以易于攻击者访问的方式有目的地存储保密的私有字段数据。同样，在反序列化过程中，它可以反序列化一个类，并将其所有私有字段归零。</td>
 </tr>

 <tr>
<td>enableSubstitution</td>
<td>在序列化或反序列化过程中用一个对象替代另一对象</td>
<td>这可能存在危险，因为恶意代码可以将实际对象替换为具有错误或恶意数据的对象。</td>
 </tr>

 </table>

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

@version 1.23, 04/21/06

@author Joe Fialli
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.io.SerializablePermission.actions
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.SerializablePermission(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定名称的新 SerializablePermission。该名称是 SerializablePermission 的符号名，如&ldquo;enableSubstitution&rdquo;等。

@param name SerializablePermission 的名称。

@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.SerializablePermission(String name, String actions)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定名称的新 SerializablePermission 对象。此名称是 SerializablePermission 的符号名，而目前不使用动作 String，该字符串应该为 null。

@param name SerializablePermission 的名称。
@param actions 目前不使用而且必须设置为 null

@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
