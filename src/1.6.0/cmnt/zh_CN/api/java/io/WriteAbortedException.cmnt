<!-- BEGIN KEY -->
public class java.io.WriteAbortedException extends java.io.ObjectStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
在写入操作过程中抛出 ObjectStreamException 之一的信号。在写入操作过程中抛出 ObjectStreamExceptions 之一时，在读取操作过程中将抛出此异常。终止写入的异常可在详细信息字段中找到。该流被重置为初始状态，而且对已经反序列化的对象的所有引用都被丢弃。

<p>从版本 1.4 开始，已对此异常作出改进，以符合通用异常链机制。在构造时提供并通过公共 {@link #detail} 字段访问的“导致中止的异常”现在称为 <i>cause</i>，并可通过 {@link Throwable#getCause()} 方法以及前述的“遗留字段”访问。

@author  unascribed
@version 1.18, 12/19/03
@since   JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception java.io.WriteAbortedException.detail
<!-- END KEY -->
<!-- BEGIN DATA -->
在写入 ObjectStream 时捕获的异常。

<p>此字段早于通用异常链设施。{@link Throwable#getCause()} 方法现在是获得此信息的首选方法。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.WriteAbortedException(String s, Exception ex)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用描述该异常的字符串和导致中止的异常构造一个 WriteAbortedException。
@param s   描述该异常的字符串。
@param ex  导致中止的异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.io.WriteAbortedException.getMessage()
<!-- END KEY -->
<!-- BEGIN DATA -->
生成此消息并包括嵌入异常的消息（如果有）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable java.io.WriteAbortedException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回终止操作的异常（即 <i>cause</i>）。

@return  终止操作的异常（即 <i>cause</i>），可能为 null。
@since   1.4

<!-- END DATA -->
