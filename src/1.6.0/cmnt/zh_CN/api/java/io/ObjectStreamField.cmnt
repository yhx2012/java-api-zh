<!-- BEGIN KEY -->
public class java.io.ObjectStreamField extends java.lang.Object implements java.lang.Comparable
<!-- END KEY -->
<!-- BEGIN DATA -->
Serializable 类中 Serializable 字段的描述。ObjectStreamField 的数组用于声明类的 Serializable 字段。

@author	Mike Warres
@author	Roger Riggs
@version 1.45, 04/05/05
@see ObjectStreamClass
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.ObjectStreamField(String name, java.lang.Class<?> type)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定类型的 Serializable 字段。此字段应该使用 <code>serialField</code> 标记记录。 

@param	name 可序列化字段的名称
@param	type 可序列化字段的 <code>Class</code> 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.ObjectStreamField(String name, java.lang.Class<?> type, boolean unshared)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个 ObjectStreamField，表示给定名称和类型的可序列化字段。如果未共享为 false，则以默认方式序列化和反序列化所表示字段的值；如果字段为非基本类型，则像通过调用 writeObject 和 readObject 读写对象值那样序列化和反序列化它们。如果未共享为 true，则像通过调用 writeUnshared 和 readUnshared 读写所表示字段的值那样序列化和反序列化它们。

@param   name 字段名称
@param   type 字段类型
@param   unshared 如果为 false，则以与 writeObject/readObject 相同的方式读/写字段值；如果为 true，则以与 writeUnshared/readUnshared 相同的方式进行读/写
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.io.ObjectStreamField.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此字段的名称。

@return	表示可序列化字段名称的 <code>String</code> 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Class<?> java.io.ObjectStreamField.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取字段的类型。如果类型为非基本类型且此 <code>ObjectStreamField</code> 是从反序列化的 {@link ObjectStreamClass} 实例中获取的，则返回 <code>Object.class</code>。否则，返回字段类型的 <code>Class</code> 对象。

@return	表示可序列化字段类型的 <code>Class</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public char java.io.ObjectStreamField.getTypeCode()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回字段类型的字符编码。编码如下：
 <blockquote><pre>
 B            byte
 C            char
 D            double
 F            float
 I            int
 J            long
 L            class or interface
 S            short
 Z            boolean
 [            array
 </pre></blockquote>

@return	可序列化字段的类型代码

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.io.ObjectStreamField.getTypeString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 JVM 类型签名。

@return	如果此字段为基本类型，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.io.ObjectStreamField.getOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
实例数据中字段的偏移量。

@return	此字段的偏移量
@see #setOffset

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.io.ObjectStreamField.setOffset(int offset)
<!-- END KEY -->
<!-- BEGIN DATA -->

实例数据中的偏移量。

@param	offset 字段的偏移量
@see #getOffset

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.io.ObjectStreamField.isPrimitive()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此字段为基本类型，则返回 true。

@return	当且仅当此字段对应于基本类型时返回 true

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.io.ObjectStreamField.isUnshared()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 boolean 值，指示由 ObjectStreamField 实例所表示的可序列化字段是否未共享。
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.io.ObjectStreamField.compareTo(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此字段与另一个 <code>ObjectStreamField</code> 进行比较。如果此字段较小则返回 -1，如果相等则返回 0，如果较大则返回 1。基本类型&ldquo;小于&rdquo;对象类型。如果相等，则比较字段名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.io.ObjectStreamField.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回描述此字段的字符串。

<!-- END DATA -->
