<!-- BEGIN KEY -->
public class java.awt.print.Book extends java.lang.Object implements java.awt.print.Pageable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Book</code> 类提供文档的表示形式，该文档的页面可以使用不同的页面格式和页面 painter。此类使用 {@link Pageable} 接口与 {@link PrinterJob} 交互。
@see Pageable
@see PrinterJob 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.print.Book()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的空 <code>Book</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.print.Book.getNumberOfPages()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>Book</code> 中的页数。
@return 此 <code>Book</code> 包含的页数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.print.PageFormat java.awt.print.Book.getPageFormat(int pageIndex) throws java.lang.IndexOutOfBoundsException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>pageIndex</code> 指定的页面的 {@link PageFormat}。
@param pageIndex 其 <code>PageFormat</code> 正被请求的页面基于零的索引
@return 描述页面大小和方向的 <code>PageFormat</code>。
@throws IndexOutOfBoundsException 如果 <code>Pageable</code> 不包含请求的页面 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.print.Printable java.awt.print.Book.getPrintable(int pageIndex) throws java.lang.IndexOutOfBoundsException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@link Printable} 实例，该实例负责呈现 <code>pageIndex</code> 指定的页面。
@param pageIndex 其 <code>Printable</code> 正被请求的页面基于零的索引
@return 呈现该页面的 <code>Printable</code>。
@throws IndexOutOfBoundsException 如果 <code>Pageable</code> 不包含请求的页面 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.print.Book.setPage(int pageIndex, Printable painter, PageFormat page) throws java.lang.IndexOutOfBoundsException
<!-- END KEY -->
<!-- BEGIN DATA -->
为指定的页码设置 <code>PageFormat</code> 和 <code>Painter</code>。
@param pageIndex 其 painter 和格式要更改的页面基于零的索引
@param painter   呈现页面的 <code>Printable</code> 实例
@param page 页面的大小和方向
@throws IndexOutOfBoundsException 如果指定的页面在此 <code>Book</code> 中不存在
@throws NullPointerException 如果 <code>painter</code> 或 <code>page</code> 参数为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.print.Book.append(Printable painter, PageFormat page)
<!-- END KEY -->
<!-- BEGIN DATA -->
将单个页面追加到此 <code>Book</code> 的尾部。
@param painter  呈现页面的 <code>Printable</code> 实例
@param page  页面的大小和方向
@throws <code>NullPointerException</code> 如果 <code>painter</code> 或 <code>page</code> 参数为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.print.Book.append(Printable painter, PageFormat page, int numPages)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>numPages</code> 个页面追加到此 <code>Book</code> 的尾部。每个页面都与 <code>page</code> 有关。
@param painter  呈现页面的 <code>Printable</code> 实例
@param page  页面的大小和方向
@param numPages  要添加到此 <code>Book</code> 的页面数。
@throws <code>NullPointerException</code> 如果 <code>painter</code> 或 <code>page</code> 参数为 <code>null</code>

<!-- END DATA -->
