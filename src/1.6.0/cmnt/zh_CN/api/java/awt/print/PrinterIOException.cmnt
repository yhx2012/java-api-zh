<!-- BEGIN KEY -->
public class java.awt.print.PrinterIOException extends java.awt.print.PrinterException
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>PrinterIOException</code> 类是 {@link PrinterException} 的子类，用于指示在打印过程中发生了某种 IO 错误。

<p>从 1.4 版本开始，此异常已经改进，以符合通用异常链机制。在构造时提供并通过 {@link #getIOException()} 方法访问的&ldquo;终止打印作业的 <code>IOException</code>&rdquo;就是目前所说的 <i>cause</i>，可以通过 {@link Throwable#getCause()} 方法以及上述&ldquo;遗留方法&rdquo;访问它。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.io.IOException java.awt.print.PrinterIOException.mException
<!-- END KEY -->
<!-- BEGIN DATA -->
终止打印作业的 IO 错误。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.print.PrinterIOException(IOException exception)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有指定 {@link IOException} 字符串表示形式的新 <code>PrinterIOException</code>。
@param exception 指定的 <code>IOException</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.IOException java.awt.print.PrinterIOException.getIOException()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回终止打印作业的 <code>IOException</code>。

<p>这是通用异常链设施之前的方法。现在 {@link Throwable#getCause()} 方法是获得此信息的首选方法。

@return 终止打印作业的 <code>IOException</code>。
@see IOException

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable java.awt.print.PrinterIOException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此异常的 cause（终止打印作业的 <code>IOException</code>）。

@return  此异常的 cause。
@since   1.4

<!-- END DATA -->
