<!-- BEGIN KEY -->
public final class java.awt.font.GlyphJustificationInfo extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>GlyphJustificationInfo</code> 类表示关于字形调整属性的信息。字形是一个或多个字符的视觉表示形式。可以使用多个不同的字形来表示单个字符或字符组合。<code>GlyphJustificationInfo</code> 表示的四个调整属性为 weight、priority、absorb 和 limit。
 <p>
Weight 是行中字形的总&ldquo;权重&rdquo;。通常它与字体的大小成正比。较大 weight 的字形相应分配较大的空间改变量。
 <p>
Priority 确定此字形使用的调整阶段。检查下一 priority 的字形前先检查同一 priority 的所有字形。如果可以将所有的空间更改都分配给这些字形而不超出该字形的界限，则不检查具有下一个 priority 的字形。有四种 priority 属性：kashida、whitespace、interchar 和 none。KASHIDA 是第一个被检查的 priority。NONE 是最后一个被检查的 priority。
 <p>
Absorb 确定字形是否占有所有的空间更改。在给定的 priority 内，某些字形可能占有所有的空间更改。如果存在这些字形，则不检查具有较低 priority 的字形。
 <p>
Limit 确定该字形可以更改的最大量或最小量。该字形的左边和右边可以具有不同的 limit。
 <p>
每个 <code>GlyphJustificationInfo</code> 表示两组规格，它们是<i>增大</i> 和<i>缩小</i>。当行上的字形要散开，以放入较大的宽度时，请使用增大规格。当这些字形要向集中移动，以适合较小的宽度时，请使用缩小规格。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.font.GlyphJustificationInfo.PRIORITY_KASHIDA
<!-- END KEY -->
<!-- BEGIN DATA -->
最高调整 priority。
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.font.GlyphJustificationInfo.PRIORITY_WHITESPACE
<!-- END KEY -->
<!-- BEGIN DATA -->
次高调整 priority。
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.font.GlyphJustificationInfo.PRIORITY_INTERCHAR
<!-- END KEY -->
<!-- BEGIN DATA -->
次低调整 priority。
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.font.GlyphJustificationInfo.PRIORITY_NONE
<!-- END KEY -->
<!-- BEGIN DATA -->
最低调整 priority。
<!-- END DATA -->
<!-- BEGIN KEY -->
public final float java.awt.font.GlyphJustificationInfo.weight
<!-- END KEY -->
<!-- BEGIN DATA -->
此字形的 weight。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.awt.font.GlyphJustificationInfo.growPriority
<!-- END KEY -->
<!-- BEGIN DATA -->
此字形增大时的 priority 级别。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final boolean java.awt.font.GlyphJustificationInfo.growAbsorb
<!-- END KEY -->
<!-- BEGIN DATA -->
如果为 <code>true</code>，那么当此字形增大时，它会占有此 priority 和更低 priority 的所有额外空间。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final float java.awt.font.GlyphJustificationInfo.growLeftLimit
<!-- END KEY -->
<!-- BEGIN DATA -->
此字形左边可以增大的最大量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final float java.awt.font.GlyphJustificationInfo.growRightLimit
<!-- END KEY -->
<!-- BEGIN DATA -->
此字形右边可以增大的最大量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.awt.font.GlyphJustificationInfo.shrinkPriority
<!-- END KEY -->
<!-- BEGIN DATA -->
此字形缩小时的 priority 级别。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final boolean java.awt.font.GlyphJustificationInfo.shrinkAbsorb
<!-- END KEY -->
<!-- BEGIN DATA -->
如果为 <code>true</code>，那么当此字形缩小时，它会占有此 priority 和更低 priority 的所有剩余收缩量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final float java.awt.font.GlyphJustificationInfo.shrinkLeftLimit
<!-- END KEY -->
<!-- BEGIN DATA -->
此字形左边可以收缩的最大量（一个正数）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final float java.awt.font.GlyphJustificationInfo.shrinkRightLimit
<!-- END KEY -->
<!-- BEGIN DATA -->
此字形右边可以收缩的最大量（一个正数）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.font.GlyphJustificationInfo(float weight, boolean growAbsorb, int growPriority, float growLeftLimit, float growRightLimit, boolean shrinkAbsorb, int shrinkPriority, float shrinkLeftLimit, float shrinkRightLimit)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造有关字形调整属性的信息。
@param weight 分配空间时，此字形的权重。必须为非负数。
@param growAbsorb 如果为 <code>true</code>，那么当此字形增大时，它会占有此 priority 和较低 priority 的所有额外空间
@param growPriority 此字形增大时的 priority 级别
@param growLeftLimit 此字形左边可以增大的最大量。必须为非负数。
@param growRightLimit 此字形右边可以增大的最大量。必须为非负数。
@param shrinkAbsorb 如果为 <code>true</code>，那么当此字形缩小时，它会占有此 priority 和较低 priority 的所有剩余缩小量
@param shrinkPriority 此字形缩小时的 priority 级别
@param shrinkLeftLimit 此字形左边可以缩小的最大量。必须为非负数。
@param shrinkRightLimit 此字形右边可以缩小的最大量。必须为非负数。

<!-- END DATA -->
