<!-- BEGIN KEY -->
public final class java.awt.font.ImageGraphicAttribute extends java.awt.font.GraphicAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>ImageGraphicAttribute</code> 类是在 {@link TextLayout} 中绘制图像的 {@link GraphicAttribute} 实现。
@see GraphicAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.font.ImageGraphicAttribute(Image image, int alignment)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据指定的 {@link Image} 构造一个 <code>ImageGraphicAttribute</code>。原点位于 (0,&nbsp;0)。
@param image 此 <code>ImageGraphicAttribute</code> 呈现的 <code>Image</code>。此对象保持对 <code>image</code> 的引用。
@param alignment 此 <code>ImageGraphicAttribute</code> 的一种对齐方式。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.font.ImageGraphicAttribute(Image image, int alignment, float originX, float originY)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据指定的 <code>Image</code> 构造一个 <code>ImageGraphicAttribute</code>。<code>Image</code> 中的点 (<code>originX</code>,&nbsp;<code>originY</code>) 出现在文本中 <code>ImageGraphicAttribute</code> 的原点。
@param image 此 <code>ImageGraphicAttribute</code> 呈现的 <code>Image</code>。此对象保持对 <code>image</code> 的引用。
@param alignment 此 <code>ImageGraphicAttribute</code> 的一种对齐方式
@param originX <code>Image</code> 中点的 X 坐标，该点显示在文本行中 <code>ImageGraphicAttribute</code> 的原点位置上。
@param originY <code>Image</code> 中点的 Y 坐标，该点显示在文本行中 <code>ImageGraphicAttribute</code> 的原点位置上。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.font.ImageGraphicAttribute.getAscent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>ImageGraphicAttribute</code> 的 ascent。<code>ImageGraphicAttribute</code> 的 ascent 是从该图像的顶端到原点的距离。
@return 此 <code>ImageGraphicAttribute</code> 的 ascent。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.font.ImageGraphicAttribute.getDescent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>ImageGraphicAttribute</code> 的 descent。<code>ImageGraphicAttribute</code> 的 descent 是从原点到该图像底部的距离。
@return 此 <code>ImageGraphicAttribute</code> 的 descent。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.font.ImageGraphicAttribute.getAdvance()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>ImageGraphicAttribute</code> 的 advance。<code>ImageGraphicAttribute</code> 的 advance 是从原点到该图像右边缘的距离。
@return 此 <code>ImageGraphicAttribute</code> 的 advance。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.Rectangle2D java.awt.font.ImageGraphicAttribute.getBounds()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 {@link Rectangle2D}，它封装此 <code>ImageGraphicAttribute</code> 相对于呈现位置呈现的所有位。图形可以在其原点、ascent、descent 和 advance 之外呈现；但如果这样做,此方法的实现必须指示呈现该图形的位置。
@return 封装此 <code>ImageGraphicAttribute</code> 呈现的所有位的 <code>Rectangle2D</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.font.ImageGraphicAttribute.draw(Graphics2D graphics, float x, float y)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.font.ImageGraphicAttribute.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>ImageGraphicAttribute</code> 的哈希码。
@return  此对象的哈希码值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.font.ImageGraphicAttribute.equals(Object rhs)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较此 <code>ImageGraphicAttribute</code> 与指定的 {@link Object}。
@param rhs 要测试相等性的 <code>Object</code>
@return 如果此 <code>ImageGraphicAttribute</code> 与 <code>rhs</code> 相等，则返回 <code>true</code>；否则返回 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.font.ImageGraphicAttribute.equals(ImageGraphicAttribute rhs)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较此 <code>ImageGraphicAttribute</code> 与指定的 <code>ImageGraphicAttribute</code>。
@param rhs 要测试相等性的 <code>ImageGraphicAttribute</code>
@return 如果此 <code>ImageGraphicAttribute</code> 与 <code>rhs</code> 相等，则返回 <code>true</code>；否则返回 <code>false</code>。

<!-- END DATA -->
