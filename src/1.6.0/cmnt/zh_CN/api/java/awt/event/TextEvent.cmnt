<!-- BEGIN KEY -->
public class java.awt.event.TextEvent extends java.awt.AWTEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
指示对象文本已改变的语义事件。当某个对象（如 TextComponent）的文本改变时，该对象将生成此高级别事件。该事件被传递给每一个使用组件的 <code>addTextListener</code> 方法注册以接收这种事件的 <code>TextListener</code> 对象。 
 <P>
事件发生时，实现 <code>TextListener</code> 接口的对象获得此 <code>TextEvent</code>。侦听器不必考虑个别鼠标移动和击键的细节，而是可以处理像&ldquo;文本改变&rdquo;这样的&ldquo;有意义&rdquo;（语义）事件。 

@author Georges Saab
@version 1.16 12/19/03

@see java.awt.TextComponent
@see TextListener
@see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/textlistener.html">Tutorial: Writing a Text Listener</a>


@since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.TextEvent.TEXT_FIRST
<!-- END KEY -->
<!-- BEGIN DATA -->
用于文本事件的 id 范围的起始编号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.TextEvent.TEXT_LAST
<!-- END KEY -->
<!-- BEGIN DATA -->
用于文本事件的 id 范围的结束编号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.TextEvent.TEXT_VALUE_CHANGED
<!-- END KEY -->
<!-- BEGIN DATA -->
此事件 id 指示对象的文本已改变。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.TextEvent(Object source, int id)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>TextEvent</code> 对象。
<p>注意，传递无效的 <code>id</code> 会导致不明确的行为。如果 <code>source</code> 为 <code>null</code>，则此方法抛出 <code>IllegalArgumentException</code>。

@param source 产生该事件的（<code>TextComponent</code>）对象
@param id  标识事件类型的整数
@throws IllegalArgumentException 如果 <code>source</code> 为 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.event.TextEvent.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回标识此文本事件的参数字符串。此方法对于事件记录和调试很有用。

@return 标识事件及其属性的字符串

<!-- END DATA -->
