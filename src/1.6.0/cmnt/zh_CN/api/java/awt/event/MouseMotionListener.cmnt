<!-- BEGIN KEY -->
public interface java.awt.event.MouseMotionListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
用于接收组件上的鼠标移动事件的侦听器接口。（对于单击和其他鼠标事件，请使用 <code>MouseListener</code>。）
 <P>
旨在处理鼠标移动事件的类要么实现此接口（及其包含的所有方法），要么扩展抽象 <code>MouseMotionAdapter</code> 类（仅重写有用的方法）。
 <P>
然后使用组件的 <code>addMouseMotionListener</code> 方法将从该类所创建的侦听器对象向该组件注册。移动或拖动鼠标时会生成鼠标移动事件。（将生成很多此类事件）。发生鼠标移动事件时，将调用该侦听器对象中的相应方法，并将 <code>MouseEvent</code> 传递给该方法。

@author Amy Fowler
@version 1.15, 12/19/03

@see MouseMotionAdapter
@see MouseEvent
@see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/mousemotionlistener.html">Tutorial: Writing a Mouse Motion Listener</a>


@since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.MouseMotionListener.mouseDragged(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标按键在组件上按下并拖动时调用。在释放鼠标按键前，<code>MOUSE_DRAGGED</code> 事件被连续地传递到发起该拖动的组件（而不管鼠标位置是否处于该组件的边界内）。
 <p> 
由于拖放实现是与平台相关的，所以在本机拖放操作期间可能不传递 <code>MOUSE_DRAGGED</code> 事件。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.MouseMotionListener.mouseMoved(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标光标移动到组件上但无按键按下时调用。

<!-- END DATA -->
