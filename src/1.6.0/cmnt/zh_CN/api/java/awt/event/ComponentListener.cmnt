<!-- BEGIN KEY -->
public interface java.awt.event.ComponentListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
用于接收组件事件的侦听器接口。对处理组件事件感兴趣的类要么实现此接口（以及它包含的所有方法），要么扩展抽象 <code>ComponentAdapter</code> 类（只重写感兴趣的方法）。然后，根据该类创建的侦听器对象使用组件的 <code>addComponentListener</code> 方法向该组件注册。当组件的大小、位置或可见性发生更改时，可调用侦听器对象中的相关方法，并将 <code>ComponentEvent</code> 传递给它。
 <P>
这些组件事件&ldquo;仅&rdquo;为通知目的而提供；AWT 将自动内部处理组件移动和调整大小，使 GUI 布局正常工作，而不管程序是否注册了一个 <code>ComponentListener</code>。

@see ComponentAdapter
@see ComponentEvent
@see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/componentlistener.html">Tutorial: Writing a Component Listener</a>


@author Carl Quinn
@version 1.16 12/19/03
@since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.ComponentListener.componentResized(ComponentEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
组件大小更改时调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.ComponentListener.componentMoved(ComponentEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
组件位置更改时调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.ComponentListener.componentShown(ComponentEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
组件变得可见时调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.ComponentListener.componentHidden(ComponentEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
组件变得不可见时调用。

<!-- END DATA -->
