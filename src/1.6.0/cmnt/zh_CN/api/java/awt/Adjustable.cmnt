<!-- BEGIN KEY -->
public interface java.awt.Adjustable
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口用于那些具有可调整数值的对象，数值应包含在有限范围的值之内。

@version 1.18 12/19/03
@author Amy Fowler
@author Tim Prinzing

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Adjustable.HORIZONTAL
<!-- END KEY -->
<!-- BEGIN DATA -->
指示 <code>Adjustable</code> 具有水平方向。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Adjustable.VERTICAL
<!-- END KEY -->
<!-- BEGIN DATA -->
指示 <code>Adjustable</code> 具有垂直方向。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Adjustable.NO_ORIENTATION
<!-- END KEY -->
<!-- BEGIN DATA -->
指示 <code>Adjustable</code> 不具有方向。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getOrientation()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此可调整对象的方向。
@return 可调整对象的方向；可以是 <code>HORIZONTAL</code>、<code>VERTICAL</code> 或者 <code>NO_ORIENTATION</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setMinimum(int min)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置可调整对象的最小值。
@param min 最小值

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getMinimum()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取可调整对象的最小值。
@return 可调整对象的最小值

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setMaximum(int max)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置可调整对象的最大值。
@param max 最大值

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getMaximum()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取可调整对象的最大值。
@return 可调整对象的最大值

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setUnitIncrement(int u)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置可调整对象的单位值增量。
@param u 单位增量

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getUnitIncrement()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取可调整对象的单位值增量。
@return 可调整对象的单位值增量

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setBlockIncrement(int b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置可调整对象的块值增量。
@param b 块值增量

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getBlockIncrement()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取可调整对象的块值增量。
@return 可调整对象的块值增量

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setVisibleAmount(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置可调整对象的比例指示器的长度。
@param v 指示器的长度

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getVisibleAmount()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取比例指示器的长度。
@return 比例指示器的长度

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setValue(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置可调整对象的当前值。如果提供的值小于 <code>minimum</code> 或者大于 <code>maximum</code> - <code>visibleAmount</code>，则适当地替换其中一个值。
 <p>
调用此方法不会激发 <code>AdjustmentEvent</code>。 

@param v 当前值，它位于 <code>minimum</code> 和 <code>maximum</code> - <code>visibleAmount</code> 之间

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取可调整对象的当前值。
@return 可调整对象的当前值

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.addAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
添加侦听器，以便在可调整对象的值更改时接收调整事件。
@param l 接受事件的侦听器
@see AdjustmentEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.removeAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
移除一个调整侦听器。
@param l 要移除的侦听器
@see AdjustmentEvent

<!-- END DATA -->
