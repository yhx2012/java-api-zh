<!-- BEGIN KEY -->
public class java.awt.ScrollPaneAdjustable extends java.lang.Object implements java.awt.Adjustable, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
此类表示 <code>ScrollPane</code> 的水平或垂直滚动条的状态。<code>ScrollPane</code> 方法返回此类的对象。

@version     1.11 07/11/06
@since	1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.awt.ScrollPane java.awt.ScrollPaneAdjustable.sp
<!-- END KEY -->
<!-- BEGIN DATA -->
此对象是其滚动条的 <code>ScrollPane</code>。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.orientation
<!-- END KEY -->
<!-- BEGIN DATA -->
此滚动条的方向。

@serial
@see #getOrientation
@see java.awt.Adjustable#HORIZONTAL
@see java.awt.Adjustable#VERTICAL

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.value
<!-- END KEY -->
<!-- BEGIN DATA -->
此滚动条的值。<code>value</code> 应该大于 <code>minimum</code> 且小于 <code>maximum</code>
 
@serial
@see #getValue
@see #setValue

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.minimum
<!-- END KEY -->
<!-- BEGIN DATA -->
此滚动条的最小值。只能通过 <code>ScrollPane</code> 设置此值。
 <p>
<strong>ATTN：</strong> 在当前实现中，<code>minimum</code> 总是为 <code>0</code>。只能通过 <code>setSpan</code> 方法更改此字段，并且 <code>ScrollPane</code> 总是调用 minimum 为 <code>0</code> 的此方法。<code>getMinimum</code> 方法总是返回 <code>0</code> 而不检查此字段。
 
@serial
@see #getMinimum
@see #setSpan(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.maximum
<!-- END KEY -->
<!-- BEGIN DATA -->
此滚动条的最大值。只能通过 <code>ScrollPane</code> 设置此值。

@serial
@see #getMaximum
@see #setSpan(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.visibleAmount
<!-- END KEY -->
<!-- BEGIN DATA -->
此滚动条可视部分的大小。只能通过 <code>ScrollPane</code> 设置此值。
 
@serial
@see #getVisibleAmount
@see #setSpan(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.unitIncrement
<!-- END KEY -->
<!-- BEGIN DATA -->
当滚动条向上或向下移动一行时，滚动条值更改的量。该值应该是一个非负整数。

@serial
@see #getUnitIncrement
@see #setUnitIncrement

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.blockIncrement
<!-- END KEY -->
<!-- BEGIN DATA -->
当滚动条向上或向下移动一页时，滚动条值更改的量。该值应该是一个非负整数。

@serial
@see #getBlockIncrement
@see #setBlockIncrement

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.ScrollPaneAdjustable.getOrientation()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此滚动条的方向。
@return    此滚动条的方向，可以是 <code>Adjustable.HORIZONTAL</code> 或 <code>Adjustable.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setMinimum(int min)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法<strong>不</strong>应由用户代码调用。此方法对于正确实现 <code>Adjustable</code> 接口的类是公用的。

@throws <code>AWTError</code>  调用时总是抛出一个错误。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setMaximum(int max)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法<strong>不</strong>应由用户代码调用。此方法对于正确实现 <code>Adjustable</code> 接口的类是公用的。

@throws <code>AWTError</code>  调用时总是抛出一个错误。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setVisibleAmount(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法<strong>不</strong>应由用户代码调用。此方法对于正确实现 <code>Adjustable</code> 接口的类是公用的。

@throws <code>AWTError</code>  调用时总是抛出一个错误。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setValueIsAdjusting(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 <code>valueIsAdjusting</code> 属性。
 
@param b 新的调整正处于进行状态
@see #getValueIsAdjusting
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.ScrollPaneAdjustable.getValueIsAdjusting()
<!-- END KEY -->
<!-- BEGIN DATA -->
当作为用户所采用操作的结果的值正处于更改过程中时，返回 true。

@return <code>valueIsAdjusting</code> 属性的值
@see #setValueIsAdjusting

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setValue(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此滚动条的值设置为指定值。
 <p>
如果提供的值小于当前最小值或大于当前最大值，则适当地替换其中的一个值。

@param v 滚动条的新值

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.ScrollPaneAdjustable.addAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
添加指定的调整侦听器，以接收发自此 <code>ScrollPaneAdjustable</code> 的调整事件。如果 <code>l</code> 为 <code>null</code>，则不抛出异常，也不执行任何动作。
<p>有关 AWT 的线程模型的详细信息，请参阅 <a href="doc-files/AWTThreadIssues.html#ListenersThreads"  >AWT 线程问题</a>。

@param    l   调整侦听器。
@see      #removeAdjustmentListener
@see      #getAdjustmentListeners
@see      java.awt.event.AdjustmentListener
@see      java.awt.event.AdjustmentEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.ScrollPaneAdjustable.removeAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
移除指定的调整侦听器，不再接收发自此 <code>ScrollPaneAdjustable</code> 的调整事件。如果 <code>l</code> 为 <code>null</code>，则不抛出异常，也不执行动作。
<p>有关 AWT 的线程模型的详细信息，请参阅 <a href="doc-files/AWTThreadIssues.html#ListenersThreads"  >AWT 线程问题</a>。

@param    l    调整侦听器。
@see           #addAdjustmentListener
@see           #getAdjustmentListeners
@see           java.awt.event.AdjustmentListener
@see           java.awt.event.AdjustmentEvent
@since         JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.awt.event.AdjustmentListener[] java.awt.ScrollPaneAdjustable.getAdjustmentListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回在此 <code>ScrollPaneAdjustable</code> 上所有已注册调整侦听器组成的数组。

@return 此 <code>ScrollPaneAdjustable</code> 的所有 <code>AdjustmentListener</code>，如果当前没有已注册的调整侦听器，则返回一个空数组

@see           #addAdjustmentListener
@see           #removeAdjustmentListener
@see           java.awt.event.AdjustmentListener
@see           java.awt.event.AdjustmentEvent
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.ScrollPaneAdjustable.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此滚动条及其值的字符串表示形式。
@return  此滚动条的字符串表示形式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.ScrollPaneAdjustable.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示此滚动条的状态的字符串。此方法仅用于调试目的，对于各个实现，所返回字符串的内容和格式可能有所不同。返回的字符串可以为空，但不可以为 <code>null</code>。

@return     此滚动条的参数字符串。

<!-- END DATA -->
