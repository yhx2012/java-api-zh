<!-- BEGIN KEY -->
public interface java.awt.LayoutManager
<!-- END KEY -->
<!-- BEGIN DATA -->

定义知道如何布置 <code>Container</code> 类的接口。 
 <p>
Swing 的绘制架构假定 <code>JComponent</code> 的子组件不发生重叠。如果 <code>JComponent</code> 的 <code>LayoutManager</code> 允许子组件重叠，则 <code>JComponent</code> 必须重写 <code>isOptimizedDrawingEnabled</code> 以返回 false。

@see Container
@see javax.swing.JComponent#isOptimizedDrawingEnabled

@version	1.27, 11/17/05
@author 	Sami Shaio
@author 	Arthur van Hoff

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.LayoutManager.addLayoutComponent(String name, Component comp)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果布局管理器使用每组件字符串，则将组件 <code>comp</code> 添加到布局，并将它与 <code>name</code> 指定的字符串关联。
 
@param name 要与组件关联的字符串
@param comp 要添加的组件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.LayoutManager.removeLayoutComponent(Component comp)
<!-- END KEY -->
<!-- BEGIN DATA -->
从布局移除指定组件。
@param comp 要移除的组件

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension java.awt.LayoutManager.preferredLayoutSize(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
给定指定容器所包含的组件，计算该容器的首选大小维数。
@param parent 要布置的容器
  
@see #minimumLayoutSize

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension java.awt.LayoutManager.minimumLayoutSize(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->

给定指定容器所包含的组件，计算该容器的最小大小维数。
@param parent 要布置的组件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.LayoutManager.layoutContainer(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->

布置指定容器。
@param parent 要布置的容器

<!-- END DATA -->
