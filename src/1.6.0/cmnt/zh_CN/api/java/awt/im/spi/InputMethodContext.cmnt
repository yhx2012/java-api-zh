<!-- BEGIN KEY -->
public interface java.awt.im.spi.InputMethodContext extends java.awt.im.InputMethodRequests
<!-- END KEY -->
<!-- BEGIN DATA -->
提供输入方法可以用来与其客户端组件通信或用来请求其他服务的方法。此接口由输入方法框架实现，并且输入方法针对其通过 {@link java.awt.im.spi.InputMethod#setInputMethodContext} 收到的实例调用其方法。此外再没有其他实现程序或调用者。

@since 1.3

@version 	1.16, 12/19/03
@author JavaSoft International

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.im.spi.InputMethodContext.dispatchInputMethodEvent(int id, AttributedCharacterIterator text, int committedCharacterCount, TextHitInfo caret, TextHitInfo visiblePosition)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的参数创建输入方法事件并将其指派到客户端组件。有关参数的信息，请参阅 {@link java.awt.event.InputMethodEvent#InputMethodEvent}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Window java.awt.im.spi.InputMethodContext.createInputMethodWindow(String title, boolean attachToInputContext)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建输入方法使用的顶层窗口。此窗口预期的行为是：
 <ul>
<li>浮动于所有文档窗口和对话框上方
<li>它和它包含的所有组件都不接收焦点
<li>该窗口略有装饰，如减化的无标题拖动区域
 </ul>
不过，对应于这三项的实际行为与平台有关。
 <p>
标题可以显示也可以不显示，具体取决于所创建窗口的实际类型。
 <p>
如果 attachToInputContext 为 true，该新窗口将共享对应于此输入方法上下文的输入上下文，以便自动将窗口中的组件事件指派到该输入方法。此外，使用 setVisible(true) 打开窗口时，输入上下文将阻止可能的对输入方法的停用或激活调用。
 <p>
如果不再需要已返回的输入方法窗口，则输入方法必须调用该窗口上的 {@link java.awt.Window#dispose() Window.dispose}。
 <p>
@param title 窗口标题栏（如果有此标题栏）中显示的标题。将 <code>null</code> 值看作空字符串 (&quot;&quot;)。
@param attachToInputContext 是否应共享对应于此输入方法上下文的输入上下文
@return 带有输入方法使用的特殊特征的窗口
@exception HeadlessException 如果 <code>GraphicsEnvironment.isHeadless</code> 返回 <code>true</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JFrame java.awt.im.spi.InputMethodContext.createInputMethodJFrame(String title, boolean attachToInputContext)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建输入方法使用的顶层 Swing JFrame。此窗口预期的行为是：
 <ul>
<li>浮动于所有文档窗口和对话框上方
<li>它和它包含的所有组件都不接收焦点
<li>该窗口略有装饰，如减化的无标题拖动区域
 </ul>
不过，对应于这三项的实际行为与平台有关。
 <p>
标题可以显示也可以不显示，具体取决于所创建窗口的实际类型。
 <p>
如果 attachToInputContext 为 true，该新窗口将共享对应于此输入方法上下文的输入上下文，以便自动将窗口中的组件事件指派到该输入方法。此外，使用 setVisible(true) 打开窗口时，输入上下文将阻止可能的对输入方法的停用或激活调用。
 <p>
如果不再需要已返回的输入方法窗口，则输入方法必须调用该窗口上的 {@link java.awt.Window#dispose() Window.dispose}。
 <p>
@param title 窗口标题栏（如果有此标题栏）中显示的标题。将 <code>null</code> 值看作空字符串 (&quot;&quot;)。
@param attachToInputContext 是否应共享对应于此输入方法上下文的输入上下文
@return 带有输入方法使用的特殊特征的 JFrame
@exception HeadlessException 如果 <code>GraphicsEnvironment.isHeadless</code> 返回 <code>true</code>

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.im.spi.InputMethodContext.enableClientWindowNotification(InputMethod inputMethod, boolean enable)
<!-- END KEY -->
<!-- BEGIN DATA -->
启用或禁用指定输入方法的当前客户端窗口位置或状态的通知。启用通知时，按方法规范中描述的那样调用该输入方法的 {@link java.awt.im.spi.InputMethod#notifyClientWindowChange notifyClientWindowChange} 方法。释放掉输入方法后将自动禁用通知。

@param inputMethod 已启用或已禁用通知的输入方法
@param enable true 表示启用，false 表示禁用

<!-- END DATA -->
