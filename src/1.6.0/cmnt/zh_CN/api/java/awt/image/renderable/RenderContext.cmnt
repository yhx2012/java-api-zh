<!-- BEGIN KEY -->
public class java.awt.image.renderable.RenderContext extends java.lang.Object implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
RenderContext 封装从 enderableImage 生成特定呈现所需的信息。它包含与呈现无关的条件中指定的要呈现的区域、呈现执行的分辨率和用于控制呈现过程的提示。
 
<p> 用户创建 RenderContext 并通过 createRendering 方法将它们传递到 RenderableImage。RenderContext 的多数方法不是为了让应用程序直接使用，而是由它传递到的 RenderableImage 和操作符类直接使用。

<p> 传入此类和从此类传出的 AffineTransform 参数被复制。RenderingHints 和 Shape 参数不一定是可复制的，并因此仅复制引用。改变正在由 RenderContext 实例使用的 RenderingHints 或 Shape 实例可能产生不希望出现的负作用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.renderable.RenderContext(AffineTransform usr2dev, Shape aoi, RenderingHints hints)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有给定转换的 RenderContext。感兴趣的区域作为一个 Shape 提供，呈现提示作为一个 RenderingHints 对象提供。

@param usr2dev 一个 AffineTransform。
@param aoi 表示感兴趣区域的 Shape。
@param hints 包含呈现提示的 RenderingHints 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.renderable.RenderContext(AffineTransform usr2dev)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有给定变换的 RenderContext。感兴趣的区域被用做整个可呈现区域。不使用呈现提示。

@param usr2dev 一个 AffineTransform。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.renderable.RenderContext(AffineTransform usr2dev, RenderingHints hints)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有给定转换和呈现提示的 RenderContext。感兴趣的区域被用做整个可呈现区域。

@param usr2dev 一个 AffineTransform。
@param hints 包含呈现提示的 RenderingHints 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.renderable.RenderContext(AffineTransform usr2dev, Shape aoi)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有给定变换和感兴趣区域的 RenderContext。感兴趣区域作为一个 Shape 提供。不使用呈现提示。

@param usr2dev 一个 AffineTransform。
@param aoi 表示感兴趣区域的 Shape。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.RenderingHints java.awt.image.renderable.RenderContext.getRenderingHints()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>RenderContext</code> 的呈现提示。
@return 表示此 <code>RenderContext</code> 呈现提示的 <code>RenderingHints</code> 对象。
@see #setRenderingHints(RenderingHints)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderContext.setRenderingHints(RenderingHints hints)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此 <code>RenderContext</code> 的呈现提示。
@param hints 表示赋给此 <code>RenderContext</code> 的呈现提示的 <code>RenderingHints</code> 对象。
@see #getRenderingHints

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderContext.setTransform(AffineTransform newTransform)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 RenderContext 中包含的当前&ldquo;用户到设备&rdquo;的 AffineTransform 设置为给定的变换。

@param newTransform 新的 AffineTransform。
@see #getTransform

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderContext.preConcatenateTransform(AffineTransform modTransform)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过预先挂起另一变换修改当前的&ldquo;用户到设备&rdquo;变换。用矩阵表示该操作为：
 <pre>
 [this] = [modTransform] x [this]
 </pre>

@param modTransform 预先挂起到当前 usr2dev 变换的 AffineTransform。
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderContext.preConcetenateTransform(AffineTransform modTransform)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过预先挂起另一变换修改当前的&ldquo;用户到设备&rdquo;变换。用矩阵表示该操作为：
 <pre>
 [this] = [modTransform] x [this]
 </pre>
此方法与 preConcatenateTransform 方法的作用相同。保留此方法是为了与以前发布版本的向后兼容，以前版本中该方法的名称拼写错误。

@param modTransform 预先挂起到当前 usr2dev 变换的 AffineTransform。
@deprecated     由 <code>preConcatenateTransform(AffineTransform)</code> 所取代。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderContext.concatenateTransform(AffineTransform modTransform)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过追加另一变换修改当前的&ldquo;用户到设备&rdquo;变换。用矩阵表示该操作为：
 <pre>
 [this] = [this] x [modTransform]
 </pre>

@param modTransform 追加到当前 usr2dev 变换的 AffineTransform。

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderContext.concetenateTransform(AffineTransform modTransform)
<!-- END KEY -->
<!-- BEGIN DATA -->
通过追加另一变换修改当前的&ldquo;用户到设备&rdquo;转换。用矩阵表示该操作为：
 <pre>
 [this] = [this] x [modTransform]
 </pre>
此方法与 concatenateTransform 方法的作用相同。保留此方法是为了与以前发布版本的向后兼容，以前版本中该方法的名称拼写错误。

@param modTransform 追加到当前 usr2dev 变换的 AffineTransform。
@deprecated     由 <code>concatenateTransform(AffineTransform)</code> 所替代。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.AffineTransform java.awt.image.renderable.RenderContext.getTransform()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取当前&ldquo;用户到设备&rdquo;的 AffineTransform。

@return 当前 AffineTransform 的一个引用。
@see #setTransform(AffineTransform)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderContext.setAreaOfInterest(Shape newAoi)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置当前的感兴趣区域。丢弃旧区域。

@param newAoi 新的感兴趣区域。
@see #getAreaOfInterest

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Shape java.awt.image.renderable.RenderContext.getAreaOfInterest()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取当前包含在 RenderContext 中的感兴趣区域。
 
@return 对 RenderContext 的感兴趣区域的引用，如果未指定，则返回 null。
@see #setAreaOfInterest(Shape)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.image.renderable.RenderContext.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
对 RenderContext 进行复制。感兴趣区域由引用复制。复制 usr2dev AffineTransform 和提示，而感兴趣区域由引用复制。

@return 新复制的 RenderContext。

<!-- END DATA -->
