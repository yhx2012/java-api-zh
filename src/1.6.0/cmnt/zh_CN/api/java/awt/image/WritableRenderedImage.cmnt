<!-- BEGIN KEY -->
public interface java.awt.image.WritableRenderedImage extends java.awt.image.RenderedImage
<!-- END KEY -->
<!-- BEGIN DATA -->
WriteableRenderedImage 公共接口用于那些包含或者能够生成 Rasters 形式图像数据的对象，以及能够被修改和/或写入的对象。图像数据可以作为单个 tile 或 tile 规则数组被存储/生成。
 <p>
当为写入签出了一个 tile（通过 getWritableTile 方法），以及一个特定 tile 最后的 writer 放弃其访问（通过调用 releaseWritableTile）时，WritableRenderedImage 通知其他感兴趣的对象。此外，它允许任何调用者确定当前是否签出了任何 tile（通过 hasTileWriters），并允许获得这种 tile 的列表（通过 getWritableTileIndices，以 Point 对象的 Vector 形式表示）。
 <p>
希望 tile 可写入性更改时被通知的对象必须实现 TileObserver 接口，并通过调用 addTileObserver 添加。对同一个对象多次调用 addTileObserver 将产生多个通知。现有的观察器可以通过调用 removeTileObserver 来减少其通知；如果观察器没有通知，则该操作是无操作。
 <p>
WritableRenderedImage 必须确保仅在第一个 writer 获得 tile 和最后一个 writer 释放它时发出通知。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.WritableRenderedImage.addTileObserver(TileObserver to)
<!-- END KEY -->
<!-- BEGIN DATA -->
添加一个观察器。如果观察器已经存在，则它将接受多个通知。
@param to 指定的 <code>TileObserver</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.WritableRenderedImage.removeTileObserver(TileObserver to)
<!-- END KEY -->
<!-- BEGIN DATA -->
移除一个观察器。如果观察器没有注册，则不发生任何操作。如果观察器为多个通知注册，则现在其注册的通知数将减少一个。
@param to 指定的 <code>TileObserver</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.WritableRaster java.awt.image.WritableRenderedImage.getWritableTile(int tileX, int tileY)
<!-- END KEY -->
<!-- BEGIN DATA -->
为写入签出一个 tile。当一个 tile 从没有 writer 变为有一个 writer 时，WritableRenderedImage 负责通知其所有的 TileObserver。

@param tileX tile 的 X 索引。
@param tileY tile 的 Y 索引。
@return 一个可写入的 tile。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.WritableRenderedImage.releaseWritableTile(int tileX, int tileY)
<!-- END KEY -->
<!-- BEGIN DATA -->
放弃写入一个 tile 的权力。如果调用者继续写入 tile，则结果是不确定的。此方法的调用应该与 getWritableTile 的调用成对出现；任何其他用法将导致不确定的结果。当一个 tile 从有一个 writer 变为没有 writer 时，WritableRenderedImage 负责通知其所有的 TileObserver。

@param tileX tile 的 X 索引。
@param tileY tile 的 Y 索引。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.image.WritableRenderedImage.isTileWritable(int tileX, int tileY)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前是否正在为写入签出 tile。

@param tileX tile 的 X 索引。
@param tileY tile 的 Y 索引。
@return 如果为写入签出了指定的 tile ，则返回 <code>true</code>；否则返回 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Point[] java.awt.image.WritableRenderedImage.getWritableTileIndices()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 Point 对象的数组，它指示为写入签出了哪些 tile。如果没有签出任何 tile，则返回 null。
@return 包含为写入而签出的 tile 的位置数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.image.WritableRenderedImage.hasTileWriters()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回是否有为写入而签出的 tile。在语义上等价于 (getWritableTileIndices() != null)。
@return 如果有为写入而签出的 tile，则返回 <code>true</code>；否则返回 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.WritableRenderedImage.setData(Raster r)
<!-- END KEY -->
<!-- BEGIN DATA -->
将图像的 rect 设置为 Raster r 的内容，假定 r 位于与 WritableRenderedImage 相同的坐标空间。操作被限制在 WritableRenderedImage 的边界内。
@param r 指定的 <code>Raster</code>

<!-- END DATA -->
