<!-- BEGIN KEY -->
public interface java.awt.image.RasterOp
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口描述对 Raster 对象执行的单输入/单输出操作。该接口由诸如 AffineTransformOp、ConvolveOp 和 LookupOp 之类的类实现。针对实现此接口的特定类，Source 和 Destination 对象必须包含合适数量的 band。否则，会抛出异常。此接口不能用于描述更复杂的操作，如接受多个源的操作。实现此接口的每个类都必须指出是否允许就地进行过滤操作（也就是源对象等于目标对象的操作）。注意，对单输入操作的限制意味着进行操作前的目标像素值不能用作过滤操作的输入。
@see AffineTransformOp
@see BandCombineOp
@see ColorConvertOp
@see ConvolveOp
@see LookupOp
@see RescaleOp
@version 10 Feb 1997

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.WritableRaster java.awt.image.RasterOp.filter(Raster src, WritableRaster dest)
<!-- END KEY -->
<!-- BEGIN DATA -->
执行从源 Raster 到目标 Raster 的单输入/单输出操作。如果目标 Raster 为 null，则创建一个新 Raster。如果源和/或目标 Raster 与实现此过滤器的类所允许的 Raster 类型不兼容，则可能抛出 IllegalArgumentException。
@param src 源 <code>Raster</code>
@param dest 目标 <code>WritableRaster</code>
@return 表示过滤操作结果的 <code>WritableRaster</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.Rectangle2D java.awt.image.RasterOp.getBounds2D(Raster src)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回过滤后目标 Raster 的边界框。如果源 Raster 与实现此过滤器的类所允许的 Raster 类型不兼容，则可能抛出 IllegalArgumentException。
@param src 源 <code>Raster</code>
@return 一个 <code>Rectangle2D</code>，它是从过滤操作得到的 <code>Raster</code> 的边界框。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.WritableRaster java.awt.image.RasterOp.createCompatibleDestRaster(Raster src)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个具有正确大小和 band 数的归零目标 Raster。如果源 Raster 与实现此过滤器的类所允许的 Raster 类型不兼容，则可能抛出 IllegalArgumentException。
@param src 源 <code>Raster</code>
@return 与 <code>src</code> 兼容的 <code>WritableRaster</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.Point2D java.awt.image.RasterOp.getPoint2D(Point2D srcPt, Point2D dstPt)
<!-- END KEY -->
<!-- BEGIN DATA -->
在给定源 Raster 中一个点的情况下，返回目标点的位置。如果 dstPt 不为 null，则使用它来保存返回值。
@param srcPt 源 <code>Point2D</code>
@param dstPt 目标 <code>Point2D</code>
@return 目标点的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.RenderingHints java.awt.image.RasterOp.getRenderingHints()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 RasterOp 的呈现提示。如果尚未设置提示，则返回 null。
@return 此 <code>RasterOp</code> 的 <code>RenderingHints</code> 对象。

<!-- END DATA -->
