<!-- BEGIN KEY -->
public class java.awt.image.Kernel extends java.lang.Object implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Kernel</code> 类定义了一个矩阵，描述指定的像素及其周围像素如何影响过滤操作输出图像中像素位置的计算值。X 原点和 Y 原点指示 kernel 矩阵元素对应于为其计算输出值的像素位置。

@see ConvolveOp
@version 10 Feb 1997

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.Kernel(int width, int height, float[] data)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据 float 数组构造一个 <code>Kernel</code> 对象。复制 <code>data</code> 数组的前 <code>width</code>*<code>height</code> 个元素。如果 <code>data</code> 数组的长度小于 width*height，则抛出 <code>IllegalArgumentException</code>。X 原点是 (width-1)/2，Y 原点是 (height-1)/2。
@param width    该 kernel 的宽度
@param height        该 kernel 的高度
@param data    以行优先顺序提供的 kernel 数据
@throws IllegalArgumentException 如果 <code>data</code> 的长度小于 <code>width</code> 和 <code>height</code> 的乘积

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.awt.image.Kernel.getXOrigin()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>Kernel</code> 的 X 原点。
@return X 原点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.awt.image.Kernel.getYOrigin()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>Kernel</code> 的 Y 原点。
@return Y 原点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.awt.image.Kernel.getWidth()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>Kernel</code> 的宽度。
@return 此 <code>Kernel</code> 的宽度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.awt.image.Kernel.getHeight()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>Kernel</code> 的高度。
@return 此 <code>Kernel</code> 的高度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final float[] java.awt.image.Kernel.getKernelData(float[] data)
<!-- END KEY -->
<!-- BEGIN DATA -->
以行优先顺序返回 kernel 数据。返回 <code>data</code> 数组。如果 <code>data</code> 为 <code>null</code>，则分配一个新数组。
@param data  如果为非 null，则包含返回的 kernel 数据
@return 以行优先顺序包含 kernel 数据的 <code>data</code> 数组，如果 <code>data</code> 为 <code>null</code>，则返回以行优先顺序包含 kernel 数据的新分配数组 
@throws IllegalArgumentException 如果 <code>data</code> 小于此 <code>Kernel</code> 的大小

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.image.Kernel.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
复制此对象。
@return 此对象的一个副本。

<!-- END DATA -->
