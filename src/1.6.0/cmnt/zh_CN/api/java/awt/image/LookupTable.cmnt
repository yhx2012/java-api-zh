<!-- BEGIN KEY -->
public abstract class java.awt.image.LookupTable extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
此抽象类定义了一个查找表对象。ByteLookupTable 和 ShortLookupTable 是分别包含 byte 和 short 数据的子类。查找表包含图像的一个或多个 band（或分量）的数据数组（例如独立的 R、G 和 B 数组），还包含一个偏移量，在对数组进行索引前要从输入值中减去该偏移量。这就允许为受约束的输入提供一个小于本机数据大小的数组。如果查找表中仅有一个数组，则将其应用到所有的 band。所有数组必须具有相同的大小。
 
@see ByteLookupTable
@see ShortLookupTable
@see LookupOp
@version 10 Feb 1997

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.image.LookupTable(int offset, int numComponents)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据分量数和查找表中的偏移量构造一个新 LookupTable。
@param offset 在对此 <code>LookupTable</code> 的数据数组进行索引前，要从输入值减去的偏移量
@param numComponents 此 <code>LookupTable</code> 中的数据数组数目
@throws IllegalArgumentException 如果 <code>offset</code> 小于 0，或者 <code>numComponents</code> 小于 1

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.image.LookupTable.getNumComponents()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回查找表中的分量数。
@return 此 <code>LookupTable</code> 中的分量数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.image.LookupTable.getOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回偏移量。
@return 此 <code>LookupTable</code> 的偏移量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int[] java.awt.image.LookupTable.lookupPixel(int[] src, int[] dest)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个像素的 <code>int</code> 分量数组。<code>dest</code> 数组包含查找的结果并返回。如果 dest 为 <code>null</code>，则分配一个新数组。源和目标可以相等。
@param src 一个像素的源分量数组
@param dest 一个像素的目标分量数组，使用此 <code>LookupTable</code> 转换
@return 一个像素的 <code>int</code> 分量数组。

<!-- END DATA -->
