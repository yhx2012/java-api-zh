<!-- BEGIN KEY -->
public interface java.awt.datatransfer.Transferable
<!-- END KEY -->
<!-- BEGIN DATA -->
定义为传输操作提供数据所使用的类的接口。
 <p>
有关如何使用 Swing 进行数据传输的信息，请参阅 <em>The Java Tutorial</em> 中的 <a href="http://java.sun.com/docs/books/tutorial/uiswing/misc/dnd.html">How to Use Drag and Drop and Data Transfer</a> 一节。

@version 	1.13, 12/19/03
@author	Amy Fowler  

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.datatransfer.DataFlavor[] java.awt.datatransfer.Transferable.getTransferDataFlavors()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 DataFlavor 对象的数组，指示可用于提供数据的 flavor。该数组应该根据提供数据的偏好来排序（从描述最多的到描述最少的）。
@return 数据 flavor 的数组，使用它来传输此数据

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.datatransfer.Transferable.isDataFlavorSupported(DataFlavor flavor)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象是否支持指定的数据 flavor。
@param flavor 请求的数据 flavor
@return boolean 指示是否支持该数据 flavor

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.datatransfer.Transferable.getTransferData(DataFlavor flavor) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个对象，该对象表示将要被传输的数据。返回对象的类是由该 flavor 的表示类定义的。

@param flavor 请求的数据 flavor
@see DataFlavor#getRepresentationClass
@exception IOException 如果使用请求的 flavor 时数据不再可用。
@exception UnsupportedFlavorException 如果不支持请求的数据 flavor。

<!-- END DATA -->
