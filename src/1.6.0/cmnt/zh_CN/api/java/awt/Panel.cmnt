<!-- BEGIN KEY -->
public class java.awt.Panel extends java.awt.Container implements javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Panel</code> 是最简单的容器类。应用程序可以将其他组件放在面板提供的空间内，这些组件包括其他面板。
 <p>
面板的默认布局管理器是 <code>FlowLayout</code> 布局管理器。

@version 	1.35, 03/01/04
@author 	Sami Shaio
@see     java.awt.FlowLayout
@since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Panel()
<!-- END KEY -->
<!-- BEGIN DATA -->
使用默认的布局管理器创建新面板。所有面板的默认布局管理器都是 <code>FlowLayout</code> 类。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Panel(LayoutManager layout)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定布局管理器的新面板。
@param layout 此面板的布局管理器。
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Panel.addNotify()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建 Panel 的同位体。此同位体允许修改面板的外观而不会更改其功能。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext java.awt.Panel.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与 Panel 相关的 AccessibleContext。对于面板，AccessibleContext 采用 AccessibleAWTPanel 的形式。如有必要，则创建一个新的 AccessibleAWTPanel 实例。

@return 一个 AccessibleAWTPanel，它作为此 Panel 的 AccessibleContext

@since 1.3

<!-- END DATA -->
