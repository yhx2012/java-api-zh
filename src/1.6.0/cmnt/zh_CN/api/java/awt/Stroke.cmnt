<!-- BEGIN KEY -->
public interface java.awt.Stroke
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Stroke</code> 接口允许 {@link Graphics2D} 对象获得一个 {@link Shape}，该 Shape 是指定 <code>Shape</code> 的装饰轮廓，或该轮廓的风格表示形式。描绘一个 <code>Shape</code> 如同使用一支具有适当大小和形状的画笔描绘其轮廓。画笔着墨的区域是轮廓 <code>Shape</code> 封闭的区域。
 <p>
<code>Graphics2D</code> 接口中使用由 <code>Stroke</code> 对象返回的轮廓 <code>Shape</code> 的方法包括：<code>draw</code> 和其他所有根据此方法实现的方法，比如 <code>drawLine</code>、<code>drawRect</code>、<code>drawRoundRect</code>、<code>drawOval</code>、<code>drawArc</code>、<code>drawPolyline</code> 和 <code>drawPolygon</code>。
 <p>
实现 <code>Stroke</code> 的类的对象必须是只读的，因为在使用 <code>setStroke</code> 方法将这些对象设置为一个属性时，或者在 <code>Graphics2D</code> 对象没有复制自身时，<code>Graphics2D</code> 不会复制这些对象。如果在 <code>Graphics2D</code> 上下文中设置了一个 <code>Stroke</code> 对象后修改它，则后续呈现行为将是不确定的。
@see BasicStroke
@see Graphics2D#setStroke
@version 1.22, 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Shape java.awt.Stroke.createStrokedShape(Shape p)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个轮廓 <code>Shape</code>，它封闭了应该在根据规则描绘 <code>Shape</code> 时绘制的区域，这些规则是由实现 <code>Stroke</code> 接口的对象定义的。
@param p 要描绘的 <code>Shape</code>
@return 描绘的轮廓 <code>Shape</code>。

<!-- END DATA -->
