<!-- BEGIN KEY -->
public class java.awt.dnd.DragSourceDropEvent extends java.awt.dnd.DragSourceEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
通过 <code>DragSourceContext</code>，将 <code>DragSourceDropEvent</code> 从 <code>DragSourceContextPeer</code> 传递给向 <code>DragSourceContext</code> 及其关联 <code>DragSource</code> 注册的 <code>DragSourceListener</code> 的 <code>dragDropEnd</code> 方法。它包含足够的信息，允许操作的发起方在操作完成时向最终用户提供适当的反馈。
 <P>
@version 	1.19, 12/19/03
 <P>
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean java.awt.dnd.DragSourceDropEvent.dropSuccess
<!-- END KEY -->
<!-- BEGIN DATA -->
如果放置成功，则为 <code>true</code>。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.dnd.DragSourceDropEvent.dropAction
<!-- END KEY -->
<!-- BEGIN DATA -->
放置操作。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.dnd.DragSourceDropEvent(DragSourceContext dsc, int action, boolean success)
<!-- END KEY -->
<!-- BEGIN DATA -->
放置构造一个具有给定 <code>DragSourceContext</code>、放置操作和指示放置是否成功的 <code>boolean</code> 值的 <code>DragSourceDropEvent</code>。未指定此 <code>DragSourceDropEvent</code> 的坐标，所以 <code>getLocation</code> 将在此事件中返回 <code>null</code>。
 <p> 
参数 <code>action</code> 应该是表示单个操作的 <code>DnDConstants</code> 之一。对于无效的 <code>action</code>，此构造方法不抛出任何异常。
 
@param dsc 与此 <code>DragSourceDropEvent</code> 关联的 <code>DragSourceContext</code>
@param action 放置操作
@param success 指示放置是否成功的 boolean 值

@throws <code>IllegalArgumentException</code> 如果 <code>dsc</code> 为 <code>null</code>。

@see DragSourceEvent#getLocation

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.dnd.DragSourceDropEvent(DragSourceContext dsc, int action, boolean success, int x, int y)
<!-- END KEY -->
<!-- BEGIN DATA -->
针对放置构造一个具有给定 <code>DragSourceContext</code>、放置操作、表示放置是否成功的 <code>boolean</code> 值和坐标的 <code>DragSourceDropEvent</code>。
 <p> 
参数 <code>action</code> 应该是表示单个操作的 <code>DnDConstants</code> 之一。对于无效的 <code>action</code>，此构造方法不抛出任何异常。
 
@param dsc 与此 <code>DragSourceDropEvent</code> 关联的 <code>DragSourceContext</code>
@param action 放置操作
@param success 表示放置是否成功的 boolean 值
@param x  光标位置的水平坐标
@param y  光标位置的垂直坐标

@throws <code>IllegalArgumentException</code> 如果 <code>dsc</code> 为 <code>null</code>。

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.dnd.DragSourceDropEvent(DragSourceContext dsc)
<!-- END KEY -->
<!-- BEGIN DATA -->
针对没有引起放置的拖动构造一个 <code>DragSourceDropEvent</code>。未指定此 <code>DragSourceDropEvent</code> 的坐标，所以 <code>getLocation</code> 将为此事件返回 <code>null</code>。

@param dsc <code>DragSourceContext</code>

@throws <code>IllegalArgumentException</code> 如果 <code>dsc</code> 为 <code>null</code>。

@see DragSourceEvent#getLocation

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.dnd.DragSourceDropEvent.getDropSuccess()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法返回表示放置是否成功的 <code>boolean</code> 值。
 
@return 如果放置目标接受了该放置并且成功地执行了放置操作，则返回 <code>true</code>；如果放置目标拒绝该放置或者放置目标接受了该放置，但是无法执行放置操作，则返回 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.dnd.DragSourceDropEvent.getDropAction()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法返回一个 <code>int</code> 值，表示放置主题目标执行的操作。

@return 如果放置目标接受了该放置并且拖动源支持目标放置操作，则返回放置主题目标执行的操作；否则返回 <code>DnDConstants.ACTION_NONE</code>。 

<!-- END DATA -->
