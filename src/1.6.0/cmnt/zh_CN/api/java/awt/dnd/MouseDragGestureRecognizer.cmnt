<!-- BEGIN KEY -->
public abstract class java.awt.dnd.MouseDragGestureRecognizer extends java.awt.dnd.DragGestureRecognizer implements java.awt.event.MouseListener, java.awt.event.MouseMotionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>DragGestureRecognizer</code> 的抽象子类，它定义了一个基于鼠标动作的 <code>DragGestureRecognizer</code>。通过 Toolkit.createDragGestureRecognizer() 方法，每个平台实现此类自身的具体子类，以封装与平台无关的鼠标动作（启动拖放操作）的识别功能。
 <p>
鼠标拖动识别程序应该遵守拖动动作阈值，该阈值可以通过 {@link DragSource#getDragThreshold} 获得。只有在上一次鼠标拖动事件时的位置和相应鼠标按键事件时的位置之间的水平或垂直方向的差值大于拖动动作阈值时，才应该识别为拖动动作。
 <p>
利用 {@link DragSource#createDefaultDragGestureRecognizer} 创建的拖动识别程序遵守以下约定。

@author Laurence P. G. Cable
@version 1.14

@see java.awt.dnd.DragGestureListener
@see java.awt.dnd.DragGestureEvent
@see java.awt.dnd.DragSource

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.dnd.MouseDragGestureRecognizer(DragSource ds, Component c, int act, DragGestureListener dgl)
<!-- END KEY -->
<!-- BEGIN DATA -->
给出 <code>Component</code> c 的 <code>DragSource</code>、要观察的 <code>Component</code>、此拖动操作允许的操作，以及检测到拖动动作时发出通知的 <code>DragGestureListener</code>，构造一个新的 <code>MouseDragGestureRecognizer</code>。
 <P>
@param ds  Component c 的 DragSource
@param c   要观察的 Component
@param act 此拖动操作允许的操作
@param dgl 检测到拖动时发出通知的 DragGestureListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.dnd.MouseDragGestureRecognizer(DragSource ds, Component c, int act)
<!-- END KEY -->
<!-- BEGIN DATA -->
给出 <code>Component</code> c 的 <code>DragSource</code>、要观察的 <code>Component</code>，以及此拖动操作允许的操作，构造一个新的 <code>MouseDragGestureRecognizer</code>。
 <P>
@param ds  Component c 的 DragSource
@param c   要观察的 Component
@param act 此拖动操作允许的操作

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.dnd.MouseDragGestureRecognizer(DragSource ds, Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
给出 <code>Component</code> c 的 <code>DragSource</code>、要观察的 <code>Component</code>，构造一个新的 <code>MouseDragGestureRecognizer</code>。
 <P>
@param ds  Component c 的 DragSource
@param c   要观察的 Component

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.dnd.MouseDragGestureRecognizer(DragSource ds)
<!-- END KEY -->
<!-- BEGIN DATA -->
给出 <code>Component</code> 的 <code>DragSource</code>，构造一个新的 <code>MouseDragGestureRecognizer</code>。
 <P>
@param ds  Component 的 DragSource

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.awt.dnd.MouseDragGestureRecognizer.registerListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 注册此 DragGestureRecognizer 的 Listener 和 Component

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.awt.dnd.MouseDragGestureRecognizer.unregisterListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
取消注册此 DragGestureRecognizer 的 Listener 和 Component

子类必须重写此方法：

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.MouseDragGestureRecognizer.mouseClicked(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标在组件上单击时调用。
 <P>
@param e <code>MouseEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.MouseDragGestureRecognizer.mousePressed(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标按钮在 <code>Component</code> 上按下时调用。
 <P>
@param e <code>MouseEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.MouseDragGestureRecognizer.mouseReleased(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标按钮在组件上释放时调用。
 <P>
@param e <code>MouseEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.MouseDragGestureRecognizer.mouseEntered(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标移动到组件上时调用。
 <P>
@param e <code>MouseEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.MouseDragGestureRecognizer.mouseExited(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标离开组件时调用。
 <P>
@param e <code>MouseEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.MouseDragGestureRecognizer.mouseDragged(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标按钮在组件上按下时调用。
 <P>
@param e <code>MouseEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.MouseDragGestureRecognizer.mouseMoved(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标按钮在组件上移动（无按钮按下）时调用。
 <P>
@param e <code>MouseEvent</code>

<!-- END DATA -->
