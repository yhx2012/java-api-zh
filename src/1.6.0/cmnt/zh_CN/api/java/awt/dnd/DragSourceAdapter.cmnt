<!-- BEGIN KEY -->
public abstract class java.awt.dnd.DragSourceAdapter extends java.lang.Object implements java.awt.dnd.DragSourceListener, java.awt.dnd.DragSourceMotionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
用于接收拖动源事件的抽象适配器类。此类中的方法为空。此类存在的目的只是为了便于创建侦听器对象。
 <p>
扩展此类即可创建 <code>DragSourceEvent</code> 侦听器并为感兴趣的事件重写该方法。（如果实现了 <code>DragSourceListener</code> 接口，则必须定义其中的所有方法。此抽象类为所有方法都定义了 null 方法，所以只需为关心的事件定义方法即可。）
 <p>
使用扩展的类创建侦听器对象，然后向 <code>DragSource</code> 注册它。当拖动进入、移过或离开放置点时、放置操作改变时和拖动结束时，调用该侦听器对象中的相关方法，并将 <code>DragSourceEvent</code> 传递给该方法。
 <p>
如果在此适配器类上最后一次调用 <code>dragEnter()</code> 是相对于该放置点的，并且后面没有接着在此适配器类上调用 <code>dragExit()</code>，则该放置点是与<i>上一次 <code>dragEnter()</code> 调用相关联的</i>。

@see DragSourceEvent
@see DragSourceListener
@see DragSourceMotionListener

@author David Mendenhall
@version 1.6, 12/19/03
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.DragSourceAdapter.dragEnter(DragSourceDragEvent dsde)
<!-- END KEY -->
<!-- BEGIN DATA -->
光标的热点进入放置点（与平台相关）时调用该方法。满足以下所有条件时调用此方法：
 <UL>
<LI>光标的热点进入与平台相关的放置点的可操作部分。
<LI>放置点处于激活状态。
<LI>放置点接受该拖动。
 </UL>

@param dsde  <code>DragSourceDragEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.DragSourceAdapter.dragOver(DragSourceDragEvent dsde)
<!-- END KEY -->
<!-- BEGIN DATA -->
光标的热点在放置点（与平台相关）上移动时调用该方法。满足以下所有条件时调用此方法：
 <UL>
<LI>光标的热点已移动，但是仍旧处于和上一次调用 dragEnter() 相关联的放置点可操作部分内。
<LI>放置点仍处于激活状态。
<LI>放置点接受该拖动。
 </UL>

@param dsde  <code>DragSourceDragEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.DragSourceAdapter.dragMouseMoved(DragSourceDragEvent dsde)
<!-- END KEY -->
<!-- BEGIN DATA -->
在拖动操作期间，只要移动了鼠标就调用该方法。
 
@param dsde  <code>DragSourceDragEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.DragSourceAdapter.dropActionChanged(DragSourceDragEvent dsde)
<!-- END KEY -->
<!-- BEGIN DATA -->
当用户修改放置操作时调用该方法。当用户使用的输入设备状态改变时调用此方法。这种设备通常是与用户交互的鼠标按键或键盘修改键。

@param dsde  <code>DragSourceDragEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.DragSourceAdapter.dragExit(DragSourceEvent dse)
<!-- END KEY -->
<!-- BEGIN DATA -->
光标的热点离开放置点（与平台相关）时调用该方法。满足以下任一条件时调用此方法：
 <UL>
<LI>光标的热点不再处于和上一次调用 dragEnter() 相关联的放置点可操作部分内。
 </UL>
或者
 <UL>
<LI>与上一次调用 dragEnter() 相关联的放置点不再处于激活状态。
 </UL>
或者
 <UL>
<LI> 与上一次调用 dragEnter() 相关联的放置点拒绝该拖动。 
 </UL>
 
@param dse  <code>DragSourceEvent</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.DragSourceAdapter.dragDropEnd(DragSourceDropEvent dsde)
<!-- END KEY -->
<!-- BEGIN DATA -->
调用此方法来通知 Drag 和 Drop 操作已完成。可以使用 <code>DragSourceDropEvent</code> 的 getDropSuccess() 方法来确定终止状态。getDropAction() 方法返回选择放置点应用到 Drop 操作的操作。一旦此方法完成，则当前的 <code>DragSourceContext</code> 和关联的资源就变为无效。

@param dsde <code>DragSourceDropEvent</code>

<!-- END DATA -->
