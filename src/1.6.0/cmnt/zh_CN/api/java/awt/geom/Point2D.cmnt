<!-- BEGIN KEY -->
public abstract class java.awt.geom.Point2D extends java.lang.Object implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Point2D</code> 类定义表示 {@code (x,y)} 坐标空间中位置的点。
 <p>
此类是所有存储 2D 坐标的对象的惟一抽象超类。坐标的实际存储表示形式由子类决定。

@version 	1.21, 02/24/06
@author	Jim Graham
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.geom.Point2D()
<!-- END KEY -->
<!-- BEGIN DATA -->
这是一个无法直接实例化的抽象类。特定于类型的实现子类可用于实例化，并提供用于存储满足以下各种存取方法所需信息的多种格式。

@see java.awt.geom.Point2D.Float
@see java.awt.geom.Point2D.Double
@see java.awt.Point
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract double java.awt.geom.Point2D.getX()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 <code>double</code> 精度返回此 <code>Point2D</code> 的 X 坐标。
@return 此 <code>Point2D</code> 的 X 坐标。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract double java.awt.geom.Point2D.getY()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 <code>double</code> 精度返回此 <code>Point2D</code> 的 Y 坐标。
@return 此 <code>Point2D</code> 的 Y 坐标。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.awt.geom.Point2D.setLocation(double x, double y)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>Point2D</code> 的位置设为指定的 <code>double</code> 坐标。
@param x 此 {@code Point2D} 的新 X 坐标
@param y 此 {@code Point2D} 的新 Y 坐标
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.geom.Point2D.setLocation(Point2D p)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>Point2D</code> 的位置设为指定 <code>Point2D</code> 对象的坐标。
@param p 用于设置此 <code>Point2D</code> 的指定 <code>Point2D</code>
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public static double java.awt.geom.Point2D.distanceSq(double x1, double y1, double x2, double y2)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回两个点之间距离的平方。
@param x1 第一个指定点的 X 坐标
@param y1 第一个指定点的 Y 坐标
@param x2 第二个指定点的 X 坐标
@param y2 第二个指定点的 Y 坐标
@return 两组指定坐标之间距离的平方。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public static double java.awt.geom.Point2D.distance(double x1, double y1, double x2, double y2)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回两个点之间距离。
@param x1 第一个指定点的 X 坐标
@param y1 第一个指定点的 Y 坐标
@param x2 第二个指定点的 X 坐标
@param y2 第二个指定点的 Y 坐标
@return 两组指定坐标之间的距离。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distanceSq(double px, double py)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回从此 <code>Point2D</code> 到指定点的距离的平方。
@param px 将对照此 <code>Point2D</code> 进行测量的指定点的 X 坐标
@param py 将对照此 <code>Point2D</code> 进行测量的指定点的 X 坐标
@return 此 <code>Point2D</code> 与指定点之间距离的平方。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distanceSq(Point2D pt)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回从此 <code>Point2D</code> 到指定 <code>Point2D</code> 的距离的平方。
将对照此 <code>Point2D</code> 进行测量的指定点的 X 坐标
@param py 将对照此 <code>Point2D</code> 进行测量的指定点的 X 坐标
@return 此 <code>Point2D</code> 与指定点之间的距离。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distance(double px, double py)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回从此 <code>Point2D</code> 到指定点的距离。
@param px 将对照此 <code>Point2D</code> 进行测量的指定点的 X 坐标
@param py 将对照此 <code>Point2D</code> 进行测量的指定点的 X 坐标
@return 此 <code>Point2D</code> 与指定点之间的距离。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distance(Point2D pt)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回从此 <code>Point2D</code> 到指定 <code>Point2D</code> 的距离。
@param pt 将对照此 <code>Point2D</code> 进行测量的指定点
@return 此 <code>Point2D</code> 和指定 <code>Point2D</code> 之间的距离。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.geom.Point2D.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个与此对象具有相同类和相同内容的新对象。
@return 此实例的一个副本。
@exception  OutOfMemoryError    如果没有足够的内存。
@see        java.lang.Cloneable
@since      1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.geom.Point2D.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>Point2D</code> 的哈希码。
@return 此 <code>Point2D</code> 的哈希码

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.geom.Point2D.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定两个点是否相等。如果 <code>Point2D</code> 的两个实例的 <code>x</code> 和 <code>y</code> 成员字段值相同，则它们是相等的，这表示它们在坐标空间中的位置是一样的。
@param obj 要与此 <code>Point2D</code> 的实例进行比较的对象
@return 如果要比较的对象是 <code>Point2D</code> 的实例且值相同，则返回 <code>true</code>；否则返回 <code>false</code>。
@since 1.2

<!-- END DATA -->
