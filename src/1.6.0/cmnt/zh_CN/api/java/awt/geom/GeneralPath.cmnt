<!-- BEGIN KEY -->
public final class java.awt.geom.GeneralPath extends java.awt.geom.Path2D.Float
<!-- END KEY -->
<!-- BEGIN DATA -->
{@code GeneralPath} 类表示根据直线、二次曲线和三次 (B&eacute;zier) 曲线构造的几何路径。它可以包含多个子路径。
 <p>
{@code GeneralPath} 是一个遗留的 final 类，它精确地实现了其超类 {@link Path2D.Float} 的行为。与 {@link Path2D.Double} 一起，{@link Path2D} 类提供了通用几何路径的完整实现，支持 {@link Shape} 和 {@link PathIterator} 接口的所有功能，能够显式地选择不同级别的内部坐标精度。
 <p>
在处理能够表示且能使用浮点精度的数据时，可以使用 {@code Path2D.Float}（或此遗留 {@code GeneralPath} 子类）。对于要求双精度的准确性或范围的数据，可以使用 {@code Path2D.Double}。

@version 1.64, 03/13/06
@author Jim Graham
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.GeneralPath()
<!-- END KEY -->
<!-- BEGIN DATA -->
根据 {@link #WIND_NON_ZERO} 的默认旋绕规则构造一个新的单精度空 {@code GeneralPath} 对象。

@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.GeneralPath(int rule)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据指定旋绕规则构造一个新的 <code>GeneralPath</code> 对象，以控制需要定义路径内部的操作。

@param rule 旋绕规则
@see #WIND_EVEN_ODD
@see #WIND_NON_ZERO
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.GeneralPath(int rule, int initialCapacity)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据指定旋绕规则和指定初始容量构造一个新的 <code>GeneralPath</code> 对象，以存储路径坐标。此数是对将添加到路径中的路径段数量的初始猜测，但存储量可以根据需要扩展，以存储添加的所有路径段。

@param rule 旋绕规则
@param initialCapacity 对路径中路径段数量的估计
@see #WIND_EVEN_ODD
@see #WIND_NON_ZERO
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.GeneralPath(Shape s)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据任意 {@link Shape} 对象构造一个新 <code>GeneralPath</code> 对象。此路径的所有初始几何形状和旋绕规则均取自指定的 <code>Shape</code> 对象。

@param s 指定的 <code>Shape</code> 对象
@since 1.2

<!-- END DATA -->
