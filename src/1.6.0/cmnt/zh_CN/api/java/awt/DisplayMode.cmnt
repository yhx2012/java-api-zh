<!-- BEGIN KEY -->
public final class java.awt.DisplayMode extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>DisplayMode</code> 类封装 <code>GraphicsDevice</code> 的位深、高度、宽度和刷新率。更改图形设备的显示模式的能力是与平台和配置有关的，可能并不总是可用的（请参见 {@link GraphicsDevice#isDisplayChangeSupported}）。
 <p>
有关全屏独占模式的更多信息，请参阅<a href="http://java.sun.com/docs/books/tutorial/extra/fullscreen/index.html">全屏独占模式 API 教程</a>。

 @see GraphicsDevice
 @see GraphicsDevice#isDisplayChangeSupported
 @see GraphicsDevice#getDisplayModes
 @see GraphicsDevice#setDisplayMode
 @author Michael Martak
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.DisplayMode.BIT_DEPTH_MULTI
<!-- END KEY -->
<!-- BEGIN DATA -->
位深的值（如果此显示模式支持多个位深）。
@see #getBitDepth

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.DisplayMode.REFRESH_RATE_UNKNOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
刷新率的值（如果未知）。
@see #getRefreshRate

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.DisplayMode(int width, int height, int bitDepth, int refreshRate)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用提供的参数创建一个新的显示模式对象。
@param width 显示的宽度（用像素表示）
@param height 显示的高度（用像素表示）
@param bitDepth 显示的位深（用位/像素表示）。如果有多个位深可用，它可以是 <code>BIT_DEPTH_MULTI</code>。
@param refreshRate 显示的刷新率（以赫兹表示）。如果信息不可用，则它可以是 <code>REFRESH_RATE_UNKNOWN</code>。
@see #BIT_DEPTH_MULTI
@see #REFRESH_RATE_UNKNOWN

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.DisplayMode.getHeight()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回显示的高度（以像素表示）。
@return 显示的高度（以像素表示）

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.DisplayMode.getWidth()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回显示的宽度（以像素表示）。
@return 显示的宽度（以像素表示）

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.DisplayMode.getBitDepth()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回显示的位深（以位/像素表示）。如果此显示模式支持多个位深，则它可以是 <code>BIT_DEPTH_MULTI</code>。
@return 显示的刷新率（以赫兹表示）。
@see #BIT_DEPTH_MULTI

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.DisplayMode.getRefreshRate()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回显示的刷新率（以赫兹表示）如果信息不可用，则它可以是 <code>REFRESH_RATE_UNKNOWN</code>。
返回显示的刷新率（以赫兹表示）。
@see #REFRESH_RATE_UNKNOWN

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.DisplayMode.equals(DisplayMode dm)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对两个显示模式是否相同的判断。
@return 两个显示模式是否相同

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.DisplayMode.equals(Object dm)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.DisplayMode.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
