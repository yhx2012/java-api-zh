<!-- BEGIN KEY -->
public class java.awt.TexturePaint extends java.lang.Object implements java.awt.Paint
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>TexturePaint</code> 类提供一种用被指定为 {@link BufferedImage} 的纹理填充 {@link Shape} 的方式。因为 <code>BufferedImage</code> 数据由 <code>TexturePaint</code> 对象复制，所以 <code>BufferedImage</code> 对象的大小应该小一些。在构造时，纹理定位在用户空间中指定的 {@link Rectangle2D} 的左上角。在理论上，计算纹理在设备空间中的位置的方式是，在用户空间中的所有方向上无限制地复制指定 <code>Rectangle2D</code>，然后将 <code>BufferedImage</code> 映射到各个复制的 <code>Rectangle2D</code>。
@see Paint
@see Graphics2D#setPaint
@version 1.39, 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.TexturePaint(BufferedImage txtr, Rectangle2D anchor)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造 <code>TexturePaint</code> 对象。
@param txtr 具有用于绘制的纹理的 <code>BufferedImage</code> 对象
@param anchor 用户空间中用于定位和复制纹理的 <code>Rectangle2D</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.BufferedImage java.awt.TexturePaint.getImage()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回用于填充形状的 <code>BufferedImage</code> 纹理。
@return 一个 <code>BufferedImage</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.Rectangle2D java.awt.TexturePaint.getAnchorRect()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回定位纹理图像并设置其大小的固定矩形的副本。
@return 用来将此 <code>TexturePaint</code> 固定并设置其大小的 <code>Rectangle2D</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.PaintContext java.awt.TexturePaint.createContext(ColorModel cm, Rectangle deviceBounds, Rectangle2D userBounds, AffineTransform xform, RenderingHints hints)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建并返回用于生成颜色模式的上下文。
@param cm 接收 <code>Paint</code> 数据的 {@link ColorModel}。此参数只用作一个提示。
@param deviceBounds 要呈现的图形原语的设备空间边界框
@param userBounds 要呈现的图形原语的用户空间边界框
@param xform 从用户空间到设备空间的 {@link AffineTransform}
@param hints 可用于指定模式的最终呈现方式的 {@link RenderingHints} 对象
@return 用于生成颜色模式的 {@link PaintContext}。
@see PaintContext

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.TexturePaint.getTransparency()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>TexturePaint</code> 的透明模式。
@return 整数值形式的此 <code>TexturePaint</code> 的透明模式。
@see Transparency

<!-- END DATA -->
