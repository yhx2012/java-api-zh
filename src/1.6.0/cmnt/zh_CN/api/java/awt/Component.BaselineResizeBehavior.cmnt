<!-- BEGIN KEY -->
public static final class java.awt.Component.BaselineResizeBehavior extends java.lang.Enum
<!-- END KEY -->
<!-- BEGIN DATA -->
常见方式的枚举，指示组件的基线可以随大小的更改而更改。基线调整行为主要用于布局管理器，在组件大小发生更改时，布局管理器需要知道基线位置的更改方式。通常，在组件大小大于等于最小大小（实际最小大小；不是开发人员指定的最小大小）时，基线调整行为才是有效的。在组件大小小于最小大小的情况下，基线可能以基线调整行为所指示方式之外的某种方式发生更改。类似地，如果大小接近 <code>Integer.MAX_VALUE</code> 和/或 <code>Short.MAX_VALUE</code>，基线可能以基线调整行为所指示方式之外的某种方式发生更改。

@see #getBaselineResizeBehavior
@see #getBaseline(int,int)
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.Component.BaselineResizeBehavior java.awt.Component.BaselineResizeBehavior.CONSTANT_ASCENT
<!-- END KEY -->
<!-- BEGIN DATA -->
指示基线相对于 y 原点保持不变。也就是说，无论高度或宽度如何，<code>getBaseline</code> 均返回相同的值。例如，包含使用 <code>TOP</code> 垂直对齐方式的非空文本的 <code>JLabel</code> 应该具有 <code>CONSTANT_ASCENT</code> 基线类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.Component.BaselineResizeBehavior java.awt.Component.BaselineResizeBehavior.CONSTANT_DESCENT
<!-- END KEY -->
<!-- BEGIN DATA -->
指示基线相对于高度保持不变，且不会随着宽度不同而发生更改。也就是说，对于任意高度 H，H 和 <code>getBaseline(w, H)</code> 之间的差值是相同的。例如，包含使用 <code>BOTTOM</code> 垂直对齐方式的非空文本的 <code>JLabel</code> 应该具有 <code>CONSTANT_DESCENT</code> 基线类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.Component.BaselineResizeBehavior java.awt.Component.BaselineResizeBehavior.CENTER_OFFSET
<!-- END KEY -->
<!-- BEGIN DATA -->
指示基线与组件的中心保持固定的距离。也就是说，对于任意高度 H，<code>getBaseline(w, H)</code> 和 <code>H / 2</code> 之间的差值是相同的（根据舍入误差加上或减去 1）。
 <p>
因为可能存在舍入误差，所以建议通过两个连续高度请求（计算）基线，并使用返回值来确定计算结果是否需要值为 1 的 pad。以下显示了如何计算任意高度的基线：
 <pre>
Dimension preferredSize = component.getPreferredSize();
int baseline = getBaseline(preferredSize.width,
preferredSize.height);
int nextBaseline = getBaseline(preferredSize.width,
preferredSize.height + 1);
// Amount to add to height when calculating where baseline
// lands for a particular height:
int padding = 0;
// Where the baseline is relative to the mid point
int baselineOffset = baseline - height / 2;
if (preferredSize.height % 2 == 0 &amp;&amp;
baseline != nextBaseline) {
padding = 1;
   }
else if (preferredSize.height % 2 == 1 &amp;&amp;
baseline == nextBaseline) {
baselineOffset--;
padding = 1;
   }
// The following calculates where the baseline lands for
// the height z:
int calculatedBaseline = (z + padding) / 2 + baselineOffset;
 </pre>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.Component.BaselineResizeBehavior java.awt.Component.BaselineResizeBehavior.OTHER
<!-- END KEY -->
<!-- BEGIN DATA -->
指示基线调整行为无法使用其他任何常量表示。它也可能指示基线随组件宽度的不同而不同。没有基线的组件也会返回它。

<!-- END DATA -->
