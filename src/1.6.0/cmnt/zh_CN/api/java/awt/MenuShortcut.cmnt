<!-- BEGIN KEY -->
public class java.awt.MenuShortcut extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
表示 MenuItem 键盘加速器的 <code>MenuShortcut</code> 类。
 <p>
菜单快捷方式是使用虚拟键代码（而不是字符）创建的。例如，Ctrl-a（假设 Control 是加速键）的菜单快捷方式将通过类似以下的代码创建： 
 <p>
MenuShortcut ms = new MenuShortcut(KeyEvent.VK_A, false);
 <p>
此加速键是与平台有关的，可通过 {@link Toolkit#getMenuShortcutKeyMask} 得到。

@author Thomas Ball
@version 1.25, 12/19/03
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
 int java.awt.MenuShortcut.key
<!-- END KEY -->
<!-- BEGIN DATA -->
菜单快捷方式的虚拟键代码。这是用以创建菜单快捷方式的键代码。注意，它是一个虚拟键代码，而不是一个字符，例如 KeyEvent.VK_A，而不是&ldquo;a&rdquo;。注：在 1.1.x 中，必须在菜单项上使用 setActionCommand()，该菜单项的快捷方式才能正常工作，否则，它将产生 null 动作命令。

@serial
@see #getKey()
@see #usesShiftModifier()
@see java.awt.event.KeyEvent
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
 boolean java.awt.MenuShortcut.usesShift
<!-- END KEY -->
<!-- BEGIN DATA -->
指示是否按下了 Shft 键。如果为 true，则表示按下了 Shift 键。如果为 false，则未按下 Shift 键

@serial
@see #usesShiftModifier()
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.MenuShortcut(int key)
<!-- END KEY -->
<!-- BEGIN DATA -->
为指定的虚拟键代码构造一个新的 MenuShortcut。
@param key 此菜单快捷方式的原键代码，如果按下此键，它将在 {@link java.awt.event.KeyEvent KeyEvent} 的键代码字段中返回。
@see java.awt.event.KeyEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.MenuShortcut(int key, boolean useShiftModifier)
<!-- END KEY -->
<!-- BEGIN DATA -->
为指定的虚拟键代码构造一个新的菜单快捷方式。
@param key 此菜单快捷方式的原键代码，如果按下此键，它将在 {@link java.awt.event.KeyEvent KeyEvent} 的键代码字段中返回。
@param useShiftModifier 指示按下 SHIFT 键是否调用此菜单快捷方式。
@see java.awt.event.KeyEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.MenuShortcut.getKey()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此菜单快捷方式的原键代码。
@return 此菜单快捷方式的原键代码。
@see java.awt.event.KeyEvent
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.MenuShortcut.usesShiftModifier()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回是否此菜单快捷方式必须使用 SHIFT 键调用。
@return 如果此菜单快捷方式必须使用 SHIFT 键调用，则返回 <code>true</code>；否则返回 <code>false</code>。
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.MenuShortcut.equals(MenuShortcut s)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此菜单快捷方式是否与另一个相同：定义相等性意味着两个菜单快捷方式使用相同的键，而且两者或者使用或者不使用 SHIFT 键。
@param s 要与该菜单快捷方式比较的菜单快捷方式。
@return 如果此 MenuShortcut 与另一个相同，则返回 <code>true</code>；否则返回 <code>false</code>。
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.MenuShortcut.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此菜单快捷方式是否与另一个相同：定义相等性意味着两个菜单快捷方式使用相同的键，而且两者或者使用或者不使用 SHIFT 键。
@param obj 要与此对象比较的对象。
@return 如果此 MenuShortcut 与另一个相同，则返回 <code>true</code>；否则返回 <code>false</code>。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.MenuShortcut.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此菜单快捷方式的哈希码。
@return 此菜单快捷方式的哈希码。
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.MenuShortcut.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此菜单快捷方式的国际化描述。
@return 此 MenuShortcut 的字符串表示形式。
@since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String java.awt.MenuShortcut.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示此 MenuShortcut 状态的参数字符串。此字符串对调试很有用。
@return    此菜单快捷方式的参数字符串。
@since JDK1.1

<!-- END DATA -->
