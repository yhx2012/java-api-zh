<!-- BEGIN KEY -->
public class java.awt.BufferCapabilities extends java.lang.Object implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
缓冲区的能力和属性。

@see java.awt.image.BufferStrategy#getCapabilities()
@see GraphicsConfiguration#getBufferCapabilities
@author Michael Martak
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.BufferCapabilities(ImageCapabilities frontCaps, ImageCapabilities backCaps, BufferCapabilities.FlipContents flipContents)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个指定缓冲区能力的新对象
@param frontCaps 前台缓冲区的能力，不能为 <code>null</code>
@param backCaps 后台缓冲区和中间缓冲区的能力，不能为 <code>null</code>
@param flipContents 页面翻转后后台缓冲区的内容，如果未使用页面翻转（意味着使用了位图传输 (blitting)），则为 <code>null</code>
@exception IllegalArgumentException 如果 frontCaps 或 backCaps 为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.ImageCapabilities java.awt.BufferCapabilities.getFrontBufferCapabilities()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 前台（显示）缓冲区的图像能力

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.ImageCapabilities java.awt.BufferCapabilities.getBackBufferCapabilities()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 所有后台缓冲区（中间缓冲区可看作后台缓冲区）的图像能力

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.BufferCapabilities.isPageFlipping()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 缓冲区策略是否使用了页面翻转；通过切换视频指针（或者通过内部内存复制），一个使用页面翻转的缓冲区集合可以在前台缓冲区与一个或多个后台缓冲区之间进行内容的内部交换。一个非翻转的缓冲区集合使用位图传输将一个缓冲区的内容复制到另一个缓冲区；如果是这种情况，则 <code>getFlipContents</code> 返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.BufferCapabilities.FlipContents java.awt.BufferCapabilities.getFlipContents()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 页面翻转后得到的后台缓冲区的内容。当 <code>isPageFlipping</code> 返回 <code>false</code> 时，此值为 <code>null</code>，意味着使用位图传输。它可以是 <code>FlipContents.UNDEFINED</code>（假定的默认值）、<code>FlipContents.BACKGROUND</code>、<code>FlipContents.PRIOR</code> 或 <code>FlipContents.COPIED</code> 中的一个。
@see #isPageFlipping
@see FlipContents#UNDEFINED
@see FlipContents#BACKGROUND
@see FlipContents#PRIOR
@see FlipContents#COPIED

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.BufferCapabilities.isFullScreenRequired()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 是否页面翻转只在全屏模式下可用。如果它为 <code>true</code>，则页面翻转需要全屏独占模式。
@see #isPageFlipping
@see GraphicsDevice#setFullScreenWindow

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.BufferCapabilities.isMultiBufferAvailable()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 是否使用多于两个缓冲区（一个或更多中间缓冲区、前台缓冲区或后台缓冲区）执行页面翻转操作。
@see #isPageFlipping

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.BufferCapabilities.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 此 BufferCapabilities 对象的一个副本。

<!-- END DATA -->
