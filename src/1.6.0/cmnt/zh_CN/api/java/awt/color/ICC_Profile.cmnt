<!-- BEGIN KEY -->
public class java.awt.color.ICC_Profile extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
与设备无关和设备相关颜色空间的颜色配置文件数据表示形式，该表示形式基于国际色彩联盟规范 ICC.1:2001-12，颜色配置文件的文件格式（请参阅 <A href="http://www.color.org"> http://www.color.org</A>）。
 <p>
可从适当的 ICC_Profile 构造 ICC_ColorSpace 对象。通常，一个 ICC_ColorSpace 与一个 ICC 配置文件相关联，该配置文件可以是输入、显示或输出配置文件（请参阅 ICC 规范）。还有设备链接、抽象、颜色空间转换和指定的颜色配置文件。这些配置文件在标记颜色和图像方面用处不大，但在其他方面很有用（特别是设备链接配置文件能够提高从一台设备的颜色空间向另一台设备颜色空间进行转换的性能）。
 <p> 
ICC 配置文件表示从配置文件（如监视器）的颜色空间到配置文件连接空间 (PCS) 的转换。用于标记图像或颜色的相关配置文件有一个 PCS，该 PCS 是在 ICC 配置文件格式规范中定义的设备无关空间（一个 CIEXYZ 空间和一个 CIELab 空间）之一。大多数相关的配置文件都具有可逆的转换或显式指定的双向转换。
 <p>

@version 10 Feb 1997
@see ICC_ColorSpace

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_INPUT
<!-- END KEY -->
<!-- BEGIN DATA -->
Profile 类是输入。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_DISPLAY
<!-- END KEY -->
<!-- BEGIN DATA -->
Profile 类是显示。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_OUTPUT
<!-- END KEY -->
<!-- BEGIN DATA -->
Profile 类是输出。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_DEVICELINK
<!-- END KEY -->
<!-- BEGIN DATA -->
Profile 类是设备链接。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_COLORSPACECONVERSION
<!-- END KEY -->
<!-- BEGIN DATA -->
Profile 类是颜色空间变换。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_ABSTRACT
<!-- END KEY -->
<!-- BEGIN DATA -->
Profile 类是抽象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_NAMEDCOLOR
<!-- END KEY -->
<!-- BEGIN DATA -->
Profile 类是指定的颜色。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigXYZData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'XYZ '。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLabData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'Lab '。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLuvData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'Luv '。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigYCbCrData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'YCbr'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigYxyData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'Yxy '。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRgbData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'RGB '。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGrayData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'GRAY'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigHsvData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'HSV'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigHlsData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'HLS'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCmykData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'CMYK'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCmyData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'CMY '。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace2CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'2CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace3CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'3CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace4CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'4CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace5CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'5CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace6CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'6CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace7CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'7CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace8CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'8CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace9CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'9CLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceACLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'ACLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceBCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'BCLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceCCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'CCLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceDCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'DCLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceECLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'ECLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceFCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件颜色空间类型签名：'FCLR'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigInputClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC Profile 类签名：'scnr'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDisplayClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC Profile 类签名：'mntr'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigOutputClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC Profile 类签名：'prtr'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLinkClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC Profile 类签名：'link'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAbstractClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC Profile 类签名：'abst'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigColorSpaceClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC Profile 类签名：'spac'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigNamedColorClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC Profile 类签名：'nmcl'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icPerceptual
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件呈现目的：Perceptual。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icRelativeColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件呈现目的：RelativeColorimetric。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icMediaRelativeColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件呈现目的：Media-RelativeColorimetric。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSaturation
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件呈现目的：Saturation。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icAbsoluteColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件呈现目的：AbsoluteColorimetric。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icICCAbsoluteColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件呈现目的：ICC-AbsoluteColorimetric。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigHead
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'head' - 专用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAToB0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'A2B0'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAToB1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'A2B1'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAToB2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'A2B2'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBlueColorantTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'bXYZ'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBlueMatrixColumnTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'bXYZ'。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBlueTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'bTRC'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBToA0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'B2A0'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBToA1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'B2A1'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBToA2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'B2A2'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCalibrationDateTimeTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'calt'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCharTargetTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'targ'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCopyrightTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'cprt'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCrdInfoTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'crdi'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDeviceMfgDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'dmnd'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDeviceModelDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'dmdd'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDeviceSettingsTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'devs'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGamutTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'gamt'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGrayTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'kTRC'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGreenColorantTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'gXYZ'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGreenMatrixColumnTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'gXYZ'。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGreenTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'gTRC'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLuminanceTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'lumi'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigMeasurementTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'meas'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigMediaBlackPointTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'bkpt'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigMediaWhitePointTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'wtpt'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigNamedColor2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'ncl2'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigOutputResponseTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'resp'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPreview0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'pre0'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPreview1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'pre1'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPreview2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'pre2'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigProfileDescriptionTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'desc'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigProfileSequenceDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'pseq'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'psd0'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'psd1'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'psd2'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD3Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'psd3'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CSATag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'ps2s'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2RenderingIntentTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'ps2i'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRedColorantTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'rXYZ'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRedMatrixColumnTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'rXYZ'。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRedTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'rTRC'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigScreeningDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'scrd'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigScreeningTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'scrn'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigTechnologyTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'tech'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigUcrBgTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'bfd '。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigViewingCondDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'vued'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigViewingConditionsTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'view'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigChromaticityTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'chrm'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigChromaticAdaptationTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'chad'。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigColorantOrderTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'clro'。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigColorantTableTag
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件标记签名：'clrt'。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrSize
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：以字节为单位的配置文件的大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrCmmId
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：此配置文件的 CMM。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrVersion
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：格式版本号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrDeviceClass
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：配置文件类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrColorSpace
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：数据的颜色空间。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrPcs
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：PCS - XYZ 或 Lab。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrDate
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：创建的日期配置文件。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrMagic
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：icMagicNumber。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrPlatform
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：原始平台。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrFlags
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：各种位设置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrManufacturer
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：设备制造商。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrModel
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：设备型号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrAttributes
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：设备属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrRenderingIntent
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：呈现目的。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrIlluminant
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：配置文件光源。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrCreator
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：配置文件创建者。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrProfileID
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件头位置：配置文件的 ID。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icTagType
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件常量：标记类型 signaturE。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icTagReserved
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件常量：保留。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icCurveCount
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件常量：curveType 计数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icCurveData
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件常量：curveType 数据。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icXYZNumberX
<!-- END KEY -->
<!-- BEGIN DATA -->
ICC 配置文件常量：XYZNumber X。

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.color.ICC_Profile.iccProfileSerializedDataVersion
<!-- END KEY -->
<!-- BEGIN DATA -->
流中其他序列化数据的格式版本。版本 <code>1</code> 对应于 Java 2 平台，1.3 版
@since 1.3
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.awt.color.ICC_Profile.finalize()
<!-- END KEY -->
<!-- BEGIN DATA -->
释放与 ICC_Profile 对象关联的资源。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(byte[] data)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个与 byte 数组中的数据相对应的 ICC_Profile 对象。如果数据未对应一个有效的 ICC_Profile ，则抛出 IllegalArgumentException。
@param data 指定的 ICC 配置文件数据
@return 与指定 <code>data</code> 数组中的数据相对应的 <code>ICC_Profile</code> 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(int cspace)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个与 ColorSpace 类所定义的指定颜色空间之一（如 CS_sRGB）相对应的 ICC_Profile。如果 cspace 不是已定义的颜色空间之一，则抛出 IllegalArgumentException。
   
@param cspace 为之创建配置文件的颜色空间类型。指定的类型是 <CODE>ColorSpace</CODE> 类中所定义的颜色空间常量之一。
       
@return 与指定 <code>ColorSpace</code> 类型相对应的 <code>ICC_Profile</code> 对象。
@exception IllegalArgumentException 如果 <CODE>cspace</CODE> 不是预定义的颜色空间类型之一。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(String fileName) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个与文件中的数据相对应的 ICC_Profile。fileName 可能是绝对文件规范，也可能是相对文件规范。在多个位置中查找相对文件名：首先是 java.iccprofile.path 属性所指定的所有目录；其次是 java.class.path 属性指定的所有目录；最后是用来存储总是可用的配置文件（如 sRGB 的配置文件）的目录。内置的配置文件使用 .pf 作为配置文件的扩展名，如 sRGB.pf。如果无法打开指定的文件或者读取该文件时发生 I/O 错误，则此方法抛出 IOException。如果该文件不包含有效的 ICC 配置文件数据，则抛出 IllegalArgumentException。
@param fileName 包含配置文件数据的文件。

@return 与指定文件中的数据相对应的 <code>ICC_Profile</code> 对象。
@exception IOException 如果无法打开指定的文件或者读取该文件时发生 I/O 错误。
   
@exception IllegalArgumentException 如果该文件不包含有效的 ICC 配置文件数据。 

@exception SecurityException 如果已安装安全管理器并且它不允许对给定文件的读取访问。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(InputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个与 InputStream 中的数据相对应的 ICC_Profile。如果该流不包含有效的 ICC 配置文件数据，则此方法抛出 IllegalArgumentException。如果读取该流时发生 I/O 错误，则抛出 IOException。
@param s 从中读取配置文件数据的输入流。

@return 与指定 <CODE>InputStream</CODE> 中的数据相对应的 <code>ICC_Profile</code> 对象。

@exception IOException 如果读取该流时发生 I/O 错误。
   
@exception IllegalArgumentException 如果该文件不包含有效的 ICC 配置文件数据。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getMajorVersion()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回配置文件的主版本号。
@return  配置文件的主版本号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getMinorVersion()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回配置文件的次版本号。
@return 配置文件的次版本号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getProfileClass()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回配置文件类。
@return 预定义的配置文件类常量之一。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getColorSpaceType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回颜色空间类型。返回由 ColorSpace 类所定义的颜色空间类型常量之一。这是配置文件的&ldquo;输入&rdquo;颜色空间。类型定义了颜色空间的分量数，例如，TYPE_RGB 表示具有三个分量的颜色空间：红色、绿色和蓝色。它并不定义空间的特定颜色特征，例如原色的色度。
@return  <CODE>ColorSpace</CODE> 类中所定义的颜色空间类型常量之一。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getPCSType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回配置文件连接空间 (PCS) 的颜色空间类型。返回由 ColorSpace 类所定义的颜色空间类型常量之一。这是配置文件的&ldquo;输出&rdquo;颜色空间。对于标记颜色或图像很有用的输入、显示或输出配置文件，这可以是 TYPE_XYZ 或 TYPE_Lab，并且应该解释为在 ICC 规范中定义的相应特定颜色空间。对于设备链接配置文件，则可以是任意颜色空间类型常量。
@return  <CODE>ColorSpace</CODE> 类中所定义的颜色空间类型常量之一。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.color.ICC_Profile.write(String fileName) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 ICC_Profile 写入一个文件。
  
@param fileName 配置文件数据所要写入的文件。

@exception IOException 如果无法打开写入的文件或者写入该文件时发生了 I/O 错误。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.color.ICC_Profile.write(OutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将 ICC_Profile 写入一个 OutputStream。

@param s 配置文件数据所要写入的流。

@exception IOException 如果写入该流时发生 I/O 错误。

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.awt.color.ICC_Profile.getData()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与 ICC_Profile 数据相对应的 byte 数组。
@return 包含配置文件数据的 byte 数组。
@see #setData(int, byte[])

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.awt.color.ICC_Profile.getData(int tagSignature)
<!-- END KEY -->
<!-- BEGIN DATA -->
从配置文件中返回包含特定标记数据元素的 byte 数组。依靠在 ICC 规范中所定义的签名来标识各个元素。可使用签名 icSigHead 获得头信息。此方法对于需要直接访问配置文件数据的高级 applet 或应用程序很有用。
  
@param tagSignature 要获得的数据元素的 ICC 标记签名。
 
@return 包含标记数据元素的 byte 数组。如果指定的标记不存在，则返回 <code>null</code>。
@see #setData(int, byte[])

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.color.ICC_Profile.setData(int tagSignature, byte[] tagData)
<!-- END KEY -->
<!-- BEGIN DATA -->
从一个 byte 数组中设置配置文件中的特定标记数据元素。此方法对于需要直接访问配置文件数据的高级 applet 或应用程序很有用。
                                        
@param tagSignature 要设置的数据元素的 ICC 标记签名。
@param tagData 要为特定标记签名设置的数据
@see #getData

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getNumComponents()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回配置文件的&ldquo;输入&rdquo;颜色空间中的颜色分量数。例如，如果此配置文件的颜色空间类型是 TYPE_RGB，则此方法将返回 3。

@return 配置文件的输入颜色空间中的颜色分量数。

@throws ProfileDataException 如果配置文件中的颜色空间无效

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object java.awt.color.ICC_Profile.readResolve() throws java.io.ObjectStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
解析将被反序列化为用 CMM 注册的实例的实例。
@return 用 CMM 注册的配置文件的 ICC_Profile 对象。
@throws ObjectStreamException 永远不会抛出，但是要受序列化规范的限制。

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.awt.color.ICC_Profile.readObject(ObjectInputStream s) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
从流中读取默认的可序列化字段。从流中读取 string 和 byte 数组作为额外的数据。

@param s 用于反序列化的流。
@throws IOException 由 <code>ObjectInputStream</code> 抛出。
@throws ClassNotFoundException 由 <code>ObjectInputStream</code> 抛出。
@serialData 如果 profile 对象是预定义颜色空间（如 <code>&quot;CS_sRGB&quot;</code>）的某个配置文件，则 <code>String</code> 是 {@link ColorSpace} 类中所定义的 <code>CS_<var>*</var></code> 常量之一。否则 string 为 <code>null</code>。
     <p>
<code>byte[]</code> 数组是该配置文件的配置文件数据。对于预定义的配置文件而言，它通常为 <code>null</code>。
     <p>
如果将该 string 识别为预定义颜色空间的常量名，则将对象解析为使用 <code>getInstance(int&nbsp;cspace)</code> 所获得的配置文件，并且忽略配置文件数据。否则将对象解析为使用 <code>getInstance(byte[]&nbsp;data)</code> 所获得的配置文件。
@see #readResolve()
@see #getInstance(int)
@see #getInstance(byte[])

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.awt.color.ICC_Profile.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将默认的可序列化字段写入流。向流中写入 string 和 byte 数组作为额外的数据。

@param s 用于序列化的流。
@throws IOException 由 <code>ObjectInputStream</code> 抛出。
@serialData 如果 profile 对象是预定义颜色空间（如 <code>&quot;CS_sRGB&quot;</code>）的某个配置文件，则 <code>String</code> 是 {@link ColorSpace} 类中所定义的 <code>CS_<var>*</var></code> 常量之一。否则 string 为 <code>null</code>。
<p>
<code>byte[]</code> 数组是该配置文件的配置文件数据。对于预定义的颜色空间，写入的是 <code>null</code> 而不是配置文件数据。如果在以后的 Java API 版本中添加了新的预定义颜色空间，则此类的以后版本中可能会选择这条道：不但写入新预定义颜色空间的颜色空间名称，而且还要写入配置文件数据，以使旧版本仍能反序列化对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object java.awt.color.ICC_Profile.readResolve() throws java.io.ObjectStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
解析将被反序列化为用 CMM 注册的实例的实例。
@return 用 CMM 注册的配置文件的 ICC_Profile 对象。
@throws  ObjectStreamException 不会抛出，但是要受序列化规范的限制。

@since 1.3

<!-- END DATA -->
