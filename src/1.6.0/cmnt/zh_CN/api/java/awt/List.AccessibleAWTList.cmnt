<!-- BEGIN KEY -->
protected class java.awt.List.AccessibleAWTList extends java.awt.Component.AccessibleAWTComponent implements javax.accessibility.AccessibleSelection, java.awt.event.ItemListener, java.awt.event.ActionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 此类实现 <code>List</code> 类的可访问性支持。它提供适合列表用户界面元素的 Java Accessibility API 的实现。

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet java.awt.List.AccessibleAWTList.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的状态设置。

@return 包含对象当前状态的 AccessibleState 的实例
@see AccessibleState

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole java.awt.List.AccessibleAWTList.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的职责。

@return 描述对象职责的 AccessibleRole 的实例
@see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible java.awt.List.AccessibleAWTList.getAccessibleAt(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回本地坐标 Point 所包含的 Accessible 子级（如果存在）。

@return 指定位置的 Accessible（如果存在）

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.List.AccessibleAWTList.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象的可访问子级数。如果此对象的所有子级都实现 Accessible，则此方法应该返回该对象的子级数。

@return  对象的可访问子级数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible java.awt.List.AccessibleAWTList.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象的第 n 个可访问子级。

@param i 子级基于零的索引
@return 对象的第 n 个 Accessible 子级

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleSelection java.awt.List.AccessibleAWTList.getAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象相关联的 AccessibleSelection。在此类的 Java Accessibility API 的实现中，返回的是此对象，它负责为其本身实现 AccessibleSelection 接口。
 
@return 此对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.List.AccessibleAWTList.getAccessibleSelectionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前选择的项数。如果未选择项，则返回值 0。

@return 当前选择的项数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible java.awt.List.AccessibleAWTList.getAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示对象中指定选项的 Accessible。如果没有作出选择，或者所选项数少于传入的整数，则返回值为 null。

@param i 所选项的基于零的索引
@return 包含所选项的 Accessible

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.List.AccessibleAWTList.isAccessibleChildSelected(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果选择了此对象的当前子级，则返回 true。

@param i 此 Accessible 对象的子级的基于零的索引。
@see AccessibleContext#getAccessibleChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.List.AccessibleAWTList.addAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
将对象中的指定选项添加到对象选择中。如果对象支持多种选择，则将指定项添加到所有现有选择中，否则它将替换对象中的所有现有选择。如果已经选择了指定的项，则此方法无效。

@param i 可选择项的基于零的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.List.AccessibleAWTList.removeAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
从对象选择中移除对象中的指定选项。如果目前没有选择指定的项，则此方法无效。

@param i 可选择项的基于零的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.List.AccessibleAWTList.clearAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
清除对象中的选择，从而对象中没有选择任何项。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.List.AccessibleAWTList.selectAllAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果对象支持多种选择，则导致选择对象中的所有已选择项。

<!-- END DATA -->
