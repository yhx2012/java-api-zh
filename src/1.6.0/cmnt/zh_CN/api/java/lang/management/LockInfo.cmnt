<!-- BEGIN KEY -->
public class java.lang.management.LockInfo extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
关于<em>锁</em> 的信息。锁可以是内置对象监视器、<em>可拥有同步器 (ownable synchronizer)</em> 或与同步器关联的 {@link Condition Condition} 对象。
 <p>
<a name="OwnableSynchronizer">可拥有同步器</a>是可以由一个线程独占的同步器，使用 {@link AbstractOwnableSynchronizer AbstractOwnableSynchronizer}（或其子类）来实现其同步属性。{@link ReentrantLock ReentrantLock} 和 {@link ReentrantReadWriteLock ReentrantReadWriteLock} 是平台提供的两个可拥有同步器示例。

<h4><a name="MappedType">MXBean 映射</a></h4>
根据 {@linkplain javax.management.MXBean MXBeans} <a href="../../../javax/management/MXBean.html#mapping-rules">类型映射规则</a>的指定，<tt>LockInfo</tt> 将被映射到 {@link CompositeData CompositeData}。
 
@see java.util.concurrent.locks.AbstractOwnableSynchronizer 
@see java.util.concurrent.locks.Condition

@author  Mandy Chung 
@version 1.6, 02/27/06 
@since   1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.management.LockInfo(String className, int identityHashCode)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <tt>LockInfo</tt> 对象。

@param className 锁对象的完全限定类名称。
@param identityHashCode 锁对象的{@link System#identityHashCode 标识哈希码}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.lang.management.LockInfo.getClassName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回锁对象的完全限定类名称。

@return 锁对象的完全限定类名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.lang.management.LockInfo.getIdentityHashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回从 {@link System#identityHashCode} 方法返回的锁对象的标识哈希码。

@return 锁对象的标识哈希码。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.lang.management.LockInfo.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回锁的字符串表示形式。返回的字符串表示形式由以下内容组成：锁对象的类名称、at 标记字符 '@' 和对象<em>标识</em> 哈希码的十六进制无符号表示形式。此方法返回的字符串等于以下表达式的值：
 <blockquote>
 <pre>
lock.getClass().getName() + '@' + Integer.toHexString(System.identityHashCode(lock))
 </pre></blockquote>
其中 <tt>lock</tt> 为锁对象。

@return 锁的字符串表示形式。

<!-- END DATA -->
