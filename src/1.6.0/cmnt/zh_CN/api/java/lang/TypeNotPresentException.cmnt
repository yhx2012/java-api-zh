<!-- BEGIN KEY -->
public class java.lang.TypeNotPresentException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
当应用程序试图使用表示类型名称的字符串对类型进行访问，但无法找到带有指定名称的类型定义时，抛出该异常。此异常与 {@link ClassNotFoundException} 不同，<tt>ClassNotFoundException</tt> 是一个经过检查的异常，而此异常是未经检查的。

<p>注意，当访问未定义的类型变量时，以及当加载类型（例如，类、接口或注释类型）时，可以使用此异常。

@author  Josh Bloch
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.TypeNotPresentException(String typeName, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
为指定类型构造一个带指定原因的 <tt>TypeNotPresentException</tt>。

@param typeName 不可用类型的完全限定名
@param cause 当系统试图加载指定类型时抛出的异常；如果类型不可用或不适用，则为 <tt>null</tt>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.lang.TypeNotPresentException.typeName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回不可用类型的完全限定名。

@return 不可用类型的完全限定名

<!-- END DATA -->
