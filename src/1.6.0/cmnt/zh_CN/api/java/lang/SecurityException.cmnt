<!-- BEGIN KEY -->
public class java.lang.SecurityException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
由安全管理器抛出的异常，指示存在安全侵犯。 

@author  unascribed
@version 1.16, 12/19/03
@see     java.lang.SecurityManager
@since   JDK1.0


<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造不带详细消息的 <code>SecurityException</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 <code>SecurityException</code>。 

@param   s   详细消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定详细消息和原因的 <code>SecurityException</code>。


@param message 详细消息（保存此消息，以便以后通过 {@link #getMessage()} 方法获取它）。
@param  cause 原因（保存此原因，以便以后通过 {@link #getCause()} 方法获取它）。（允许使用 <tt>null</tt> 值，这表明原因不存在或是未知的。）
@since  1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个 <code>SecurityException</code>，它带有指定的原因和 <tt>(cause==null &#063; null :cause.toString())</tt> 的详细消息（通常包含该类和 <tt>cause</tt> 的详细消息）。

@param cause 原因（保存此原因，以便以后通过 {@link #getCause()} 方法获取它）。（允许使用 <tt>null</tt> 值，这表明原因不存在或是未知的。）
@since  1.5

<!-- END DATA -->
