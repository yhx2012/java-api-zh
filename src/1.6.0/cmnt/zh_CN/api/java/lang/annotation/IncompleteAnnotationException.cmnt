<!-- BEGIN KEY -->
public class java.lang.annotation.IncompleteAnnotationException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
若某个注释在编译（或序列化）后将某个注释类型添加到其类型定义中，而程序试图该注释类型的元素时，抛出此异常。如果新元素有默认值，则不抛出此异常。

@author  Josh Bloch
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.annotation.IncompleteAnnotationException(java.lang.Class<? extends java.lang.annotation.Annotation> annotationType, String elementName)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个指示指定注释类型中缺少指定元素的 IncompleteAnnotationException。

@param annotationType 注释类型的 Class 对象
@param elementName 缺少元素的名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.IncompleteAnnotationException.annotationType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回带有缺少元素的注释类型的 Class 对象。

@return 带有缺少元素的注释类型的 Class 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.lang.annotation.IncompleteAnnotationException.elementName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回缺少元素的名称。

@return 缺少元素的名称

<!-- END DATA -->
