<!-- BEGIN KEY -->
public static interface java.lang.Thread.UncaughtExceptionHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
当 <tt>Thread</tt> 因未捕获的异常而突然终止时，调用处理程序的接口。
<p>当某一线程因未捕获的异常而即将终止时，Java 虚拟机将使用 {@link #getUncaughtExceptionHandler} 查询该线程以获得其 <tt>UncaughtExceptionHandler</tt> 的线程，并调用处理程序的 <tt>uncaughtException</tt> 方法，将线程和异常作为参数传递。如果某一线程没有明确设置其 <tt>UncaughtExceptionHandler</tt>，则将它的 <tt>ThreadGroup</tt> 对象作为其 <tt>UncaughtExceptionHandler</tt>。如果 <tt>ThreadGroup</tt> 对象对处理异常没有什么特殊要求，那么它可以将调用转发给{@linkplain #getDefaultUncaughtExceptionHandler 默认的未捕获异常处理程序}。

@see #setDefaultUncaughtExceptionHandler
@see #setUncaughtExceptionHandler
@see ThreadGroup#uncaughtException
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.lang.Thread.UncaughtExceptionHandler.uncaughtException(Thread t, Throwable e)
<!-- END KEY -->
<!-- BEGIN DATA -->

当给定线程因给定的未捕获异常而终止时，调用该方法。
<p>Java 虚拟机将忽略该方法抛出的任何异常。
@param t 线程 
@param e 异常

<!-- END DATA -->
