<!-- BEGIN KEY -->
public class java.lang.InterruptedException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
当线程在活动之前或活动期间处于正在等待、休眠或占用状态且该线程被中断时，抛出该异常。有时候，一种方法可能希望测试当前线程是否已被中断，如果已被中断，则立即抛出此异常。下列代码可以达到这种效果： 
 <pre>
  if (Thread.interrupted())  // Clears interrupted status!
      throw new InterruptedException();
 </pre>

 @author  Frank Yellin
 @version 1.17, 11/17/05
 @see     java.lang.Object#wait()
 @see     java.lang.Object#wait(long)
 @see     java.lang.Object#wait(long, int)
 @see     java.lang.Thread#sleep(long)
 @see     java.lang.Thread#interrupt()
 @see     java.lang.Thread#interrupted()
 @since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.InterruptedException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造不带详细消息的 <code>InterruptedException</code>。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.InterruptedException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 <code>InterruptedException</code>。 

 @param   s   详细消息。

<!-- END DATA -->
