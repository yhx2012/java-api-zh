<!-- BEGIN KEY -->
public class java.lang.IllegalAccessException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
当应用程序试图反射性地创建一个实例（而不是数组）、设置或获取一个字段，或者调用一个方法，但当前正在执行的方法无法访问指定类、字段、方法或构造方法的定义时，抛出 IllegalAccessException。

 @author  unascribed
 @version 1.14, 12/19/03
 @see     Class#newInstance()
 @see     java.lang.reflect.Field#set(Object, Object)
 @see     java.lang.reflect.Field#setBoolean(Object, boolean)
 @see     java.lang.reflect.Field#setByte(Object, byte)
 @see     java.lang.reflect.Field#setShort(Object, short)
 @see     java.lang.reflect.Field#setChar(Object, char)
 @see     java.lang.reflect.Field#setInt(Object, int)
 @see     java.lang.reflect.Field#setLong(Object, long)
 @see     java.lang.reflect.Field#setFloat(Object, float)
 @see     java.lang.reflect.Field#setDouble(Object, double)
 @see     java.lang.reflect.Field#get(Object)
 @see     java.lang.reflect.Field#getBoolean(Object)
 @see     java.lang.reflect.Field#getByte(Object)
 @see     java.lang.reflect.Field#getShort(Object)
 @see     java.lang.reflect.Field#getChar(Object)
 @see     java.lang.reflect.Field#getInt(Object)
 @see     java.lang.reflect.Field#getLong(Object)
 @see     java.lang.reflect.Field#getFloat(Object)
 @see     java.lang.reflect.Field#getDouble(Object)
 @see     java.lang.reflect.Method#invoke(Object, Object[])
 @see     java.lang.reflect.Constructor#newInstance(Object[])
 @since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.IllegalAccessException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造不带详细消息的 <code>IllegalAccessException</code> 。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.IllegalAccessException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 <code>IllegalAccessException</code>。 

 @param   s   详细消息。

<!-- END DATA -->
