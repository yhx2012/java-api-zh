<!-- BEGIN KEY -->
public class java.lang.AssertionError extends java.lang.Error
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出该异常指示某个断言失败。

<p>此类提供七个单参数公共构造方法，确保通过以下调用返回的断言错误：
 <pre>
     new AssertionError(<i>expression</i>)
 </pre>
具有作为其详细消息的<i>表达式</i> 的<i>字符串转换</i>（这在<a
 href="http://java.sun.com/docs/books/jls/second_edition/html/j.title.doc.html"> <i>The Java Language Specification 第二版</i></a> 的<a href="http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#40220">第 15.18.1.1 节</a>中已定义），而不管<i>表达式</i> 的类型是什么。

@version 1.7, 12/19/03
@since   1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个不带详细消息的 AssertionError。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError(Object detailMessage)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AssertionError，其详细消息派生于指定的对象，该对象将根据 <i>The Java Language Specification 第二版</i> 第 15.18.1.1 节中的定义转换为一个字符串。
<p>
如果指定对象是一个 <tt>Throwable</tt> 的实例，那么它将成为新构造的断言错误的 <i>cause</i>。

@param detailMessage 用来构造详细消息的值 
@see   Throwable#getCause()

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError(boolean detailMessage)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AssertionError，其详细消息派生于指定的 <code>boolean</code>，该 <code>boolean</code> 将根据 <i>The Java Language Specification 第二版</i> 第 15.18.1.1 节中的定义转换为一个字符串。

@param detailMessage 用来构造详细消息的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError(char detailMessage)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AssertionError，其详细消息派生于指定的 <code>char</code>，该 <code>char</code> 将根据 <i>The Java Language Specification 第二版</i> 第 15.18.1.1 节中的定义转换为一个字符串。

@param detailMessage 用来构造详细消息的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError(int detailMessage)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AssertionError，其详细消息派生于指定的 <code>int</code>，该 <code>int</code> 将根据 <i>The Java Language Specification 第二版</i> 第 15.18.1.1 节中的定义转换为一个字符串。

@param detailMessage 用来构造详细消息的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError(long detailMessage)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AssertionError，其详细消息派生于指定的 <code>long</code>，该 <code>long</code> 将根据 <i>The Java Language Specification 第二版</i> 第 15.18.1.1 节中的定义转换为一个字符串。

@param detailMessage 用来构造详细消息的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError(float detailMessage)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AssertionError，其详细消息派生于指定的 <code>float</code>，该 <code>float</code> 将根据 <i>The Java Language Specification 第二版</i> 第 15.18.1.1 节中的定义转换为一个字符串。

@param detailMessage 用来构造详细消息的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.AssertionError(double detailMessage)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AssertionError，其详细消息派生于指定的 <code>double</code>，该 <code>double</code> 将根据 <i>The Java Language Specification 第二版</i> 第 15.18.1.1 节中的定义转换为一个字符串。

@param detailMessage 用来构造详细消息的值

<!-- END DATA -->
