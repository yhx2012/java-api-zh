<!-- BEGIN KEY -->
public class java.lang.ref.WeakReference extends java.lang.ref.Reference
<!-- END KEY -->
<!-- BEGIN DATA -->
弱引用对象，它们并不禁止其指示对象变得可终结，并被终结，然后被回收。弱引用最常用于实现规范化的映射。

<p> 假定垃圾回收器确定在某一时间点上某个对象是<a href="package-summary.html#reachability">弱可到达对象</a>。这时，它将自动清除针对此对象的所有弱引用，以及通过强引用链和软引用，可以从其到达该对象的针对任何其他弱可到达对象的所有弱引用。同时它将声明所有以前的弱可到达对象为可终结的。在同一时间或晚些时候，它将那些已经向引用队列注册的新清除的弱引用加入队列。

@version  1.18, 12/19/03
@author   Mark Reinhold
@since    1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.ref.WeakReference(T referent)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建引用给定对象的新的弱引用。新的引用没有向任何队列注册。

@param referent 新的弱引用将引用的对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.ref.WeakReference(T referent, java.lang.ref.ReferenceQueue<? super T> q)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建引用给定对象的新的弱引用，并向给定队列注册该引用。

@param referent 新的弱引用将引用的对象
@param q 该引用向其注册的队列；如果不需要注册，则为 <tt>null</tt> 

<!-- END DATA -->
