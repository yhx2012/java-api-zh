<!-- BEGIN KEY -->
public abstract class java.lang.ref.Reference extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
引用对象的抽象基类。此类定义了常用于所有引用对象的操作。因为引用对象是通过与垃圾回收器的密切合作来实现的，所以不能直接为此类创建子类。

@version  1.43, 04/10/06 
@author   Mark Reinhold
@since    1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public T java.lang.ref.Reference.get()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此引用对象的指示对象。如果此引用对象已经由程序或垃圾回收器清除，则此方法将返回 <code>null</code>。

@return	 此引用所引用的对象；如果此引用对象已经清除，则返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.lang.ref.Reference.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
清除此引用对象。调用此方法不会导致对象被加入队列。

<p> 只有 Java 代码才调用此方法；当垃圾回收器清除引用时，可以直接进行操作，无需调用此方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.lang.ref.Reference.isEnqueued()
<!-- END KEY -->
<!-- BEGIN DATA -->
由程序或垃圾回收器通知是否已将此引用对象加入队列。如果创建此引用对象时没有在队列中注册它，则该方法将总是返回 <code>false</code>。

@return	 当且仅当此引用对象已经加入队列时返回 <code>true</code> 
 
<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.lang.ref.Reference.enqueue()
<!-- END KEY -->
<!-- BEGIN DATA -->
将此引用对象添加到引用对象已向其注册的队列（如果有）。

<p> 只有 Java 代码才调用此方法；当垃圾回收器将引用加入队列时，可以直接进行操作，无需调用此方法。

@return	 如果成功将此引用对象加入队列中，则返回 <code>true</code>；如果它已经加入队列或者在创建时没有在队列中注册它，则返回 <code>false</code>。

<!-- END DATA -->
