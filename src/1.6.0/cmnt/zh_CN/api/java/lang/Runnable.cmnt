<!-- BEGIN KEY -->
public interface java.lang.Runnable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Runnable</code> 接口应该由那些打算通过某一线程执行其实例的类来实现。类必须定义一个称为 <code>run</code> 的无参数方法。
 <p>
设计该接口的目的是为希望在活动时执行代码的对象提供一个公共协议。例如，<code>Thread</code> 类实现了 <code>Runnable</code>。激活的意思是说某个线程已启动并且尚未停止。
 <p>
此外，<code>Runnable</code> 为非 <code>Thread</code> 子类的类提供了一种激活方式。通过实例化某个 <code>Thread</code> 实例并将自身作为运行目标，就可以运行实现 <code>Runnable</code> 的类而无需创建 <code>Thread</code> 的子类。大多数情况下，如果只想重写 <code>run()</code> 方法，而不重写其他 <code>Thread</code> 方法，那么应使用 <code>Runnable</code> 接口。这很重要，因为除非程序员打算修改或增强类的基本行为，否则不应为该类创建子类。

@author  Arthur van Hoff
@version 1.24, 12/19/03
@see     java.lang.Thread
@see java.util.concurrent.Callable
@since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.lang.Runnable.run()
<!-- END KEY -->
<!-- BEGIN DATA -->
使用实现接口 <code>Runnable</code> 的对象创建一个线程时，启动该线程将导致在独立执行的线程中调用对象的 <code>run</code> 方法。 
 <p>
方法 <code>run</code> 的常规协定是，它可能执行任何所需的动作。

@see     java.lang.Thread#run()

<!-- END DATA -->
