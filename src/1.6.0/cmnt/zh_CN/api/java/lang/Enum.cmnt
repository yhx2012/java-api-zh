<!-- BEGIN KEY -->
public abstract class java.lang.Enum extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
这是所有 Java 语言枚举类型的公共基本类。

@author  Josh Bloch
@author  Neal Gafter
@version 1.15, 01/27/06
@since   1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private final java.lang.String java.lang.Enum.name
<!-- END KEY -->
<!-- BEGIN DATA -->
此枚举常量的名称，在枚举声明中声明。大多数程序员应该使用 {@link #toString} 方法，而不是访问此字段。

<!-- END DATA -->
<!-- BEGIN KEY -->
private final int java.lang.Enum.ordinal
<!-- END KEY -->
<!-- BEGIN DATA -->
此枚举常量的序数（它在枚举声明中的位置，其中初始常量序数为零）。
 
大多数程序员不会使用此字段。它被设计用于复杂的基于枚举的数据结构，比如 {@link java.util.EnumSet} 和 {@link java.util.EnumMap}。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Enum(String name, int ordinal)
<!-- END KEY -->
<!-- BEGIN DATA -->
单独的构造方法。程序员无法调用此构造方法。该构造方法用于由响应枚举类型声明的编译器发出的代码。

@param name - 此枚举常量的名称，它是用来声明该常量的标识符。
@param ordinal - 枚举常量的序数（它在枚举声明中的位置，其中初始常量序数为零）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String java.lang.Enum.name()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此枚举常量的名称，在其枚举声明中对其进行声明。
<b>与此方法相比，大多数程序员应该优先考虑使用 {@link #toString} 方法，因为 toString 方法返回更加用户友好的名称。</b>该方法主要设计用于特殊情形，其正确性取决于获取正确的名称，其名称不会随版本的改变而改变。

@return 枚举常量的名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.lang.Enum.ordinal()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回枚举常量的序数（它在枚举声明中的位置，其中初始常量序数为零）。

大多数程序员不会使用此方法。它被设计用于复杂的基于枚举的数据结构，比如 {@link java.util.EnumSet} 和 {@link java.util.EnumMap}。

@return 枚举常量的序数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.lang.Enum.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回枚举常量的名称，它包含在声明中。可以重写此方法，虽然一般来说没有必要。当存在更加&ldquo;程序员友好的&rdquo;字符串形式时，应该使用枚举类型重写此方法。

@return 枚举常量的名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public final boolean java.lang.Enum.equals(Object other)
<!-- END KEY -->
<!-- BEGIN DATA -->
当指定对象等于此枚举常量时，返回 true。

@param other 要与此对象进行相等性比较的对象。
@return  如果指定对象等于此枚举常量，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.lang.Enum.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回枚举常量的哈希码。

@return 枚举常量的哈希码。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final java.lang.Object java.lang.Enum.clone() throws java.lang.CloneNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 CloneNotSupportedException。这可保证永远不会复制枚举，这对于保留其&ldquo;单元素&rdquo;状态是必需的。

@return（永远不返回）

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int java.lang.Enum.compareTo(E o)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较此枚举与指定对象的顺序。在该对象小于、等于或大于指定对象时，分别返回负整数、零或正整数。

枚举常量只能与相同枚举类型的其他枚举常量进行比较。该方法实现的自然顺序就是声明常量的顺序。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此枚举常量的枚举类型相对应的 Class 对象。当且仅当 e1.getDeclaringClass() == e2.getDeclaringClass() 时，两个枚举常量 e1 和 e2 的枚举类型才相同。（由该方法返回的值不同于由 {@link Object#getClass} 方法返回的值，{@link Object#getClass} 方法用于带有特定常量的类主体的枚举常量。）

@return 与此枚举常量的枚举类型相对应的 Class 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public static T extends java.lang.Enum<T> java.lang.Enum.valueOf(java.lang.Class<T> enumType, String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回带指定名称的指定枚举类型的枚举常量。名称必须与在此类型中声明枚举常量所用的标识符完全匹配。（不允许使用额外的空白字符。）

@param enumType 要从中返回常量的枚举类型的 <tt>Class</tt> 对象
@param name 要返回的常量名称
@return 带指定名称的指定枚举类型的枚举常量
@throws IllegalArgumentException 如果指定枚举类型不包含指定名称的常量，或者指定类对象不表示枚举类型
@throws NullPointerException 如果 <tt>enumType</tt> 或 <tt>name</tt> 为空 
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final void java.lang.Enum.finalize()
<!-- END KEY -->
<!-- BEGIN DATA -->
枚举类不能有 finalize 方法。

<!-- END DATA -->
