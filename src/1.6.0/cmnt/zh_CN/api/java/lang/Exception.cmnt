<!-- BEGIN KEY -->
public class java.lang.Exception extends java.lang.Throwable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Exception</code> 类及其子类是 <code>Throwable</code> 的一种形式，它指出了合理的应用程序想要捕获的条件。

@author  Frank Yellin
@version 1.31, 12/19/03
@see     java.lang.Error
@since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造详细消息为 <code>null</code> 的新异常。原因尚未被初始化，可在以后通过调用 {@link #initCause} 对其进行初始化。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的新异常。原因尚未被初始化，可在以后通过调用 {@link #initCause} 对其进行初始化。

@param   message   详细消息。保存详细消息，以便以后通过 {@link #getMessage()} 方法获取它。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息和原因的新异常。<p>注意，与 <code>cause</code> 相关的详细消息<i>不是</i> 自动合并到这个异常的详细消息中的。

@param  message 详细消息（保存此消息，以便以后通过 {@link #getMessage()} 方法获取它）。
@param  cause 原因（保存此原因，以便以后通过{@link #getCause()} 方法获取它）。
（允许使用 <tt>null</tt> 值，指出原因不存在或者是未知的。）
@since  1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据指定的原因和 <tt>(cause==null &#063; null : cause.toString())</tt> 的详细消息构造新异常（它通常包含 <tt>cause</tt> 的类和详细消息）。对于那些与其他可抛出异常（例如，{@link java.security.PrivilegedActionException}）的包装器相同的异常，此构造方法很有用。

@param  cause 原因（保存此原因，以便以后通过{@link #getCause()} 方法获取它）。
（允许使用 <tt>null</tt> 值，指出原因不存在或者是未知的。）
@since  1.4

<!-- END DATA -->
