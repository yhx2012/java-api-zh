<!-- BEGIN KEY -->
public class java.lang.reflect.InvocationTargetException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
InvocationTargetException 是一种包装由调用方法或构造方法所抛出异常的经过检查的异常。

<p>从版本 1.4 开始，此异常已经更新，符合通用异常链机制。&ldquo;目标异常&rdquo;是在构造的时候提供的，可以通过 {@link #getTargetException()} 方法访问，这类对象目前被认为是导致异常的<i>原因</i>，可以通过 {@link Throwable#getCause()} 方法以及前面提到的&ldquo;遗留方法&rdquo;访问它。

@see Method
@see Constructor

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Throwable java.lang.reflect.InvocationTargetException.target
<!-- END KEY -->
<!-- BEGIN DATA -->
如果使用 InvocationTargetException(Throwable target) 构造方法来实例化该对象，则此字段将保持目标
 
@serial
 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.reflect.InvocationTargetException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造以 <code>null</code> 作为目标异常的 <code>InvocationTargetException</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.InvocationTargetException(Throwable target)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带目标异常的 InvocationTargetException。
 
@param target 目标异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.InvocationTargetException(Throwable target, String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带目标异常和详细消息的 InvocationTargetException。

@param target 目标异常
@param s      详细消息

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable java.lang.reflect.InvocationTargetException.getTargetException()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取抛出的目标异常。

<p>该方法早于通用异常链设施。{@link Throwable#getCause()} 方法现在是获得此信息的首选方法。

@return 抛出的目标异常（此异常的原因）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable java.lang.reflect.InvocationTargetException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此异常的原因（抛出的目标异常，可能为 <tt>null</tt>）。

@return  此异常的原因。
@since   1.4

<!-- END DATA -->
