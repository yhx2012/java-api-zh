<!-- BEGIN KEY -->
public interface java.lang.reflect.ParameterizedType extends java.lang.reflect.Type
<!-- END KEY -->
<!-- BEGIN DATA -->
ParameterizedType 表示参数化类型，如 Collection&lt;String&gt;。

<p>参数化类型在反射方法首次需要时创建（在此包中指定）。当创建参数化类型 p 时，p 实例化的一般类型声明会被解析，并且按递归方式创建 p 的所有类型参数。有关类型变量创建过程的详细信息，请参阅 {@link java.lang.reflect.TypeVariable TypeVariable}。重复创建的参数化类型无效。

<p>实现此接口的类的实例必须实现 equals() 方法，该方法用于比较两个共享相同一般类型声明和具有相同类型参数的任何实例。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.Type[] java.lang.reflect.ParameterizedType.getActualTypeArguments()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示此类型实际类型参数的 <tt>Type</tt> 对象的数组。
 
<p>注意，在某些情况下，返回的数组为空。如果此类型表示嵌套在参数化类型中的非参数化类型，则会发生这种情况。

@return 表示此类型的实际类型参数的 <tt>Type</tt> 对象的数组
@throws <tt>TypeNotPresentException</tt> 如果任何实际类型参数引用不存在的类型声明
@throws <tt>MalformedParameterizedTypeException</tt> 如果任何实际类型参数引用参数化类型，该类型出于某种原因无法被实例化
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.Type java.lang.reflect.ParameterizedType.getRawType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <tt>Type</tt> 对象，表示声明此类型的类或接口。

@return  <tt>Type</tt> 对象，表示声明此类型的类或接口
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.Type java.lang.reflect.ParameterizedType.getOwnerType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <tt>Type</tt> 对象，表示此类型是其成员之一的类型。例如，如果此类型为 {@code O<T>.I<S>}，则返回 {@code O<T>} 的表示形式。

<p>如果此类型为顶层类型，则返回 <tt>null</tt>。

@return <tt>Type</tt> 对象，表示此类型是其成员之一的类型。如果此类型是顶层类型，则返回 <tt>null</tt>
@throws <tt>TypeNotPresentException</tt> 如果所有者类型引用了一个不存在的类型声明
@throws <tt>MalformedParameterizedTypeException</tt> 如果所有者类型引用了出于某些原因无法实例化的参数化类型
@since 1.5

<!-- END DATA -->
