<!-- BEGIN KEY -->
public final class java.lang.reflect.ReflectPermission extends java.security.BasicPermission
<!-- END KEY -->
<!-- BEGIN DATA -->
反射操作的 Permission 类。ReflectPermission 是一种<em>指定权限</em>，没有动作。当前定义的唯一名称是 <tt>suppressAccessChecks</tt>，它允许取消由反射对象在其使用点上执行的标准 Java 语言访问检查 - 对于 public、default（包）访问、protected、private 成员。
 <P>
下表提供了允许权限的简要说明，并讨论了授予代码权限的风险。
 <P>

<table border=1 cellpadding=5 summary="Table shows permission target name, what the permission allows, and associated risks">
<tr>
<th>权限目标名称</th>
<th>权限允许的内容</th>
<th>允许此权限的风险</th>
</tr>

<tr>
<td>suppressAccessChecks</td>
<td>能够访问类中的字段和调用方法。注意，这不仅包括 public、而且还包括 protected 和 private 字段和方法。</td>
<td>存在的风险是，通常不可用的信息（也许是保密信息）和方法可能会接受恶意代码访问。</td>
</tr>

</table>

@see java.security.Permission
@see java.security.BasicPermission
@see AccessibleObject
@see Field#get
@see Field#set
@see Method#invoke
@see Constructor#newInstance

@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.ReflectPermission(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造不带指定名称的 ReflectPermission。

@param name ReflectPermission 的名称

@throws  NullPointerException 如果 <code>name</code> 为 <code>null</code>。

@throws  IllegalArgumentException 如果 <code>name</code> 为空

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.ReflectPermission(String name, String actions)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定名称和动作的 ReflectPermission。如果动作为 null，它们将被忽略。

@param name ReflectPermission 的名称

@param actions 应该为 null

@throws  NullPointerException 如果 <code>name</code> 为 <code>null</code>。

@throws  IllegalArgumentException 如果 <code>name</code> 为空

<!-- END DATA -->
