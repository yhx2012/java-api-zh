<!-- BEGIN KEY -->
public class java.util.logging.ErrorManager extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
可将 ErrorManager 对象附加到 Handler，以便处理日志记录过程中 Handler 上所发生的错误。
 <p>
在处理日志记录输出时，如果 Handler 遇到问题，则 Handler 应该调用其相关的 ErrorManager，而不是抛出异常以返回到日志记录调用的发出方（其可能对此不感兴趣）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.logging.ErrorManager.GENERIC_FAILURE
<!-- END KEY -->
<!-- BEGIN DATA -->
GENERIC_FAILURE 用于不属于其他任何一类的失败。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.logging.ErrorManager.WRITE_FAILURE
<!-- END KEY -->
<!-- BEGIN DATA -->
WRITE_FAILURE 用于对输出流的写入失败时。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.logging.ErrorManager.FLUSH_FAILURE
<!-- END KEY -->
<!-- BEGIN DATA -->
FLUSH_FAILURE 用于对输出流的刷新失败时。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.logging.ErrorManager.CLOSE_FAILURE
<!-- END KEY -->
<!-- BEGIN DATA -->
CLOSE_FAILURE 用于对输出流的关闭失败时。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.logging.ErrorManager.OPEN_FAILURE
<!-- END KEY -->
<!-- BEGIN DATA -->
OPEN_FAILURE 用于对输出流的打开失败时。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.logging.ErrorManager.FORMAT_FAILURE
<!-- END KEY -->
<!-- BEGIN DATA -->
FORMAT_FAILURE 用于因任何格式化问题导致的失败 。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.util.logging.ErrorManager.error(String msg, Exception ex, int code)
<!-- END KEY -->
<!-- BEGIN DATA -->
在发生 Handler 失败时调用 error 方法。
 <p>
可在子类中重写此方法。此基类中的默认行为是将第一个调用报告给 System.err，忽略随后的调用。

@param msg 描述性的字符串（可能为 null）。
@param ex 异常（可能为 null）。
@param code ErrorManager 中所定义的错误代码。

<!-- END DATA -->
