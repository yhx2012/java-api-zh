<!-- BEGIN KEY -->
public class java.util.concurrent.RejectedExecutionException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
当无法执行某个任务时,由 {@link Executor} 抛出的异常。
 
@since 1.5
@author Doug Lea

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造不带详细消息的 <tt>RejectedExecutionException</tt>。原因尚未进行初始化，可在以后通过调用 {@link #initCause(Throwable) initCause} 来初始化。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的 <tt>RejectedExecutionException</tt>。原因尚未进行初始化，可在以后通过调用 {@link #initCause(Throwable) initCause} 来初始化。

@param message 详细消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息和原因的 <tt>RejectedExecutionException</tt>。

@param  message 详细消息。
@param  cause 原因（保存此原因，是为了以后通过 {@link #getCause()} 方法来获取）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定原因的 <tt>RejectedExecutionException</tt>。详细消息设置为：<pre> (cause ==
 null ? null :cause.toString())</pre>（它通常包含该类和 <tt>cause</tt> 的详细消息）。

@param cause 原因（保存此原因，是为了以后通过 {@link #getCause()} 方法来获取）。

<!-- END DATA -->
