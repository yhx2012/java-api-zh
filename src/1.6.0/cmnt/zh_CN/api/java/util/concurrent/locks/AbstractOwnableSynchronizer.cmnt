<!-- BEGIN KEY -->
public abstract class java.util.concurrent.locks.AbstractOwnableSynchronizer extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
可以由线程以独占方式拥有的同步器。此类为创建锁和相关同步器（伴随着所有权的概念）提供了基础。<tt>AbstractOwnableSynchronizer</tt> 类本身不管理或使用此信息。但是，子类和工具可以使用适当维护的值帮助控制和监视访问以及提供诊断。

@since 1.6
@author Doug Lea

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.concurrent.locks.AbstractOwnableSynchronizer()
<!-- END KEY -->
<!-- BEGIN DATA -->
供子类使用的空构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final void java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread t)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置当前拥有独占访问的线程。<tt>null</tt> 参数表示没有线程拥有访问。此方法不另外施加任何同步或 <tt>volatile</tt> 字段访问。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final java.lang.Thread java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回由 <tt>setExclusiveOwnerThread</tt> 最后设置的线程；如果从未设置，则返回 <tt>null</tt>。此方法不另外施加任何同步或 <tt>volatile</tt> 字段访问。
@return 所有者线程

<!-- END DATA -->
