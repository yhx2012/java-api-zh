<!-- BEGIN KEY -->
public interface java.util.concurrent.Callable
<!-- END KEY -->
<!-- BEGIN DATA -->
返回结果并且可能抛出异常的任务。实现者定义了一个不带任何参数的叫做 <tt>call</tt> 的方法。

<p><tt>Callable</tt> 接口类似于 {@link java.lang.Runnable}，两者都是为那些其实例可能被另一个线程执行的类设计的。但是 <tt>Runnable</tt> 不会返回结果，并且无法抛出经过检查的异常。

<p> {@link Executors} 类包含一些从其他普通形式转换成 <tt>Callable</tt> 类的实用方法。

@see Executor
@since 1.5
@author Doug Lea
@param <V> <tt>call</tt> 方法的结果类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public V java.util.concurrent.Callable.call() throws java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
计算结果，如果无法计算结果，则抛出一个异常。

@return 计算的结果
@throws Exception 如果无法计算结果

<!-- END DATA -->
