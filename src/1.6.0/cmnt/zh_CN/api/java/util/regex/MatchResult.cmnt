<!-- BEGIN KEY -->
public interface java.util.regex.MatchResult
<!-- END KEY -->
<!-- BEGIN DATA -->
匹配操作的结果。

<p>此接口包含用于确定与正则表达式匹配结果的查询方法。通过 <code>MatchResult</code> 可以查看匹配边界、组和组边界，但是不能修改。

@author  Michael McCloskey
@version 1.5 06/28/04
@see Matcher
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.regex.MatchResult.start()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回匹配的初始索引。

@return  第一个匹配字符的索引

@throws  IllegalStateException 如果没有尝试任何匹配或者以前的匹配操作失败

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.regex.MatchResult.start(int group)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回在匹配期间由给定组捕获的子序列的初始索引。

<p> <a href="Pattern.html#cg">捕获组</a>是从左到右的索引，从 1 开始。组零表示整个模式，因此表达式 <i>m.</i><tt>start(0)</tt> 等效于 <i>m.</i><tt>start()</tt>。  </p>

@param  group 此匹配器模式中捕获组的索引

@return  组捕获的第一个字符的索引；如果匹配成功但组本身没有匹配项，则返回 <tt>-1</tt>

@throws  IllegalStateException 如果没有尝试任何匹配或者以前的匹配操作失败

@throws  IndexOutOfBoundsException 如果在给定索引的模式中不存在捕获组

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.regex.MatchResult.end()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回最后匹配字符之后的偏移量。</p>

@return  最后匹配字符之后的偏移量

@throws  IllegalStateException 如果没有尝试任何匹配或者以前的匹配操作失败

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.regex.MatchResult.end(int group)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回在匹配期间由给定组所捕获子序列的最后字符之后的偏移量。

<p> <a href="Pattern.html#cg">捕获组</a>是从左到右的索引，从 1 开始。组零表示整个模式，因此表达式 <i>m.</i><tt>end(0)</tt> 等效于 <i>m.</i><tt>end()</tt>。</p>

@param  group 此匹配器模式中捕获组的索引

@return  组捕获的最后字符之后的偏移量；如果匹配成功但组本身没有匹配项，则返回 <tt>-1</tt>

@throws  IllegalStateException 如果没有尝试任何匹配或者以前的匹配操作失败

@throws  IndexOutOfBoundsException 如果在给定索引的模式中不存在捕获组

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.regex.MatchResult.group()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回由以前匹配所匹配的输入子序列。

<p> 对于具有输入序列 <i>s</i> 的匹配器 <i>m</i>，表达式 <i>m.</i><tt>group()</tt> 和 <i>s.</i><tt>substring(</tt><i>m.</i><tt>start(),</tt>&nbsp;<i>m.</i><tt>end())</tt> 是等效的。</p>

<p> 注意，某些模式（例如，<tt>a*</tt>）匹配空字符串。当模式成功匹配输入中的空字符串时，此方法将返回空字符串。</p>

@return 以前匹配所匹配的字符串形式的子序列（可能为空）

@throws  IllegalStateException 如果没有尝试任何匹配或者以前的匹配操作失败

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.regex.MatchResult.group(int group)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回在以前匹配操作期间由给定组捕获的输入子序列。

<p> 对于匹配器 <i>m</i>、输入序列 <i>s</i> 和组索引 <i>g</i>，表达式 <i>m.</i><tt>group(</tt><i>g</i><tt>)</tt> 和 <i>s.</i><tt>substring(</tt><i>m.</i><tt>start(</tt><i>g</i><tt>),</tt>&nbsp;<i>m.</i><tt>end(</tt><i>g</i><tt>))</tt> 是等效的。  </p>
 
<p> <a href="Pattern.html#cg">捕获组</a>是从左到右的索引，从 1 开始。组零表示整个模式，因此表达式 <tt>m.group(0)</tt> 等效于 <tt>m.group()</tt>。
 </p>

<p> 如果该匹配成功了，但指定组未能匹配输入序列的任何部分，则返回 <tt>null</tt>。注意，某些组（例如，<tt>(a*)</tt>）匹配空字符串。当这种组成功匹配输入中的空字符串时，此方法将返回空字符串。  </p>

@param  group 此匹配器模式中捕获组的索引

@return  在以前的匹配期间组所捕获的子序列（可能为空）；如果组未能匹配输入的部分，则返回 <tt>null</tt>

@throws  IllegalStateException 如果没有尝试任何匹配或者以前的匹配操作失败

@throws  IndexOutOfBoundsException 如果在给定索引的模式中不存在捕获组

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.regex.MatchResult.groupCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此匹配结果的模式中的捕获组数。

<p> 根据惯例，零组表示整个模式。它不包括在此计数中。

<p> 任何小于等于由此方法返回的值的非负整数保证是此匹配器的有效组索引。</p>

@return 此匹配器模式中的捕获组数

<!-- END DATA -->
