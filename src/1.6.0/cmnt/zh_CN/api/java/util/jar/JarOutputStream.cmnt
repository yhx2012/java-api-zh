<!-- BEGIN KEY -->
public class java.util.jar.JarOutputStream extends java.util.zip.ZipOutputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>JarOutputStream</code> 类用于向任何输出流写入 JAR 文件内容。它扩展了 <code>java.util.zip.ZipOutputStream</code> 类，使之支持编写可选的 <code>Manifest</code> 条目。<code>Manifest</code> 可用于指定有关 JAR 文件及其条目的元信息。

@author  David Connelly
@version 1.22, 12/19/03
@see	  Manifest
@see	  java.util.zip.ZipOutputStream
@since   1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.jar.JarOutputStream(OutputStream out, Manifest man) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的 <code>Manifest</code> 创建新的 <code>JarOutputStream</code>。清单作为输出流的第一个条目被写入。

@param out 实际输出流
@param man 可选的 <code>Manifest</code>
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.jar.JarOutputStream(OutputStream out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建不带清单的新的 <code>JarOutputStream</code>。
@param out 实际输出流
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.jar.JarOutputStream.putNextEntry(ZipEntry ze) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
开始写入新的 JAR 文件条目，并将流定位到条目数据的开始处。此方法还将关闭以前的任何条目。如果没有指定条目的压缩方法，则使用默认压缩方法。如果条目没有设置修改时间，则使用当前时间。

@param ze 要写入的 ZIP/JAR 条目
@exception ZipException 如果发生 ZIP 错误
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
