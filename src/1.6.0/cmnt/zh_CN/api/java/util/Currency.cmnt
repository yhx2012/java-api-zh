<!-- BEGIN KEY -->
public final class java.util.Currency extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
表示货币。货币由 ISO 4217 货币代码标识。有关此内容的详细消息（包括货币代码表），请访问 <a href="http://www.bsi-global.com/"> BSi 网站 </a>。
 <p>
该类的设计目标是：对于任何指定货币，从不会有多个 <code>Currency</code> 实例。因此，没有公共的构造方法。可以使用 <code>getInstance</code> 方法获得 <code>Currency</code> 实例。

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private final java.lang.String java.util.Currency.currencyCode
<!-- END KEY -->
<!-- BEGIN DATA -->
此货币的 ISO 4217 货币代码。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Currency java.util.Currency.getInstance(String currencyCode)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定货币代码的 <code>Currency</code> 实例。

@param currencyCode 货币的 ISO 4217 代码
@return 给定货币代码的 <code>Currency</code> 实例
@exception NullPointerException 如果 <code>currencyCode</code> 为 null
@exception IllegalArgumentException 如果 <code>currencyCode</code> 不是受支持 ISO 4217 代码。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Currency java.util.Currency.getInstance(Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定语言环境的国家/地区的 <code>Currency</code> 实例。忽略语言环境的语言和变量组件。因为国家/地区会改变其货币，所以结果可能随时间而变化。例如，对于欧洲货币联盟的最初成员国，该方法在 2001 年 12 月 31 日前返回旧的国家/地区货币，从 2002 年 1 月 1 日（各自国家/地区的本地时间）起返回欧元。
 <p>
对于没有货币的地区（比如南极洲），该方法返回 <code>null</code>。

@param locale 该语言环境的国家/地区需要 <code>Currency</code> 实例
@return 给定语言环境的国家/地区的 <code>Currency</code> 实例，或者 null
@exception NullPointerException 如果 <code>locale</code> 或其国家/地区代码为 null
@exception IllegalArgumentException 如果给定语言环境的国家/地区不是受支持的 ISO 3166 国家/地区代码。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.Currency.getCurrencyCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此货币的 ISO 4217 货币代码。

@return 此货币的 ISO 4217 货币代码。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.Currency.getSymbol()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取默认语言环境的货币符号。例如，对于美元，如果默认语言环境是美国，则符号是 "$"，而对于其他语言环境，它可能是 "US$"。如果无法确定符号，则返回 ISO 4217 货币代码。

@return 默认语言环境的货币符号

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.Currency.getSymbol(Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取指定语言环境的货币符号。例如，对于美元，如果指定语言环境是美国，则符号是 "$"，而对于其他语言环境，它可能是 "US$"。如果无法确定符号，则返回 ISO 4217 货币代码。

@param locale 需要显示此货币名称的语言环境
@return 指定语言环境的货币符号
@exception NullPointerException 如果 <code>locale</code> 为 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.Currency.getDefaultFractionDigits()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此货币一起使用的默认小数位数。例如对于欧元，默认的小数位数为 2，而对于日元，则为 0。对于伪货币（如 IMF Special Drawing Rights），则返回 -1。

@return 此货币使用的默认小数位数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.Currency.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此货币的 ISO 4217 货币代码。

@return 此货币的 ISO 4217 货币代码

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object java.util.Currency.readResolve()
<!-- END KEY -->
<!-- BEGIN DATA -->
把正被反序列化的实例解析为每种货币的单个实例。

<!-- END DATA -->
