<!-- BEGIN KEY -->
public abstract class java.util.EventListenerProxy extends java.lang.Object implements java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
将一组附加参数与侦听器关联的 EventListener 类的抽象包装器类。子类必须为附加的实参或形参提供存储和访问器方法。

EventListenerProxy 的子类作为将指定属性与其侦听器关联的方法，可能由 getListeners() 方法返回。

例如，支持指定属性的 Bean 将包含一个两参数的方法签名，用于为属性添加 PropertyChangeListener：
 
     public void addPropertyChangeListener(String propertyName, PropertyChangeListener listener);
 
如果 Bean 也实现零参数获得侦听器方法：
 
     public PropertyChangeListener[] getPropertyChangeListeners();

那么该数组可能包含内部 PropertyChangeListeners，它也是 PropertyChangeListenerProxy 对象。

如果调用方法可以获取指定属性，那么它必须测试该元素是否是一个代理类。
 
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.EventListenerProxy(EventListener listener)
<!-- END KEY -->
<!-- BEGIN DATA -->
@param listener 侦听器对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.EventListener java.util.EventListenerProxy.getListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
@return 与此代理关联的侦听器。

<!-- END DATA -->
