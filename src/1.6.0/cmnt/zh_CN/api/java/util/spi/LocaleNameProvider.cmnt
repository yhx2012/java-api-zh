<!-- BEGIN KEY -->
public abstract class java.util.spi.LocaleNameProvider extends java.util.spi.LocaleServiceProvider
<!-- END KEY -->
<!-- BEGIN DATA -->
为 {@link java.util.Locale Locale} 类提供本地化名称的服务提供者的一个抽象类。

@since        1.6
@version     
@(#)LocaleNameProvider.java	1.2 05/11/17

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.spi.LocaleNameProvider()
<!-- END KEY -->
<!-- BEGIN DATA -->
唯一的构造方法。（由子类构造方法调用，通常是隐式的）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String java.util.spi.LocaleNameProvider.getDisplayLanguage(String languageCode, Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回适合向用户显示的给定 ISO 639 语言代码和给定语言环境的本地化名称。例如，如果 <code>languageCode</code> 是 &quot;fr&quot; 并且 <code>locale</code> 是 en_US，则 getDisplayLanguage() 将返回 &quot;French&quot;；如果 <code>languageCode</code> 是 &quot;en&quot; 并且 <code>locale</code> 是 fr_FR，则 getDisplayLanguage() 将返回 &quot;anglais&quot;。如果无法根据 <code>locale</code> 对返回的名称进行本地化（比方说提供者没有 Croatian 的日本名称），则此方法返回 null。
@param languageCode ISO 639 语言代码字符串，用 'a' (U+0061) 和 'z' (U+007A) 之间的两个小写字母表示
@param locale 所需的语言环境
@return 指定语言环境的给定语言代码的名称；如果该名称不可用，则返回 null。
@exception NullPointerException 如果 <code>languageCode</code> 或 <code>locale</code> 为 null
@exception IllegalArgumentException 如果 <code>languageCode</code> 不是以两个小写字母的形式表示，或者 <code>locale</code> 不是从 {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()} 返回的语言环境之一。
@see java.util.Locale#getDisplayLanguage(java.util.Locale)

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String java.util.spi.LocaleNameProvider.getDisplayCountry(String countryCode, Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回适合向用户显示的给定 ISO 3166 国家代码和给定语言环境的本地化名称。例如，如果 <code>countryCode</code> 是 &quot;FR&quot; 并且 <code>locale</code> 是 en_US，则 getDisplayCountry() 将返回 &quot;France&quot;；如果 <code>countryCode</code> 是 &quot;US&quot; 并且 <code>locale</code> 是 fr_FR，则 getDisplayCountry() 将返回 &quot;Etats-Unis&quot;。如果无法根据 <code>locale</code> 对返回的名称进行本地化（比方说提供者没有 Croatia 的日本名称），则此方法返回 null。
@param countryCode ISO 3166 国家代码字符串，用 'A' (U+0041) 和 'Z' (U+005A) 之间的两个大写字母表示
@param locale 所需的语言环境
@return 指定语言环境的给定国家代码的名称；如果该名称不可用，则返回 null。
@exception NullPointerException 如果 <code>countryCode</code> 或 <code>locale</code> 为 null
@exception IllegalArgumentException 如果 <code>countryCode</code> 不是以两个大写字母的形式表示，或者 <code>locale</code> 不是从 {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()} 返回的语言环境之一。
@see java.util.Locale#getDisplayCountry(java.util.Locale)

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String java.util.spi.LocaleNameProvider.getDisplayVariant(String variant, Locale locale)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回适合向用户显示的给定变量代码和给定语言环境的本地化名称。如果无法根据 <code>locale</code> 对返回的名称进行本地化，则此方法返回 null。
@param variant 变量字符串
@param locale 所需的语言环境
@return 指定语言环境的给定变量字符串的名称，如果该名称不可用，则返回 null。
@exception NullPointerException 如果 <code>variant</code> 或 <code>locale</code> 为 null
@exception IllegalArgumentException 如果 <code>locale</code> 不是从 {@link java.util.spi.LocaleServiceProvider#getAvailableLocales() getAvailableLocales()} 返回的语言环境之一。
@see java.util.Locale#getDisplayVariant(java.util.Locale)

<!-- END DATA -->
