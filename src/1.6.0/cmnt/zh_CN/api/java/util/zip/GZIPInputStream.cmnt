<!-- BEGIN KEY -->
public class java.util.zip.GZIPInputStream extends java.util.zip.InflaterInputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
此类为读取 GZIP 文件格式的压缩数据实现流过滤器。

@see		InflaterInputStream
@version 	1.28, 06/11/04
@author 	David Connelly


<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.zip.CRC32 java.util.zip.GZIPInputStream.crc
<!-- END KEY -->
<!-- BEGIN DATA -->
未压缩数据的 CRC-32。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean java.util.zip.GZIPInputStream.eos
<!-- END KEY -->
<!-- BEGIN DATA -->
指示输入流的结尾。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.zip.GZIPInputStream.GZIP_MAGIC
<!-- END KEY -->
<!-- BEGIN DATA -->
GZIP 头幻数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.GZIPInputStream(InputStream in, int size) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定缓冲区大小创建新的输入流。
@param in 输入流
@param size 输入缓冲区大小
@exception IOException 如果发生 I/O 错误
@exception IllegalArgumentException 如果大小为 <= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.GZIPInputStream(InputStream in) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用默认缓冲区大小创建新的输入流。
@param in 输入流
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.zip.GZIPInputStream.read(byte[] buf, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将未压缩数据读入字节数组。如果 <code>len</code> 不为零，则在可以解压缩某些输入之前，此方法将处于阻塞状态；否则，不读取字节并且返回 <code>0</code>。 
@param buf 要读入数据的缓冲区
@param off 目标数组 <code>b</code> 中的初始偏移量
@param len 读取字节的最大数
@return	实际读取的字节数；如果已到达压缩输入流的结尾，则返回 -1
@exception  NullPointerException 如果 <code>buf</code> 为 <code>null</code>。
@exception  IndexOutOfBoundsException 如果 <code>off</code> 为负，或者 <code>len</code> 为负或 <code>len</code> 大于 <code>buf.length - off</code>
@exception IOException 如果发生 I/O 错误或压缩输入数据损坏

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.GZIPInputStream.close() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
关闭此输入流并释放与该流关联的所有系统资源。
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
