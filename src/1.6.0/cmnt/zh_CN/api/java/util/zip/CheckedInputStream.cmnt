<!-- BEGIN KEY -->
public class java.util.zip.CheckedInputStream extends java.io.FilterInputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
需要维护所读取数据校验和的输入流。校验和可用于验证输入数据的完整性。

@see		Checksum
@version 	1.19, 12/19/03
@author 	David Connelly

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.CheckedInputStream(InputStream in, Checksum cksum)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定校验和创建输入流。
@param in 输入流
@param cksum 校验和

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.zip.CheckedInputStream.read() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
读取字节。如果不存在可用的输入，将发生阻塞。
@return 读取的字节；如果已到达流的结尾，则返回 -1。
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.zip.CheckedInputStream.read(byte[] buf, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
读入字节数组。如果 <code>len</code> 不为零，则在某些输入可用之前，此方法将发生阻塞；否则不读取字节并且返回 <code>0</code>。
@param buf 将数据读入的缓冲区
@param off 目标数组 <code>b</code> 中的初始偏移量
@param len 读取字节的最大数
@return    读取字节的实际数；如果已到达流的结尾，则返回 -1。
@exception  NullPointerException 如果 <code>buf</code> 为 <code>null</code>。
@exception  IndexOutOfBoundsException 如果 <code>off</code> 为负，或者 <code>len</code> 为负或 <code>len</code> 大于 <code>buf.length - off</code>
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.util.zip.CheckedInputStream.skip(long n) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
跳过指定的输入字节数。
@param n 要跳过的字节数
@return 已跳过的实际字节数
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.Checksum java.util.zip.CheckedInputStream.getChecksum()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此输入流的校验和。
@return 校验和值

<!-- END DATA -->
