<!-- BEGIN KEY -->
public class java.util.zip.ZipInputStream extends java.util.zip.InflaterInputStream implements java.util.zip.ZipConstants
<!-- END KEY -->
<!-- BEGIN DATA -->
此类为读取 ZIP 文件格式的文件实现输入流过滤器。包括对已压缩和未压缩条目的支持。

@author	David Connelly
@version	1.37, 06/11/04

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.ZipInputStream(InputStream in)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 ZIP 输入流。
@param in 实际输入流

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.ZipEntry java.util.zip.ZipInputStream.getNextEntry() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
读取下一个 ZIP 文件条目并将流定位到该条目数据的开始处。
@return 下一个 ZIP 文件条目；如果不存在更多条目，则返回 null
@exception ZipException 如果发生 ZIP 文件错误
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.ZipInputStream.closeEntry() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
关闭当前 ZIP 条目并定位流以读取下一个条目。
@exception ZipException 如果发生 ZIP 文件错误
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.zip.ZipInputStream.available() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
在 EOF 到达当前条目数据后，返回 0；否则，始终返回 1。
 <p>
程序不应依靠此方法返回无阻塞读取的实际字节数。

@return     EOF 到达当前条目前，返回 1；EOF 到达当前条目后，返回 0。
@exception  IOException 如果发生 I/O 错误。
 
<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.zip.ZipInputStream.read(byte[] b, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
从当前 ZIP 条目读入字节数组。如果 <code>len</code> 不为零，则在某些输入可用之前，此方法将处于阻塞状态；否则，不读取字节并且返回 <code>0</code>。
 
@param b 要读入数据的缓冲区
@param off 目标数组 <code>b</code> 中的初始偏移量
@param len 读入字节的最大数
@return 读入字节的实际数；如果到达条目结尾，则返回 -1
@exception  NullPointerException 如果 <code>b</code> 为 <code>null</code>。
@exception  IndexOutOfBoundsException 如果 <code>off</code> 为负，或者 <code>len</code> 为负或 <code>len</code> 大于 <code>b.length - off</code>
@exception ZipException 如果发生 ZIP 文件错误
@exception IOException 如果发生 I/O 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.util.zip.ZipInputStream.skip(long n) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
跳过当前 ZIP 条目中指定的字节数。
@param n 要跳过的字节数
@return 跳过的实际字节数
@exception ZipException 如果发生 ZIP 文件错误
@exception IOException 如果发生 I/O 错误
@exception IllegalArgumentException 如果 n < 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.ZipInputStream.close() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
关闭此输入流并释放与此流关联的所有系统资源。
@exception IOException 如果发生 I/O 错误。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.zip.ZipEntry java.util.zip.ZipInputStream.createZipEntry(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
为指定条目名称创建一个新的 <code>ZipEntry</code> 对象。

@param name ZIP 文件条目名称
@return 刚刚创建的 ZipEntry

<!-- END DATA -->
