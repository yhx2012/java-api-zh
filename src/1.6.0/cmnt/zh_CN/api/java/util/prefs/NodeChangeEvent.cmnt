<!-- BEGIN KEY -->
public class java.util.prefs.NodeChangeEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
<tt>Preferences</tt> 节点发出的事件，用于指示已添加或移除该节点的子节点。<p>
  
注意，虽然 NodeChangeEvent 从 java.util.EventObject 继承了 Serializable 接口，但是它并非 Serializable。实现适当的序列化方法会抛出 NotSerializableException。 

@author  Josh Bloch
@version $I$, $G$
@see     Preferences
@see     NodeChangeListener
@see     PreferenceChangeEvent
@since   1.4
@serial  exclude

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.util.prefs.Preferences java.util.prefs.NodeChangeEvent.child
<!-- END KEY -->
<!-- BEGIN DATA -->
添加或移除的节点。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.prefs.NodeChangeEvent(Preferences parent, Preferences child)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的 <code>NodeChangeEvent</code> 实例。

@param parent  添加或移除节点的父节点。
@param child   添加或移除的节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.prefs.Preferences java.util.prefs.NodeChangeEvent.getParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回添加或移除节点的父节点。

@return  添加或移除其子节点的父级 Preferences 节点

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.prefs.Preferences java.util.prefs.NodeChangeEvent.getChild()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回添加或移除的节点。

@return  添加或移除的节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.util.prefs.NodeChangeEvent.readObject(ObjectInputStream in) throws java.io.NotSerializableException
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 NotSerializableException，因为 NodeChangeEvent 对象不可序列化。

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.util.prefs.NodeChangeEvent.writeObject(ObjectOutputStream out) throws java.io.NotSerializableException
<!-- END KEY -->
<!-- BEGIN DATA -->
抛出 NotSerializableException，因为 NodeChangeEvent 对象不可序列化。

<!-- END DATA -->
