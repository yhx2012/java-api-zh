<!-- BEGIN KEY -->
public static interface java.util.Map.Entry
<!-- END KEY -->
<!-- BEGIN DATA -->
映射项（键-值对）。<tt>Map.entrySet</tt> 方法返回映射的 collection 视图，其中的元素属于此类。获得映射项引用的<i>唯一</i> 方法是通过此 collection 视图的迭代器来实现。这些 <tt>Map.Entry</tt> 对象<i>仅</i> 在迭代期间有效；更确切地讲，如果在迭代器返回项之后修改了底层映射，则某些映射项的行为是不确定的，除了通过 <tt>setValue</tt> 在映射项上执行操作之外。

@see Map#entrySet()
@since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public K java.util.Map.Entry.getKey()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此项对应的键。

@return 与此项对应的键
@throws IllegalStateException 如果已经从底层映射中移除了该项，则实现可能（但不要求）抛出此异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public V java.util.Map.Entry.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此项对应的值。如果已经从底层映射中移除了映射关系（通过迭代器的 <tt>remove</tt> 操作），则此调用的结果是不确定的。

@return 与此项对应的值
@throws IllegalStateException 如果已经从底层映射中移除了该项，则实现可能，但不要求，抛出此异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public V java.util.Map.Entry.setValue(V value)
<!-- END KEY -->
<!-- BEGIN DATA -->
用指定的值替换与此项对应的值（可选操作）。（写入该映射。）如果已经从映射中移除了映射关系（通过迭代器的 <tt>remove</tt> 操作），则此调用的行为是不确定的。

@param value 要存储在此项中的新值
@return 与此项对应的旧值
 
@throws UnsupportedOperationException 如果底层映射不支持 <tt>put</tt> 操作
@throws ClassCastException 如果指定值的类不允许将该值存储在底层映射中
@throws NullPointerException 如果底层映射不允许 null 值，并且指定的值为 null
@throws IllegalArgumentException 如果此值的某些方面不允许将其存储在底层映射中
@throws IllegalStateException 如果已经从底层映射中移除了该项，则实现可能，但不要求，抛出此异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.util.Map.Entry.equals(Object o)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较指定对象与此项的相等性。如果给定对象也是一个映射项，并且两个项表示相同的映射关系，则返回 <tt>true</tt>。更确切地讲，如果满足以下条件，则两个项 <tt>e1</tt> 和 <tt>e2</tt> 才表示相同的映射关系<pre>
     (e1.getKey()==null ?
      e2.getKey()==null : e1.getKey().equals(e2.getKey()))  &amp;&amp;
     (e1.getValue()==null ?
      e2.getValue()==null : e1.getValue().equals(e2.getValue()))
 </pre>
这可以确保 <tt>equals</tt> 方法在不同的 <tt>Map.Entry</tt> 接口实现间可正确地工作。

@param o 要与此映射项进行相等性比较的对象
@return 如果指定的对象等于此映射项，则返回 <tt>true</tt>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.Map.Entry.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此映射项的哈希码值。映射项 <tt>e</tt> 的哈希码定义如下：<pre>
     (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^
     (e.getValue()==null ? 0 : e.getValue().hashCode())
 </pre>
这确保 <tt>e1.equals(e2)</tt> 意味着对于任意两个项 <tt>e1</tt> 和 <tt>e2</tt> 而言，<tt>e1.hashCode()==e2.hashCode()</tt>，这正是 <tt>Object.hashCode</tt> 的常规协定所要求的。

@return 映射项的哈希码值
@see Object#hashCode()
@see Object#equals(Object)
@see #equals(Object)

<!-- END DATA -->
