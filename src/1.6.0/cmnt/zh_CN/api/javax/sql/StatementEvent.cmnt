<!-- BEGIN KEY -->
public class javax.sql.StatementEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>StatementEvent</code> 被传送给所有用 <code>PooledConnection</code> 注册的 <code>StatementEventListener</code>。当驱动程序确定与 <code>PooledConnection</code> 关联的 <code>PreparedStatement</code> 已经关闭或驱动程序确定它无效时，发生此事件。
 <p>
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sql.StatementEvent(PooledConnection con, PreparedStatement statement)
<!-- END KEY -->
<!-- BEGIN DATA -->
用指定的 <code>PooledConnection</code> 和 <code>PreparedStatement</code> 构造 <code>StatementEvent</code>。包含在事件中的 <code>SQLException</code> 默认为 null。
 <p>
@param con			与已关闭或无效的 <code>PreparedStatement</code> 关联的 <code>PooledConnection</code>。
@param statement		正在关闭的或无效的 <code>PreparedStatement</code>
 <p>
@throws IllegalArgumentException 如果 <code>con</code> 为 null。

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sql.StatementEvent(PooledConnection con, PreparedStatement statement, SQLException exception)
<!-- END KEY -->
<!-- BEGIN DATA -->
用指定的 <code>PooledConnection</code>、<code>PreparedStatement</code> 和 <code>SQLException</code> 构造 <code>StatementEvent</code>。
 <p>
@param con			与已关闭或无效的 <code>PreparedStatement</code> 关联的 <code>PooledConnection</code>。
@param statement		正在关闭的或无效的 <code>PreparedStatement</code>
@param exception		驱动程序将要抛出给应用程序的 <code>SQLException</code>

@throws IllegalArgumentException 如果 <code>con</code> 为 null。
 <p>
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.PreparedStatement javax.sql.StatementEvent.getStatement()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回正在关闭或无效的 <code>PreparedStatement</code>。
 <p>
@return	正在关闭的或无效的 <code>PreparedStatement</code>
 <p>
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.SQLException javax.sql.StatementEvent.getSQLException()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回驱动程序将要抛出的 <code>SQLException</code>。
 <p>
@return	驱动程序将要抛出的 <code>SQLException</code>
 <p>
@since 1.6

<!-- END DATA -->
