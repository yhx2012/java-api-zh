<!-- BEGIN KEY -->
public interface javax.sql.RowSetMetaData extends java.sql.ResultSetMetaData
<!-- END KEY -->
<!-- BEGIN DATA -->
该对象包含关于 <code>RowSet</code> 对象的列的信息。此接口扩展了 <code>ResultSetMetaData</code> 接口，它增加了一些在 <code>RowSetMetaData</code> 对象中设置值的方法。当 <code>RowSetReader</code> 对象将数据读入 <code>RowSet</code> 对象时，它将创建一个 <code>RowSetMetaData</code> 对象并使用 <code>RowSetMetaData</code> 接口中的方法对其进行初始化。然后，reader 将 <code>RowSetMetaData</code> 对象传递给 rowset。
 <P>
当应用程序调用 <code>RowSet.execute</code> 方法时，将在内部调用此接口中的方法；应用程序员不直接使用它们。
 
@since 1.4 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setColumnCount(int columnCount) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>RowSet</code> 对象中的列数设置为给定数。

@param columnCount <code>RowSet</code> 对象中的列数
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setAutoIncrement(int columnIndex, boolean property) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置是否为指定列自动编号。默认值是不对 <code>RowSet</code> 对象的列进行自动编号。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param property 如果为列自动编号，则为 <code>true</code>；否则为 <code>false</code>

@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setCaseSensitive(int columnIndex, boolean property) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置指定列是否区分大小写。默认值为 <code>false</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param property 如果该列是区分大小写的，则为 <code>true</code>；否则为 <code>false</code>

@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setSearchable(int columnIndex, boolean property) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置是否可以在 where 子句中使用指定的列。默认值为 <code>false</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param property 如果可以在 <code>WHERE</code> 子句中使用该列，则为 <code>true</code>；否则为 <code>false</code>

@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setCurrency(int columnIndex, boolean property) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置指定的列是否是现金值。默认值为 <code>false</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param property 如果该列是现金值，则为 <code>true</code>；否则为 <code>false</code>

@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setNullable(int columnIndex, int property) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置是否可以将指定列的值设置为 <code>NULL</code>。默认值为 <code>ResultSetMetaData.columnNullableUnknown</code>

@param columnIndex 第一个列是 1，第二个列是 2，……
@param property 以下常量之一：<code>ResultSetMetaData.columnNoNulls</code>、<code>ResultSetMetaData.columnNullable</code> 或 <code>ResultSetMetaData.columnNullableUnknown</code> 

@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setSigned(int columnIndex, boolean property) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置指定列是否是有符号数字。默认值为 <code>false</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param property 如果该列是有符号数字，则为 <code>true</code>；否则为 <code>false</code>

@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setColumnDisplaySize(int columnIndex, int size) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的正常最大宽度（以 char 表示）设置为给定的 <code>int</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param size 指定列的正常最大字符数

@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setColumnLabel(int columnIndex, String label) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将建议用于打印输出和显示的列标题（如果有）设置为给定的 <code>String</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param label 列标题
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setColumnName(int columnIndex, String columnName) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的名称设置为给定的 <code>String</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param columnName 指定列的名称
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setSchemaName(int columnIndex, String schemaName) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的表模式的名称（如果有）设置为给定的 <code>String</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param schemaName 模式名
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setPrecision(int columnIndex, int precision) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的小数位数设置为给定的 <code>int</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param precision 小数位的总数
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setScale(int columnIndex, int scale) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的小数点右边的位数设置为给定的 <code>int</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param scale 小数点右边的位数
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setTableName(int columnIndex, String tableName) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的表名称（如果有）设置为给定的 <code>String</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param tableName 列的表名称
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setCatalogName(int columnIndex, String catalogName) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的表的类别名称（如果有）设置为给定的 <code>String</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param catalogName 列的类别名称
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setColumnType(int columnIndex, int SQLType) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的 SQL 类型设置为给定的类型。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param SQLType 列的 SQL 类型
@exception SQLException 如果发生数据库访问错误
@see Types

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetMetaData.setColumnTypeName(int columnIndex, String typeName) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定列的特定于数据源的类型名称（如果有）设置为给定的 <code>String</code>。

@param columnIndex 第一个列是 1，第二个列是 2，……
@param typeName 特定于数据源的类型名称。
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
