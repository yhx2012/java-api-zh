<!-- BEGIN KEY -->
public interface javax.sql.RowSetInternal
<!-- END KEY -->
<!-- BEGIN DATA -->
为了将自身呈现给 <code>RowSetReader</code> 或 <code>RowSetWriter</code> 对象的 <code>RowSet</code> 对象实现应实现该接口。<code>RowSetInternal</code> 接口包含一些允许 reader 或 writer 访问并修改 rowset 内部状态的方法。

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] javax.sql.RowSetInternal.getParams() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取已为此 <code>RowSet</code> 对象的命令设置的参数。

@return 此 <code>RowSet</code> 对象的命令的当前参数值所组成的数组
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.Connection javax.sql.RowSetInternal.getConnection() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取传递给此 <code>RowSet</code> 对象的 <code>Connection</code> 对象。

@return 传递给 rowset 的 <code>Connection</code> 对象；如果没有传递任何对象，则返回 <code>null</code>
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.RowSetInternal.setMetaData(RowSetMetaData md) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->

将给定的 <code>RowSetMetaData</code> 对象设置为此 <code>RowSet</code> 对象的 <code>RowSetMetaData</code> 对象。与 rowset 关联的 <code>RowSetReader</code> 对象将使用 <code>RowSetMetaData</code> 方法来设置那些提供关于 rowset 列信息的值。

@param md 将设置的 <code>RowSetMetaData</code> 对象，它具有关于 rowset 列的信息。
 
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.ResultSet javax.sql.RowSetInternal.getOriginal() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->

获取包含此 <code>RowSet</code> 对象原始值的 <code>ResultSet</code> 对象。
 <P>
将指针置于结果集的第一行之前。只有 <code>getOriginal</code> 方法返回的结果集所包含的行才会被认为具有原始值。

@return rowset 的原始值
@exception SQLException 如果发生数据库访问错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.ResultSet javax.sql.RowSetInternal.getOriginalRow() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取仅包含当前行原始值的 <code>ResultSet</code> 对象。如果当前行不具有任何原始值，则返回空结果集。如果不存在当前行，则抛出异常。

@return <code>ResultSet</code> 对象形式的当前行的原始值
@exception SQLException 如果发生数据库访问错误，或者当指针位于插入行上、第一行之前或最后一行之后时调用了此方法

<!-- END DATA -->
