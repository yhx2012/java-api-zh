<!-- BEGIN KEY -->
public interface javax.sql.CommonDataSource
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口定义在 <code>DataSource</code>、<code>XADataSource</code> 和 <code>ConnectionPoolDataSource</code> 之间公用的方法。
<p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.PrintWriter javax.sql.CommonDataSource.getLogWriter() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>获取此 <code>DataSource</code> 对象的日志 writer。

<p>日志 writer 是一个字符输出流，此数据源的所有日志记录和跟踪消息都将被打印到该输出流。这包括由此对象的方法打印的消息、由此对象构造的其他对象的方法打印的消息等等。打印到特定于数据源的日志 writer 的消息不会被打印到与 <code>java.sql.DriverManager</code> 类关联的日志 writer。创建 <code>DataSource</code> 对象时，日志 writer 最初为 null；换句话说，默认为禁用日志记录。

@return 此数据源的日志 writer；如果禁用日志记录，则返回 null
@exception java.sql.SQLException 如果发生数据库访问错误
@see #setLogWriter
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.CommonDataSource.setLogWriter(PrintWriter out) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>将此 <code>DataSource</code> 对象的日志 writer 设置为给定的 <code>java.io.PrintWriter</code> 对象。

<p>日志 writer 是一个字符输出流，此数据源的所有日志记录和跟踪消息都将被打印到该输出流。这包括由此对象的方法打印的消息、由此对象构造的其他对象的方法打印的消息等等。打印到特定于数据源的日志 writer 的消息不会被打印到与 <code>java.sql.DriverManager</code> 类关联的日志 writer。创建 <code>DataSource</code> 对象时，日志 writer 最初为 null；换句话说，默认为禁用日志记录。

@param out 新的日志 writer；如果要禁用日志记录，则设置为 null
@exception SQLException 如果发生数据库访问错误
@see #getLogWriter
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.CommonDataSource.setLoginTimeout(int seconds) throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>设置此数据源试图连接到某一数据库时将等待的最长时间，以秒为单位。值为 0 表示超时值为默认的系统超时值（如果有）；否则它表示不存在超时值。创建 <code>DataSource</code> 对象时，登录超时值最初为 0。

@param seconds 数据源登录超时值
@exception SQLException 如果发生数据库访问错误。
@see #getLoginTimeout
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.sql.CommonDataSource.getLoginTimeout() throws java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此数据源试图连接到某一数据库时可以等待的最长时间，以秒为单位。值为 0 表示超时值为默认的系统超时值（如果有）；否则它表示不存在超时值。创建 <code>DataSource</code> 对象时，登录超时值最初为 0。

@return 数据源登录超时值
@exception SQLException 如果发生数据库访问错误。
@see #setLoginTimeout
@since 1.4

<!-- END DATA -->
