<!-- BEGIN KEY -->
public class javax.sql.rowset.serial.SerialRef extends java.lang.Object implements java.sql.Ref, java.io.Serializable, java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Ref</code> 对象的序列化映射关系，它是 SQL <code>REF</code> 值在 Java 编码语言中的映射关系。
 <p>
<code>SerialRef</code> 类提供一个根据 <code>Ref</code> 对象创建 <code>SerialRef</code> 实例的构造方法，并提供用于获取和设置 <code>Ref</code> 对象的各种方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.sql.rowset.serial.SerialRef.baseTypeName
<!-- END KEY -->
<!-- BEGIN DATA -->
包含基本类型名称的字符串。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object javax.sql.rowset.serial.SerialRef.object
<!-- END KEY -->
<!-- BEGIN DATA -->
此类将类型 <code>Ref</code> 存储为 <code>Object</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.sql.Ref javax.sql.rowset.serial.SerialRef.reference
<!-- END KEY -->
<!-- BEGIN DATA -->
Ref 引用的私有副本。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sql.rowset.serial.SerialRef(Ref ref) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定 <code>Ref</code> 对象构造 <code>SerialRef</code> 对象。

@param ref Ref 对象；不能为 <code>null</code>
@throws SQLException 如果发生数据库访问错误；如果 <code>ref</code> 为 <code>null</code>；如果 <code>Ref</code> 对象返回的基本类型名称的值为 <code>null</code>。
@throws SerialException 如果在序列化 <code>Ref</code> 对象时发生错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sql.rowset.serial.SerialRef.getBaseTypeName() throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回描述 <code>Ref</code> 的基本类型名称的字符串。
 
@return Ref 基本类型名称的字符串
@throws SerialException 如果尚未设置任何 Ref 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.sql.rowset.serial.SerialRef.getObject(java.util.Map<java.lang.String, java.lang.Class<?>> map) throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示此 <code>SerialRef</code> 对象引用的 SQL 结构类型的 <code>Object</code>。根据给定类型映射表映射结构类型的属性。

@param map 包含零个或多个条目的 <code>java.util.Map</code> 对象，其中每个条目包含：1) 给出 UDT 完全限定名的 <code>String</code> 2) 用于定义 UDT 映射方式的 <code>SQLData</code> 实现的 <code>Class</code> 对象
@return 解析自 Ref 引用并根据提供的类型映射表映射的对象实例
@throws SerialException 如果在解析引用时遇到错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.sql.rowset.serial.SerialRef.getObject() throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示此 <code>SerialRef</code> 对象引用的 SQL 结构类型的 <code>Object</code>。  

@return 解析自 Ref 引用的对象实例
@throws SerialException 如果在解析引用时遇到错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.rowset.serial.SerialRef.setObject(Object obj) throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>SerialRef</code> 对象引用的 SQL 结构类型设置为给定的 <code>Object</code> 对象。

@param obj 表示要引用的 SQL 结构类型的 <code>Object</code>
@throws SerialException 如果在生成由此 <code>SerialRef</code> 对象引用的结构类型时遇到错误

<!-- END DATA -->
