<!-- BEGIN KEY -->
public class javax.sql.rowset.serial.SerialStruct extends java.lang.Object implements java.sql.Struct, java.io.Serializable, java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
SQL 结构类型在 Java 编程语言中的序列化映射关系。每个尚未序列化的属性将被映射为序列化形式；如果属性本身是结构类型，则其每个尚未序列化的属性将被映射为序列化形式。 
 <P>
此外，结构类型将被映射为 Java 编程语言中的类，如果存在这样的映射关系；如果存在适用于其属性的映射关系，则其属性也会被映射。
 <P>
<code>SerialStruct</code> 类提供一个根据 <code>Struct</code> 对象创建实例的构造方法，一个用于在数据库中获取 SQL 结构类型的 SQL 类型名称的方法，以及用于获取其属性值的各种方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.sql.rowset.serial.SerialStruct.SQLTypeName
<!-- END KEY -->
<!-- BEGIN DATA -->
此 <code>SerialStruct</code> 对象所表示的结构类型的 SQL 类型名称。此为在 SQL 结构类型的 SQL 定义中使用的名称。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object[] javax.sql.rowset.serial.SerialStruct.attribs
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Object</code> 实例数组，每个数组元素都是此 <code>SerialStruct</code> 对象所表示的 SQL 结构类型的属性。这些属性按照它们在 SQL 结构类型定义中的顺序排列。

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sql.rowset.serial.SerialStruct(Struct in, java.util.Map<java.lang.String, java.lang.Class<?>> map) throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定 <code>Struct</code> 对象构造 <code>SerialStruct</code> 对象，使用给定 <code>java.util.Map</code> 对象来自定义映射 SQL 结构类型或其任何为 SQL 结构类型的属性。

@param map <code>java.util.Map</code> 对象，其中每个条目包含：1) 给出 UDT 完全限定名的 <code>String</code> 对象 2) 用于定义 UDT 映射方式的 <code>SQLData</code> 实现的 <code>Class</code> 对象
@throws SerialException 如果发生错误
@see java.sql.Struct

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sql.rowset.serial.SerialStruct(SQLData in, java.util.Map<java.lang.String, java.lang.Class<?>> map) throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定 <code>SQLData</code> 对象构造 <code>SerialStruct</code> 对象，使用给定类型映射表将其自定义映射为 Java 编程语言中的类。类型映射表给出映射到的 SQL 类型和类。<code>SQLData</code> 对象定义将 SQL 类型映射到的类。

@param in <code>SQLData</code> 类的实例，该类将 SQL 结构类型的映射关系定义为 Java 编程语言中的一个或多个对象
@param map <code>java.util.Map</code> 对象，其中每个条目包含：1) 给出 UDT 完全限定名的 <code>String</code> 对象 2) 用于定义 UDT 映射方式的 <code>SQLData</code> 实现的 <code>Class</code> 对象
@throws SerialException 如果发生错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sql.rowset.serial.SerialStruct.getSQLTypeName() throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>SerialStruct</code> 对象的 SQL 类型名称。此为在结构类型的 SQL 定义中使用的名称。

@return <code>String</code> 对象，该对象表示此 <code>SerialStruct</code> 对象所表示的 SQL 结构类型的 SQL 类型名称
@throws SerialException 如果发生错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] javax.sql.rowset.serial.SerialStruct.getAttributes() throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 <code>Object</code> 值的数组，该数组包含此 <code>SerialStruct</code> 对象所表示的 SQL 结构类型的属性。 

@return <code>Object</code> 值的数组，其中每个元素为此 <code>SerialStruct</code> 对象所表示的 SQL 结构类型的属性。
@throws SerialException 如果发生错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] javax.sql.rowset.serial.SerialStruct.getAttributes(java.util.Map<java.lang.String, java.lang.Class<?>> map) throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此 <code>SerialStruct</code> 表示为 <code>Object</code> 值数组的 SQL 结构类型的属性；如果适用，则使用给定的类型映射表进行自定义映射。

@param map <code>java.util.Map</code> 对象，其中每个条目包含：1) 给出 UDT 完全限定名的 <code>String</code> 对象 2) 用于定义 UDT 映射方式的 <code>SQLData</code> 实现的 <code>Class</code> 对象
@return <code>Object</code> 值数组，其中每个元素都是此 <code>SerialStruct</code> 对象所表示的 SQL 结构类型的属性
@throws SerialException 如果发生错误

<!-- END DATA -->
