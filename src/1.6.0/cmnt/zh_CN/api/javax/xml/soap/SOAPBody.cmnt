<!-- BEGIN KEY -->
public interface javax.xml.soap.SOAPBody extends javax.xml.soap.SOAPElement
<!-- END KEY -->
<!-- BEGIN DATA -->
表示 SOAP 消息中 SOAP 正文元素内容的对象。SOAP 正文元素由能影响特定于应用程序内容的处理方式的 XML 数据组成。
 <P>
<code>SOAPBody</code> 对象包含了 <code>SOAPBodyElement</code> 对象，后者具有 SOAP 正文的内容。携带状态和/或错误信息的 <code>SOAPFault</code> 对象是 <code>SOAPBodyElement</code> 对象的一个示例。

@see SOAPFault

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPFault javax.xml.soap.SOAPBody.addFault() throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 <code>SOAPFault</code> 对象，并将其添加到此 <code>SOAPBody</code> 对象。新的 <code>SOAPFault</code> 会将强制性 (mandatory) 子元素设置为默认值。<code>SOAPFault</code> 的类型可以是 SOAP 1.1 或 SOAP 1.2 <code>SOAPFault</code>，这取决于创建 <code>MessageFactory</code> 实例时指定的 <code>protocol</code>。 
 <p>
一个 <code>SOAPBody</code> 最多只能包含一个 <code>SOAPFault</code> 子元素。

@return 新的 <code>SOAPFault</code> 对象
@exception SOAPException 如果存在 SOAP 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPFault javax.xml.soap.SOAPBody.addFault(Name faultCode, String faultString, Locale locale) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 <code>SOAPFault</code> 对象，并将其添加到此 <code>SOAPBody</code> 对象。<code>SOAPFault</code> 的类型可以是 SOAP 1.1 或 SOAP 1.2 <code>SOAPFault</code>，这取决于创建 <code>MessageFactory</code> 实例时指定的 <code>protocol</code>。
 <p>
对于 SOAP 1.2，<code>faultCode</code> 参数是 <i>Fault/Code/Value</i> 元素的值，<code>faultString</code> 参数是 <i>Fault/Reason/Text</i> 元素的值。对于 SOAP 1.1，<code>faultCode</code> 参数是 <code>faultcode</code> 元素的值，<code>faultString</code> 参数是 <code>faultstring</code> 元素的值。 
 <p>
一个 <code>SOAPBody</code> 最多只能包含一个 <code>SOAPFault</code> 子元素。 

@param faultCode <code>Name</code> 对象，给出要设置的错误代码；必须是正使用的 SOAP 规范的版本中定义的错误代码之一
@param faultString <code>String</code>，给出错误的解释
@param locale {@link java.util.Locale} 对象，指示 <code>faultString</code> 的本地语言
@return 新的 <code>SOAPFault</code> 对象
@exception SOAPException 如果存在 SOAP 错误
@see SOAPFault#setFaultCode
@see SOAPFault#setFaultString
@since SAAJ 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPFault javax.xml.soap.SOAPBody.addFault(QName faultCode, String faultString, Locale locale) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 <code>SOAPFault</code> 对象，并将其添加到此 <code>SOAPBody</code> 对象。<code>SOAPFault</code> 的类型可以是 SOAP 1.1 或 SOAP 1.2 <code>SOAPFault</code>，这取决于创建 <code>MessageFactory</code> 实例时指定的 <code>protocol</code>。
 <p>
对于 SOAP 1.2，<code>faultCode</code> 参数是 <i>Fault/Code/Value</i> 元素的值，<code>faultString</code> 参数是 <i>Fault/Reason/Text</i> 元素的值。对于 SOAP 1.1，<code>faultCode</code> 参数是 <code>faultcode</code> 元素的值，<code>faultString</code> 参数是 <code>faultstring</code> 元素的值。 
 <p>
一个 <code>SOAPBody</code> 最多只能包含一个 <code>SOAPFault</code> 子元素。
 
@param faultCode <code>QName</code> 对象，给出要设置的错误代码；必须是正使用的 SOAP 规范的版本中定义的错误代码之一。
@param faultString <code>String</code>，给出错误的解释
@param locale {@link java.util.Locale Locale} 对象，指示 <code>faultString</code> 的本地语言
@return 新的 <code>SOAPFault</code> 对象
@exception SOAPException 如果存在 SOAP 错误
@see SOAPFault#setFaultCode
@see SOAPFault#setFaultString
@see SOAPBody#addFault(Name faultCode, String faultString, Locale locale)
 
@since SAAJ 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPFault javax.xml.soap.SOAPBody.addFault(Name faultCode, String faultString) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 <code>SOAPFault</code> 对象，并将其添加到此 <code>SOAPBody</code> 对象。<code>SOAPFault</code> 的类型可以是 SOAP 1.1 或 SOAP 1.2 <code>SOAPFault</code>，这取决于创建 <code>MessageFactory</code> 实例时指定的 <code>protocol</code>。
 <p>
对于 SOAP 1.2，<code>faultCode</code> 参数是 <i>Fault/Code/Value</i> 元素的值，<code>faultString</code> 参数是 <i>Fault/Reason/Text</i> 元素的值。对于 SOAP 1.1，<code>faultCode</code> 参数是 <i>faultcode</i> 元素的值，<code>faultString</code> 参数是 <i>faultstring</i> 元素的值。 
 <p>
如果是 SOAP 1.2 错误，<i>Fault/Reason/Text</i> 元素上强制性 <code>xml:lang</code> 属性的默认值将设置为 <code>java.util.Locale.getDefault()</code>
 <p>
一个 <code>SOAPBody</code> 最多只能包含一个 <code>SOAPFault</code> 子元素。
 
@param faultCode <code>Name</code> 对象，给出要设置的错误代码；必须是正使用的 SOAP 规范的版本中定义的错误代码之一
@param faultString <code>String</code>，给出错误的解释
@return 新的 <code>SOAPFault</code> 对象
@exception SOAPException 如果存在 SOAP 错误
@see SOAPFault#setFaultCode
@see SOAPFault#setFaultString
@since SAAJ 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPFault javax.xml.soap.SOAPBody.addFault(QName faultCode, String faultString) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 <code>SOAPFault</code> 对象，并将其添加到此 <code>SOAPBody</code> 对象。<code>SOAPFault</code> 的类型可以是 SOAP 1.1 或 SOAP 1.2 <code>SOAPFault</code>，这取决于创建 <code>MessageFactory</code> 实例时指定的 <code>protocol</code>。
 <p>
对于 SOAP 1.2，<code>faultCode</code> 参数是 <i>Fault/Code/Value</i> 元素的值，<code>faultString</code> 参数是 <i>Fault/Reason/Text</i> 元素的值。对于 SOAP 1.1，<code>faultCode</code> 参数是 <i>faultcode</i> 元素的值，<code>faultString</code> 参数是 <i>faultstring</i> 元素的值。 
 <p>
如果是 SOAP 1.2 错误，<i>Fault/Reason/Text</i> 元素上强制性 <code>xml:lang</code> 属性的默认值将设置为 <code>java.util.Locale.getDefault()</code>
 <p>
一个 <code>SOAPBody</code> 最多只能包含一个 <code>SOAPFault</code> 子元素
 
@param faultCode <code>QName</code> 对象，给出要设置的错误代码；必须是正使用的 SOAP 规范的版本中定义的错误代码之一
@param faultString <code>String</code>，给出错误的解释
@return 新的 <code>SOAPFault</code> 对象
@exception SOAPException 如果存在 SOAP 错误
@see SOAPFault#setFaultCode
@see SOAPFault#setFaultString
@see SOAPBody#addFault(Name faultCode, String faultString)
@since SAAJ 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.soap.SOAPBody.hasFault()
<!-- END KEY -->
<!-- BEGIN DATA -->
指示此 <code>SOAPBody</code> 对象中是否存在 <code>SOAPFault</code> 对象。
 
@return 如果此 <code>SOAPBody</code> 对象中存在 <code>SOAPFault</code> 对象，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPFault javax.xml.soap.SOAPBody.getFault()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>SOAPBody</code> 对象中的 <code>SOAPFault</code> 对象。
 
@return 此 <code>SOAPBody</code> 对象中的 <code>SOAPFault</code> 对象（如果存在）；若不存在，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPBodyElement javax.xml.soap.SOAPBody.addBodyElement(Name name) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定名称创建新的 <code>SOAPBodyElement</code> 对象，并将其添加到此 <code>SOAPBody</code> 对象。
 
@param name <code>Name</code> 对象，带有新 <code>SOAPBodyElement</code> 对象的名称
@return 新的 <code>SOAPBodyElement</code> 对象
@exception SOAPException 如果发生 SOAP 错误
@see SOAPBody#addBodyElement(javax.xml.namespace.QName)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPBodyElement javax.xml.soap.SOAPBody.addBodyElement(QName qname) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定 QName 创建新的 <code>SOAPBodyElement</code> 对象，并将其添加到此 <code>SOAPBody</code> 对象。
 
@param qname <code>QName</code> 对象，带有新 <code>SOAPBodyElement</code> 对象的名称
@return 新的 <code>SOAPBodyElement</code> 对象
@exception SOAPException 如果发生 SOAP 错误
@see SOAPBody#addBodyElement(Name)
@since SAAJ 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPBodyElement javax.xml.soap.SOAPBody.addDocument(Document document) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
将 DOM <code>{@link org.w3c.dom.Document}</code> 的根节点添加到此 <code>SOAPBody</code> 对象。
 <p>
调用此方法会使 <code>document</code> 参数失效。在调用 <code>addDocument</code> 时，客户端应用程序应丢弃所有对此 <code>Document</code> 及其内容的引用。继续使用此类引用的应用程序将产生不确定的行为。
 
@param document <code>Document</code> 对象，该对象的根节点将被添加到此 <code>SOAPBody</code>。
@return 表示被添加根节点的 <code>SOAPBodyElement</code>。
@exception SOAPException 如果无法添加 <code>Document</code>
@since SAAJ 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Document javax.xml.soap.SOAPBody.extractContentAsDocument() throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 DOM <code>{@link org.w3c.dom.Document}</code>，并将此 <code>SOAPBody</code> 的第一个子元素设置为它的文档元素。子 <code>SOAPElement</code> 作为进程的一部分被移除。
 
@return <code>SOAPBody</code> 内容的 <code>{@link org.w3c.dom.Document}</code> 表示形式。
 
@exception SOAPException 如果不存在任何 <code>SOAPBody</code> 的子 <code>SOAPElement</code>。
 
@since SAAJ 1.3

<!-- END DATA -->
