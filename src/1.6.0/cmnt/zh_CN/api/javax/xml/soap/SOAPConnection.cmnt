<!-- BEGIN KEY -->
public abstract class javax.xml.soap.SOAPConnection extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
客户端可以用于直接将消息发送到（例如，用 URL 表示的）远程方的点对点连接。
 <p>
SOAPConnection 类是可选的。某些实现可能无法实现此接口，在这种情况下，调用 <code>SOAPConnectionFactory.newInstance()</code>（参见以下内容）将抛出 <code>UnsupportedOperationException</code>。
 <p>
客户端可以使用 {@link SOAPConnectionFactory} 对象获取 <code>SOAPConnection</code> 对象，如下例所示：
 <PRE>
SOAPConnectionFactory factory = SOAPConnectionFactory.newInstance();
SOAPConnection con = factory.createConnection();
 </PRE>
<code>SOAPConnection</code> 对象可用来将消息直接发送到请求/响应范例后面的 URL。也就是说，使用方法 <code>call</code> 来发送消息，该方法发送消息并等到收到应答为止。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.soap.SOAPMessage javax.xml.soap.SOAPConnection.call(SOAPMessage request, Object to) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
将给定消息发送到指定端点，在返回应答前将一直阻塞。

@param request 要发送的 <code>SOAPMessage</code> 对象
@param to 标识消息发送目的地的 <code>Object</code>。必须支持 <code>java.lang.String</code>、<code>java.net.URL</code>，以及 <code>javax.xml.messaging.URLEndpoint</code> 类型（JAXM 存在时）的 Object。

@return 响应已发送消息的 <code>SOAPMessage</code> 对象
@throws SOAPException 如果存在 SOAP 错误

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.soap.SOAPMessage javax.xml.soap.SOAPConnection.get(Object to) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
从特定端点获取消息，在收到消息前将一直阻塞。

@param to 标识请求发送目的地的 <code>Object</code>。必须支持 <code>java.lang.String</code> 和 <code>java.net.URL</code> 类型的 Object。

@return 响应获取消息请求的 <code>SOAPMessage</code> 对象
@throws SOAPException 如果存在 SOAP 错误
@since SAAJ 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void javax.xml.soap.SOAPConnection.close() throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
关闭此 <code>SOAPConnection</code> 对象。

@throws SOAPException 如果存在 SOAP 错误

<!-- END DATA -->
