<!-- BEGIN KEY -->
public abstract class javax.xml.soap.SAAJMetaFactory extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
SAAJ API 中定义的工厂实现类的访问点。SAAJ 1.3 中的工厂上定义的所有 <code>newInstance</code> 方法都要此类实例来创建实际对象。当 SAAJ 1.2 定义的查询无法定位 Factory 实现类名称时，存在于 SAAJ 1.2 中的 <code>newInstance()</code> 方法（SOAPFactory 和 MessageFactory 中）的实现被更新为（并委派给）SAAJMetaFactory。 
 
 <p>
SAAJMetaFactory 是一个服务提供者接口。在此类上没有 public 方法。

@author SAAJ RI Development Team
@since SAAJ 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.xml.soap.MessageFactory javax.xml.soap.SAAJMetaFactory.newMessageFactory(String protocol) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建给定 <code>String</code> 协议的 <code>MessageFactory</code> 对象。 

@param protocol 指示该协议的 <code>String</code>
@exception SOAPException 如果在创建 MessageFactory 时出现错误
@see SOAPConstants#SOAP_1_1_PROTOCOL
@see SOAPConstants#SOAP_1_2_PROTOCOL
@see SOAPConstants#DYNAMIC_SOAP_PROTOCOL

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.xml.soap.SOAPFactory javax.xml.soap.SAAJMetaFactory.newSOAPFactory(String protocol) throws javax.xml.soap.SOAPException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建给定 <code>String</code> 协议的 <code>SOAPFactory</code> 对象。 

@param protocol 指示该协议的 <code>String</code>
@exception SOAPException 如果在创建 SOAPFactory 时出现错误
@see SOAPConstants#SOAP_1_1_PROTOCOL
@see SOAPConstants#SOAP_1_2_PROTOCOL
@see SOAPConstants#DYNAMIC_SOAP_PROTOCOL

<!-- END DATA -->
