<!-- BEGIN KEY -->
public class javax.xml.crypto.URIReferenceException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
指示取消引用 {@link URIReference} 时抛出的异常条件。

<p><code>URIReferenceException</code> 可以包含一个 cause：另一个导致抛出此 <code>URIReferenceException</code> 的 throwable。 

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see URIDereferencer#dereference(URIReference, XMLCryptoContext)
@see RetrievalMethod#dereference(XMLCryptoContext)

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Throwable javax.xml.crypto.URIReferenceException.cause
<!-- END KEY -->
<!-- BEGIN DATA -->
导致抛出此异常的 throwable，如果此异常不是由另一个 throwable 引起的，或者导致抛出异常的 throwable 对于此异常是未知的，则 cause 为 null。 

@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造使用 <code>null</code> 作为其详细消息的新 <code>URIReferenceException</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息的新 <code>URIReferenceException</code>。 

@param message 详细消息

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息和 cause 的新 <code>URIReferenceException</code>。  
<p>注意，与 <code>cause</code> 相关的详细消息<i>不是</i>自动合并到此异常的详细消息中的。

@param message 详细消息
@param cause  cause（允许为 <tt>null</tt> 值，指示 cause 不存在或未知。）

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(String message, Throwable cause, URIReference uriReference)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定详细消息、cause 和 <code>URIReference</code> 的新 <code>URIReferenceException</code>。
<p>注意，与 <code>cause</code> 相关的详细消息<i>不是</i>自动合并到此异常的详细消息中的。

@param message 详细消息
@param cause  cause（允许为 <tt>null</tt> 值，指示 cause 不存在或未知。）
@param uriReference 遇到错误时正被取消引用的 <code>URIReference</code>
@throws NullPointerException 如果 <code>uriReference</code> 为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带指定的 cause 和详细消息 <code>(cause==null ? null :cause.toString())</code> 的新 <code>URIReferenceException</code>（它通常包含 <code>cause</code> 的类和详细消息）。

@param cause  cause（允许为 <tt>null</tt> 值，指示 cause 不存在或未知。）

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReference javax.xml.crypto.URIReferenceException.getURIReference()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回抛出异常时正被取消引用的 <code>URIReference</code>。

@return 抛出异常时正被取消引用的 <code>URIReference</code>；如果未指定 URIReference，则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable javax.xml.crypto.URIReferenceException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>URIReferenceException</code> 的 cause，如果 cause 不存在或未知，则返回 <code>null</code>。（cause 是导致抛出此 <code>URIReferenceException</code> 的 throwable。）

@return 导致抛出此 <code>URIReferenceException</code> 的 cause，如果 cause 不存在或未知，则返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.URIReferenceException.printStackTrace()
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>URIReferenceException</code>、它的追踪 (backtrace) 和 cause 的追踪打印到标准错误流中。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.URIReferenceException.printStackTrace(PrintStream s)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>URIReferenceException</code>、它的追踪 (backtrace) 和 cause 的追踪打印到指定的打印流。

@param s 用于输出的 <code>PrintStream</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.URIReferenceException.printStackTrace(PrintWriter s)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此 <code>URIReferenceException</code>、它的追踪 (backtrace) 和 cause 的追踪打印到指定的打印编写器。

@param s 用于输出的 <code>PrintWriter</code>

<!-- END DATA -->
