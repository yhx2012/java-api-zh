<!-- BEGIN KEY -->
public class javax.xml.crypto.dsig.spec.XPathType extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<a href="http://www.w3.org/TR/xmldsig-filter2">W3C Recommendation for XML-Signature XPath Filter 2.0</a> 中所定义的 <code>XPath</code> 元素的 XML 模式定义：
 <pre><code>
 &lt;schema xmlns="http://www.w3.org/2001/XMLSchema"
         xmlns:xf="http://www.w3.org/2002/06/xmldsig-filter2"
         targetNamespace="http://www.w3.org/2002/06/xmldsig-filter2"
         version="0.1" elementFormDefault="qualified"&gt;

 &lt;element name="XPath"
          type="xf:XPathType"/&gt;

 &lt;complexType name="XPathType"&gt;
   &lt;simpleContent&gt;
     &lt;extension base="string"&gt;
       &lt;attribute name="Filter"&gt;
         &lt;simpleType&gt;
           &lt;restriction base="string"&gt;
             &lt;enumeration value="intersect"/&gt;
             &lt;enumeration value="subtract"/&gt;
             &lt;enumeration value="union"/&gt;
           &lt;/restriction&gt;
         &lt;/simpleType&gt;
       &lt;/attribute&gt;
     &lt;/extension&gt;
   &lt;/simpleContent&gt;
 &lt;/complexType&gt;
 </code></pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XPathFilter2ParameterSpec

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.spec.XPathType(String expression, XPathType.Filter filter)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有指定 XPath 表达式和过滤器的 <code>XPathType</code> 实例。

@param expression 要计算的 XPath 表达式
@param filter 过滤操作 ({@link Filter#INTERSECT}、{@link Filter#SUBTRACT} 或 {@link Filter#UNION})
@throws NullPointerException 如果 <code>expression</code> 或 <code>filter</code> 为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.spec.XPathType(String expression, XPathType.Filter filter, java.util.Map namespaceMap)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有指定 XPath 表达式、过滤器和名称空间映射表的 <code>XPathType</code> 实例。复制该映射表，以防止随后被修改。

@param expression 要计算的 XPath 表达式
@param filter 过滤操作 ({@link Filter#INTERSECT}、{@link Filter#SUBTRACT} 或 {@link Filter#UNION})
@param namespaceMap 名称空间前缀的映射表。每个密钥都是一个命名空间前缀 <code>String</code>，它将映射到相应的命名空间 URI <code>String</code>。
@throws NullPointerException 如果 <code>expression</code>、<code>filter</code> 或 <code>namespaceMap</code> 为 <code>null</code>
@throws ClassCastException 如果任何映射密钥或条目的类型不是 <code>String</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.crypto.dsig.spec.XPathType.getExpression()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回要计算的 XPath 表达式。

@return 要计算的 XPath 表达式

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.spec.XPathType.Filter javax.xml.crypto.dsig.spec.XPathType.getFilter()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回过滤操作。

@return 过滤操作

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Map javax.xml.crypto.dsig.spec.XPathType.getNamespaceMap()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回名称空间前缀的映射表。每个密钥都是一个命名空间前缀 <code>String</code>，它将映射到相应的命名空间 URI <code>String</code>。
 <p>
此实现返回一个{@link Collections#unmodifiableMap 不可修改的映射表}。

@return 命名空间前缀到名称空间 URI 的 <code>Map</code>（可以为空，但不能为 <code>null</code>）

<!-- END DATA -->
