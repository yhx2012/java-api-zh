<!-- BEGIN KEY -->
public class javax.xml.crypto.OctetStreamData extends java.lang.Object implements javax.xml.crypto.Data
<!-- END KEY -->
<!-- BEGIN DATA -->
包含一个八位组流的 <code>Data</code> 类型的表示形式。

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.OctetStreamData(InputStream octetStream)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 <code>SocketImpl</code>。

@param octetStream 包含八位组的输入流
@throws NullPointerException 如果 <code>octetStream</code> 为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.OctetStreamData(InputStream octetStream, String uri, String mimeType)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 <code>OctetStreamData</code>。

@param octetStream 包含八位组的输入流
@param uri 标识数据对象的 URI String（可以为 <code>null</code>）
@param mimeType 与数据对象关联的 MIME 类型（可以为 <code>null</code>）
@throws NullPointerException 如果 <code>octetStream</code> 为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream javax.xml.crypto.OctetStreamData.getOctetStream()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>OctetStreamData</code> 的输入流。

@return 此 <code>OctetStreamData</code> 的输入流。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.crypto.OctetStreamData.getURI()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回用来标识由此 <code>OctetStreamData</code> 表示的数据对象的 URI String。

@return URI String；如果不适用，则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.crypto.OctetStreamData.getMimeType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与由此 <code>OctetStreamData</code> 表示的数据对象关联的 MIME 类型。

@return MIME 类型；如果不适用，则返回 <code>null</code>

<!-- END DATA -->
