<!-- BEGIN KEY -->
public interface javax.xml.crypto.dsig.SignedInfo extends javax.xml.crypto.XMLStructure
<!-- END KEY -->
<!-- BEGIN DATA -->
<a href="http://www.w3.org/TR/xmldsig-core/">W3C Recommendation for XML-Signature Syntax and Processing</a> 中定义的 XML <code>SignedInfo</code> 元素的表示形式。XML Schema Definition 的定义如下：
 <pre><code>
&lt;element name=&quot;SignedInfo&quot; type=&quot;ds:SignedInfoType&quot;/&gt; 
&lt;complexType name=&quot;SignedInfoType&quot;&gt;
&lt;sequence&gt; 
&lt;element ref=&quot;ds:CanonicalizationMethod&quot;/&gt; 
&lt;element ref=&quot;ds:SignatureMethod&quot;/&gt; 
&lt;element ref=&quot;ds:Reference&quot; maxOccurs=&quot;unbounded&quot;/&gt; 
&lt;/sequence&gt;  
&lt;attribute name=&quot;Id&quot; type=&quot;ID&quot; use=&quot;optional&quot;/&gt; 
&lt;/complexType&gt;
 </code></pre>

调用 {@link XMLSignatureFactory} 类的一个 {@link XMLSignatureFactory#newSignedInfo newSignedInfo} 方法可以创建 <code>SignedInfo</code> 实例。

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see XMLSignatureFactory#newSignedInfo(CanonicalizationMethod, SignatureMethod, List)
@see XMLSignatureFactory#newSignedInfo(CanonicalizationMethod, SignatureMethod, List, String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.CanonicalizationMethod javax.xml.crypto.dsig.SignedInfo.getCanonicalizationMethod()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>SignedInfo</code> 的规范化方法。

@return 规范化方法

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.SignatureMethod javax.xml.crypto.dsig.SignedInfo.getSignatureMethod()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>SignedInfo</code> 的签名方法。

@return 签名方法

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.List javax.xml.crypto.dsig.SignedInfo.getReferences()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个或多个 {@link Reference} 的{@link java.util.Collections#unmodifiableList 不可修改的列表}。

@return 一个或多个 {@link Reference} 的不可修改列表

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.crypto.dsig.SignedInfo.getId()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>SignedInfo</code> 的可选 <code>Id</code> 属性。

@return id（如果未指定，则返回 <code>null</code>）

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream javax.xml.crypto.dsig.SignedInfo.getCanonicalizedData()
<!-- END KEY -->
<!-- BEGIN DATA -->
在执行签名或验证操作后，返回规范化的签名信息字节。此方法对调试很有用。

@return 包含规范化字节的 <code>InputStream</code>；如果尚未签名或验证此 <code>SignedInfo</code>，则返回 <code>null</code>

<!-- END DATA -->
