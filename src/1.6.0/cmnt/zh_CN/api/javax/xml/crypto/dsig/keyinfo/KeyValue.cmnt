<!-- BEGIN KEY -->
public interface javax.xml.crypto.dsig.keyinfo.KeyValue extends javax.xml.crypto.XMLStructure
<!-- END KEY -->
<!-- BEGIN DATA -->
<a href="http://www.w3.org/TR/xmldsig-core/">W3C Recommendation for XML-Signature Syntax and Processing</a> 中定义的 XML <code>KeyValue</code> 元素的表示形式。<code>KeyValue</code> 对象包含一个在验证签名时很有用的公钥。XML Schema Definition 的定义如下：

 <pre>
    &lt;element name="KeyValue" type="ds:KeyValueType"/&gt;
    &lt;complexType name="KeyValueType" mixed="true"&gt;
      &lt;choice&gt;
        &lt;element ref="ds:DSAKeyValue"/&gt;
        &lt;element ref="ds:RSAKeyValue"/&gt;
        &lt;any namespace="##other" processContents="lax"/&gt;
      &lt;/choice&gt;
    &lt;/complexType&gt;

    &lt;element name="DSAKeyValue" type="ds:DSAKeyValueType"/&gt;
    &lt;complexType name="DSAKeyValueType"&gt;
      &lt;sequence&gt;
        &lt;sequence minOccurs="0"&gt;
          &lt;element name="P" type="ds:CryptoBinary"/&gt;
          &lt;element name="Q" type="ds:CryptoBinary"/&gt;
        &lt;/sequence&gt;
        &lt;element name="G" type="ds:CryptoBinary" minOccurs="0"/&gt; 
        &lt;element name="Y" type="ds:CryptoBinary"/&gt; 
        &lt;element name="J" type="ds:CryptoBinary" minOccurs="0"/&gt;
        &lt;sequence minOccurs="0"&gt;
          &lt;element name="Seed" type="ds:CryptoBinary"/&gt; 
          &lt;element name="PgenCounter" type="ds:CryptoBinary"/&gt; 
        &lt;/sequence&gt;
      &lt;/sequence&gt;
    &lt;/complexType&gt;

    &lt;element name="RSAKeyValue" type="ds:RSAKeyValueType"/&gt;
    &lt;complexType name="RSAKeyValueType"&gt;
      &lt;sequence&gt;
        &lt;element name="Modulus" type="ds:CryptoBinary"/&gt; 
        &lt;element name="Exponent" type="ds:CryptoBinary"/&gt;
      &lt;/sequence&gt;
    &lt;/complexType&gt;
 </pre>

通过调用 {@link KeyInfoFactory} 类的 {@link KeyInfoFactory#newKeyValue newKeyValue} 方法，并向其传递表示公钥值的 {@link java.security.PublicKey}，可以创建 <code>KeyValue</code> 实例。下面是一个示例，该示例根据 {@link java.security.KeyStore} 中存储的 {@link java.security.cert.Certificate} 的 {@link DSAPublicKey} 创建了一个 <code>KeyValue</code>：
 <pre>
KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
PublicKey dsaPublicKey = keyStore.getCertificate(&quot;myDSASigningCert&quot;).getPublicKey();
KeyInfoFactory factory = KeyInfoFactory.getInstance(&quot;DOM&quot;);
KeyValue keyValue = factory.newKeyValue(dsaPublicKey);
 </pre>

此类将分别以类型 {@link DSAPublicKey} 和 {@link RSAPublicKey} 对象的形式返回 <code>DSAKeyValue</code> 和 <code>RSAKeyValue</code> 元素。注意，并非模式中的所有字段都可以作为这些类型的参数进行访问。 
 
@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeyInfoFactory#newKeyValue(PublicKey)

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.crypto.dsig.keyinfo.KeyValue.DSA_TYPE
<!-- END KEY -->
<!-- BEGIN DATA -->
标识 DSA KeyValue KeyInfo 类型的 URI：http://www.w3.org/2000/09/xmldsig#DSAKeyValue。可以将其指定为 {@link RetrievalMethod} 类的 <code>type</code> 参数值，以描述远程 <code>DSAKeyValue</code> 结构。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.crypto.dsig.keyinfo.KeyValue.RSA_TYPE
<!-- END KEY -->
<!-- BEGIN DATA -->
标识 RSA KeyValue KeyInfo 类型的 URI：http://www.w3.org/2000/09/xmldsig#RSAKeyValue。可以将其指定为 {@link RetrievalMethod} 类的 <code>type</code> 参数值，以描述远程 <code>RSAKeyValue</code> 结构。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.PublicKey javax.xml.crypto.dsig.keyinfo.KeyValue.getPublicKey() throws java.security.KeyException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>KeyValue</code> 的公钥。 

@return 此 <code>KeyValue</code> 的公钥
@throws KeyException 如果无法将此 <code>KeyValue</code> 转换为 <code>PublicKey</code>

<!-- END DATA -->


