<!-- BEGIN KEY -->
public static interface javax.xml.crypto.dsig.XMLSignature.SignatureValue extends javax.xml.crypto.XMLStructure
<!-- END KEY -->
<!-- BEGIN DATA -->
<a href="http://www.w3.org/TR/xmldsig-core/">W3C Recommendation for XML-Signature Syntax and Processing</a> 中定义的 XML <code>SignatureValue</code> 元素的表示形式。XML Schema Definition 的定义如下：
 <p>
 <pre>
&lt;element name=&quot;SignatureValue&quot; type=&quot;ds:SignatureValueType&quot;/&gt;
&lt;complexType name=&quot;SignatureValueType&quot;&gt;
&lt;simpleContent&gt;
&lt;extension base=&quot;base64Binary&quot;&gt;
&lt;attribute name=&quot;Id&quot; type=&quot;ID&quot; use=&quot;optional&quot;/&gt;
&lt;/extension&gt;
&lt;/simpleContent&gt;
&lt;/complexType&gt;
 </pre>

@author Sean Mullan
@author JSR 105 Expert Group

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.crypto.dsig.XMLSignature.SignatureValue.getId()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>SignatureValue</code> 的可选 <code>Id</code> 属性，该属性允许从其他地方引用此元素。

@return <code>Id</code> 属性（如果未指定，则返回 <code>null</code>）

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] javax.xml.crypto.dsig.XMLSignature.SignatureValue.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>SignatureValue</code> 的签名值。

@return 签名值（如果尚未对 <code>XMLSignature</code> 进行签名，则返回 <code>null</code>）。每次调用此方法都将返回一个数组的新副本，以防止随后被修改。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.crypto.dsig.XMLSignature.SignatureValue.validate(XMLValidateContext validateContext) throws javax.xml.crypto.dsig.XMLSignatureException
<!-- END KEY -->
<!-- BEGIN DATA -->
验证签名值。此方法对根据 <code>XMLSignature</code> 的 <code>SignedInfo</code> 计算所得的签名执行加密验证。

<p>此方法只在第一次调用时验证签名。在后续调用时，它将返回一个缓存的结果。

@return 如果成功验证签名，则返回 <code>true</code>；否则返回 <code>false</code>
@param validateContext 验证上下文
@throws NullPointerException 如果 <code>validateContext</code> 为 <code>null</code>
@throws XMLSignatureException 如果验证签名时发生不可预料的异常

<!-- END DATA -->
