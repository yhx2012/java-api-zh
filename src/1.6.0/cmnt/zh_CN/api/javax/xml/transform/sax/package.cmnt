<!-- BEGIN KEY -->
javax.xml.transform.sax
<!-- END KEY -->
<!-- BEGIN DATA -->

<p>此包实现特定于 SAX2 的转换 API。它提供了允许从 {@link org.xml.sax.ContentHandler} 事件输入的类，还提供了生成 org.xml.sax.ContentHandler 事件的类。它还提供了用于将输入源设置为 {@link org.xml.sax.XMLReader}，或使用 {@link org.xml.sax.InputSource} 作为源的方法。它还允许创建 {@link org.xml.sax.XMLFilter}，这支持从其他转换&ldquo;拉入&rdquo;的转换，并使转换器通过多种形式作为 {@link org.xml.sax.XMLReader} 使用。</p>
<p>{@link javax.xml.transform.sax.SAXSource} 类允许设置用于&ldquo;拉入&rdquo;解析事件的 {@link org.xml.sax.XMLReader}，以及用于指定 SAX 源的 {@link org.xml.sax.InputSource}。</p>
<p>{@link javax.xml.transform.sax.SAXResult} 类允许设置用作来自转换的 SAX2 事件接收器的 {@link org.xml.sax.ContentHandler}。 
<p>{@link javax.xml.transform.sax.SAXTransformerFactory} 扩展了 {@link javax.xml.transform.TransformerFactory}，以提供用于创建 {@link javax.xml.transform.sax.TemplatesHandler}、{@link javax.xml.transform.sax.TransformerHandler} 和 {@link org.xml.sax.XMLReader} 实例的工厂方法。</p>
<p>要获取 {@link javax.xml.transform.sax.SAXTransformerFactory}，调用者必须强制转换从 {@link javax.xml.transform.TransformerFactory#newInstance} 返回的 {@link javax.xml.transform.TransformerFactory} 实例。 

<p>@link javax.xml.transform.sax.TransformerHandler} 接口允许从 SAX2 解析事件创建转换，这是 &quot;push&quot;（推）模型，而不是转换中通常发生的 &quot;pull&quot;（拉）模型。正常解析事件通过 {@link org.xml.sax.ContentHandler} 接口接收，词法事件（例如 startCDATA 和 endCDATA）通过 {@link org.xml.sax.ext.LexicalHandler} 接口接收，标记禁用输出转义的开始或结束的事件通过 {@link org.xml.sax.ContentHandler#processingInstruction} 接收，目标参数为 {@link javax.xml.transform.Result#PI_DISABLE_OUTPUT_ESCAPING} 和 {@link javax.xml.transform.Result#PI_ENABLE_OUTPUT_ESCAPING}。如果要在 Transformer 处理程序中设置参数、输出属性或其他功能，则需要从 {@link javax.xml.transform.sax.TransformerHandler#getTransformer} 获取 {@link javax.xml.transform.Transformer} 引用，以及从该引用调用的方法。 

<p>{@link javax.xml.transform.sax.TemplatesHandler} 接口允许从 SAX2 解析事件创建 {@link javax.xml.transform.Templates} 对象。当 {@link org.xml.sax.ContentHandler} 事件完成后，可以从 {@link javax.xml.transform.sax.TemplatesHandler#getTemplates} 获取 Templates 对象。注意，应正常调用 {@link javax.xml.transform.sax.TemplatesHandler#setSystemId}，以建立可以从其解析 URL 的基本系统 ID。 
<p>{@link javax.xml.transform.sax.SAXTransformerFactory#newXMLFilter} 方法允许创建 {@link org.xml.sax.XMLFilter}，它封装了 &quot;pull&quot; 转换的 SAX2 概念。以下阐释了互相形成链的几种转换。每个过滤器均指向一个父 {@link org.xml.sax.XMLReader}，且通过调用链中最后的 reader 上的 {@link org.xml.sax.XMLReader#parse} 来引发最后的转换。</p>

<!-- END DATA -->
