<!-- BEGIN KEY -->
public class javax.xml.transform.sax.SAXResult extends java.lang.Object implements javax.xml.transform.Result
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>充当转换 Result 的持有者。</p>

@author <a href="Jeff.Suttor@Sun.com">Jeff Suttor</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.sax.SAXResult.FEATURE
<!-- END KEY -->
<!-- BEGIN DATA -->
当将此值作为参数传递时，如果 {@link javax.xml.transform.TransformerFactory#getFeature} 返回 true，则 Transformer 支持此类型的 Result 输出。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.transform.sax.SAXResult()
<!-- END KEY -->
<!-- BEGIN DATA -->
零参数的默认构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.transform.sax.SAXResult(ContentHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建以 SAX2 {@link org.xml.sax.ContentHandler} 为目标的 SAXResult。

@param handler 必须为非 null ContentHandler 引用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.transform.sax.SAXResult.setHandler(ContentHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置要作为 SAX2 {@link org.xml.sax.ContentHandler} 的目标。

@param handler 必须为非 null ContentHandler 引用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.ContentHandler javax.xml.transform.sax.SAXResult.getHandler()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取作为 Result 的 {@link org.xml.sax.ContentHandler}。

@return 要作为转换输出的 ContentHandler。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.transform.sax.SAXResult.setLexicalHandler(LexicalHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置输出的 SAX2 {@link org.xml.sax.ext.LexicalHandler}。

<p>这需要处理 XML 及类似的注释。如果未设置词法处理程序，则转换器应尝试将 {@link org.xml.sax.ContentHandler} 强制转换为 <code>LexicalHandler</code>。</p>

@param handler 用于处理词法分析事件的非 null <code>LexicalHandler</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.ext.LexicalHandler javax.xml.transform.sax.SAXResult.getLexicalHandler()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取输出的 SAX2 {@link org.xml.sax.ext.LexicalHandler}。

@return  <code>LexicalHandler</code>，或 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.transform.sax.SAXResult.setSystemId(String systemId)
<!-- END KEY -->
<!-- BEGIN DATA -->
setSystemId 方法设置可与 {@link org.xml.sax.ContentHandler} 关联使用的 systemID。

@param systemId URI 字符串形式的系统标识符。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.transform.sax.SAXResult.getSystemId()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取通过 setSystemId 设置的系统标识符。

@return 通过 setSystemId 设置的系统标识符，如果未调用 setSystemId，则返回 null。

<!-- END DATA -->
