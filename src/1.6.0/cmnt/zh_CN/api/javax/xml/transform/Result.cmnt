<!-- BEGIN KEY -->
public interface javax.xml.transform.Result
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>实现此接口的对象包含构建转换结果树所需的信息。</p>
 

@author <a href="Jeff.Suttor@Sun.com">Jeff Suttor</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.Result.PI_DISABLE_OUTPUT_ESCAPING
<!-- END KEY -->
<!-- BEGIN DATA -->
如果结果树禁用了输出转义，则为发送处理指令的名称。

<p>通常，当输出文本节点时，结果树序列化对 &amp; 和 &lt;（可能还有其他字符）进行转义处理。这确保输出是格式良好的 XML。但是为方便起见，有时需要生成几乎但不是非常格式良好的 XML；例如，输出可以包含非良好格式的部分，然后通过后续的非 XML 感知过程将它们转换为格式良好的 XML。如果以此名称发送处理指令，则序列化在输出时不应带有任何转义。 </p>

<p>结果 DOM 树还具有插入树中的 PI_DISABLE_OUTPUT_ESCAPING 和 PI_ENABLE_OUTPUT_ESCAPING。</p>

@see <a href="http://www.w3.org/TR/xslt#disable-output-escaping">disable-output-escaping in XSLT Specification</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.Result.PI_ENABLE_OUTPUT_ESCAPING
<!-- END KEY -->
<!-- BEGIN DATA -->
如果结果树在已接收 PI_DISABLE_OUTPUT_ESCAPING 处理指令后的某时刻启用了输出转义，则发送处理指令的名称。

@see <a href="http://www.w3.org/TR/xslt#disable-output-escaping">disable-output-escaping in XSLT Specification</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.transform.Result.setSystemId(String systemId)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此 Result 的系统标识符。

<p>如果不能将 Result 写入文件中，则系统标识符是可选的。但是，应用程序仍可能希望提供一个系统标识符用于错误消息和警告，或者希望解析输出标识符。</p>

@param systemId URI 字符串形式的系统标识符。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.transform.Result.getSystemId()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取通过 setSystemId 设置的系统标识符。

@return 通过 setSystemId 设置的系统标识符，如果未调用 setSystemId，则返回 null。

<!-- END DATA -->
