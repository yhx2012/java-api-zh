<!-- BEGIN KEY -->
public abstract class javax.xml.transform.sax.SAXTransformerFactory extends javax.xml.transform.TransformerFactory
<!-- END KEY -->
<!-- BEGIN DATA -->
此类扩展了 TransformerFactory 以提供特定于 SAX 的工厂方法。它提供两种类型的 ContentHandler，一种用于创建 Transformer，另一种用于创建 Templates 对象。

<p>如果应用程序希望设置转换期间所使用的 XMLReader 的 ErrorHandler 或 EntityResolver，那么它应使用 URIResolver 来返回提供了（通过 getXMLReader）对 XMLReader 引用的 SAXSource。</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.sax.SAXTransformerFactory.FEATURE
<!-- END KEY -->
<!-- BEGIN DATA -->
当将此值作为参数传递时，如果 {@link javax.xml.transform.TransformerFactory#getFeature} 返回 true，则从 {@link javax.xml.transform.TransformerFactory#newInstance} 返回的 TransformerFactory 可以安全地被转换为 SAXTransformerFactory。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.sax.SAXTransformerFactory.FEATURE_XMLFILTER
<!-- END KEY -->
<!-- BEGIN DATA -->
当将此值作为参数传递时，如果 {@link javax.xml.transform.TransformerFactory#getFeature} 返回 true，则 {@link #newXMLFilter(Source src)} 和 {@link #newXMLFilter(Templates templates)} 方法是受支持的。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.xml.transform.sax.SAXTransformerFactory()
<!-- END KEY -->
<!-- BEGIN DATA -->
默认构造方法受到有意保护。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TransformerHandler javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Source src) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
基于参数所指定的转换指令，获取能够将 SAX ContentHandler 事件处理为 Result 的 TransformerHandler 对象。

@param src 转换指令的 Source。

@return 准备好转换 SAX 事件的 TransformerHandler。

@throws TransformerConfigurationException 如果由于某种原因不能创建 TransformerHandler。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TransformerHandler javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Templates templates) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
基于 Templates 参数，获取能够将 SAX ContentHandler 事件处理为 Result 的 TransformerHandler 对象。

@param templates 编译后的转换指令。

@return 准备好转换 SAX 事件的 TransformerHandler。

@throws TransformerConfigurationException 如果由于某种原因不能创建 TransformerHandler。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TransformerHandler javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler() throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取能够将 SAX ContentHandler 事件处理为 Result 的 TransformerHandler 对象。转换定义为标识（或复制）转换，例如要将一系列 SAX 分析事件复制到 DOM 树中。

@return 对 TransformerHandler 的非 null 引用，可用作 SAX 分析事件的 ContentHandler。

@throws TransformerConfigurationException 如果由于某种原因不能创建 TransformerHandler。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TemplatesHandler javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler() throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取能够将 SAX ContentHandler 事件处理为 Templates 对象的 TemplatesHandler 对象。

@return 对 TransformerHandler 的非 null 引用，可用作 SAX 分析事件的 ContentHandler。

@throws TransformerConfigurationException 如果由于某种原因不能创建 TemplatesHandler。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.xml.sax.XMLFilter javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Source src) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建使用给定 Source 作为转换指令的 XMLFilter。

@param src 转换指令的 Source。

@return XMLFilter 对象，如果不支持此功能，则返回 null。

@throws TransformerConfigurationException 如果由于某种原因不能创建 TemplatesHandler。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.xml.sax.XMLFilter javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Templates templates) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
基于 Templates 参数，创建 XMLFilter。

@param templates 编译后的转换指令。

@return XMLFilter 对象，如果不支持此功能，则返回 null。

@throws TransformerConfigurationException 如果由于某种原因不能创建 TemplatesHandler。

<!-- END DATA -->
