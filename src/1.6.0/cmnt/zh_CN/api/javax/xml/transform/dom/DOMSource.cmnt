<!-- BEGIN KEY -->
public class javax.xml.transform.dom.DOMSource extends java.lang.Object implements javax.xml.transform.Source
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>以 Document Object Model（DOM）树的形式充当转换 Source 树的持有者。</p>
 
<p>注意，XSLT 要求名称空间支持。尝试转换不是通过名称空间感知的解析器构造的 DOM 可能导致错误。通过调用 {@link javax.xml.parsers.DocumentBuilderFactory#setNamespaceAware(boolean awareness)} 可以使解析器具有名称空间感知的功能。</p>

@author <a href="Jeff.Suttor@Sun.com">Jeff Suttor</a>
@version $Revision: 1.3 $, $Date: 2006-09-14 09:54:18 $
@see <a href="http://www.w3.org/TR/DOM-Level-2">Document Object Model (DOM) Level 2 Specification</a>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.dom.DOMSource.FEATURE
<!-- END KEY -->
<!-- BEGIN DATA -->
当将此值作为参数传递时如果 {@link javax.xml.transform.TransformerFactory#getFeature} 返回 true，则 Transformer 支持此类型的 Source 输入。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.transform.dom.DOMSource()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>零参数的默认构造方法。如果使用此构造方法，且没有使用 {@link #setNode(Node node)} 设置 DOM，则 <code>Transformer</code> 将使用 {@link javax.xml.parsers.DocumentBuilder#newDocument()} 创建空的源 {@link org.w3c.dom.Document}。</p>

@see javax.xml.transform.Transformer#transform(Source xmlSource, Result outputTarget)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.transform.dom.DOMSource(Node n)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有 DOM 节点的新输入源。该操作将应用于以此节点为根的子树。在 XSLT 中，&quot;/&quot; 模式仍意味着树的根（不是子树），全局变量和参数的计算也从根节点进行。

@param n 将包含 Source 树的 DOM 节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.transform.dom.DOMSource(Node node, String systemID)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有 DOM 节点的新输入源，系统 ID 也作为基本 URI 被传入。

@param node 将包含 Source 树的 DOM 节点。
@param systemID 指定与节点关联的基本 URI。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.transform.dom.DOMSource.setNode(Node node)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置将表示 Source DOM 树的节点。

@param node 要转换的节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.xml.transform.dom.DOMSource.getNode()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取表示 Source DOM 树的节点。

@return 要转换的节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.transform.dom.DOMSource.setSystemId(String systemID)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置将从其解析 URL 的基本 ID（URL 或系统 ID）。

@param systemID 此 DOM 树的基本 URL。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.transform.dom.DOMSource.getSystemId()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取将从其解析 URL 的基本 ID（URL 或系统 ID）。

@return 此 DOM 树的基本 URL。

<!-- END DATA -->
