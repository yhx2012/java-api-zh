<!-- BEGIN KEY -->
public abstract class javax.xml.validation.Schema extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
不可变的语法存储表示形式。
 
 <p>
此对象表示可以根据 XML 文档检查/实施的约束集。 
 
 <p>
{@link Schema} 对象是线程安全的，鼓励应用程序跨多个线程中的多个解析器共享它。
 
 <p>
{@link Schema} 对象是不可变的，从某种意义来说就是，一旦创建约束集后，就不应再更改约束集。换句话说，如果应用程序根据相同 {@link Schema} 两次验证相同文档，那么它必须总是生成相同的结果。 
 
 <p>
{@link Schema} 对象通常是从 {@link SchemaFactory} 创建的。
 
 <p>
可以从 {@link Schema} 对象创建两种验证器。一种是 {@link Validator}，它提供了覆盖典型用例的高层验证操作。另一种是 {@link ValidatorHandler}，它作用于 SAX 的顶层，以实现更好的模块性。
 
 <p>
此规范不改进 {@link java.lang.Object#equals(java.lang.Object)} 方法。换句话说，如果第二次解析相同的模式，则仍将得到 <code>!schemaA.equals(schemaB)</code>。
 
@author <a href="mailto:Kohsuke.Kawaguchi@Sun.com">Kohsuke Kawaguchi</a>
@version $Revision: 1.3 $, $Date: 2006-09-14 09:54:28 $
@see <a href="http://www.w3.org/TR/xmlschema-1/">XML Schema Part 1: Structures</a>
@see <a href="http://www.w3.org/TR/xml11/">Extensible Markup Language (XML) 1.1</a>
@see <a href="http://www.w3.org/TR/REC-xml">Extensible Markup Language (XML) 1.0 (Second Edition)</a>
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.xml.validation.Schema()
<!-- END KEY -->
<!-- BEGIN DATA -->
派生类的构造方法。
 
 <p>
构造方法不执行任何动作。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.validation.Validator javax.xml.validation.Schema.newValidator()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建此 {@link Schema} 的新 {@link Validator}。
 
 <p>验证器实施/检查此对象表示的约束集。</p>

 <p>实现者应该确保在创建此 {@link Schema} 的 {@link SchemaFactory} 上设置的属性也设置在构造的 {@link Validator} 上。</p>
 
@return 总返回非 null 的有效对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.validation.ValidatorHandler javax.xml.validation.Schema.newValidatorHandler()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建此 {@link Schema} 的新 {@link ValidatorHandler}。
 
 <p>实现者应该确保在创建此 {@link Schema} 的 {@link SchemaFactory} 上设置的属性也设置在构造的 {@link ValidatorHandler} 上。</p>
 
@return 总返回非 null 的有效对象。

<!-- END DATA -->
