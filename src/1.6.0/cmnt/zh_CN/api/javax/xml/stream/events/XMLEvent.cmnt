<!-- BEGIN KEY -->
public interface javax.xml.stream.events.XMLEvent extends javax.xml.stream.XMLStreamConstants
<!-- END KEY -->
<!-- BEGIN DATA -->
处理标记事件的基础事件接口。事件是用来与应用程序交流 XML 1.0  InfoSet 的 value 对象。可以在解析完事件之后缓存和引用事件。

@version 1.0
@author Copyright (c) 2003 by BEA Systems.All Rights Reserved.
@see javax.xml.stream.XMLEventReader
@see Characters
@see ProcessingInstruction
@see StartElement
@see EndElement
@see StartDocument
@see EndDocument
@see EntityReference
@see EntityDeclaration
@see NotationDeclaration
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.xml.stream.events.XMLEvent.getEventType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此事件的整数码。
@see #START_ELEMENT
@see #END_ELEMENT
@see #CHARACTERS
@see #ATTRIBUTE
@see #NAMESPACE
@see #PROCESSING_INSTRUCTION
@see #COMMENT
@see #START_DOCUMENT
@see #END_DOCUMENT
@see #DTD

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.Location javax.xml.stream.events.XMLEvent.getLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此事件的位置。此方法返回的 Location 是不易改变的，将保留其信息。
@see javax.xml.stream.Location

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isStartElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 StartElement 的实用工具函数。
@see StartElement

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isAttribute()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 Attribute 的实用工具函数。
@see Attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isNamespace()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 Namespace 的实用工具函数。
@see Namespace

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isEndElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 EndElement 的实用工具函数。
@see EndElement

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isEntityReference()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 EntityReference 的实用工具函数。
@see EntityReference

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isProcessingInstruction()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 ProcessingInstruction 的实用工具函数。
@see ProcessingInstruction

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isCharacters()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 Characters 的实用工具函数。
@see Characters

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isStartDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 StartDocument 的实用工具函数。
@see StartDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isEndDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查此事件是否为 EndDocument 的实用工具函数。
@see EndDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.StartElement javax.xml.stream.events.XMLEvent.asStartElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
将此事件作为开始元素事件返回，如果此事件不是开始元素，则可能导致类强制转换异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.EndElement javax.xml.stream.events.XMLEvent.asEndElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
将此事件作为结束元素事件返回，如果此事件不是结束元素，则可能导致类强制转换异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.Characters javax.xml.stream.events.XMLEvent.asCharacters()
<!-- END KEY -->
<!-- BEGIN DATA -->
将此事件作为 Characters 返回，如果此事件不是字符，则可能导致类强制转化异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.namespace.QName javax.xml.stream.events.XMLEvent.getSchemaType()
<!-- END KEY -->
<!-- BEGIN DATA -->
提供此方法是为了提供有关关联事件的可选类型信息。信息是可选的，如果没有可用信息，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.stream.events.XMLEvent.writeAsEncodedUnicode(Writer writer) throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法根据 XML 1.0 规范将 XMLEvent 编写为 Unicode 字符。不应输出缩排或空格。

在将任何用户定义的事件类型写入输出流时，都应当调用此方法。内置 Event 类型必须实现此方法，但是在将内置 Event 写出到输出流时，为了优化目的，可以选择而不调用这些方法。生成的输出必须与所表示的信息集等效。
 
@param writer 将输出数据的编写器
@throws XMLStreamException 如果在写入事件时发生严重错误

<!-- END DATA -->
