<!-- BEGIN KEY -->
public interface javax.xml.stream.util.XMLEventAllocator
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口定义了一个类，该类允许用户注册给定 XMLStreamReader 的情况下分配事件的方式。实现不需要使用 XMLEventFactory 实现，但推荐这样做。可以使用属性 &quot;javax.xml.stream.allocator&quot; 在 XMLInputFactory 上设置 XMLEventAllocator。

@version 1.0
@author Copyright (c) 2003 by BEA Systems.All Rights Reserved.
@see javax.xml.stream.XMLInputFactory
@see javax.xml.stream.XMLEventFactory
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.util.XMLEventAllocator javax.xml.stream.util.XMLEventAllocator.newInstance()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法创建一个 XMLEventAllocator 实例。它允许 XMLInputFactory 为每个 reader 分配一个新实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.XMLEvent javax.xml.stream.util.XMLEventAllocator.allocate(XMLStreamReader reader) throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法在给定 XMLStreamReader 当前状态的情况下分配事件。如果此 XMLEventAllocator 在 reader 状态和事件之间不存在一对一的映射关系，则此方法将返回 null。此方法不能修改 XMLStreamReader 的状态。
@param reader 作为分配根据的 XMLStreamReader
@return 对应于当前 reader 状态的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.stream.util.XMLEventAllocator.allocate(XMLStreamReader reader, XMLEventConsumer consumer) throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法在给定 XMLStreamReader 当前状态的情况下分配一个事件或一个事件组，并将该事件或事件组添加给传入的使用者。此方法可将 reader 状态展开或联系到事件状态中。此方法可修改 XMLStreamReader 的状态。
@param reader 作为分配根据的 XMLStreamReader
@param consumer 要添加事件的 XMLEventConsumer。

<!-- END DATA -->
