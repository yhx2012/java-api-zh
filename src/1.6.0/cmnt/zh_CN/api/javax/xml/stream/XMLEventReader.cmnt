<!-- BEGIN KEY -->
public interface javax.xml.stream.XMLEventReader extends java.util.Iterator
<!-- END KEY -->
<!-- BEGIN DATA -->

此类是用于解析 XML 事件的顶层接口。它提供查看下一个事件和返回属性接口中的配置信息的功能。

@version 1.0
@author Copyright (c) 2003 by BEA Systems.All Rights Reserved.
@see XMLInputFactory
@see XMLEventWriter
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.XMLEvent javax.xml.stream.XMLEventReader.nextEvent() throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
获取下一个 XMLEvent。
@see XMLEvent
@throws XMLStreamException 如果底层 XML 存在错误。
@throws NoSuchElementException 迭代不再有元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.XMLEventReader.hasNext()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查是否有多个事件。如果有多个事件，则返回 true，否则返回 false。
@return 如果事件 reader 具有多个事件，则返回 true，否则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.XMLEvent javax.xml.stream.XMLEventReader.peek() throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
检查下一个 XMLEvent，但不从流中读取它。如果流位于 EOF 处或者不再有 XMLEvent，则返回 null。调用 peek() 将相当于 next() 的下一个返回。
@see XMLEvent
@throws XMLStreamException

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.stream.XMLEventReader.getElementText() throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
读取纯文本元素的内容。前置条件：当前事件是 START_ELEMENT。后置条件：当前事件是相应的 END_ELEMENT。
@throws XMLStreamException 如果当前事件不是 START_ELEMENT 或者遇到了非文本元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.XMLEvent javax.xml.stream.XMLEventReader.nextTag() throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
在到达 START_ELEMENT 或 END_ELEMENT 之前，跳过所有无意义的空格事件。如果遇到空格符之外的其他内容，则抛出异常。在处理纯元素内容时应使用此方法，因为如果缺少 DTD 或未解释它，解析器将无法识别可忽略的空格。
@throws XMLStreamException 如果遇到空格符之外的其他内容

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.xml.stream.XMLEventReader.getProperty(String name) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
从底层实现获取功能/属性值。
@param name 属性的名称
@return 属性的值
@throws IllegalArgumentException 如果属性不受支持

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.stream.XMLEventReader.close() throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
释放所有与此 Reader 关联的资源。此方法不会关闭底层输入源。
@throws XMLStreamException 如果释放关联资源时出现错误

<!-- END DATA -->
