<!-- BEGIN KEY -->
public interface class javax.xml.bind.annotation.XmlMixed implements java.lang.annotation.Annotation
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>
注释 JavaBean 多值属性，以支持混合内容。

 <p>
用法受到以下约束的限制：
 <ul>
<li> 能够与 @XmlElementRef、@XmlElementRefs 或 @XmlAnyElement 一起使用。</li>
 </ul>
 <p>
以下内容可以插入 @XmlMixed 注释的多值属性中：
 <ul>
<li>XML 文本信息项将作为 java.lang.String 值添加。</li>
<li>子元素信息项将作为 {@link JAXBElement} 实例或带有使用 @XmlRootElement 注释的类的实例添加。</li>
<li>没有绑定到 JAXB 映射类的未知内容将作为 {@link Element} 插入。（假定已使用 @XmlAnyElement 对属性进行注释。）</li>
 </ul>

以下是绑定和创建混合内容的一个示例：
<pre><xmp>
  <!-- schema fragment having  mixed content -->
  <xs:complexType name="letterBody" mixed="true">
    <xs:sequence>
	<xs:element name="name" type="xs:string"/>
	<xs:element name="quantity" type="xs:positiveInteger"/>
	<xs:element name="productName" type="xs:string"/>
	<!-- etc. -->
    </xs:sequence>
  </xs:complexType>
  <xs:element name="letterBody" type="letterBody"/>
 
 // Schema-derived Java code: 
 // (Only annotations relevant to mixed content are shown below, 
 //  others are ommitted.)
 import java.math.BigInteger;
 public class ObjectFactory {
 	// element instance factories
 	JAXBElement<LetterBody> createLetterBody(LetterBody value);
 	JAXBElement<String>     createLetterBodyName(String value);
 	JAXBElement<BigInteger> createLetterBodyQuantity(BigInteger value);
 	JAXBElement<String>     createLetterBodyProductName(String value);
      // type instance factory
 	LetterBody> createLetterBody();
 }
 </xmp></pre>
 <pre>
 public class LetterBody {
 	// Mixed content can contain instances of Element classes
 	// Name, Quantity and ProductName. Text data is represented as
	// java.util.String for text.
	&#64;XmlMixed 
 	&#64;XmlElementRefs({
		&#64;XmlElementRef(name="productName", type=JAXBElement.class),
		&#64;XmlElementRef(name="quantity", type=JAXBElement.class),
		&#64;XmlElementRef(name="name", type=JAXBElement.class)})
	List getContent(){...}
 }
 </pre>
以下是具有混合内容的一个 XML 实例文档：
 <pre><xmp>
 <letterBody>
Dear Mr.<name>Robert Smith</name>
Your order of <quantity>1</quantity> <productName>Baby
Monitor</productName> shipped from our warehouse. ....
 </letterBody>
 </xmp></pre>
可以使用以下 JAXB API 调用来构造上述文档：
 <pre><xmp>
LetterBody lb = ObjectFactory.createLetterBody();
JAXBElement<LetterBody> lbe = ObjectFactory.createLetterBody(lb);
List gcl = lb.getContent();  //add mixed content to general content property.
gcl.add(&quot;Dear Mr.&quot;);  // add text information item as a String.
 
// add child element information item
gcl.add(ObjectFactory.createLetterBodyName(&quot;Robert Smith&quot;));
gcl.add(&quot;Your order of &quot;); // add text information item as a String
 
// add children element information items
gcl.add(ObjectFactory.
	 		createLetterBodyQuantity(new BigInteger(&quot;1&quot;)));
gcl.add(ObjectFactory.createLetterBodyProductName(&quot;Baby Monitor&quot;));
gcl.add(&quot;shipped from our warehouse&quot;);  // add text information item
 </xmp></pre>

<p>有关其他公共信息，请参阅 javax.xml.bind.package javadoc 中的&ldquo;包规范&rdquo;。</p>
@author Kohsuke Kawaguchi
@since JAXB2.0

<!-- END DATA -->
