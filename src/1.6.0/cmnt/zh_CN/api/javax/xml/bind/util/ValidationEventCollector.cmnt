<!-- BEGIN KEY -->
public class javax.xml.bind.util.ValidationEventCollector extends java.lang.Object implements javax.xml.bind.ValidationEventHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
收集所有事件的 {@link javax.xml.bind.ValidationEventHandler ValidationEventHandler} 实现。
 
 <p>
要使用此类，则需要创建一个新实例并将其传递给 Validator、Unmarshaller 和 Marshaller 类的 setEventHandler 方法。完成对验证和解组的调用之后，调用 getEvents 方法来检索所有报告的错误和警告。

@author<ul><li>Kohsuke Kawaguchi, Sun Microsystems, Inc.</li><li>Ryan Shoemaker, Sun Microsystems, Inc.</li><li>Joe Fialli, Sun Microsystems, Inc.</li></ul> 
@version $Revision: 1.3 $
@see javax.xml.bind.Validator
@see javax.xml.bind.ValidationEventHandler
@see javax.xml.bind.ValidationEvent
@see javax.xml.bind.ValidationEventLocator
@since JAXB1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.ValidationEvent[] javax.xml.bind.util.ValidationEventCollector.getEvents()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 ValidationEvent 对象数组，这些对象包含所有收集的错误和警告的副本。
 
@return 所有收集的错误和警告的副本；如果没有收集的错误和警告，则返回一个空数组

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.util.ValidationEventCollector.reset()
<!-- END KEY -->
<!-- BEGIN DATA -->
清除所有收集的错误和警告。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.bind.util.ValidationEventCollector.hasEvents()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此事件收集器至少包含一个 ValidationEvent，则返回 true。

@return 如果此事件收集器至少包含一个 ValidationEvent，则返回 true，否则返回 false

<!-- END DATA -->
