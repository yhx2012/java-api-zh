<!-- BEGIN KEY -->
public abstract class javax.xml.bind.JAXBIntrospector extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
提供对 JAXB 对象的 JAXB xml 绑定数据的访问。

 <p>
最初，此类只用于从概念上说明 JAXB 应用程序开发人员如何访问 xml 绑定信息，与绑定模型是从 java 到 schema 还是从 schema 到 java 无关。由于访问与 JAXB 元素相关的 XML 元素名称是经常被请求的功能，所以我们将演示如何访问此绑定信息。获取 <code>JAXBIntrospector</code> 实例的工厂方法是 {@link JAXBContext#createJAXBIntrospector()}。

@see JAXBContext#createJAXBIntrospector()
@since JAXB2.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract boolean javax.xml.bind.JAXBIntrospector.isElement(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->

<p>如果 <code>object</code> 表示一个 JAXB 元素，则返回 true。</p>
<p>在以下情况中，参数 <code>object</code> 是一个 JAXB 元素：
 <ol>
<li>它是 <code>javax.xml.bind.JAXBElement</code> 的实例。</li>
<li><code>object</code> 的类是使用 <code>@</code> 注释的。
   </li>
 </ol>

@see #getElementName(Object)

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.namespace.QName javax.xml.bind.JAXBIntrospector.getElementName(Object jaxbElement)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>获取 <code>jaxbElement</code> 的 xml 元素 qname。</p>

@param jaxbElement {@link #isElement(Object)} 返回 true 的对象。
                    
@return 与 jaxbElement 关联的 xml 元素 qname；如果 <code>jaxbElement</code> 不是 JAXB 元素，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.lang.Object javax.xml.bind.JAXBIntrospector.getValue(Object jaxbElement)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>获取 JAXB 元素的元素值。</p>

<p>对是与 javax.xml.bind.JAXBElement 实例一起使用还是与用 <tt>>&#64XmlRootElement</tt> 注释的 Java 类实例一起使用进行抽象的便捷方法。</p>

@param jaxbElement  #isElement(Object) 返回 true 的对象。

@return <code>jaxbElement</code> 的元素值。

<!-- END DATA -->
