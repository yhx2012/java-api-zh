<!-- BEGIN KEY -->
public class javax.xml.bind.TypeConstraintException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
此异常指示已检测到存在违反动态检查的类型约束的情况。

 <p>
此异常可由生成的模式派生 Java 内容类的设置方法抛出。但是，由于快速修复验证是 JAXB 提供者支持的一项可选功能，所以并非所有设置方法都将在违反类型约束时抛出此异常。
 
 <p>
如果在调用快速失败设置方法时抛出此异常，则要保证属性值保持不变，如同从未调用过该设置方法一样。

@author<ul><li>Ryan Shoemaker, Sun Microsystems, Inc.</li><li>Joe Fialli, Sun Microsystems, Inc.</li></ul> 
@version $Revision: 1.5 $
@see ValidationEvent
@since JAXB1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.xml.bind.TypeConstraintException.errorCode
<!-- END KEY -->
<!-- BEGIN DATA -->

特定于供应商的错误代码。


<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Throwable javax.xml.bind.TypeConstraintException.linkedException
<!-- END KEY -->
<!-- BEGIN DATA -->

异常引用。


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.TypeConstraintException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->

构造带指定详细消息的 TypeConstraintException。errorCode 和 linkedException 将默认为 null。

@param message 对异常的描述

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.TypeConstraintException(String message, String errorCode)
<!-- END KEY -->
<!-- BEGIN DATA -->

构造带指定详细消息和特定于供应商的 errorCode 的 TypeConstraintException。linkedException 将默认为 null。

@param message 对异常的描述
@param errorCode 指定特定于供应商的错误代码的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.TypeConstraintException(Throwable exception)
<!-- END KEY -->
<!-- BEGIN DATA -->

构造带有一个 linkedException 的 TypeConstraintException。详细消息和特定于供应商的 errorCode 将默认为 null。

@param exception 链接的异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.TypeConstraintException(String message, Throwable exception)
<!-- END KEY -->
<!-- BEGIN DATA -->

构造带指定详细消息和 linkedException 的 TypeConstraintException。errorCode 将默认为 null。

@param message 对异常的描述
@param exception 链接的异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.TypeConstraintException(String message, String errorCode, Throwable exception)
<!-- END KEY -->
<!-- BEGIN DATA -->

构造带指定的详细消息、特定于供应商的 errorCode 和 linkedException 的 TypeConstraintException。  

@param message 对异常的描述
@param errorCode 指定特定于供应商的错误代码的字符串
@param exception 链接的异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.bind.TypeConstraintException.getErrorCode()
<!-- END KEY -->
<!-- BEGIN DATA -->

获取特定于供应商的错误代码。

@return 指定特定于供应商的错误代码的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable javax.xml.bind.TypeConstraintException.getLinkedException()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取链接的异常。

@return 链接的异常；如果不存在，则返回 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.xml.bind.TypeConstraintException.setLinkedException(Throwable exception)
<!-- END KEY -->
<!-- BEGIN DATA -->
添加一个链接的异常。

@param exception 链接的异常（允许使用 null 值，该值指示链接的异常不存在或者是未知的）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.bind.TypeConstraintException.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 TypeConstraintException 的简短描述。


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.TypeConstraintException.printStackTrace(PrintStream s)
<!-- END KEY -->
<!-- BEGIN DATA -->
打印此 TypeConstraintException 及其对 PrintStream 的堆栈跟踪（如果为非 null，则包括该 linkedException 的堆栈跟踪）。

@param s 用于输出的 PrintStream

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.TypeConstraintException.printStackTrace()
<!-- END KEY -->
<!-- BEGIN DATA -->
打印此 TypeConstraintException 及其对 <tt>System.err</tt> 的堆栈跟踪（如果为非 null，则包括 linkedException 的堆栈跟踪。


<!-- END DATA -->
