<!-- BEGIN KEY -->
public interface class javax.xml.bind.annotation.XmlList implements java.lang.annotation.Annotation
<!-- END KEY -->
<!-- BEGIN DATA -->
用来将属性映射到列表简单类型。

<p><b>用法</b> </p>
 <p>
<tt>@XmlList</tt> 注释能够与以下程序元素一起使用： 
 <ul> 
<li> JavaBean 属性 </li>
<li> 字段 </li>
 </ul>

 <p>
在集合属性仅使用 @XmlElement 进行注释时，将通过元素包装集合中的每一个项。例如，

<pre>
 &#64;XmlRootElement
 class Foo {
     &#64;XmlElement
     List&lt;String> data;
 }
 </pre>


将生成如下 XML：

 <pre><xmp>
 <foo>
<data>abc</data>
<data>def</data>
 </foo>
 </xmp></pre>

另一方面，@XmlList 注释允许将多个值表示为单个元素中以空格分隔的标记。例如，

 <pre>
 &#64;XmlRootElement
 class Foo {
     &#64;XmlElement
     &#64;XmlList
     List&lt;String> data;
 }
 </pre>


上述代码将生成如下 XML：

 <pre><xmp>
 <foo>
<data>abc def</data>
 </foo>
 </xmp></pre>

<p>此注释可与以下注释一起使用：{@link XmlElement}、{@link XmlAttribute}、{@link XmlValue} 和 {@link XmlIDREF}。
  <ul>
<li> 使用 <tt>@XmlList</tt> 和 {@link XmlValue}（在允许的情况下）是多余的，因为 {@link XmlList} 将集合类型映射到一个简单模式类型，该简单模式类型就像 {@link XmlValue} 那样是由列表派生的。 </li> 

<li> 使用 <tt>@XmlList</tt> 和 {@link XmlAttribute}（在允许的情况下）是多余的，因为 {@link XmlList} 将集合类型映射到一个简单模式类型，该简单模式类型就像 {@link XmlAttribute} 那样是由列表派生的。 </li> 
  </ul>

@author <ul><li>Kohsuke Kawaguchi, Sun Microsystems, Inc.</li><li>Sekhar Vajjhala, Sun Microsystems, Inc.</li></ul>

@since JAXB2.0

<!-- END DATA -->
