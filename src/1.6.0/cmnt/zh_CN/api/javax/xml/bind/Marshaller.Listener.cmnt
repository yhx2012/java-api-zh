<!-- BEGIN KEY -->
public abstract static class javax.xml.bind.Marshaller.Listener extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p/>
向 {@link Marshaller} 注册此类的一个实现的实例，以从外部侦听编组事件。
 <p/>
 <p/>
此类支持对每个已编组的对象进行预处理和后处理。从映射到 xml 元素或复杂类型定义的实例进行编组时，将调用事件回调。从表示简单类型定义的 Java 数据类型的实例进行编组时，不需要调用事件回调。
 <p/>
 <p/>
外部侦听器是用于定义编组事件回调的两个不同机制之一。请参阅 <a href="Marshaller.html#marshalEventCallback">Marshal Event Callbacks</a> 获得对方面的概括。

@see Marshaller#setListener(Listener)
@see Marshaller#getListener()
@since JAXB2.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.Marshaller.Listener.beforeMarshal(Object source)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p/>
从 <tt>source</tt> 编组到 XML 之前调用的回调方法。
 <p/>
 <p/>
只在编组进程开始编组 <tt>source</tt> 之前才调用此方法。注意，如果 <tt>source</tt> 的类定义了自己的 <tt>beforeMarshal</tt> 方法，则只在调用此方法之前调用特定于类的回调方法。

@param source 编组之前的 JAXB 映射类的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.Marshaller.Listener.afterMarshal(Object source)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p/>
将 <tt>source</tt> 编组到 XML 之后调用的回调方法。
 <p/>
 <p/>
在编组 <tt>source</tt> 及其所有子代之前调用此方法。注意，如果 <tt>source</tt> 的类定义了自己的 <tt>afterMarshal</tt> 方法，则只在调用此方法之前调用特定于类的回调方法。

@param source 编组之后的 JAXB 映射类的实例。

<!-- END DATA -->
