<!-- BEGIN KEY -->
public class javax.xml.ws.ProtocolException extends javax.xml.ws.WebServiceException
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>ProtocolException</code> 类是与特定协议绑定有关的异常的基类。子类用来与客户端交流协议级别故障的信息，也可以在服务器上使用，以控制特定于协议的故障表示形式。

@since JAX-WS 2.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的协议异常，将 null 作为它的详细消息。cause 没有初始化，随后可以通过调用 Throwable.initCause(java.lang.Throwable) 进行初始化。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个具有指定详细消息的新协议异常。cause 没有初始化，随后可以通过调用 Throwable.initCause(java.lang.Throwable) 进行初始化。

@param message 详细消息。保存该详细消息，以便以后通过 Throwable.getMessage() 方法进行检索。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个具有指定详细消息和 cause 的新运行时异常。

注意，与 cause 相关的详细消息不会自动地合并到此运行时异常的详细消息中。

@param message 详细消息（保存此消息，以便以后通过 Throwable.getMessage() 方法检索它）。
@param cause cause （保存此 cause，以便以后通过 Throwable.getCause() 方法检索它）。（允许 null 值，指示 cause 是不存在的或是未知的。）

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有指定 cause 和详细消息 (cause==null ? null :cause.toString())（它通常包含 cause 的类和详细消息）的新运行时异常。该构造方法对于那些与其他可抛出异常的包装器一样的运行时异常来说是很有用的。

@param cause cause （保存此 cause，以便以后通过 Throwable.getCause() 方法检索它）。（允许 null 值，指示 cause 是不存在的或是未知的。）

<!-- END DATA -->
