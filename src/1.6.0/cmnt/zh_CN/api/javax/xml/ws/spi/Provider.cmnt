<!-- BEGIN KEY -->
public abstract class javax.xml.ws.spi.Provider extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>ServiceDelegate</code> 和 <code>Endpoint</code> 对象的服务提供者。
 <p>
 
@since JAX-WS 2.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.spi.Provider.JAXWSPROVIDER_PROPERTY
<!-- END KEY -->
<!-- BEGIN DATA -->
表示用于查找 <code>Provider</code> 实现类名称的属性的常量。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.xml.ws.spi.Provider()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的 Provider 实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.xml.ws.spi.Provider javax.xml.ws.spi.Provider.provider()
<!-- END KEY -->
<!-- BEGIN DATA -->

创建一个新的提供者对象。
 <p>
用于查找将要使用的提供者子类的算法由以下几个步骤组成：
 <p>
 <ul>
 <li>
如果存在名为 <code>META-INF/services/javax.xml.ws.spi.Provider</code> 的资源，则它的第一行（如果存在）被用作实现类的 UTF-8 编码名称。
 </li>
 <li>
如果存在 $java.home/lib/jaxws.properties 文件，可以通过 <code>java.util.Properties.load(InputStream)</code> 方法读取它，并且该文件包含键为 <code>javax.xml.ws.spi.Provider</code> 的条目，则该条目的值被用作实现类的名称。
 </li>
 <li>
如果定义了名为 <code>javax.xml.ws.spi.Provider</code> 的系统属性，则它的值被用作实现类的名称。
 </li>
 <li>
最后，使用默认的实现类名称。
 </li>
 </ul>


<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.ws.spi.ServiceDelegate javax.xml.ws.spi.Provider.createServiceDelegate(URL wsdlDocumentLocation, QName serviceName, java.lang.Class serviceClass)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个服务委托对象。
 <p>
@param wsdlDocumentLocation 指向服务的 WSDL 文档的 URL，如果不存在 URL，则该参数为 <code>null</code>。
@param serviceName 服务的限定名。
@param serviceClass 服务类，它必须是 <code>javax.xml.ws.Service</code> 或其一个子类。
@return 新创建的服务委托。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.ws.Endpoint javax.xml.ws.spi.Provider.createEndpoint(String bindingId, Object implementor)
<!-- END KEY -->
<!-- BEGIN DATA -->


创建具有提供的绑定和实现对象的端点对象。

@param bindingId 指定所需绑定的 URI（例如 SOAP/HTTP）
@param implementor 服务实现对象，传入请求将被指派到该对象。必须使用所有必要的 Web 服务注释对相应的类进行注释。
@return 新创建的端点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.ws.Endpoint javax.xml.ws.spi.Provider.createAndPublishEndpoint(String address, Object implementor)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建和发布具有指定地址和实现对象的端点对象。

@param address 指定要使用的地址和传输/协议的 URI。一个 http 地址：URI 必须指向正使用的 SOAP 1.1/HTTP。实现可以支持其他 URI 方案。
@param implementor 服务实现对象，传入请求将被指派到该对象。必须使用所有必要的 Web 服务注释对相应的类进行注释。
@return 新创建的端点。

<!-- END DATA -->
