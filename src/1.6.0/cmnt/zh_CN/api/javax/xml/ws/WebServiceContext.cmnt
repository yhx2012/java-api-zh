<!-- BEGIN KEY -->
public interface javax.xml.ws.WebServiceContext
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>WebServiceContext</code> 能使 Web 服务端点实现类访问与服务的请求有关的消息上下文和安全信息。

通常，使用 <code>Resource</code> 注释将 <code>WebServiceContext</code> 注入到端点实现类中。

@since JAX-WS 2.0

@see javax.annotation.Resource

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.handler.MessageContext javax.xml.ws.WebServiceContext.getMessageContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
调用此方法时，返回正在服务的请求的 MessageContext。应用程序只能看到具有 APPLICATION 作用域的属性。

@return MessageContext 消息上下文。
  
@throws IllegalStateException 如果调用该方法但不存在任何正被服务的请求，则抛出该异常。

@see javax.xml.ws.handler.MessageContext
@see javax.xml.ws.handler.MessageContext.Scope
@see java.lang.IllegalStateException

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.Principal javax.xml.ws.WebServiceContext.getUserPrincipal()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回标识当前正服务请求发送方的 Principal。如果发送方没有经过验证，则该方法返回 <code>null</code>。

@return Principal 主体对象。
  
@throws IllegalStateException 如果调用该方法但不存在任何正被服务的请求，则抛出该异常。

@see java.security.Principal
@see java.lang.IllegalStateException

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.ws.WebServiceContext.isUserInRole(String role)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个布尔值，指示指定的逻辑角色中是否包含经过验证的用户。如果用户没有经过验证，则该方法返回 </code>false</code>。

@param role 指定角色名称的 <code>String</code>

@return 一个 <code>boolean</code> 值，指示请求的发送方是否属于给定角色
  
@throws IllegalStateException 如果调用该方法但不存在任何正被服务的请求，则抛出该异常。

<!-- END DATA -->
