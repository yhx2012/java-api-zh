<!-- BEGIN KEY -->
public class javax.management.MBeanException extends javax.management.JMException
<!-- END KEY -->
<!-- BEGIN DATA -->
表示由代理的 MBean 方法所抛出的&ldquo;用户定义的&rdquo;异常。它会&ldquo;包装&rdquo;所抛出的实际&ldquo;用户定义的&rdquo;异常。当调用 MBean 方法导致未知异常时由 MBeanServer 构建此异常。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Exception javax.management.MBeanException.exception
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial Encapsulated {@link Exception}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanException(Exception e)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个包装实际 <CODE>java.lang.Exception</CODE> 的 <CODE>MBeanException</CODE>。

@param e 被包装的异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanException(Exception e, String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个包装实际 <CODE>java.lang.Exception</CODE> 的 <CODE>MBeanException</CODE>（带有详细消息）。

@param e 被包装的异常。
@param message 详细消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception javax.management.MBeanException.getTargetException()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回实际抛出的 {@link Exception}。

@return 已包装的异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable javax.management.MBeanException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回实际抛出的 {@link Exception}。

@return 已包装的异常。

<!-- END DATA -->
