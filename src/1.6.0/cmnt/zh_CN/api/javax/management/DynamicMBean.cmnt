<!-- BEGIN KEY -->
public interface javax.management.DynamicMBean
<!-- END KEY -->
<!-- BEGIN DATA -->
定义了 Dynamic MBean（公开了动态管理接口的 MBean）应该实现的各个方法。 

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.DynamicMBean.getAttribute(String attribute) throws javax.management.AttributeNotFoundException, javax.management.MBeanException, javax.management.ReflectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
获得 Dynamic MBean 的特定属性的值。

@param attribute 要检索的属性名

@return 所检索属性的值。

@exception AttributeNotFoundException
@exception MBeanException 包装由 MBean 的获取方法所抛出的 <CODE>java.lang.Exception</CODE>。
@exception ReflectionException 包装试图调用获取方法时所抛出的 <CODE>java.lang.Exception</CODE>。 

@see #setAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.DynamicMBean.setAttribute(Attribute attribute) throws javax.management.AttributeNotFoundException, javax.management.InvalidAttributeValueException, javax.management.MBeanException, javax.management.ReflectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 Dynamic MBean 的特定属性的值。

@param attribute 要设置的属性的标识及其要设置成的值。

@exception AttributeNotFoundException
@exception InvalidAttributeValueException
@exception MBeanException 包装由 MBean 的设置方法所抛出的 <CODE>java.lang.Exception</CODE>。
@exception ReflectionException 包装试图调用设置方法时所抛出的 <CODE>java.lang.Exception</CODE>。

@see #getAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.AttributeList javax.management.DynamicMBean.getAttributes(java.lang.String[] attributes)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得 Dynamic MBean 多个属性的值。

@param attributes 要检索的属性列表。

@return 已检索的属性列表。

@see #setAttributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.AttributeList javax.management.DynamicMBean.setAttributes(AttributeList attributes)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 Dynamic MBean 多个属性的值。

@param attributes 属性列表：要设置的属性的标识及其要设置成的值。

@return 已设置的属性的列表，以及它们的新值。

@see #getAttributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.DynamicMBean.invoke(String actionName, java.lang.Object[] params, java.lang.String[] signature) throws javax.management.MBeanException, javax.management.ReflectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
允许在 Dynamic MBean 上调用某个操作。

@param actionName 要调用的操作的名称。
@param params 一个数组，包含调用该操作时所要设置的参数。
@param signature 包含操作签名的数组。加载类对象时，使用的类加载器与加载在其上调用操作的 MBean 所用的类加载器相同。

@return 该操作返回的对象，表示在指定 MBean 上调用该操作的结果。

@exception MBeanException 包装由 MBean 上所调用的方法抛出的 <CODE>java.lang.Exception</CODE>。
@exception ReflectionException 包装试图调用该方法时所抛出的 <CODE>java.lang.Exception</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanInfo javax.management.DynamicMBean.getMBeanInfo()
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 MBeanInfo 对象提供该 Dynamic MBean 已公开的属性和操作。

@return 一个 <CODE>MBeanInfo</CODE> 实例，允许检索此 Dynamic MBean 已公开的所有属性和操作。


<!-- END DATA -->
