<!-- BEGIN KEY -->
public final class javax.management.remote.SubjectDelegationPermission extends java.security.BasicPermission
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>授权标识表示验证标识执行操作所需的权限。</p>

<p>SubjectDelegationPermission 包含一个名称（也称为&ldquo;目标名称&rdquo;），但没有动作列表；可以使用，也可以不使用指定权限。</p>

<p>目标名称是验证主体类名带一个句点和验证主体名称，即 <code>&quot;<em>PrincipalClassName</em>.<em>PrincipalName</em>&quot;</code>。</p>

<p>星号可能单独出现，也可能紧跟在 &quot;.&quot; 后面出现在目标名称的末尾，它表示通配符匹配。</p>

<p>例如，&quot;*&quot;、&quot;javax.management.remote.JMXPrincipal.*&quot; 和 &quot;javax.management.remote.JMXPrincipal.delegate&quot; 都是有效的目标名称。其中，第一个表示来自任意主体类的任意主体名称，第二个表示具体主体类 <code>javax.management.remote.JMXPrincipal</code> 的任意主体名称，第三个表示具体主体类 <code>javax.management.remote.JMXPrincipal</code> 的具体主题名称 <code>delegate</code>。</p>

@since 1.5
@since.unbundled 1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.remote.SubjectDelegationPermission(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定名称的新 SubjectDelegationPermission。此名称为 SubjectDelegationPermission 的符号名。

@param name SubjectDelegationPermission 的名称

@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.remote.SubjectDelegationPermission(String name, String actions)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带指定名称的新 SubjectDelegationPermission 对象。此名称是 SubjectDelegationPermission 的符号名，而目前不使用操作 String，该字符串应该为 null。

@param name SubjectDelegationPermission 的名称
@param actions 应该为 null。

@throws NullPointerException 如果 <code>name</code> 为 <code>null</code>。
@throws IllegalArgumentException 如果 <code>name</code> 为空或 <code>actions</code> 不为 null。

<!-- END DATA -->
