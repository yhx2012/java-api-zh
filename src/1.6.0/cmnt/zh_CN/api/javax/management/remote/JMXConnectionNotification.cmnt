<!-- BEGIN KEY -->
public class javax.management.remote.JMXConnectionNotification extends javax.management.Notification
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>在客户端连接打开或关闭时，或者当通知丢失时发出的通知。这些通知由连接器服务器（{@link JMXConnectorServer} 的实例）和连接器客户端（{@link JMXConnector} 的实例）进行发送。在某些连接器中，一个会话可包含一个连接序列。将为每个连接发送打开连接或关闭连接的通知。</p>

<p>通知的类型为以下之一：</p>

 <table>

 <tr>
<th align=left>类型</th>
<th align=left>含义</th>
 </tr>

 <tr>
 <td><code>jmx.remote.connection.opened</code></td>
<td>打开了一个新的客户端连接。</td>
 </tr>

 <tr>
 <td><code>jmx.remote.connection.closed</code></td>
<td>关闭了一个客户端连接。</td>
 </tr>

 <tr>
 <td><code>jmx.remote.connection.failed</code></td>
<td>客户端连接意外失败。</td>
 </tr>

 <tr>
 <td><code>jmx.remote.connection.notifs.lost</code></td>
<td>客户端连接可能已丢失通知。此通知只出现在客户端。</td>
 </tr>
 </table>

<p>通知的 <code>timeStamp</code> 为一个时间值（与 {@link System#currentTimeMillis()} 一致），它指示通知的构造时间。</p>

@since 1.5
@since.unbundled 1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.remote.JMXConnectionNotification.OPENED
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>打开连接通知的通知类型字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.remote.JMXConnectionNotification.CLOSED
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>关闭连接通知的通知类型字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.remote.JMXConnectionNotification.FAILED
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>连接失败通知的通知类型字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.remote.JMXConnectionNotification.NOTIFS_LOST
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>可能已丢失通知的连接的通知类型字符串。</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
private final java.lang.String javax.management.remote.JMXConnectionNotification.connectionId
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial The connection ID to which this notification pertains.
@see #getConnectionId()

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.remote.JMXConnectionNotification(String type, Object source, String connectionId, long sequenceNumber, String message, Object userData)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的连接通知。通知的 {@link #getSource() source} 取决于它是由连接器服务器发送还是连接器客户端发送：

 <ul>

<li>对于连接器服务器，如果它是在 MBean 服务器上注册的，则源为在其上注册的 {@link ObjectName}。否则，它是一个到连接器服务器对象自身的引用（{@link JMXConnectorServer} 的子类的实例）。

<li>对于连接器客户端，源是一个到连接器客户端对象的引用（实现 {@link JMXConnector} 的类的实例）。

 </ul>

@param type 通知的类型。通常为常量 {@link #OPENED}、{@link #CLOSED}、{@link #FAILED} 和 {@link #NOTIFS_LOST} 之一。如果类型为一个不同的字符串也不为错。

@param source 发出此通知的连接器服务器或客户端。

@param connectionId 其连接器服务器中的连接的 ID。

@param sequenceNumber 一个非负整数。期望但不要求此数大于任何来自该源的通知中已出现过的 <code>sequenceNumber</code>。
 
@param message 不明确的文本消息，通常包含对事件的具有可读性的描述。可以为 null。
 
@param userData 其类型和含义由连接器服务器定义的一个对象。可以为 null。

@exception NullPointerException 如果 <code>type</code>、<code>source</code> 或 <code>connectionId</code> 为 null。

@exception IllegalArgumentException 如果 <code>sequenceNumber</code> 为负。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.remote.JMXConnectionNotification.getConnectionId()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>该通知所属连接的连接 ID。

@return 连接 ID。

<!-- END DATA -->
