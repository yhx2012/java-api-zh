<!-- BEGIN KEY -->
public class javax.management.remote.rmi.RMIConnectionImpl extends java.lang.Object implements javax.management.remote.rmi.RMIConnection, java.rmi.server.Unreferenced
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>{@link RMIConnection} 接口的实现。用户代码不经常引用此类。</p>

@since 1.5
@since.unbundled 1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.remote.rmi.RMIConnectionImpl(RMIServerImpl rmiServer, String connectionId, ClassLoader defaultClassLoader, Subject subject, java.util.Map<java.lang.String, ?> env)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的 {@link RMIConnection}。此连接即可与 JRMP 一起使用，也可与 IIOP 传输一起使用。此对象并不导出其自身：应由调用者将其适当地导出（请参阅 {@link RMIJRMPServerImpl#makeClient(String,Subject)} 和 {@link RMIIIOPServerImpl#makeClient(String,Subject)}）。

@param rmiServer 为其创建此连接的 RMIServerImpl 对象。如果该参数为 null，则行为不明确。
@param connectionId 该连接的 ID。如果该参数为 null，则行为不明确。
@param defaultClassLoader 将在反序列化编组对象时使用的默认 ClassLoader。可以为 null，表示引导类加载器。
@param subject 将供授权使用的经验证的主题。可以为 null，表示尚未验证任何主题。
@param env 包含新的 <code>RMIServerImpl</code> 属性的环境。可以为 null，等效于一个空映射。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.remote.rmi.RMIConnectionImpl.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>返回此对象的字符串表示形式。通常情况下，<code>toString</code> 方法会返回一个&ldquo;按文本方式表示&rdquo;此对象的字符串。结果应是一个简明而丰富的表示，它方便人们阅读。</p>

@return 此对象的字符串表示形式。

<!-- END DATA -->
