<!-- BEGIN KEY -->
javax.management.remote
<!-- END KEY -->
<!-- BEGIN DATA -->

<p>对 JMX MBean 服务器进行远程访问使用的接口。此包定义了使 JMX MBean 服务器可远程管理的重要接口。此功能性的完整规范，可参考
       <a href="{@docRoot}/../technotes/guides/jmx/JMX_1_4_specification.pdf">
	JMX Specification, version 1.4</a> PDF 文档的 Part III。</p>

<p>JMX 规范定义了<b>连接器</b>的概念。连接器连接到 JMX API MBean 服务器并使远程 Java 客户端可访问该服务器。连接器的客户端导出与 MBean 服务器基本相同的接口，尤其是 {@link javax.management.MBeanServerConnection MBeanServerConnection} 接口。</p>

<p>连接器通过给定的协议实现了 MBean 服务器的远程访问。<br>JMX Remote API 定义了标准的连接器 <b>RMI Connector</b>，它通过 RMI 提供了对 MBeanServer 的远程访问。<br>JMX Remote API 还定义了一个可选协议，名为 <b>JMXMP</b>（JMX 消息传递协议）。JMXMP 基于 TCP 连接上的序列化 Java 对象（在可选包 {@link javax.management.remote.message} 中定义）。实现此协议的连接器称为 <b>JMXMP Connector</b>。也可以使用 {@link javax.management.remote.JMXConnectorFactory JMXConnectorFactory} 提供的用户定义的连接器协议和可选的通用连接器 ({@link javax.management.remote.generic})。</p>

<h3>连接器地址</h3>

<p>通常连接器都有一个地址，它由类 {@link javax.management.remote.JMXServiceURL JMXServiceURL} 表示。JMXMP 连接器的地址如下所示：</p>

      <pre>
      service:jmx:jmxmp://myhost:9876
      </pre>

<p>RMI 连接器的地址可以多种形式，<code>javax.management.remote.rmi</code> 包的文档中有相关的详细论述。</p>

<h3>创建连接器服务器</h3>

<p>连接器服务器通过构造 {@link javax.management.remote.JMXConnectorServer JMXConnectorServer} 的子类的实例创建。多数情况下，该实例是用 {@link javax.management.remote.JMXConnectorServerFactory#newJMXConnectorServer(JMXServiceURL, java.util.Map, javax.management.MBeanServer) JMXConnectorServerFactory.newJMXConnectorServer} 方法创建的。</p>

<p>通常情况下，连接器服务器与一个 MBean 服务器通过两种方式关联，或者通过在该 MBean 服务器上注册的方式，或者在创建连接器服务器时通过将该 MBean 服务器作为一个参数提供。</p>

<h3>创建连接器客户端</h3>

<p>连接器客户端通常通过将 <code>JMXServiceURL</code> 提供给 {@link javax.management.remote.JMXConnectorFactory#connect(JMXServiceURL) JMXConnectorFactory.connect} 方法创建。</p>

<p>对于更特殊的用户，连接器服务器可通过直接实例化一个实现 {@link javax.management.remote.JMXConnector JMXConnector} 接口的类创建，例如类 {@link javax.management.remote.rmi.RMIConnector RMIConnector}。</p>

<h3>其他的客户端或服务器参数</h3>

<p>创建连接器客户端或服务器时，可以提供一个类型为 {@link java.util.Map Map} 的定义了其他参数的对象。此 Map 中的每个条目都包含一个关键字符串和一个适合于该关键字类型的关联值。JMX Remote API 定义的标准关键字都以字符串 &quot;<code>jmx.remote.</code>&quot; 开头。文档 <em>JMX Remote API</em> 列出了这些标准关键字。</p>

<h3>连接标识符</h3>

<p>每个由连接器服务器打开的连接都具有一个字符串标识符，称为<b>连接 ID</b>.此标识符出现在由连接器服务器发出的 {@link javax.management.remote.JMXConnectionNotification JMXConnectionNotification} 事件中、{@link javax.management.remote.JMXConnectorServerMBean#getConnectionIds() JMXConnectorServerMBean#getConnectionIds()} 返回的列表中以及由客户端的 {@link javax.management.remote.JMXConnector#getConnectionId() getConnectionId()} 方法返回的值中。</p>

<p>按照惯例，连接 ID 如下所示：</p>

      <pre>
jmxmp://clienthost:6789 clientname xxxyyyzzz
      </pre>

<p>遵守此惯例的连接 ID 的正规语法如下（使用<em>《The Java Language Specification, Second Edition》</em>中的 <a 	href="http://webmirror.sfbay.sun.com/docs/books/jls/second_edition/html/grammars.doc.html#90767">grammar notation</a>）：</p>

      <pre>
<em>ConnectionId:</em>
    <em>Protocol</em> : <em>ClientAddress<sub>opt</sub></em> Space <em>ClientId<sub>opt</sub></em> Space <em>ArbitraryText</em>

<em>ClientAddress:</em>
// <em>HostAddress</em> <em>ClientPort<sub>opt</sub></em>

<em>ClientPort</em>
    : <em>HostPort</em>
      </pre>

<p><code><em>Protocol</em></code> 是一个可由 {@link javax.management.remote.JMXConnectorFactory JMXConnectorFactory} 识别的协议。</p>

<p><code><em>ClientAddress</em></code> 是连接的客户端的地址和端口（如果可确定），否则什么也不是。<code><em>HostAddress</em></code> 是客户端从其连接的主机的 Internet 地址，可以为数值或 DNS 形式。数值 IPv6 地址括在方括号 <code>[]</code> 中。<code><em>HostPort</em></code> 为客户端从其连接的十进制端口号。</p>

<p><code><em>ClientId</em></code> 为客户端实体的标识，通常为由 {@link javax.management.remote.JMXPrincipal#getName() JMXPrincipal.getName()} 返回的字符串。此字符串不能包含空格。</p>

<p><code><em>ArbitraryText</em></code> 是连接器服务器创建客户端 ID 时添加的其他文本。它至少应能够将此连接 ID 从此连接服务器上当前打开的任何其他连接的 ID 中区分出来。</p>

@see <a href="{@docRoot}/../technotes/guides/jmx/">
      Java SE 6 Platform documentation on JMX technology</a>，
    特别是 
    <a href="{@docRoot}/../technotes/guides/jmx/JMX_1_4_specification.pdf">
      JMX Specification, version 1.4</a>
@since 1.5
    
<!-- END DATA -->
