<!-- BEGIN KEY -->
public class javax.management.AttributeList extends java.util.ArrayList
<!-- END KEY -->
<!-- BEGIN DATA -->
表示 MBean 属性值的列表。用于在 <CODE>AttributeList</CODE> 中插入 {@link javax.management.Attribute Attribute} 对象的方法应重写超类 <CODE>ArrayList</CODE> 中的相应方法。为了确保 <CODE>AttributeList</CODE> 中所包含的对象只是 <CODE>Attribute</CODE> 对象，这是必需的。这可避免在检索 <CODE>AttributeList</CODE> 中的元素时出现异常。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.AttributeList()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个空 <CODE>AttributeList</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.AttributeList(int initialCapacity)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个具有指定初始容量的空 <CODE>AttributeList</CODE>。

@param initialCapacity <code>AttributeList</code> 的初始容量，正如 {@link ArrayList#ArrayList(int)} 所指定的那样。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.AttributeList(AttributeList list)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个包含指定 <CODE>AttributeList</CODE> 元素的 <CODE>AttributeList</CODE>，元素的顺序是该 <CODE>AttributeList</CODE> 的迭代器所返回的顺序。<CODE>AttributeList</CODE> 实例的初始容量是指定 <CODE>AttributeList</CODE> 大小的 110％。

@param list 定义新 <code>AttributeList</code> 的初始内容的 <code>AttributeList</code>。

@see ArrayList#ArrayList(java.util.Collection)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.AttributeList(java.util.List<javax.management.Attribute> list)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个包含指定 {@code List} 的元素的 {@code AttributeList}，这些元素按 {@code List} 的迭代器返回的顺序排列。

 @param list 定义新 {@code AttributeList} 初始内容的 {@code List}。

 @exception IllegalArgumentException 如果 {@code list} 参数为 {@code null} 或者 {@code list} 参数包含任何非 Attribute 对象。

 @see ArrayList#ArrayList(java.util.Collection)

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.List<javax.management.Attribute> javax.management.AttributeList.asList()
<!-- END KEY -->
<!-- BEGIN DATA -->
 以 {@code List<Attribute>} 的形式返回此列表的视图。对返回值的更改将通过对原 {@code AttributeList} 的更改反映出来，反之亦然。

 @return 一个 {@code List<Attribute>}，其内容反映此 {@code AttributeList} 的内容。

 <p>如果给定的 {@code AttributeList} 实例曾经调用过此方法，则之后试图对该实例添加非 {@code Attribute} 对象的操作将会失败，并抛出 {@code IllegalArgumentException}。出于兼容性原因，允许向从未调用过此方法的 {@code AttributeList} 添加非 {@code Attribute} 对象。</p>

 @throws IllegalArgumentException 如果此 {@code AttributeList} 包含非 {@code Attribute} 元素。

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.AttributeList.add(Attribute object)
<!-- END KEY -->
<!-- BEGIN DATA -->
添加指定的 {@code Attribute} 作为列表的最后一个元素。

@param object 要添加的属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.AttributeList.add(int index, Attribute object)
<!-- END KEY -->
<!-- BEGIN DATA -->
插入指定的属性作为指定位置处的元素。其索引大于等于当前位置索引的元素会向上移动。如果 index 超出范围 (index &lt; 0 || index &gt; size())，则将引发 RuntimeOperationsException，并包装所抛出的 java.lang.IndexOutOfBoundsException。

@param object 要插入的 <CODE>Attribute</CODE> 对象。
@param index 列表中插入新 {@code Attribute} 对象的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.AttributeList.set(int index, Attribute object)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定位置的元素设置为指定的属性。丢弃该位置以前的元素。如果 index 超出范围 (index &lt; 0 || index &gt; size())，则将引发 RuntimeOperationsException，并包装所抛出的 java.lang.IndexOutOfBoundsException。

@param object 属性元素应该被设置的值。
@param index 指定的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.AttributeList.addAll(AttributeList list)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定 <CODE>AttributeList</CODE> 中的所有元素追加到列表的末尾，元素的顺序是指定 <CODE>AttributeList</CODE> 的 Iterator 所返回的顺序。

@param list 要插入该列表的元素。

@return 如果此列表由于调用而更改，则返回 true。

@see ArrayList#addAll(java.util.Collection)

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.AttributeList.addAll(int index, AttributeList list)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定 <CODE>AttributeList</CODE> 中的所有元素插入此列表，从指定的位置开始插入，元素的顺序是指定 {@code Attribute} 的 Iterator 所返回的顺序。如果 index 超出范围 (index &lt; 0 || index &gt; size())，则将引发 RuntimeOperationsException，并包装所抛出的 java.lang.IndexOutOfBoundsException。

@param list 要插入该列表的元素。
@param index 插入指定 <CODE>AttributeList</CODE> 中首个元素的位置。

@return 如果此列表由于调用而更改，则返回 true。

@see ArrayList#addAll(int, java.util.Collection)

<!-- END DATA -->
