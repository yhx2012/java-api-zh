<!-- BEGIN KEY -->
public class javax.management.AttributeChangeNotification extends javax.management.Notification
<!-- END KEY -->
<!-- BEGIN DATA -->
提供 MBean 所发送的属性更改通知的定义。
 <P>
当属性发生更改时，由拥有相关属性的 MBean 负责创建并发送属性更改通知。所以必须由发生属性更改的 MBean 来实现 <CODE>NotificationBroadcaster</CODE> 接口。
 <P>
示例：如果一个称为 <CODE>myMbean</CODE> 的 MBean 在其属性 <BLOCKQUOTE><CODE>String myString</CODE></BLOCKQUOTE> 被修改时通知已注册的侦听器，则 <CODE>myMbean</CODE> 创建并忽略以下通知：<CODE>new AttributeChangeNotification(myMbean, sequenceNumber, timeStamp, msg, &quot;myString&quot;, &quot;String&quot;, oldValue, newValue);</CODE> 
  
 <BLOCKQUOTE></BLOCKQUOTE> 

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.AttributeChangeNotification.ATTRIBUTE_CHANGE
<!-- END KEY -->
<!-- BEGIN DATA -->
通知类型，指示所观察的 MBean 属性值已更改。<BR>此类型字符串的值是 <CODE>jmx.attribute.change</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.management.AttributeChangeNotification.attributeName
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial MBean 属性名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.management.AttributeChangeNotification.attributeType
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial MBean 属性类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object javax.management.AttributeChangeNotification.oldValue
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial MBean 属性的旧值。

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object javax.management.AttributeChangeNotification.newValue
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial MBean 属性的新值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.AttributeChangeNotification(Object source, long sequenceNumber, long timeStamp, String msg, String attributeName, String attributeType, Object oldValue, Object newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 AttributeChangeNotification 对象。除了所有通知共有的信息外，调用者还必须提供属性的名称和类型，以及属性的旧值和新值。

@param source 通知生成者，也就是该属性所属的 MBean。
@param sequenceNumber 源对象内的通知序列号。
@param timeStamp 发送通知的日期。
@param msg 包含通知消息的 String。
@param attributeName 提供属性名称的 String。
@param attributeType 包含属性类型的 String。
@param oldValue 表示更改属性前该属性值的对象。
@param newValue 表示更改属性后该属性值的对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.AttributeChangeNotification.getAttributeName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得已更改属性的名称。

@return 包含属性名称的 String。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.AttributeChangeNotification.getAttributeType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得已更改属性的类型。

@return 包含属性类型的 String。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.AttributeChangeNotification.getOldValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得已更改属性的旧值。

@return 包含属性旧值的 Object。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.AttributeChangeNotification.getNewValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得已更改属性的新值。

@return 包含属性新值的 Object。

<!-- END DATA -->
