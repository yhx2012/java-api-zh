<!-- BEGIN KEY -->
public class javax.management.MBeanConstructorInfo extends javax.management.MBeanFeatureInfo implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
描述 MBean 所公开的构造方法。此类的实例是不可变的。子类可以是可变的，但是不推荐使用此特性。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private final javax.management.MBeanParameterInfo[] javax.management.MBeanConstructorInfo.signature
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial The signature of the method, that is, the class names of the arguments.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanConstructorInfo(String description, java.lang.reflect.Constructor constructor)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <CODE>MBeanConstructorInfo</CODE> 对象。已构造对象的 {@link Descriptor} 包括  {@code Constructor}  对象（包含 {@link DescriptorKey} 元注释）生成的字段。


@param description 该操作的可读描述。
@param constructor 描述 MBean 构造方法的 <CODE>java.lang.reflect.Constructor</CODE> 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanConstructorInfo(String name, String description, javax.management.MBeanParameterInfo[] signature)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <CODE>MBeanConstructorInfo</CODE> 对象。

@param name 该构造方法的名称。
@param signature 描述该构造方法的参数（变量）的 <CODE>MBeanParameterInfo</CODE> 对象。该参数可以为 null，与零长度数组的效果相同。
@param description 该该构造方法的可读描述。
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanConstructorInfo(String name, String description, javax.management.MBeanParameterInfo[] signature, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 构造一个 <CODE>MBeanConstructorInfo</CODE> 对象。

 @param name 构造方法名称。
 @param signature 描述该构造方法的参数（变量）的 <CODE>MBeanParameterInfo</CODE> 对象。该参数可以为 null，与零长度数组的效果相同。
 @param description 构造方法的可读描述。
 @param descriptor 构造方法的描述符。该参数可以为 null，它等效于一个空描述符。

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.MBeanConstructorInfo.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>返回此实例的浅表副本。可通过调用 <tt>super.clone()</tt> 来获得该副本，因此要调用 <tt>Object.clone()</tt> 所实现的默认本机浅表复制机制。不进行任何内部字段的更深层复制。</p>

<p>因为此类是不可变的，所以主要对子类进行复制。</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanParameterInfo[] javax.management.MBeanConstructorInfo.getSignature()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>返回此构造方法的参数列表。每个参数都由一个 <CODE>MBeanParameterInfo</CODE> 对象来描述。</p>

<p>返回的数组是内部数组的一个浅表副本，这意味着它是对 <CODE>MBeanParameterInfo</CODE> 对象引用的一个内部数组副本，但是未复制每个被引用的 <CODE>MBeanParameterInfo</CODE> 对象。</p>

@return <CODE>MBeanParameterInfo</CODE> 对象的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanConstructorInfo.equals(Object o)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较此 MBeanConstructorInfo 与另一个 MBeanConstructorInfo。

@param o 要比较的对象。

@return 当且仅当 <code>o</code> 是一个 MBeanConstructorInfo，并且其 {@link #getName()}、{@link #getDescription()}、{@link #getSignature()} 和 {@link #getDescriptor()} 值与此 MBeanConstructorInfo 的这些值相等（不必完全一样）时，才返回 true。如果两个签名数组的元素是成对相等，则这两个数组相等。

<!-- END DATA -->
