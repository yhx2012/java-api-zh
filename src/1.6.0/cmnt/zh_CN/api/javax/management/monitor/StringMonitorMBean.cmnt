<!-- BEGIN KEY -->
public interface javax.management.monitor.StringMonitorMBean extends javax.management.monitor.MonitorMBean
<!-- END KEY -->
<!-- BEGIN DATA -->
公开字符串监视器 MBean 的远程管理接口。

@version     4.25     11/17/05
@author      Sun Microsystems, Inc

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.monitor.StringMonitorMBean.getDerivedGauge()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取派生的尺度。

@return 派生的尺度。
@deprecated 从 JMX 1.2 开始，由 {@link #getDerivedGauge(ObjectName)} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.StringMonitorMBean.getDerivedGaugeTimeStamp()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取派生的尺度时间戳。

@return 派生的尺度时间戳。
@deprecated 从 JMX 1.2 开始，由 {@link #getDerivedGaugeTimeStamp(ObjectName)} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.monitor.StringMonitorMBean.getDerivedGauge(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取指定 MBean 的派生尺度。

@param object 将为其返回派生的尺度的 MBean
@return 如果指定的 MBean 在观察的 MBean 集中，则返回该 MBeans 的派生尺度，否则，返回 <code>null</code>。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.StringMonitorMBean.getDerivedGaugeTimeStamp(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取指定 MBean 的派生尺度时间戳。

@param object 将为其返回派生的尺度时间戳的 MBean
@return 如果指定的 MBean 在观察的 MBean 集中，则返回该 MBeans 的派生尺度时间戳，否则，返回 <code>null</code>。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.monitor.StringMonitorMBean.getStringToCompare()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取要与 observed 属性进行比较的字符串。

@return 字符串值。

@see #setStringToCompare

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.StringMonitorMBean.setStringToCompare(String value) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置要与 observed 属性进行比较的字符串。

@param value 字符串值。
@exception java.lang.IllegalArgumentException 如果要比较的指定字符串为 null。

@see #getStringToCompare

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.StringMonitorMBean.getNotifyMatch()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取匹配的通知的开/关切换值。

@return 如果匹配时字符串监视器发出通知，则返回 <CODE>true</CODE>，否则返回 <CODE>false</CODE>。

@see #setNotifyMatch

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.StringMonitorMBean.setNotifyMatch(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置匹配的通知的开/关切换值。

@param value 匹配通知的开/关切换值。

@see #getNotifyMatch

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.StringMonitorMBean.getNotifyDiffer()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取不同通知的开/关切换值。

@return 如果不一样时字符串监视器发出通知，则返回 <CODE>true</CODE>，否则返回 <CODE>false</CODE>。

@see #setNotifyDiffer

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.StringMonitorMBean.setNotifyDiffer(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置不同通知的开/关切换值。

@param value 不同通知的开/关切换值。

@see #getNotifyDiffer

<!-- END DATA -->
