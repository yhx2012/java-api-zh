<!-- BEGIN KEY -->
public interface javax.management.monitor.MonitorMBean
<!-- END KEY -->
<!-- BEGIN DATA -->
公开监视器 MBean 的远程管理接口。

@version     4.24     11/17/05
@author      Sun Microsystems, Inc

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.start()
<!-- END KEY -->
<!-- BEGIN DATA -->
启动监视器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.stop()
<!-- END KEY -->
<!-- BEGIN DATA -->
停止监视器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.addObservedObject(ObjectName object) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的对象添加到所观察的 MBean 集中。

@param object 要观察的对象。
@exception java.lang.IllegalArgumentException 指定的对象为 null。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.removeObservedObject(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
从所观察的 MBean 集中移除指定的对象。

@param object 要移除的对象。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.MonitorMBean.containsObservedObject(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
测试指定的对象是否在所观察的 MBean 集中。

@param object 要检查的对象。
@return 如果指定的对象在该集中，则返回 <CODE>true</CODE>；否则返回 <CODE>false</CODE>。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.ObjectName[] javax.management.monitor.MonitorMBean.getObservedObjects()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个包含要观察的对象的数组。

@return 要观察的对象。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.ObjectName javax.management.monitor.MonitorMBean.getObservedObject()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取要观察的对象的对象名称。

@return 要观察的对象。

@see #setObservedObject

@deprecated 从 JMX 1.2 开始，由 {@link #getObservedObjects} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.setObservedObject(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置由其对象名称标识的要观察的对象。

@param object 要观察的对象。

@see #getObservedObject

@deprecated 从 JMX 1.2 开始，由 {@link #addObservedObject} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.monitor.MonitorMBean.getObservedAttribute()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取要观察的属性。

@return 要观察的属性。

@see #setObservedAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.setObservedAttribute(String attribute)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置要观察的属性。

@param attribute 要观察的属性。

@see #getObservedAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.MonitorMBean.getGranularityPeriod()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取粒度时段（以毫秒为单位）。

@return 粒度时段。

@see #setGranularityPeriod

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.setGranularityPeriod(long period) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置粒度时段（以毫秒为单位）。

@param period 粒度时段。
@exception java.lang.IllegalArgumentException 粒度时段小于或等于零。

@see #getGranularityPeriod

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.MonitorMBean.isActive()
<!-- END KEY -->
<!-- BEGIN DATA -->
测试监视器 MBean 是否处于激活状态。在调用 {@link #start start} 方法时，监视器 MBean 被标记为激活状态。在调用 {@link #stop stop} 方法时，该标记变为非激活状态。

@return 如果监视器 MBean 处于激活状态，则返回 <CODE>true</CODE>；否则返回 <CODE>false</CODE>。

<!-- END DATA -->
