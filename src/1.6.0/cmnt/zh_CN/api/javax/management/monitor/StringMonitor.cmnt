<!-- BEGIN KEY -->
public class javax.management.monitor.StringMonitor extends javax.management.monitor.Monitor implements javax.management.monitor.StringMonitorMBean
<!-- END KEY -->
<!-- BEGIN DATA -->
定义设计用于观察字符串属性值的监视器 MBean。
 <P>
字符串监视器将根据以下情况发送通知：
 <UL>
<LI> 如果属性值与要比较的字符串值匹配，则发送一个{@link MonitorNotification#STRING_TO_COMPARE_VALUE_MATCHED 匹配通知}。必须将 notify match 标志设置为 <CODE>true</CODE>。<BR>除非属性值与要比较的字符串值不同，否则要比较值的后续字符串匹配不会引起更多的通知。
<LI> 如果属性值与要比较的字符串的值不同，则发送一个{@link MonitorNotification#STRING_TO_COMPARE_VALUE_DIFFERED 不同通知}。必须将 notify differ 标志设置为 <CODE>true</CODE>。<BR>除非属性值与要比较的字符串的值匹配，否则要比较值的字符串后续差别不会引起更多的通知。
 </UL>

@version     4.45     11/17/05
@author      Sun Microsystems, Inc

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.monitor.StringMonitor()
<!-- END KEY -->
<!-- BEGIN DATA -->
默认构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.monitor.StringMonitor.start()
<!-- END KEY -->
<!-- BEGIN DATA -->
启动字符串监视器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.monitor.StringMonitor.stop()
<!-- END KEY -->
<!-- BEGIN DATA -->
停止字符串监视器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.String javax.management.monitor.StringMonitor.getDerivedGauge(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果指定的对象包含在观察到的 MBeans 集中，则获取此对象的派生的尺度，否则将为 <code>null</code>。

@param object 需要其派生尺度的 MBean 的名称。

@return 指定对象的派生尺度。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized long javax.management.monitor.StringMonitor.getDerivedGaugeTimeStamp(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果指定的对象包含在观察到的 MBeans 集中，则获取此对象的派生尺度的时间戳，否则将为 <code>0</code>。

@param object 将返回其派生尺度时间戳的对象的名称。

@return 指定对象的派生尺度时间戳。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.String javax.management.monitor.StringMonitor.getDerivedGauge()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回观察到的 MBeans 集中第一个对象的派生尺度。

@return 派生的尺度。
@deprecated 从 JMX 1.2 开始，由 {@link #getDerivedGauge(ObjectName)} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized long javax.management.monitor.StringMonitor.getDerivedGaugeTimeStamp()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取观察到的 MBeans 集中第一个对象的派生尺度时间戳。

@return 派生尺度时间戳。
@deprecated 从 JMX 1.2 开始，由 {@link #getDerivedGaugeTimeStamp(ObjectName)} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.String javax.management.monitor.StringMonitor.getStringToCompare()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取要与所有观察到的 MBeans 的共同 observed 属性进行比较的字符串。

@return 字符串值。


@see #setStringToCompare

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.monitor.StringMonitor.setStringToCompare(String value) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置要与所有观察到的 MBeans 的共同 observed 属性进行比较的字符串。

@param value 字符串值。
@exception IllegalArgumentException 要比较的指定字符串为 null。

@see #getStringToCompare

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized boolean javax.management.monitor.StringMonitor.getNotifyMatch()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取所有观察到的 MBeans 共同的匹配通知的开/关切换值。

@return 如果与要比较的字符串匹配时字符串监视器发出通知，则返回 <CODE>true</CODE>，否则返回 <CODE>false</CODE>。

@see #setNotifyMatch

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.monitor.StringMonitor.setNotifyMatch(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置所有观察到的 MBeans 共同的匹配通知的开/关切换值。

@param value 匹配通知的开/关切换值。

@see #getNotifyMatch

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized boolean javax.management.monitor.StringMonitor.getNotifyDiffer()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取所有观察到的 MBeans 共同的不同通知的开/关切换值。

@return 如果与要比较的字符串不同时字符串监视器发出了通知，则返回 <CODE>true</CODE>，否则返回 <CODE>false</CODE>。

@see #setNotifyDiffer

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.monitor.StringMonitor.setNotifyDiffer(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置所有观察到的 MBeans 共同的不同通知的开/关切换值。

@param value 不同通知的开/关切换值。

@see #getNotifyDiffer

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanNotificationInfo[] javax.management.monitor.StringMonitor.getNotificationInfo()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 <CODE>NotificationInfo</CODE> 对象，它包含通知的 Java 类的名称和由字符串监视器发送的通知类型。

<!-- END DATA -->
