<!-- BEGIN KEY -->
public interface javax.management.monitor.GaugeMonitorMBean extends javax.management.monitor.MonitorMBean
<!-- END KEY -->
<!-- BEGIN DATA -->
公开尺度监视器 MBean 的远程管理接口。

@version     4.26     11/17/05
@author      Sun Microsystems, Inc

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getDerivedGauge()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取派生的尺度。

@return 派生的尺度。
@deprecated 从 JMX 1.2 开始，由 {@link #getDerivedGauge(ObjectName)} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.GaugeMonitorMBean.getDerivedGaugeTimeStamp()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取派生的尺度时间戳。

@return 派生的尺度时间戳。
@deprecated 从 JMX 1.2 开始，由 {@link #getDerivedGaugeTimeStamp(ObjectName)} 取代

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getDerivedGauge(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取指定的 MBean 的派生尺度。

@param object 将为其返回派生的尺度的 MBean
@return 如果指定的 MBean 在所观察的 MBean 集中，则返回该 MBeans 的派生尺度，否则返回 <code>null</code>。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.GaugeMonitorMBean.getDerivedGaugeTimeStamp(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取指定 MBean 的派生尺度时间戳。

@param object 将为其返回派生的尺度时间戳的 MBean
@return 如果指定的 MBean 在所观察的 MBean 集中，则返回该 MBeans 的派生尺度时间戳，否则返回 <code>null</code>。

@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getHighThreshold()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取高阈值。

@return 高阈值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getLowThreshold()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取低阈值。

@return 低阈值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setThresholds(Number highValue, Number lowValue) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
设置高、低阈值。

@param highValue 高阈值。
@param lowValue 低阈值。
@exception java.lang.IllegalArgumentException 指定的高/低阈值为 null，或者低阈值大于高阈值，或者高、低阈值不属于同一类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.GaugeMonitorMBean.getNotifyHigh()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取高阈值通知的开/关切换值。

@return 如果超出高阈值时尺度监视器发出通知，则返回 <CODE>true</CODE>，否则返回 <CODE>false</CODE>。

@see #setNotifyHigh

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setNotifyHigh(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置高阈值通知的开/关切换值。

@param value 高阈值通知的开/关切换值。

@see #getNotifyHigh

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.GaugeMonitorMBean.getNotifyLow()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取低阈值通知的开/关切换值。

@return 如果超过低阈值时尺度监视器发出通知，则返回 <CODE>true</CODE>，否则返回 <CODE>false</CODE>。

@see #setNotifyLow

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setNotifyLow(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置低阈值通知的开/关切换值。

@param value 低阈值通知的开/关切换值。

@see #getNotifyLow

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.GaugeMonitorMBean.getDifferenceMode()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取差分模式标志值。

@return 如果使用了差分模式，则返回 <CODE>true</CODE>；否则返回 <CODE>false</CODE>。

@see #setDifferenceMode

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setDifferenceMode(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置差分模式标志值。

@param value 差分模式标志值。

@see #getDifferenceMode

<!-- END DATA -->
