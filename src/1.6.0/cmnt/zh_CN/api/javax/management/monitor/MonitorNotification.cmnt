<!-- BEGIN KEY -->
public class javax.management.monitor.MonitorNotification extends javax.management.Notification
<!-- END KEY -->
<!-- BEGIN DATA -->
提供对监视器 MBean 发送的通知的定义。
 <P>
当创建此类的新对象时，需要指定与监视器 MBean 的状态有关的通知源和参数集。

以下是由监视器 MBean 触发的通知列表：

 <UL>
<LI>通用于所有种类的监视器：
     <UL>
<LI>被观察对象未在 MBean 服务器中注册。
<LI>被观察属性未包含在被观察对象中。
<LI>被观察属性的类型不正确。
<LI>当尝试获取被观察属性的值时，会发生任何异常（上述情况除外）。
     </UL>
<LI>通用于计数器和尺度监视器：
     <UL>
<LI>阈值高或阈值低与尺度（尺度监视器）不属于同一类型。
<LI>阈值、偏移量或模与计数器（计数器监视器）不属于同一类型。
     </UL>
<LI>对于计数器监视器：
     <UL>
<LI>observed 属性已达到阈值。
     </UL>
<LI>对于尺度监视器：
     <UL>
<LI>observed 属性已超出高阈值。
<LI>observed 属性已超出低阈值。
     </UL>
<LI>对于字符串监视器：
     <UL>
<LI>被观察属性与&ldquo;要比较的字符串&rdquo;值匹配。
<LI>被观察属性与&ldquo;要比较的字符串&rdquo;值不同。
     </UL>
 </UL>

@version     4.23     11/17/05
@author      Sun Microsystems, Inc

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.OBSERVED_OBJECT_ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察对象未在 MBean 服务器中注册的通知类型。此通知可由所有种类的监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.error.mbean</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.OBSERVED_ATTRIBUTE_ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察属性未包含在被观察对象中的通知类型。此通知可由所有种类的监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.error.attribute</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.OBSERVED_ATTRIBUTE_TYPE_ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察属性的类型不正确的通知类型。此通知可由所有种类的监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.error.type</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.THRESHOLD_ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
表示阈值类型、偏移量或模不正确的通知类型。此通知可由计数器和尺度监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.error.threshold</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.RUNTIME_ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
表示在尝试获取被观察属性的值时发生未预定义的错误类型的通知类型。此通知可由所有种类的监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.error.runtime</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.THRESHOLD_VALUE_EXCEEDED
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察属性已达到阈值的通知类型。此通知仅由计数器监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.counter.threshold</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.THRESHOLD_HIGH_VALUE_EXCEEDED
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察属性已超出高阈值的通知类型。此通知仅由尺度监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.gauge.high</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.THRESHOLD_LOW_VALUE_EXCEEDED
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察属性已超出低阈值的通知类型。此通知仅由尺度监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.gauge.low</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.STRING_TO_COMPARE_VALUE_MATCHED
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察属性与&ldquo;要比较的字符串&rdquo;值匹配的通知类型。此通知仅由字符串监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.string.matches</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.management.monitor.MonitorNotification.STRING_TO_COMPARE_VALUE_DIFFERED
<!-- END KEY -->
<!-- BEGIN DATA -->
表示被观察属性与&ldquo;要比较的字符串&rdquo;值不同的通知类型。此通知仅由字符串监视器触发。<BR>此通知类型的值是 <CODE>jmx.monitor.string.differs</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.management.ObjectName javax.management.monitor.MonitorNotification.observedObject
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial Monitor notification observed object.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.management.monitor.MonitorNotification.observedAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial Monitor notification observed attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object javax.management.monitor.MonitorNotification.derivedGauge
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial Monitor notification derived gauge.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object javax.management.monitor.MonitorNotification.trigger
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial Monitor notification release mechanism.此值用来保留触发此通知的阈值/字符串（取决于监视器类型）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.ObjectName javax.management.monitor.MonitorNotification.getObservedObject()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此监视器通知的被观察对象。

@return 被观察对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.monitor.MonitorNotification.getObservedAttribute()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此监视器通知的被观察属性。

@return 被观察属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.monitor.MonitorNotification.getDerivedGauge()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此监视器通知的派生尺度。

@return 派生的尺度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.monitor.MonitorNotification.getTrigger()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取触发此监视器通知的阈值/字符串（取决于监视器类型）。

@return 触发器。

<!-- END DATA -->
