<!-- BEGIN KEY -->
public class javax.management.MBeanAttributeInfo extends javax.management.MBeanFeatureInfo implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
描述出于管理目的而公开的 MBean 属性。此类的实例是不可变的。子类可以是可变的，但是不推荐使用此功能。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private final java.lang.String javax.management.MBeanAttributeInfo.attributeType
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial The actual attribute type.

<!-- END DATA -->
<!-- BEGIN KEY -->
private final boolean javax.management.MBeanAttributeInfo.isWrite
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial The attribute write right.

<!-- END DATA -->
<!-- BEGIN KEY -->
private final boolean javax.management.MBeanAttributeInfo.isRead
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial The attribute read right.

<!-- END DATA -->
<!-- BEGIN KEY -->
private final boolean javax.management.MBeanAttributeInfo.is
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial Indicates if this method is a &quot;is&quot;

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanAttributeInfo(String name, String type, String description, boolean isReadable, boolean isWritable, boolean isIs)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <CODE>MBeanAttributeInfo</CODE> 对象。

@param name 属性的名称。
@param type 属性的类型或类名。
@param description 该属性的可读描述。
@param isReadable 如果该属性具有获取方法，则为 True；否则为 false。
@param isWritable 如果该属性具有设置方法，则为 True；否则为 false。
@param isIs 如果该属性具有 &quot;is&quot; 获取方法，则为 True；否则为 false。

@throws IllegalArgumentException 如果 {@code isIs} 为 true 而 {@code isReadable} 不为 true，或者 {@code isIs} 为 true 且 {@code type} 不为 {@code boolean} 或 {@code java.lang.Boolean}。（新代码始终使用 {@code boolean} 而不是 {@code java.lang.Boolean}。）


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanAttributeInfo(String name, String type, String description, boolean isReadable, boolean isWritable, boolean isIs, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 构造一个 <CODE>MBeanAttributeInfo</CODE> 对象。

 @param name 属性的名称。
 @param type 属性的类型或类名。
 @param description 属性的可读描述。
 @param isReadable True 如果该属性有获取方法，则此参数为 true，否则为 false。
 @param isWritable True 如果该属性有设置方法，则此参数为 true，否则为 false。
 @param isIs True 如果该属性有一个 "is" 获取方法，则此参数为 True；否则为 false。
 @param descriptor 属性的描述符。此参数可以为 null，它等效于一个空描述符。

 @throws IllegalArgumentException 如果 {@code isIs} 为 true 而 {@code isReadable} 不为 true，或者 {@code isIs} 为 true 且 {@code type} 不为 {@code boolean} 或 {@code java.lang.Boolean}。（新代码始终使用 {@code boolean} 而不是使用 {@code java.lang.Boolean}。）

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanAttributeInfo(String name, String description, Method getter, Method setter) throws javax.management.IntrospectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>此构造方法带有简单属性的名称，以及读取和写入属性的 Method 对象。已构造对象的 {@link Descriptor} 包括 {@code Method} 对象（包含 {@link DescriptorKey} 元注释）生成的字段。

@param name 属性的编程名称。
@param description 该属性的可读描述。
@param getter 用于读取属性值的方法。如果该属性是只写的，则可以为 null。
@param setter 用于写入属性值的方法。如果该属性是只读的，则可以为 null。
@exception IntrospectionException 如果在此属性的定义中存在一致性问题。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.MBeanAttributeInfo.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>返回此实例的浅表副本。可通过调用 <tt>super.clone()</tt> 来获得该副本，因此要调用 <tt>Object.clone()</tt> 所实现的默认本机浅表复制机制。不进行任何内部字段的更深层复制。</p>

<p>因为此类是不可变的，所以主要对子类进行复制。</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.MBeanAttributeInfo.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该属性的类名。

@return 类名。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.isReadable()
<!-- END KEY -->
<!-- BEGIN DATA -->
该属性的值是否可读。

@return 如果该属性可读，则返回 True；否则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.isWritable()
<!-- END KEY -->
<!-- BEGIN DATA -->
是否可将新值写入该属性。

@return 如果可写入该属性，则返回 True；否则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.isIs()
<!-- END KEY -->
<!-- BEGIN DATA -->
指示此属性是否有一个 &quot;is&quot; 获取方法。

@return 如果此属性有一个 &quot;is&quot; 获取方法，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.equals(Object o)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较此 MBeanAttributeInfo 与另一个 MBeanAttributeInfo。

@param o 要比较的对象。

@return 当且仅当 <code>o</code> 是一个 MBeanAttributeInfo，它的 {@link #getName()}、{@link #getType()}、{@link #getDescription()}、{@link #isReadable()}、{@link #isWritable()} 和 {@link #isIs()} 值与此 MBeanAttributeInfo 的这些值相等（不必完全一样）时，才返回 true。

<!-- END DATA -->
