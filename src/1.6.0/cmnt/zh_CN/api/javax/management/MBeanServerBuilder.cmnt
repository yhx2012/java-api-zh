<!-- BEGIN KEY -->
public class javax.management.MBeanServerBuilder extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>此类表示创建默认 {@link javax.management.MBeanServer} 实现的生成器。JMX {@link javax.management.MBeanServerFactory} 通过提供此类的子类，从而允许应用程序提供其自定义的 MBeanServer 实现。</p>

@see MBeanServer
@see MBeanServerFactory

@since 1.5
@since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanServerBuilder()
<!-- END KEY -->
<!-- BEGIN DATA -->
公共的默认构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanServerDelegate javax.management.MBeanServerBuilder.newMBeanServerDelegate()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法为新的 MBeanServer 创建新的 MBeanServerDelegate。为了创建新的 MBeanServerDelegate，在创建新的 MBeanServer 时，{@link javax.management.MBeanServerFactory} 首先调用此方法。<br>然后它调用 <code>newMBeanServer(defaultDomain,outer,delegate)</code>，传入 MBeanServer 实现应该使用的 <var>delegate</var>。
<p>注意，传递的 <var>delegate</var> 可能并非直接就是此方法所返回的 MBeanServerDelegate。例如，它可能是一个包装了以前返回的对象的新对象。

@return 新的 {@link javax.management.MBeanServerDelegate}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanServer javax.management.MBeanServerBuilder.newMBeanServer(String defaultDomain, MBeanServer outer, MBeanServerDelegate delegate)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法创建一个新的 MBeanServer 实现对象。为了获得新的 MBeanServer 的新 {@link javax.management.MBeanServerDelegate}，创建新的 MBeanServer 时，{@link javax.management.MBeanServerFactory} 首先调用 <code>newMBeanServerDelegate()</code>。然后它调用 <code>newMBeanServer(defaultDomain,outer,delegate)</code>，传入 MBeanServer 实现应该使用的 <var>delegate</var>。
<p>注意，传递的 <var>delegate</var> 可能并非直接就是此实现所返回的 MBeanServerDelegate。例如，它可能是一个包装了以前返回的委托的新对象。
<p><var>outer</var> 参数是一个指向 MBeanServer 的指针，在 MBeanServer 内注册 MBean 时，应该将该指针传递到 {@link javax.management.MBeanRegistration} 接口。如果 <var>outer</var> 为 <code>null</code>，则在调用 {@link javax.management.MBeanRegistration} 接口时，该 MBeanServer 实现必须使用其自己的 <code>this</code> 引用。
<p>这就使 MBeanServer 实现包装另一个 MBeanServer 实现成为可能，例如为了实现安全检查，或者通过返回到包装对象的指针，从而阻止对实际 MBeanServer 实现的访问。

@param defaultDomain 新 MBeanServer 的默认域。
@param outer 到 MBeanServer 对象的指针，调用其 {@link javax.management.MBeanRegistration} 接口时必须将该指针传递到 MBean。
@param delegate 指向与新 MBeanServer 相关联的 MBeanServerDelegate 的指针。新的 MBeanServer 必须在其 MBean 存储库中注册此 MBean。

@return MBeanServer 的新的私有实现。

<!-- END DATA -->
