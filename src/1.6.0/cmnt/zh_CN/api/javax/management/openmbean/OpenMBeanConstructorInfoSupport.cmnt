<!-- BEGIN KEY -->
public class javax.management.openmbean.OpenMBeanConstructorInfoSupport extends javax.management.MBeanConstructorInfo implements javax.management.openmbean.OpenMBeanConstructorInfo
<!-- END KEY -->
<!-- BEGIN DATA -->
描述 Open MBean 的构造方法。

@version     3.28  06/03/15
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.OpenMBeanConstructorInfoSupport(String name, String description, javax.management.openmbean.OpenMBeanParameterInfo[] signature)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>构造一个 {@code OpenMBeanConstructorInfoSupport} 实例，该实例使用指定的 {@code name}、{@code description} 和 {@code signature} 描述 open MBeans 的类的构造方法。</p>
 <p>
{@code signature} 数组参数是被内部复制的，因此对 {@code signature} 引用的数组的后续更改不影响此实例。

@param name  不可以为 null 或空字符串。

@param description  不可以为 null 或空字符串。

@param signature  如果没有要描述的任何参数，可以为 null 或空。

@throws IllegalArgumentException  如果 {@code name} 或 {@code
 description} 为 null 或空字符串。

@throws ArrayStoreException  如果 {@code signature} 不是 {@code MBeanParameterInfo} 的子类实例的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.OpenMBeanConstructorInfoSupport(String name, String description, javax.management.openmbean.OpenMBeanParameterInfo[] signature, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>构造一个 {@code OpenMBeanConstructorInfoSupport} 实例，该实例使用指定的 {@code name}、{@code description}、{@code signature} 和 {@code descriptor} 来描述 open MBean 类的构造方法。</p>

 <p>{@code signature} 数组参数是被内部复制的，因此对 {@code signature} 引用的数组的后续更改不影响此实例。</p>

 @param name 不可以为 null 或空字符串。

 @param description 不可以为 null 或空字符串。

 @param signature 如果没有要描述的任何参数，可以为 null 或空。

 @param descriptor 构造方法的描述符。此参数可以为 null，它等效于一个空描述符。

 @throws IllegalArgumentException 如果 {@code name} 或 {@code description} 为 null 或空字符串。

 @throws ArrayStoreException 如果 {@code signature} 不是 {@code MBeanParameterInfo} 的子类实例的数组。

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanConstructorInfoSupport.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>比较指定 {@code obj} 参数与此 {@code OpenMBeanConstructorInfoSupport} 实例的相等性。</p> 
 <p>
当且仅当下面的所有语句均为 true 时，才返回 {@code true}：
 <ul>
<li>{@code obj} 为非 null，</li>
<li>{@code obj} 还实现 {@code OpenMBeanConstructorInfoSupport} 接口，</li>
<li>它们的名称相等</li>
<li>它们的签名相等。</li>
 </ul>
这确保了此 {@code equals} 方法对作为 {@code OpenMBeanConstructorInfoSupport} 接口的不同实现的 {@code obj} 参数正常工作。
@param  obj 与此 {@code OpenMBeanConstructorInfoSupport} 实例进行相等性比较的对象。
 
@return 如果指定的对象等于此 {@code OpenMBeanConstructorInfoSupport} 实例，则返回 <code>true</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.management.openmbean.OpenMBeanConstructorInfoSupport.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>返回此 {@code OpenMBeanConstructorInfoSupport} 实例的哈希码值。</p>
 
 <p>
{@code OpenMBeanConstructorInfoSupport} 实例的哈希码是在 {@code equals} 比较中使用的所有信息元素的哈希码的总和（即名称和签名，其中签名通过调用 {@code
 java.util.Arrays.asList(this.getSignature).hashCode()} 来计算）。  
 <p>
这确保 {@code t1.equals(t2)} 意味着对于任何两个 {@code OpenMBeanConstructorInfoSupport} 实例 {@code t1} 和 {@code t2} 而言，都存在 {@code t1.hashCode()==t2.hashCode()}，这是方法 {@link Object#hashCode() Object.hashCode()} 的通用协定所要求的。
 <p>
不过请注意，根据 {@link #equals(java.lang.Object)} 中的定义，实现 {@code OpenMBeanConstructorInfoSupport} 接口的类的其他实例可能与此 {@code OpenMBeanConstructorInfoSupport} 实例相等，但是如果它的计算方法不同，可能会有不同的哈希码。
 <p>
由于 {@code OpenMBeanConstructorInfoSupport} 实例是不可变的，此实例的哈希码在首次调用 {@code hashCode} 时计算一次，然后对于后续的调用返回相同的值。

@return  此 {@code OpenMBeanConstructorInfoSupport} 实例的哈希码值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.openmbean.OpenMBeanConstructorInfoSupport.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>返回此 {@code OpenMBeanConstructorInfoSupport} 实例的字符串表示形式。</p> 
 <p>
字符串表示形式由此类（即 {@code
 javax.management.openmbean.OpenMBeanConstructorInfoSupport}）的名称、所描述构造方法的名称和签名及其描述符的字符串表示形式组成。</p>
 <p>
由于 {@code OpenMBeanConstructorInfoSupport} 实例是不可变的，此实例的字符串表示形式在首次调用 {@code toString} 时被计算一次，然后对后续调用返回相同的值。</p>
 
@return  此 {@code OpenMBeanConstructorInfoSupport} 实例的字符串表示形式

<!-- END DATA -->
