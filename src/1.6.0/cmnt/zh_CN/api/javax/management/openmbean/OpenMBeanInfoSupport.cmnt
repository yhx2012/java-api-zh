<!-- BEGIN KEY -->
public class javax.management.openmbean.OpenMBeanInfoSupport extends javax.management.MBeanInfo implements javax.management.openmbean.OpenMBeanInfo
<!-- END KEY -->
<!-- BEGIN DATA -->
{@code OpenMBeanInfoSupport} 类描述 <i>open MBean</i> 的管理信息：它是 {@link javax.management.MBeanInfo} 的子类，并且实现了 {@link OpenMBeanInfo} 接口。注意，<i>open MBean</i> 的识别方式是，如果其 {@code getMBeanInfo()} 方法返回实现 OpenMBeanInfo 接口（通常为 {@code OpenMBeanInfoSupport}）的类的实例，则可识别 <i>open MBean</i>。

@version     3.29  06/03/15
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.OpenMBeanInfoSupport(String className, String description, javax.management.openmbean.OpenMBeanAttributeInfo[] openAttributes, javax.management.openmbean.OpenMBeanConstructorInfo[] openConstructors, javax.management.openmbean.OpenMBeanOperationInfo[] openOperations, javax.management.MBeanNotificationInfo[] notifications)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>构造一个 {@code OpenMBeanInfoSupport} 实例，它使用指定的 {@code
 className}、{@code description}、{@code openAttributes}、{@code
 openConstructors}、{@code openOperations} 和 {@code
 notifications} 描述 open MBeans 的类。</p>
 <p>
{@code openAttributes}、{@code openConstructors}、{@code openOperations} 和 {@code notifications} 数组参数是被内部复制的，因此对这些参数引用的数组的后续更改不影响此实例。</p>

@param className  此 {@code OpenMBeanInfoSupport} 实例描述的 open MBean 的完全限定的 Java 类名。

@param description	此 {@code OpenMBeanInfoSupport} 实例描述的 open MBean 的可读描述。

@param openAttributes	所描述的 open MBean 的公开属性的列表；必须是 {@code MBeanAttributeInfo}（通常为 {@code
 OpenMBeanAttributeInfoSupport}）的子类的实例组成的数组。

@param openConstructors	所描述的 open MBean 的公开的公用构造方法的列表；必须是 {@code MBeanConstructorInfo}（通常为 {@code
 OpenMBeanConstructorInfoSupport}）的子类的实例组成的数组。

@param openOperations	所描述的 open MBean 的公开操作的列表。必须是 {@code MBeanOperationInfo}（通常为 {@code
 OpenMBeanOperationInfoSupport}）的子类的实例组成的数组。

@param notifications	所描述的 open MBean 发出的通知列表。

@throws ArrayStoreException  如果 {@code openAttributes}、{@code
 openConstructors}、{@code openOperations} 分别不是 {@code MBeanAttributeInfo}、{@code
 MBeanConstructorInfo}、{@code MBeanOperationInfo} 子类的实例组成的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.OpenMBeanInfoSupport(String className, String description, javax.management.openmbean.OpenMBeanAttributeInfo[] openAttributes, javax.management.openmbean.OpenMBeanConstructorInfo[] openConstructors, javax.management.openmbean.OpenMBeanOperationInfo[] openOperations, javax.management.MBeanNotificationInfo[] notifications, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>构造一个 {@code OpenMBeanInfoSupport} 实例，它使用指定的 {@code
 className}、{@code description}、{@code openAttributes}、{@code
 openConstructors}、{@code openOperations}、{@code
 notifications} 和 {@code descriptor} 描述 open MBeans 的类</p>

 <p>{@code openAttributes}、{@code openConstructors}、{@code openOperations} 和 {@code notifications} 数组参数是被内部复制的，因此对这些参数引用的数组的后续更改不影响此实例</p>

 @param className 此 {@code OpenMBeanInfoSupport} 实例描述的 open MBean 的完全限定的 Java 类名。


 @param description 此 {@code OpenMBeanInfoSupport} 实例描述的 open MBean 的可读描述。

 @param openAttributes 所描述的 open MBean 的公开属性的列表；必须是 {@code MBeanAttributeInfo}（通常为 {@code
 OpenMBeanAttributeInfoSupport}）的子类的实例组成的数组。

 @param openConstructors 所描述的 open MBean 的公开的公用构造方法的列表；必须是 {@code MBeanConstructorInfo}（通常为 {@code
 OpenMBeanConstructorInfoSupport}）的子类的实例组成的数组。

 @param openOperations 所描述的 open MBean 的公开操作的列表。必须是 {@code MBeanOperationInfo}（通常为 {@code
 OpenMBeanOperationInfoSupport}）的子类的实例组成的数组。


 @param notifications 所描述的 open MBean 发出的通知列表。


 @param descriptor MBean 的描述符。此参数可以为 null，等效于空描述符。

 @throws ArrayStoreException 如果 {@code openAttributes}、{@code
 openConstructors}、{@code openOperations} 分别不是 {@code MBeanAttributeInfo}、{@code
 MBeanConstructorInfo}、{@code MBeanOperationInfo} 子类的实例组成的数组。


 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanInfoSupport.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较指定 {@code obj} 参数与此 {@code OpenMBeanInfoSupport} 实例的相等性。 
 <p>
当且仅当下面的所有语句均为 true 时，才返回 {@code true}：
 <ul>
<li>{@code obj} 为非 null，</li>
<li>{@code obj} 还实现 {@code OpenMBeanInfo} 接口，</li>
<li>它们的类名相等</li>
<li>它们的关于属性、构造方法、操作和通知的信息相等</li>
 </ul>
这确保了此 {@code equals} 方法对作为 {@code OpenMBeanInfo} 接口的不同实现的 {@code obj} 参数正常工作。
@param  obj  与此 {@code OpenMBeanInfoSupport} 实例进行相等性比较的对象；
 
@return 如果指定的对象等于此 {@code OpenMBeanInfoSupport} 实例，则返回 {@code true}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.management.openmbean.OpenMBeanInfoSupport.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>返回此 {@code OpenMBeanInfoSupport} 实例的哈希码值。</p> 
 <p>
{@code OpenMBeanInfoSupport} 实例的哈希码是在 {@code equals} 比较中使用的所有信息元素的哈希码的总和（即类名和关于属性、构造方法、操作和通知的信息，其中每个数组的 hashCode 都通过调用 {@code new
 java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()} 来计算）。</p>  
 <p>
这确保 {@code t1.equals(t2)} 意味着对于任何两个 {@code OpenMBeanInfoSupport} 实例 {@code t1} 和 {@code t2} 而言，都存在 {@code
 t1.hashCode()==t2.hashCode()}，这是方法 {@link Object#hashCode() Object.hashCode()} 的通用协定所要求的。</p>
 <p>
不过请注意，根据 {@link #equals(java.lang.Object)} 中的定义，实现 {@code OpenMBeanInfo} 接口的类的其他实例可能与此 {@code OpenMBeanInfoSupport} 实例相等，但是如果它的计算方法不同，可能会有不同的哈希码。</p>
 <p>
由于 {@code OpenMBeanInfoSupport} 实例是不可变的，此实例的哈希码在首次调用 {@code hashCode} 时被计算，因此对后续调用返回相同的值。</p>

@return  此 {@code OpenMBeanInfoSupport} 实例的哈希码值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.openmbean.OpenMBeanInfoSupport.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>返回此 {@code OpenMBeanInfoSupport} 实例的字符串表示形式。</p> 
 <p>
字符串表示形式由此类（即 {@code javax.management.openmbean.OpenMBeanInfoSupport}）的名称、MBean 类名、关于所描述 MBean 的属性、构造方法、操作、通知信息的字符串表示形式以及描述符的字符串表示形式组成。</p>
 <p>
由于 {@code OpenMBeanInfoSupport} 实例是不可变的，此实例的字符串表示形式在首次调用 {@code toString} 时被计算一次，然后对后续调用返回相同的值。
 
@return  此 {@code OpenMBeanInfoSupport} 实例的字符串表示形式

<!-- END DATA -->
