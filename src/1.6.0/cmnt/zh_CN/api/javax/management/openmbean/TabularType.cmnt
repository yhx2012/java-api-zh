<!-- BEGIN KEY -->
public class javax.management.openmbean.TabularType extends javax.management.openmbean.OpenType
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>TabularType</code> 类是<i>开放类型</i> 类，它的实例描述了 {@link TabularData <code>TabularData</code>} 值的类型。

@version     3.27  06/05/03
@author      Sun Microsystems, Inc.

@since 1.5
@since.unbundled JMX 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.management.openmbean.CompositeType javax.management.openmbean.TabularType.rowType
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 行的复合类型

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.util.List<java.lang.String> javax.management.openmbean.TabularType.indexNames
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 用于索引每个行元素的项，它保持用户给定的顺序。这是一个不可修改的 {@link ArrayList}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.TabularType(String typeName, String description, CompositeType rowType, java.lang.String[] indexNames) throws javax.management.openmbean.OpenDataException
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>TabularType</code> 实例，检查给定参数的有效性。下面描述了每个参数的有效性约束。 
 <p>
此表格类型表示的表格数据值的 Java 类名称（即 {@link OpenType#getClassName() getClassName} 方法返回的类名称）被设置为 <code>TabularData.class.getName()</code> 返回的字符串值。
 <p>
@param  typeName  此实例表示的表格类型所给定的名称；不可以为 null 或空字符串。<br>&nbsp;
@param  description  此实例表示的表格类型的可读描述；不可以为 null 或空字符串。<br>&nbsp;
@param  rowType  此表格类型实例所描述的表格数据值的行元素类型；不可以为 null。<br>&nbsp;
@param  indexNames  项名称，可以使用它的值唯一地索引此表格类型实例所描述的表格数据值中的每个行元素；不可以为 null 或空。每个元素都应该是 <var>rowType</var> 中定义的项名称（不允许为 null 或空字符串）。需要特别注意的是，<code>TabularData</code> 类的方法 {@link TabularData#get(java.lang.Object[]) <code>get</code>} 和 {@link TabularData#remove(java.lang.Object[]) <code>remove</code>} 使用 <var>indexNames</var> 中项名称的<b>顺序</b>来匹配值参数数组和项。<br>&nbsp;
@throws IllegalArgumentException  如果 <var>rowType</var> 为 null；如果 <var>indexNames</var> 为 null 或者为空数组；如果 <var>indexNames</var> 中的元素为 null 或者空字符串；如果 <var>typeName</var> 或 <var>description</var> 为 null 或者空字符串。<br>&nbsp;
@throws OpenDataException  如果 <var>indexNames</var> 的元素值不是 <var>rowType</var> 中定义的项名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.CompositeType javax.management.openmbean.TabularType.getRowType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>TabularType</code> 实例描述的表格数据值的行元素的类型。

@return 每一行的类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.List<java.lang.String> javax.management.openmbean.TabularType.getIndexNames()
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>按照提供此实例的构造方法的顺序返回一个不可修改的项名称列表，可以使用该列表的值唯一地索引此 <code>TabularType</code> 实例所描述的表格数据值的每个行元素。</p>

@return 表示索引项名称的字符串列表。
 

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.TabularType.isValue(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
测试 <var>obj</var> 是否为此 <code>TabularType</code> 实例可以描述的值。
 <p>
如果 <var>obj</var> 为 null 或者不是 <code>javax.management.openmbean.TabularData</code> 的实例，则 <code>isValue</code> 返回 <code>false</code>。</p>

<p>如果 <var>obj</var> 是一个 <code>javax.management.openmbean.TabularData</code> 的实例（如 {@code td}），则当此 {@code TabularType} 根据 {@link CompositeType#isValue CompositeType.isValue} 中的定义<em>可通过 {@link TabularData#getTabularType() td.getTabularType()} 进行分配</em>时，结果为 true。</p>

@param  obj  将测试其开放类型与此 <code>TabularType</code> 实例的相等性的值。

@return 如果 <var>obj</var> 是此表格类型的值，则返回 <code>true</code>，否则返回 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.TabularType.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
比较指定的 <code>obj</code> 参数与此 <code>TabularType</code> 实例的相等性。 
 <p>
当且仅当下面的语句均为 true 时，两个 <code>TabularType</code> 实例才相等：
 <ul>
<li>它们的类型名称相同</li>
<li>它们的行类型相同</li>
<li>它们以相同的顺序使用相同的索引名称</li>
 </ul>
<br>&nbsp;
@param  obj  与此 <code>TabularType</code> 实例进行相等性比较的对象；如果 <var>obj</var> 为 <code>null</code>，则 <code>equals</code> 返回 <code>false</code>。
 
@return 如果指定的对象等于此 <code>TabularType</code> 实例，则返回 <code>true</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.management.openmbean.TabularType.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>TabularType</code> 实例的哈希码值。 
 <p>
<code>TabularType</code> 实例的哈希码是在 <code>equals</code> 比较中使用的信息的所有元素的哈希码总和（即名称、行类型、索引名称）。这确保了 <code>t1.equals(t2)</code> 意味着对于任何两个 <code>TabularType</code> 实例 <code>t1</code> 和 <code>t2</code> 而言，都存在 <code>t1.hashCode()==t2.hashCode()</code>，这是方法 {@link Object#hashCode() Object.hashCode()} 的通用协定所要求的。
 <p>
由于 <code>TabularType</code> 实例是不可变的，此实例的哈希码在首次调用 <code>hashCode</code> 时被计算一次，然后对后续调用返回相同的值。

@return 此 <code>TabularType</code> 实例的哈希码值

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.openmbean.TabularType.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>TabularType</code> 实例的字符串表示形式。 
 <p>
字符串表示形式由此类（即 <code>javax.management.openmbean.TabularType</code>）的名称、此实例的类型名称、此实例的行类型字符串表示形式以及此实例的索引名称组成。
 <p>
由于 <code>TabularType</code> 实例是不可变的，此实例的字符串表示形式在首次调用 <code>toString</code> 时被计算一次，然后对后续调用返回相同的值。
 
@return  此 <code>TabularType</code> 实例的字符串表示形式

<!-- END DATA -->
