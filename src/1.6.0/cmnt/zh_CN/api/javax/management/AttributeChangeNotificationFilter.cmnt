<!-- BEGIN KEY -->
public class javax.management.AttributeChangeNotificationFilter extends java.lang.Object implements javax.management.NotificationFilter
<!-- END KEY -->
<!-- BEGIN DATA -->
此类实现 {@link javax.management.AttributeChangeNotification attribute change notification} 的 {@link javax.management.NotificationFilter NotificationFilter} 接口。根据所观察属性的名称进行过滤。
 <P>
它管理已启用的属性名称列表。方法允许用户启用/禁用所需数量的属性名称。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.util.Vector<java.lang.String> javax.management.AttributeChangeNotificationFilter.enabledAttributes
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 包含已启用属性名称的 {@link Vector}。默认值是一个空向量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized boolean javax.management.AttributeChangeNotificationFilter.isNotificationEnabled(Notification notification)
<!-- END KEY -->
<!-- BEGIN DATA -->
向侦听器发送指定的通知之前调用。<BR>此过滤器将指定属性更改通知的属性名称与每个已启用属性名称进行比较。如果该属性名称等于某个已启用属性名称，则必须将该通知发送到侦听器，并且此方法返回 <CODE>true</CODE>。
   
@param notification 要发送的属性更改通知。
@return 如果必须将通知发送到侦听器，则返回 <CODE>true</CODE>；否则返回 <CODE>false</CODE>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.AttributeChangeNotificationFilter.enableAttribute(String name) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
启用所有属性更改通知，这些通知的属性名称等于要发送到侦听器的指定名称。<BR>如果指定的名称已在已启用属性名称列表中，则此方法无效。
   
@param name 属性名称。
@exception java.lang.IllegalArgumentException 如果属性名称的参数为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.AttributeChangeNotificationFilter.disableAttribute(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
禁用所有属性更改通知，这些通知的属性名称等于要发送到侦听器的指定属性名称。<BR>如果指定的名称不在已启用属性名称列表中，则此方法无效。
   
@param name 属性名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.management.AttributeChangeNotificationFilter.disableAllAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
禁用所有属性名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.util.Vector<java.lang.String> javax.management.AttributeChangeNotificationFilter.getEnabledAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得此过滤器的所有已启用属性名称。

@return 包含所有已启用属性名称的列表。

<!-- END DATA -->
