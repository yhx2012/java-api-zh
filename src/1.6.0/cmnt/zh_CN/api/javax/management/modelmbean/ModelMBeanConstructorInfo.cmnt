<!-- BEGIN KEY -->
public class javax.management.modelmbean.ModelMBeanConstructorInfo extends javax.management.MBeanConstructorInfo implements javax.management.DescriptorAccess
<!-- END KEY -->
<!-- BEGIN DATA -->
ModelMBeanConstructorInfo 对象描述了 ModelMBean 的一个构造方法。它是 MBeanConstructorInfo 的一个子类，添加了关联 Descriptor 和 DescriptorAccess 接口实现。
 <P>
 <PRE>
描述符中的字段定义如下，但不限于此： <P>
 name           : 构造方法名称
 descriptorType : 必须为 &quot;operation&quot;  
 role           : 必须为 &quot;constructor&quot;
 displayName    : 构造方法的可读名称
 visibility     : 1-4，其中 1 表示总是可见；4 表示几乎不可见
 presentationString : 描述如何呈现操作的 xml 格式的字符串
</PRE>

<p>{@code persistPolicy} 和 {@code currencyTimeLimit} 字段对于构造方法没有意义，但并不认为它们无效。

 <p>默认的描述符包含 {@code name}、{@code descriptorType}、{@code displayName} 和 {@code role} 字段。

 <p>此类的 <b>serialVersionUID</b> 为 <code>3862947819818064362L</code>。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private static final java.io.ObjectStreamField[] javax.management.modelmbean.ModelMBeanConstructorInfo.serialPersistentFields
<!-- END KEY -->
<!-- BEGIN DATA -->
@serialField consDescriptor Descriptor 包含此实例的元数据的 {@link Descriptor}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanConstructorInfo(String description, java.lang.reflect.Constructor constructorMethod)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带有默认描述符的 ModelMBeanConstructorInfo 对象。已构造对象的 {@link Descriptor} 包括 {@code Constructor} 对象（包含 {@link DescriptorKey} 元注释）生成的字段。

@param description 构造方法的可读描述。
@param constructorMethod 描述 MBean 构造方法的 java.lang.reflect.Constructor 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanConstructorInfo(String description, java.lang.reflect.Constructor constructorMethod, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造 ModelMBeanConstructorInfo 对象。已构造对象的 {@link Descriptor} 包括 {@code Constructor} 对象（包含 {@link DescriptorKey} 元注释）生成的字段。

@param description 构造方法的可读描述。
@param constructorMethod 描述 ModelMBean 构造方法的 java.lang.reflect.Constructor 对象。
@param descriptor 包含此 ModelMBeanConstructorInfo 实例的适当元数据的 Descriptor 的一个实例。如果该参数为 null，则将创建默认描述符。如果描述符不包含 &quot;displayName&quot; 字段，则用默认值将此字段添加到描述符中。

@exception RuntimeOperationsException 包装一个 IllegalArgumentException。描述符无效，或者描述符 &quot;name&quot; 字段不等于 name 参数，或者描述符字段 &quot;DescriptorType&quot; 不等于 &quot;operation&quot;，或者描述符 &quot;role&quot; 字段不等于 &quot;constructor&quot;。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanConstructorInfo(String name, String description, javax.management.MBeanParameterInfo[] signature)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带有默认描述符的 ModelMBeanConstructorInfo 对象。

@param name 构造方法名称。
@param description 构造方法的可读描述。
@param signature 描述构造方法参数的 MBeanParameterInfo 对象数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanConstructorInfo(String name, String description, javax.management.MBeanParameterInfo[] signature, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造 ModelMBeanConstructorInfo 对象。

@param name 构造方法名称。
@param description 构造方法的可读描述。
@param signature 描述构造方法参数的 MBeanParameterInfo 对象。
@param descriptor 包含此 MBeanConstructorInfo 实例的适当元数据的 Descriptor 的一个实例。如果该参数为 null，则将创建默认描述符。如果描述符不包含 &quot;displayName&quot; 字段，则用默认值将此字段添加到描述符中。

@exception RuntimeOperationsException 包装一个 IllegalArgumentException。描述符无效，或者描述符 &quot;name&quot; 字段不等于 name 参数，或者描述符字段 &quot;DescriptorType&quot; 不等于 &quot;operation&quot;，或者描述符 &quot;role&quot; 字段不等于 &quot;constructor&quot;。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.modelmbean.ModelMBeanConstructorInfo.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建并返回新 ModelMBeanConstructorInfo，它是此 ModelMBeanConstructorInfo 的副本。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.Descriptor javax.management.modelmbean.ModelMBeanConstructorInfo.getDescriptor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回关联 Descriptor 的副本。

@return 与 ModelMBeanConstructorInfo 对象关联的 Descriptor。

@see #setDescriptor

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.modelmbean.ModelMBeanConstructorInfo.setDescriptor(Descriptor inDescriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->

设置 ModelMBeanConstructorInfo 的关联 Descriptor（完全替换）。如果新的 Descriptor 为 null，则关联 Descriptor 恢复为默认描述符。分配 Descriptor 之前验证它。如果新的 Descriptor 无效，则抛出一个包装 IllegalArgumentException 的 RuntimeOperationsException。

@param inDescriptor 替换与 ModelMBeanConstructor 关联的 Descriptor。如果描述符不包含 &quot;displayName&quot; 字段，则用默认值将此字段添加到描述符中。

@exception RuntimeOperationsException 包装一个 IllegalArgumentException。描述符无效，或者描述符 &quot;name&quot; 字段不等于 name 参数，或者描述符字段 &quot;DescriptorType&quot; 不等于 &quot;operation&quot;，或者描述符 &quot;role&quot; 字段不等于 &quot;constructor&quot;。

@see #getDescriptor

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.modelmbean.ModelMBeanConstructorInfo.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
以可读形式返回包含 ModelMBeanConstructorInfo 全部内容的字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.modelmbean.ModelMBeanConstructorInfo.readObject(ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
从 {@link ObjectInputStream} 反序列化 {@link ModelMBeanConstructorInfo}。

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.modelmbean.ModelMBeanConstructorInfo.writeObject(ObjectOutputStream out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将 {@link ModelMBeanConstructorInfo} 序列化为 {@link ObjectOutputStream}。

<!-- END DATA -->
