<!-- BEGIN KEY -->
public class javax.management.modelmbean.XMLParseException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->

当将某个 XML 格式的字符串解析为 ModelMBean 对象，或从 ModelMBean 对象创建 XML 格式的字符串时，抛出此异常。

它还用于来自可能被使用的 XML 解析器的包装器异常。
<p>此类的 <b>serialVersionUID</b> 为 <code>3176664577895105181L</code>。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.XMLParseException()
<!-- END KEY -->
<!-- BEGIN DATA -->
默认构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.XMLParseException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
带有字符串的构造方法。

@param   s   详细消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.XMLParseException(Exception e, String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
带有字符串和异常的构造方法。

@param   e   嵌套的异常。
@param   s   详细消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.modelmbean.XMLParseException.readObject(ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
从 {@link ObjectInputStream} 反序列化 {@link XMLParseException}。

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.modelmbean.XMLParseException.writeObject(ObjectOutputStream out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
将 {@link XMLParseException} 序列化为{@link ObjectOutputStream}。

<!-- END DATA -->
