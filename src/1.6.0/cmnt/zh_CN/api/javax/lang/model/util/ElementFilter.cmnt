<!-- BEGIN KEY -->
public class javax.lang.model.util.ElementFilter extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
用来从元素集合中只选择所需元素的过滤器。返回的集合和列表是新的集合，它将使用该参数作为后备存储。此类中的方法不会尝试阻止对参数进行当前修改。返回的集合和列表是可变的，但对于并发访问是不安全的。返回的集合与为方法设置的参数具有相同的迭代顺序。

<p>如果将包含 {@code null} 的 iterable 和 set 作为参数传递给此类中的方法，那么将抛出 {@code NullPointerException}。

<p>注意，<i>static import</i> 语句可以使此类中方法的调用文本更具体；例如：

 <blockquote><pre>
import static javax.lang.model.util.ElementFilter.*;
     ...
{@code List<VariableElement>} fs = fieldsIn(someClass.getEnclosedElements());
 </pre></blockquote>

@author Joseph D. Darcy
@author Scott Seligman
@author Peter von der Ah&eacute;
@author Martin Buchholz
@version 1.6 06/08/02
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.VariableElement> javax.lang.model.util.ElementFilter.fieldsIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中字段的列表。
@return {@code elements} 中字段的列表
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.VariableElement> javax.lang.model.util.ElementFilter.fieldsIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中字段的集合。
@return {@code elements} 中字段的集合
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.constructorsIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@code elements} 中构造方法的列表。
@return {@code elements} 中构造方法的列表
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.constructorsIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中构造方法的集合。
@return {@code elements} 中构造方法的集合
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.methodsIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中方法的列表。
@return {@code elements} 中方法的列表
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.methodsIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中方法的集合。
@return {@code elements} 中方法的集合
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.TypeElement> javax.lang.model.util.ElementFilter.typesIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中类型的列表。
@return {@code elements} 中类型的列表
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.TypeElement> javax.lang.model.util.ElementFilter.typesIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中类型的集合。
@return {@code elements} 中类型的集合
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.PackageElement> javax.lang.model.util.ElementFilter.packagesIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中包的列表。
@return {@code elements} 中包的列表
@param elements 要过滤的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.PackageElement> javax.lang.model.util.ElementFilter.packagesIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 {@code elements} 中包的集合。
@return {@code elements} 中包的集合
@param elements 要过滤的元素

<!-- END DATA -->
