<!-- BEGIN KEY -->
public interface javax.lang.model.element.Name extends java.lang.CharSequence
<!-- END KEY -->
<!-- BEGIN DATA -->
字符的不可变序列。当由相同实现创建时，实现此接口的对象在相互比较时必须遵守常规 {@linkplain Object#equals equals 约定}。所以，取自相同实现中的 {@code Name} 对象可在集合中使用，而取自不同实现的 {@code Name} 可能无法在集合中正常使用。

<p>空 {@code Name} 的长度为 0。

<p>在{@linkplain javax.annotation.processing.ProcessingEnvironment 注释处理}的上下文中，对&ldquo;相同&rdquo;实现的保证必须包括{@linkplain javax.annotation.processing.Processor 处理器}的{@linkplain javax.annotation.processing API 间接}副作用在其中彼此可见的上下文，包括连续的注释处理 {@linkplain javax.annotation.processing.RoundEnvironment round}。

@author Joseph D. Darcy
@author Scott Seligman
@author Peter von der Ah&eacute;
@version 1.2 06/07/31
@see javax.lang.model.util.Elements#getName
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.lang.model.element.Name.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果参数表示与 {@code this} 相同的名称，则返回 {@code true}，否则返回 {@code false}。

<p>注意，{@code Name} 的身份由其内容（字符序列）及创建它的实现共同决定。

@param obj  将与此元素进行比较的对象 
@return 如果指定对象表示与此名称相同的名称，则返回 {@code true}
@see Element#equals

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.lang.model.element.Name.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
遵守 {@link Object#hashCode Object.hashCode} 的常规协定。

@see #equals

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.lang.model.element.Name.contentEquals(CharSequence cs)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此名称与指定的 {@code CharSequence} 进行比较。当且仅当此名称表示与指定序列相同的 {@code char} 值序列时，结果为 {@code true}。

@return 如果此名称表示与指定序列相同的 {@code char} 值序列时，则返回 {@code true}，否则返回 {@code false}

@param cs 将与此名称进行比较的序列
@see String#contentEquals(CharSequence)

<!-- END DATA -->
