<!-- BEGIN KEY -->
public class javax.lang.model.util.SimpleTypeVisitor6 extends javax.lang.model.util.AbstractTypeVisitor6
<!-- END KEY -->
<!-- BEGIN DATA -->
类型的简单 visitor，具有适用于 {@link SourceVersion#RELEASE_6 RELEASE_6} 源版本的默认行为。

对应于 {@code RELEASE_6} 语言结构的 visit 方法调用 {@link #defaultAction}，并将其参数传递给 {@code defaultAction} 的相应参数。
 
<p> 根据常规协定，可以重写此类中的方法。注意，具有 {@link java.lang.Override @Override} 的具体子类中的注释方法可以帮助确定那些打算重写的方法。
 
<p> <b>警告：</b> 以后可能会向此类实现的 {@code TypeVisitor} 接口添加的一些方法，以适应添加到 Java&trade; 编程语言未来版本中的新（当前未知的）语言结构。所以，将来可能会向此类添加名称以 {@code "visit"} 开头的方法；为了避免不兼容，扩展此类的类不应该声明任何名称以 {@code "visit"} 开头的实例方法。
 
<p>在添加一个这样的新 visit 方法时，此类中的默认实现将调用 {@link #visitUnknown visitUnknown} 方法。还将引入新的简单类型 visitor 类，以对应新的语言级别；此 visitor 针对相关 visit 方法有不同的默认行为。在引入新的 visitor 时，此 visitor 的全部或部分可能过时。

@param <R> 此 visitor 的方法的返回类型。对于不需要返回结果的 visitor，使用 {@link Void}。
@param<P> 此 visitor 的方法的附加参数类型。对于不需要附加参数的 visitor，使用 {@code Void}。

@author Joseph D. Darcy
@author Scott Seligman
@author Peter von der Ah&eacute;
@version 1.7 06/08/15
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final R javax.lang.model.util.SimpleTypeVisitor6.DEFAULT_VALUE
<!-- END KEY -->
<!-- BEGIN DATA -->
要返回的默认值；{@link #defaultAction defaultAction} 返回此值，除非该方法被重写。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.lang.model.util.SimpleTypeVisitor6()
<!-- END KEY -->
<!-- BEGIN DATA -->
具体子类的构造方法；使用 {@code null} 作为默认值。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.lang.model.util.SimpleTypeVisitor6(R defaultValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
具体子类的构造方法；使用参数作为默认值。

@param defaultValue 为 {@link #DEFAULT_VALUE} 分配的值

<!-- END DATA -->
<!-- BEGIN KEY -->
protected R javax.lang.model.util.SimpleTypeVisitor6.defaultAction(TypeMirror e, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
visit 方法的默认动作。此类中的实现仅返回 {@link #DEFAULT_VALUE}；子类通常会重写此方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitPrimitive(PrimitiveType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitNull(NullType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitArray(ArrayType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitDeclared(DeclaredType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitError(ErrorType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitTypeVariable(TypeVariable t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitWildcard(WildcardType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitExecutable(ExecutableType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
<!-- BEGIN KEY -->
public R javax.lang.model.util.SimpleTypeVisitor6.visitNoType(NoType t, P p)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc} 此实现调用 {@code defaultAction}。

@param t {@inheritDoc}
@param p {@inheritDoc}
@return  {@code defaultAction} 的结果

<!-- END DATA -->
