<!-- BEGIN KEY -->
public interface javax.lang.model.type.TypeVariable extends javax.lang.model.type.ReferenceType
<!-- END KEY -->
<!-- BEGIN DATA -->
表示一个类型变量。类型变量可由某一类型、方法或构造方法的{@linkplain TypeParameterElement 类型参数}显式声明。类型变量也可以通过通配符类型参数的捕获转换（请参阅 <i>The Java Language Specification, Third Edition</i> 的第 5 章）隐式声明。

@author Joseph D. Darcy
@author Scott Seligman
@author Peter von der Ah&eacute;
@version 1.4 06/07/31
@see TypeParameterElement
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.lang.model.element.Element javax.lang.model.type.TypeVariable.asElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对应于此类型变量的元素。

@return 对应于此类型变量的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.lang.model.type.TypeMirror javax.lang.model.type.TypeVariable.getUpperBound()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此类型变量的上边界。

<p> 如果此类型变量被声明为没有明确上边界，则结果为 {@code java.lang.Object}。如果此类型变量被声明为有多个上边界，则结果是一个交集类型（建模为 {@link DeclaredType}）。通过检查结果的{@linkplain Types#directSupertypes(TypeMirror) 超类型}，可以发现个别边界。

@return 此类型变量的上边界

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.lang.model.type.TypeMirror javax.lang.model.type.TypeVariable.getLowerBound()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此类型变量的下边界。当某一类型参数无法包含显式的下边界声明时，捕获转换可以生成一个具有非平凡（non-trivial）下边界的类型变量。否则，类型变量的下边界为 {@link NullType}。

@return 此类型变量的下边界

<!-- END DATA -->
