<!-- BEGIN KEY -->
public final class javax.lang.model.type.TypeKind extends java.lang.Enum
<!-- END KEY -->
<!-- BEGIN DATA -->
类型镜像的种类。

<p>注意，以后可能会添加一些新的类型种类，以适应添加到 Java&trade; 编程语言未来版本中的新（当前未知的）语言结构。

@author Joseph D. Darcy
@author Scott Seligman
@author Peter von der Ah&eacute;
@version 1.5 06/07/11
@see TypeMirror
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.BOOLEAN
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code boolean}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.BYTE
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code byte}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.SHORT
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code short}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.INT
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code int}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.LONG
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code long}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.CHAR
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code char}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.FLOAT
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code float}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.DOUBLE
<!-- END KEY -->
<!-- BEGIN DATA -->
基本类型 {@code double}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.VOID
<!-- END KEY -->
<!-- BEGIN DATA -->
对应于关键字 {@code void} 的伪类型。
@see NoType

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.NONE
<!-- END KEY -->
<!-- BEGIN DATA -->
在实际类型不适合的地方使用的伪类型。
@see NoType

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.NULL
<!-- END KEY -->
<!-- BEGIN DATA -->
null 类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.ARRAY
<!-- END KEY -->
<!-- BEGIN DATA -->
数组类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.DECLARED
<!-- END KEY -->
<!-- BEGIN DATA -->
类或接口类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
无法解析的类或接口类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.TYPEVAR
<!-- END KEY -->
<!-- BEGIN DATA -->
类型变量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.WILDCARD
<!-- END KEY -->
<!-- BEGIN DATA -->
通配符类型参数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.PACKAGE
<!-- END KEY -->
<!-- BEGIN DATA -->
对应于包元素的伪类型。
@see NoType

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.EXECUTABLE
<!-- END KEY -->
<!-- BEGIN DATA -->
方法、构造方法或初始化程序。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.OTHER
<!-- END KEY -->
<!-- BEGIN DATA -->
为实现保留的类型。此类型不能是正在查找的类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.lang.model.type.TypeKind.isPrimitive()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此种类对应于某一基本类型，则返回 {@code true}，否则返回 {@code false}。
@return 如果此种类对应于某一基本类型，则返回 {@code true}

<!-- END DATA -->
