<!-- BEGIN KEY -->
public class javax.swing.event.RowSorterEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>RowSorterEvent</code> 提供 <code>RowSorter</code> 的更改通知。可能有两种类型的通知：
 <ul>
<li><code>Type.SORT_ORDER_CHANGED</code>：表示排序顺序发生了更改。此通知通常跟有以下通知：
<li><code>Type.SORTED</code>：表示已经以某种方式转换了模型的内容。例如，可能对内容进行了排序或过滤。
 </ul>

@version 1.3 11/17/05
@see javax.swing.RowSorter
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.RowSorterEvent(javax.swing.RowSorter source)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建类型为 <code>SORT_ORDER_CHANGED</code> 的 <code>RowSorterEvent</code>。

@param source 更改的源
@throws IllegalArgumentException 如果 <code>source</code> 为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.RowSorterEvent(javax.swing.RowSorter source, RowSorterEvent.Type type, int[] previousRowIndexToModel)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个 <code>RowSorterEvent</code>。

@param source 更改的源
@param type 事件的类型
@param previousRowIndexToModel 从模型索引到排序之前的视图索引的映射关系，可以为 <code>null</code>
@throws IllegalArgumentException 如果 <code>source</code> 或 <code>type</code> 为 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.RowSorter javax.swing.event.RowSorterEvent.getSource()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回以 <code>RowSorter</code> 形式表示的事件源。

@return 以 <code>RowSorter</code> 形式表示的事件源

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.RowSorterEvent.Type javax.swing.event.RowSorterEvent.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回事件的类型。

@return 事件的类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.event.RowSorterEvent.convertPreviousRowIndexToModel(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回基于模型排序之前的 <code>index</code> 的位置。此方法只用于类型为 <code>SORTED</code> 的事件。如果索引无效或者尚未提供排序之前的位置，则此方法将返回 -1。
 
@param index 基于视图的索引
@return 基于排序之前的模型的索引；如果该位置无效或没有提供该映射关系，则返回 -1。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.event.RowSorterEvent.getPreviousRowCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回排序之前行的数量。此方法只用于类型为 <code>SORTED</code> 的事件；如果尚未提供最后的位置，此方法将返回 0。

@return 基于排序之前的视图的行数

<!-- END DATA -->
