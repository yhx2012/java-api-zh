<!-- BEGIN KEY -->
public class javax.swing.event.TreeSelectionEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
描述当前选择中的更改的事件。该更改以任意数量的路径为基础。TreeSelectionListener 通常将查询事件源，以获得每个可能更改行的新选定状态。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@see TreeSelectionListener
@see javax.swing.tree.TreeSelectionModel

@version 1.26 12/19/03
@author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.tree.TreePath[] javax.swing.event.TreeSelectionEvent.paths
<!-- END KEY -->
<!-- BEGIN DATA -->
此事件表示的路径。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean[] javax.swing.event.TreeSelectionEvent.areNew
<!-- END KEY -->
<!-- BEGIN DATA -->
对于每条路径，标识该路径实际上是否为一条新路径。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.tree.TreePath javax.swing.event.TreeSelectionEvent.oldLeadSelectionPath
<!-- END KEY -->
<!-- BEGIN DATA -->
在路径被更改之前的 leadSelectionPath，可能为 null。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.tree.TreePath javax.swing.event.TreeSelectionEvent.newLeadSelectionPath
<!-- END KEY -->
<!-- BEGIN DATA -->
在路径被更改之后的 leadSelectionPath，可能为 null。
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.TreeSelectionEvent(Object source, javax.swing.tree.TreePath[] paths, boolean[] areNew, TreePath oldLeadSelectionPath, TreePath newLeadSelectionPath)
<!-- END KEY -->
<!-- BEGIN DATA -->
表示 TreeSelectionModel 选择中的更改。paths 标识已经添加到该选择中或已从中移除的路径。

@param source 事件源
@param paths 在该选择中发生更改的路径

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.TreeSelectionEvent(Object source, TreePath path, boolean isNew, TreePath oldLeadSelectionPath, TreePath newLeadSelectionPath)
<!-- END KEY -->
<!-- BEGIN DATA -->
表示 TreeSelectionModel 选择中的更改。path 标识已经添加到该选择中或已从中移除的路径。

@param source 事件源
@param path 在该选择中发生更改的路径
@param isNew 某条路径对于该选择而言是否为新路径，false 表示路径从该选择中被移除。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.tree.TreePath[] javax.swing.event.TreeSelectionEvent.getPaths()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回已经添加到该选择中或已从中移除的路径。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.tree.TreePath javax.swing.event.TreeSelectionEvent.getPath()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回第一个路径元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.event.TreeSelectionEvent.isAddedPath()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果已经将第一个路径元素添加到选择中，则返回 true。返回 false 值意味着第一条路径已从选择中移除。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.event.TreeSelectionEvent.isAddedPath(TreePath path)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果 path 标识的路径被添加到选择中，则返回 true。返回 false 值意味着该路径过去在该选择中，但现在不再在该选择中。如果 path 是此事件标识的路径之一，则此方法将被激活。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.event.TreeSelectionEvent.isAddedPath(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果由 <code>index</code> 标识的路径被添加到选择中，则返回 true。返回 false 值意味着该路径过去在该选择中，但现在不再在该选择中。如果 index &lt; 0 || &gt;= <code>getPaths</code>.length，则此方法将被激活。

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.tree.TreePath javax.swing.event.TreeSelectionEvent.getOldLeadSelectionPath()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回以前是前导路径的路径。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.tree.TreePath javax.swing.event.TreeSelectionEvent.getNewLeadSelectionPath()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前前导路径。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.event.TreeSelectionEvent.cloneWithSource(Object newSource)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回接收方的副本，但带有将成为 newSource 的源。

<!-- END DATA -->
