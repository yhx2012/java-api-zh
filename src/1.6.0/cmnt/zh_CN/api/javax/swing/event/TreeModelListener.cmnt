<!-- BEGIN KEY -->
public interface javax.swing.event.TreeModelListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
定义侦听 TreeModel 中更改的对象的接口。有关更多信息和示例，请参阅 <em>The Java Tutorial</em> 中的<a  href="http://java.sun.com/docs/books/tutorial/uiswing/events/treemodellistener.html">How to Write a Tree Model Listener</a> 一节。

@version 1.17 12/19/03
@author Rob Davis
@author Ray Ryan

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.event.TreeModelListener.treeNodesChanged(TreeModelEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>在已经以某种方式更改节点（或同级节点集）后调用。这些节点在树中的位置没有改变，或者说没有更改其子数组，但其他一些属性已发生更改，并且可能影响表示形式。示例：文件的名称已更改，但它仍然在文件系统中的同一位置上。</p>
<p>要指示根已更改，则 childIndices 和 children 将为 null。 </p>
 
<p>可使用 <code>e.getPath()</code> 获得已更改节点的父节点。<code>e.getChildIndices()</code> 返回已更改节点的索引。</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.event.TreeModelListener.treeNodesInserted(TreeModelEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>在已将节点插入树中以后调用。</p>
 
<p>可使用 <code>e.getPath()</code> 获得新节点的父节点。<code>e.getChildIndices()</code> 按升序返回新节点的索引。</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.event.TreeModelListener.treeNodesRemoved(TreeModelEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>在已从树中移除节点后调用。注意，如果从树中移除一个子树，则可能仅对已移除子树的根调用此方法一次，而不是对每个已移除的同级子树集调用一次。</p>

<p>可使用 <code>e.getPath()</code> 获得已删除节点的前父节点。<code>e.getChildIndices()</code> 按升序返回删除此节点前该节点所拥有的索引。</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.event.TreeModelListener.treeStructureChanged(TreeModelEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
<p>在树结构中从某个给定节点开始向下的地方发生彻底更改之后调用。如果由 e.getPath() 返回的路径长度为 1，并且第一个元素并没有标识当前根节点，则第一个元素应该成为树的新根。<p>
 
<p>可使用 <code>e.getPath()</code> 获得到该节点的路径。<code>e.getChildIndices()</code> 返回 null。</p>

<!-- END DATA -->
