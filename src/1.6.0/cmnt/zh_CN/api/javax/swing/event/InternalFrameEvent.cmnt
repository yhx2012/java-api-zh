<!-- BEGIN KEY -->
public class javax.swing.event.InternalFrameEvent extends java.awt.AWTEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
以事件源的形式添加对 <code>JInternalFrame</code> 对象的支持的 <code>AWTEvent</code>。此类的事件类型与 <code>WindowEvent</code> 相同，尽管它们使用不同的 ID。有关处理内部窗体事件的帮助，请参阅 <em>The Java Tutorial</em> 中的 <a href="http://java.sun.com/docs/books/tutorial/uiswing/events/internalframelistener.html" target="_top">How to Write an Internal Frame Listener</a> 一节。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@see java.awt.event.WindowEvent
@see java.awt.event.WindowListener
@see JInternalFrame
@see InternalFrameListener

@version 1.16 12/19/03
@author Thomas Ball

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_FIRST
<!-- END KEY -->
<!-- BEGIN DATA -->
用于内部窗体事件的 ID 范围的起始编号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_LAST
<!-- END KEY -->
<!-- BEGIN DATA -->
用于内部窗体事件的 ID 范围的结束编号。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_OPENED
<!-- END KEY -->
<!-- BEGIN DATA -->
&ldquo;窗口打开&rdquo;事件。仅在第一次使内部窗体可见时传递此事件。

@see JInternalFrame#show

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_CLOSING
<!-- END KEY -->
<!-- BEGIN DATA -->
&ldquo;窗口正在关闭&rdquo;事件。当用户试图关闭内部窗体时传递此事件，比如单击内部窗体的 close 按钮时，或者程序试图通过调用 <code>setClosed</code> 方法关闭内部窗体时。

@see JInternalFrame#setDefaultCloseOperation
@see JInternalFrame#doDefaultCloseAction
@see JInternalFrame#setClosed

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_CLOSED
<!-- END KEY -->
<!-- BEGIN DATA -->
&ldquo;窗口关闭&rdquo;事件。在由于调用 <code>setClosed</code> 或 <code>dispose</code> 方法而使内部窗体被关闭之后，传递此事件。

@see JInternalFrame#setClosed
@see JInternalFrame#dispose

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_ICONIFIED
<!-- END KEY -->
<!-- BEGIN DATA -->
&ldquo;窗口图标化&rdquo;事件。此事件指示内部窗体被缩小为一个小图标。
 
@see JInternalFrame#setIcon

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_DEICONIFIED
<!-- END KEY -->
<!-- BEGIN DATA -->
&ldquo;窗口取消图标化&rdquo;事件类型。此事件指示内部窗体已恢复其正常大小。

@see JInternalFrame#setIcon

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_ACTIVATED
<!-- END KEY -->
<!-- BEGIN DATA -->
&ldquo;窗口激活&rdquo;事件类型。此事件指示直接对此内部窗体进行键击和鼠标单击。

@see JInternalFrame#show
@see JInternalFrame#setSelected

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_DEACTIVATED
<!-- END KEY -->
<!-- BEGIN DATA -->
&ldquo;窗口取消激活&rdquo;事件类型。此事件指示不再直接对此内部窗体进行键击和鼠标单击。

@see JInternalFrame#setSelected

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.InternalFrameEvent(JInternalFrame source, int id)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>InternalFrameEvent</code> 对象。
@param source 发起事件的 <code>JInternalFrame</code> 对象
@param id 指示事件类型的整数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.event.InternalFrameEvent.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回标识此事件的参数字符串。此方法对于事件记录和调试很有用。

@return 标识事件及其属性的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JInternalFrame javax.swing.event.InternalFrameEvent.getInternalFrame()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回事件的发起者。

@return 发起事件的 <code>JInternalFrame</code> 对象
@since 1.3

<!-- END DATA -->
