<!-- BEGIN KEY -->
public class javax.swing.PopupFactory extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
顾名思义，<code>PopupFactory</code> 用于获取 <code>Popup</code> 的实例。<code>Popup</code> 用于显示特定包含层次结构中所有其他 <code>Component</code> 之上的 <code>Component</code>。常规协定是从 <code>PopupFactory</code> 获取 <code>Popup</code> 之后，必须调用 <code>Popup</code> 上的 <code>hide</code>。一般用法为：
 <pre>
   PopupFactory factory = PopupFactory.getSharedInstance();
   Popup popup = factory.getPopup(owner, contents, x, y);
   popup.show();
   ...
   popup.hide();
 </pre>

@see Popup

@version 1.24 12/19/03
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.PopupFactory.setSharedInstance(PopupFactory factory)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置用于获取 <code>Popup</code> 的 <code>PopupFactory</code>。如果 <code>factory</code> 为 null，这将抛出 <code>IllegalArgumentException</code>。

@param factory Shared PopupFactory
@exception IllegalArgumentException 如果 <code>factory</code> 为 null
@see #getPopup

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.PopupFactory javax.swing.PopupFactory.getSharedInstance()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回共享 <code>PopupFactory</code>，它可用于获取 <code>Popup</code>。

@return 共享的 PopupFactory

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Popup javax.swing.PopupFactory.getPopup(Component owner, Component contents, int x, int y) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
为包含 Component <code>contents</code> 的 Component <code>owner</code> 创建 <code>Popup</code>。<code>owner</code> 用于确定 <code>Window</code>，新 <code>Popup</code> 将其作为创建 <code>Popup</code> 的 <code>Component</code> 的父级。null <code>owner</code> 暗示不存在有效的父级。<code>x</code> 和 <code>y</code> 指定放置 <code>Popup</code> 的首选初始位置。基于屏幕大小或其他参数，<code>Popup</code> 不能显示在 <code>x</code> 和 <code>y</code> 处。

@param owner  组件鼠标坐标与其相关，它可以为 null
@param contents Popup 的内容 
@param x 初始的 x 屏幕坐标
@param y  初始的 y 屏幕坐标
@exception IllegalArgumentException 如果内容为 null
@return 包含 Contents 的 Popup

<!-- END DATA -->
