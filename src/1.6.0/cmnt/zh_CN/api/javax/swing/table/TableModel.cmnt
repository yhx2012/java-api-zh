<!-- BEGIN KEY -->
public interface javax.swing.table.TableModel
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>TableModel</code> 接口指定了 <code>JTable</code> 用于询问表格式数据模型的方法。<p>

只要数据模型实现了 <code>TableModel</code> 接口，就可以通过以下两行代码设置 <code>JTable</code> 显示该模型：<p>
  <pre>
  	TableModel myData = new MyTableModel(); 
  	JTable table = new JTable(myData);
  </pre><p>

有关进一步的文档，请参见 <em>The Java Tutorial</em> 中的 <a href="http://java.sun.com/docs/books/tutorial/uiswing/components/table.html#data">Creating a Table Model</a> 一节。
 <p>

@version 1.26 05/05/04
@author Philip Milne
@see JTable

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.table.TableModel.getRowCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该模型中的行数。<code>JTable</code> 使用此方法来确定它应该显示多少行。此方法应该是快速执行的，因为在呈现期间会经常调用它。

@return 该模型中的行数
@see #getColumnCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.table.TableModel.getColumnCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该模型中的列数。<code>JTable</code> 使用此方法来确定在默认情况下它应该创建并显示多少列。

@return 该模型中的列数
@see #getRowCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.table.TableModel.getColumnName(int columnIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>columnIndex</code> 位置的列的名称。这用于初始化该表的列头名。注：此名称不必是惟一的；表中的两列可以具有相同的名称。

@param	columnIndex	列的索引
@return  列的名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Class<?> javax.swing.table.TableModel.getColumnClass(int columnIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
针对列中所有的单元格值，返回最具体的超类。<code>JTable</code> 使用此方法来设置列的默认渲染器和编辑器。

@param columnIndex 列的索引
@return 模型中对象值的公共祖先类。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.table.TableModel.isCellEditable(int rowIndex, int columnIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果 <code>rowIndex</code> 和 <code>columnIndex</code> 位置的单元格是可编辑的，则返回 true。否则，在该单元格上调用 <code>setValueAt</code> 不会更改该单元格的值。

@param	rowIndex	要查询的值所在行
@param	columnIndex	要查询的值所在列
@return	如果该单元格是可编辑的，则返回 true 
@see #setValueAt

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.table.TableModel.getValueAt(int rowIndex, int columnIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>columnIndex</code> 和 <code>rowIndex</code> 位置的单元格值。

@param	rowIndex	要查询的值所在行
@param	columnIndex	要查询的值所在列
@return	指定单元格位置的值 Object

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.table.TableModel.setValueAt(Object aValue, int rowIndex, int columnIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>columnIndex</code> 和 <code>rowIndex</code> 位置的单元格中的值设置为 <code>aValue</code>。

@param	aValue		 新值
@param	rowIndex	 要更改的值所在行
@param	columnIndex	 要更改的值所在列
@see #getValueAt
@see #isCellEditable

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.table.TableModel.addTableModelListener(TableModelListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
每当数据模型发生更改时，就将一个侦听器添加到被通知的列表中。

@param	l		TableModelListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.table.TableModel.removeTableModelListener(TableModelListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
每当数据模型发生更改时，就从被通知的列表中移除一个侦听器。

@param	l		TableModelListener

<!-- END DATA -->
