<!-- BEGIN KEY -->
public static class javax.swing.UIDefaults.ProxyLazyValue extends java.lang.Object implements javax.swing.UIDefaults.LazyValue
<!-- END KEY -->
<!-- BEGIN DATA -->
此类提供一个可用于延迟加载要创建实例类的 <code>LazyValue</code> 的实现。还可以避免创建 <code>LazyValue</code> 子类的匿名内部类。对于第一次调用 <code>createValue</code> 时导致的轻微性能缩减（因为使用了 Reflection API），这两项都可在加载外观 (Look and Feel) 时提高性能。
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.UIDefaults.ProxyLazyValue(String c)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个将在请求时构造实例的 <code>LazyValue</code>。
 
@param c    一个 <code>String</code>，指定根据需要要创建的实例的类名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.UIDefaults.ProxyLazyValue(String c, String m)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个将在请求时构造实例的 <code>LazyValue</code>。
 
@param c    一个指定该类的类名称的 <code>String</code>，该类包含为实例创建要调用的静态方法
@param m    一个指定在类 c 上要调用该静态方法的 <code>String</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.UIDefaults.ProxyLazyValue(String c, java.lang.Object[] o)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个将在请求时构造实例的 <code>LazyValue</code>。
 
@param c    一个 <code>String</code>，指定根据需要要创建的实例的类名称
@param o    要作为参数传递到类 c 中构造方法的 <code>Objects</code> 数组

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.UIDefaults.ProxyLazyValue(String c, String m, java.lang.Object[] o)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个将在请求时构造实例的 <code>LazyValue</code>。
 
@param c    一个指定该类的类名称的 <code>String</code>，该类包含为实例创建要调用的静态方法。
@param m    一个指定在类 c 上要调用该静态方法的 <code>String</code>
@param o    要作为参数传递到类 c 中静态方法的 <code>Objects</code> 数组

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.UIDefaults.ProxyLazyValue.createValue(UIDefaults table)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建从 <code>UIDefaults</code> 表中检索的值。该对象在每次被访问时创建。

@param table  一个 <code>UIDefaults</code> 表
@return 已创建的 <code>Object</code>

<!-- END DATA -->
