<!-- BEGIN KEY -->
public class javax.swing.border.MatteBorder extends javax.swing.border.EmptyBorder
<!-- END KEY -->
<!-- BEGIN DATA -->
该类提供类似衬边的边框，衬边图案既可以是纯色也可以是平铺的图标。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.22 12/19/03
@author Amy Fowler

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(int top, int left, int bottom, int right, Color matteColor)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定 insets 和颜色的衬边边框。
@param top 边框顶部 inset
@param left 边框左部 inset
@param bottom 边框底部 inset
@param right 边框右部 inset
@param matteColor 边框呈现的颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(Insets borderInsets, Color matteColor)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定 insets 和颜色的衬边边框。
@param borderInsets 边框的 insets
@param matteColor 边框呈现的颜色
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(int top, int left, int bottom, int right, Icon tileIcon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定 insets 和平铺图标的衬边边框。
@param top 边框顶部 inset
@param left 边框左部 inset
@param bottom 边框底部 insetr
@param 边框右部 inset
@param tileIcon 用于平铺边框的图标

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(Insets borderInsets, Icon tileIcon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定 insets 和平铺图标的衬边边框。
@param borderInsets 边框的 insets
@param tileIcon 用于平铺边框的图标
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(Icon tileIcon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定平铺图标的衬边边框。将会根据平铺图标的大小动态计算 insets，其中顶部和底部 insets 将等于平铺图标的高度，而左部和右部 insets 将等于平铺图标的宽度。
@param tileIcon 用于平铺边框的图标

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.MatteBorder.paintBorder(Component c, Graphics g, int x, int y, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
绘制衬边边框。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.MatteBorder.getBorderInsets(Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回边框的 insets。
@param c 要应用此边框 insets 值的组件
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.MatteBorder.getBorderInsets(Component c, Insets insets)
<!-- END KEY -->
<!-- BEGIN DATA -->

用此边框的当前 Insets 重新初始化 insets 参数。
@param c 应用此边框 insets 值的组件
@param insets 要重新初始化的对象
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.MatteBorder.getBorderInsets()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此边框的 insets。
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.border.MatteBorder.getMatteColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回平铺边框的颜色，如果使用了平铺图标，则返回 null。
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Icon javax.swing.border.MatteBorder.getTileIcon()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回平铺边框的图标，如果使用了纯色，则返回 null。
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.border.MatteBorder.isBorderOpaque()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回边框是否透明。

<!-- END DATA -->
