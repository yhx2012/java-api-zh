<!-- BEGIN KEY -->
public class javax.swing.border.LineBorder extends javax.swing.border.AbstractBorder
<!-- END KEY -->
<!-- BEGIN DATA -->
实现单色、任意厚度线边框的类。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.23 12/19/03
@author David Kloba

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.LineBorder(Color color)
<!-- END KEY -->
<!-- BEGIN DATA -->

创建具有指定颜色、厚度为 1（thickness = 1）的线边框。
@param color 边框的颜色。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.LineBorder(Color color, int thickness)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定颜色和厚度的线边框。
@param color 边框的颜色
@param thickness 边框的厚度

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.LineBorder(Color color, int thickness, boolean roundedCorners)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定颜色、厚度和拐角形状的线条边框。
@param color 边框的颜色
@param thickness 边框的厚度
@param roundedCorners 边框拐角是否应为弧形
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.border.Border javax.swing.border.LineBorder.createBlackLineBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取一个颜色为黑色、厚度为 1 的线边框的便捷方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.border.Border javax.swing.border.LineBorder.createGrayLineBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取一个颜色为灰色、厚度为 1 的线条边框的便捷方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.LineBorder.paintBorder(Component c, Graphics g, int x, int y, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
按照指定的位置和尺寸为指定的组件绘制边框。
@param c 要为其绘制边框的组件
@param g 绘制的图形
@param x 所绘制边框的 x 坐标位置
@param y 所绘制边框的 y 坐标位置
@param width 所绘制边框的宽度
@param height 所绘制边框的高度

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.LineBorder.getBorderInsets(Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回边框的 insets。
@param c 要应用此边框 insets 值的组件

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.LineBorder.getBorderInsets(Component c, Insets insets)
<!-- END KEY -->
<!-- BEGIN DATA -->

用此边框的当前 Insets 重新初始化 insets 参数。
@param c 应用此边框 insets 值的组件
@param insets 要重新初始化的对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.border.LineBorder.getLineColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回边框的颜色。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.border.LineBorder.getThickness()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回边框的厚度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.border.LineBorder.getRoundedCorners()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回是否将此边框绘制为圆弧拐角边框。
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.border.LineBorder.isBorderOpaque()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此边框是否透明。

<!-- END DATA -->
