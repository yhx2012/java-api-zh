<!-- BEGIN KEY -->
public class javax.swing.border.CompoundBorder extends javax.swing.border.AbstractBorder
<!-- END KEY -->
<!-- BEGIN DATA -->
一个复合 Border 类，通过将内部 Border 对象嵌套到外部 Border 对象的 insets 中实现将两个 Border 对象合并为一个单个边框。例如，此类可使用现有的装饰边框向组件添加空白边缘区域：
 <p>
 <code><pre>
    Border border = comp.getBorder();
    Border margin = new EmptyBorder(10,10,10,10);
    comp.setBorder(new CompoundBorder(border, margin));
 </pre></code>
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.20 12/19/03
@author David Kloba

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.CompoundBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->

创建一个组合边框，其内部边框和外部边框均为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.CompoundBorder(Border outsideBorder, Border insideBorder)
<!-- END KEY -->
<!-- BEGIN DATA -->

按照指定的内部边框和外部边框创建组合边框。其内部边框和外部边框都可以为 null。
@param outsideBorder 外部边框
@param insideBorder 要嵌套的内部边框

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.border.CompoundBorder.isBorderOpaque()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此组合边框是否透明。如果内部边框和外部边框均不为 null 且均不透明，则返回 true；否则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.CompoundBorder.paintBorder(Component c, Graphics g, int x, int y, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->

绘制组合边框，方法是先按指定的位置和尺寸绘制外部边框，然后按照外部边框 insets 指定的位置和尺寸偏移量绘制内部边框。
@param c 要为其绘制边框的组件
@param g 绘制的图形
@param x 所绘制边框的 x 坐标位置
@param y 所绘制边框的 y 坐标位置
@param width 所绘制边框的宽度
@param height 所绘制边框的高度

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.CompoundBorder.getBorderInsets(Component c, Insets insets)
<!-- END KEY -->
<!-- BEGIN DATA -->

用此边框的当前 Insets 重新初始化 insets 参数。
@param c 应用此边框 insets 值的组件
@param insets 要重新初始化的对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.CompoundBorder.getBorderInsets(Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回复合边框的 insets，它是外部边框的 insets 与内部边框的 insets 相加所得的结果。
@param c 要应用此边框 insets 值的组件

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.Border javax.swing.border.CompoundBorder.getOutsideBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回外部边框对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.Border javax.swing.border.CompoundBorder.getInsideBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回内部边框对象。

<!-- END DATA -->
