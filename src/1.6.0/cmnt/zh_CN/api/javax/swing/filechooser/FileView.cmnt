<!-- BEGIN KEY -->
public abstract class javax.swing.filechooser.FileView extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>FileView</code> 定义一个抽象类，可以实现该抽象类来为 <code>File</code> 提供带 UI 信息的文件选择器。每个 L&F <code>JFileChooserUI</code> 对象都实现此类来传递回特定于该 L&F 的图标和类型描述。例如，Microsoft Windows L&F 为目录和一般文件返回一般 Window 图标。此外，可以通过使用 {@link javax.swing.JFileChooser#setFileView} 为 <code>JFileChooser</code> 提供自己的 <code>FileView</code>，以返回不同的图标或附加信息。

 <p>
<code>JFileChooser</code> 首先注意查看是否有用户定义的 <code>FileView</code>，如果有的话，它先根据该 FileView 获取类型信息。如果对于任何方法，<code>FileView</code> 都返回 <code>null</code>，则 <code>JFileChooser</code> 使用特定于 L&F 的视图来获取信息。因此，举例来说，如果提供了 <code>FileView</code> 类，该类对 JPG 文件返回一个 <code>Icon</code>，并对其他所有文件返回 <code>null</code>，则 UI 的 <code>FileView</code> 将对其他所有文件提供默认图标。

 <p>

有关简单文件视图的示例实现，请参阅 <code><i>yourJDK</i>/demo/jfc/FileChooserDemo/ExampleFileView.java</code>。有关更多的信息和示例，请参阅 <em>The Java Tutorial</em> 中的 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/components/filechooser.html">How to Use Choosers</a> 一节。

@see javax.swing.JFileChooser

@version 1.19 06/28/04
@author Jeff Dinkins


<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.filechooser.FileView.getName(File f)
<!-- END KEY -->
<!-- BEGIN DATA -->
文件名称。通常此名称就是 <code>f.getName()</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.filechooser.FileView.getDescription(File f)
<!-- END KEY -->
<!-- BEGIN DATA -->
文件的可读描述。例如，名为 <i>jag.jpg</i> 的文件可能有这样一个描述：&quot;A JPEG image file of James Gosling's face&quot;。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.filechooser.FileView.getTypeDescription(File f)
<!-- END KEY -->
<!-- BEGIN DATA -->
文件类型的可读描述。例如，<code>jpg</code> 文件可能有这样一个类型描述：&quot;A JPEG Compressed Image File&quot;

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Icon javax.swing.filechooser.FileView.getIcon(File f)
<!-- END KEY -->
<!-- BEGIN DATA -->
表示 <code>JFileChooser</code> 中此文件的图标。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Boolean javax.swing.filechooser.FileView.isTraversable(File f)
<!-- END KEY -->
<!-- BEGIN DATA -->
目录是否是可遍历的。此方法可能很有用，例如在需要一个目录来表示复合文档并且不希望用户访问其内部的情况下。

<!-- END DATA -->
