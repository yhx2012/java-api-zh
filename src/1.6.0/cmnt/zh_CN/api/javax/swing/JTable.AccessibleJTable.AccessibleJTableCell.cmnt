<!-- BEGIN KEY -->
protected class javax.swing.JTable.AccessibleJTable.AccessibleJTableCell extends javax.accessibility.AccessibleContext implements javax.accessibility.Accessible, javax.accessibility.AccessibleComponent
<!-- END KEY -->
<!-- BEGIN DATA -->
此类提供了适用于表单元格的 Java Accessibility API 实现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JTable.AccessibleJTable.AccessibleJTableCell(JTable t, int r, int c, int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>AccessibleJTableHeaderEntry</code>。
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此组件关联的 <code>AccessibleContext</code>。在此类的 Java Accessibility API 的实现中，返回的是此对象，它是其本身的 <code>AccessibleContext</code>。

@return 此对象

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.accessibility.AccessibleContext javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getCurrentAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
 获取表单元格渲染器的 AccessibleContext。

 @return 表单元格渲染器的 <code>AccessibleContext</code>（如果存在）；否则返回 <code>null</code>。
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getCurrentComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 获取表单元格渲染器组件。

 @return 表单元格渲染器组件（如果存在）；否则返回 <code>null</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的可访问的名称。

@return 此对象的本地化名称，如果此对象没有名称，则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setAccessibleName(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的可访问的本地化名称。

@param s 此对象新的本地化名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleDescription()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的可访问的描述。

@return 此对象的本地化描述；如果此对象没有描述，则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setAccessibleDescription(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此对象的可访问的描述。

@param s 此对象的新的本地化描述

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的功能。

@return 描述此对象功能的 <code>AccessibleRole</code> 的实例
@see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的状态设置。

@return 包含该对象当前状态设置的 <code>AccessibleStateSet</code> 的实例
@see AccessibleState

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的 <code>Accessible</code> 父对象。

@return 此对象的可访问的父对象；如果此对象没有 <code>Accessible</code> 父对象，则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleIndexInParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象在其可访问的父对象中的索引。

@return 此对象在其父对象中的索引；如果此对象没有可访问的父对象，则返回 -1 
@see #getAccessibleParent

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象中可访问的子对象数。

@return 此对象中可访问的子对象数

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象的指定的 <code>Accessible</code> 子对象。

@param i 基于 0 的子容器索引
@return 对象的 <code>Accessible</code> 子容器

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Locale javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getLocale()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取该组件的语言环境。如果该组件没有语言环境，则返回其父级的语言环境。

@return 组件的语言环境；如果此组件没有语言环境，则返回其父级的语言环境
@exception IllegalComponentStateException 如果 <code>Component</code> 没有其自己的语言环境，并且尚未添加到包含层次结构中（如果添加到包含层次结构中就可以从其父级确定语言环境）
@see #setLocale

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.addPropertyChangeListener(PropertyChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 <code>PropertyChangeListener</code> 添加到侦听器列表中。侦听器为所有的属性注册。

@param l  要添加的 <code>PropertyChangeListener</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.removePropertyChangeListener(PropertyChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
从侦听器列表移除一个 <code>PropertyChangeListener</code>。此方法移除了一个为所有属性注册的 <code>PropertyChangeListener</code>。

@param l  要移除的 <code>PropertyChangeListener</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleAction javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleAction()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的 <code>AccessibleAction</code>（如果存在）。否则返回 <code>null</code>。

@return <code>AccessibleAction</code> 或 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleComponent javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的 <code>AccessibleComponent</code>（如果存在）。否则返回 <code>null</code>。

@return <code>AccessibleComponent</code> 或 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleSelection javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的 <code>AccessibleSelection</code>（如果存在）。否则返回 <code>null</code>。

@return <code>AccessibleSelection</code> 或 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleText javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleText()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的  <code>AccessibleText</code> （如果存在）。否则返回 <code>null</code>。

@return <code>AccessibleText</code> 或 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleValue javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的 <code>AccessibleValue</code>（如果存在）。否则返回 <code>null</code>。

@return <code>AccessibleValue</code> 或 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的背景色。

@return 该对象的背景色（如果受支持）；否则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setBackground(Color c)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此对象的背景色。

@param c 该背景的新 <code>Color</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的前景色。

@return 该对象的前景色（如果受支持）；否则，返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setForeground(Color c)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此对象的前景色。

@param c 该前景的新的 <code>Color</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Cursor javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getCursor()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的 <code>Cursor</code>。

@return 对象的 <code>Cursor</code>（如果受支持）；否则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setCursor(Cursor c)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此对象的 <code>Cursor</code>。

@param c 此对象的新的 <code>Cursor</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Font javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的 <code>Font</code>。

@return 该对象的 <code>Font</code>（如果受支持）；否则，返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setFont(Font f)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此对象的 <code>Font</code>。

@param f 该对象的新 <code>Font</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.FontMetrics javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getFontMetrics(Font f)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的 <code>FontMetrics</code>。

@param f <code>Font</code>
@return <code>FontMetrics</code> 对象（如果受支持）；否则返回 <code>null</code>
@see #getFont

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.isEnabled()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否启用该对象。

@return 如果启用了该对象，则返回 true；否则，返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setEnabled(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置该对象的启用状态。

@param b 如果为 true，则启用此对象；否则，禁用它

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.isVisible()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定该对象是否可见。注：这意味着该对象是可见的；但是，它实际上不显示在屏幕上，因为包含此对象的对象中的一个对象不可见。要确定某一对象是否在屏幕上显示，请使用 <code>isShowing</code>。

@return 如果对象可见，则返回 true；否则，返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setVisible(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置该对象的可见状态。

@param b 如果为 true，则显示此对象；否则，隐藏它

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.isShowing()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定该对象是否正在显示。通过检查该对象的可见性和祖先可确定这一点。注：这将返回 true，即使该对象被另一个对象遮掩（例如，该对象碰巧在下拉菜单的下面）。

@return 如果对象正在显示，则返回 true；否则，返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.contains(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
检查指定的点是否在此对象的边界内，其中点的 x 和 y 坐标被定义成与该对象的坐标系统相关。

@param p 与该对象的坐标系统相关的 <code>Point</code>
@return 如果对象包含 <code>Point</code>，则返回 true；否则，返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Point javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getLocationOnScreen()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象在屏幕上的位置。

@return 屏幕上对象的位置（如果此对象不在屏幕上，则可以为 <code>null</code>）

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Point javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.getLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
以点（指定屏幕坐标空间中对象的左上角）的形式获取该对象相对于父对象的位置。

@return 表示该屏幕坐标空间中对象边界的左上角的 <code>Point</code>的实例；如果此对象或其父对象不在屏幕上，则返回 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTable.AccessibleJTable.AccessibleJTableCell.setLocation(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置该对象相对于父对象的位置。

<!-- END DATA -->
