<!-- BEGIN KEY -->
public class javax.swing.colorchooser.DefaultColorSelectionModel extends java.lang.Object implements javax.swing.colorchooser.ColorSelectionModel, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>ColorSelectionModel</code> 的一般实现。

@version 1.15 12/19/03
@author Steve Wilson

@see java.awt.Color

<!-- END DATA -->
<!-- BEGIN KEY -->
protected transient javax.swing.event.ChangeEvent javax.swing.colorchooser.DefaultColorSelectionModel.changeEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
由于事件的惟一状态（只读）为源属性，所以每个模型实例只需要一个 <code>ChangeEvent</code>。这里生成的事件源总是&ldquo;this&rdquo;。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.colorchooser.DefaultColorSelectionModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个 <code>DefaultColorSelectionModel</code>，其当前颜色被设置为 <code>Color.white</code>。这是默认的构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.colorchooser.DefaultColorSelectionModel(Color color)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个 <code>DefaultColorSelectionModel</code>，其当前颜色被设置为 <code>color</code>，该颜色不应为 <code>null</code>。注意，将颜色设置为 <code>null</code> 是不确定的，这样做可能会带来不可预知的后果。

@param color 新的 <code>Color</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.colorchooser.DefaultColorSelectionModel.getSelectedColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回所选取的 <code>Color</code>，它不应为 <code>null</code>。

@return 选取的 <code>Color</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.colorchooser.DefaultColorSelectionModel.setSelectedColor(Color color)
<!-- END KEY -->
<!-- BEGIN DATA -->
将选取的颜色设置为 <code>color</code>。注意，将颜色设置为 <code>null</code> 是不确定的，这样做可能会带来不可预知的后果。如果此方法将当前颜色设置为一个新的非 <code>null</code> 颜色，则它会激发状态更改事件；如果新颜色与当前颜色相同，则不会激发任何事件。

@param color 新的 <code>Color</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.colorchooser.DefaultColorSelectionModel.addChangeListener(ChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
将一个 <code>ChangeListener</code> 添加到模型中。

@param l 要添加的 <code>ChangeListener</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.colorchooser.DefaultColorSelectionModel.removeChangeListener(ChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
从模型中移除一个 <code>ChangeListener</code>。
@param l 要移除的 <code>ChangeListener</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.ChangeListener[] javax.swing.colorchooser.DefaultColorSelectionModel.getChangeListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个使用 <code>addChangeListener</code> 添加到此 <code>DefaultColorSelectionModel</code> 中的所有 <code>ChangeListener</code> 的数组。

@return 已添加的所有 <code>ChangeListener</code>，如果未添加任何侦听器，则返回一个空数组
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.colorchooser.DefaultColorSelectionModel.fireStateChanged()
<!-- END KEY -->
<!-- BEGIN DATA -->
运行每个 <code>ChangeListener</code> 的 <code>stateChanged</code> 方法。

<!-- @see #setRangeProperties    //bad link-->
@see EventListenerList

<!-- END DATA -->
