<!-- BEGIN KEY -->
public class javax.swing.ButtonGroup extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
此类用于为一组按钮创建一个多斥（multiple-exclusion）作用域。使用相同的 <code>ButtonGroup</code> 对象创建一组按钮意味着&ldquo;开启&rdquo;其中一个按钮时，将关闭组中的其他所有按钮。
 <p>
可将 <code>ButtonGroup</code> 用于任何从 <code>AbstractButton</code> 继承的对象组。通常，按钮组包含 <code>JRadioButton</code>、<code>JRadioButtonMenuItem</code> 或 <code>JToggleButton</code> 的实例。但将 <code>JButton</code> 或 <code>JMenuItem</code> 的实例放入按钮组中并没有什么意义，因为 <code>JButton</code> 和 <code>JMenuItem</code> 不实现选择状态。
 <p>
最初，组中的所有按钮都未被选择。
 <p>
有关使用按钮组的示例和更多信息，请参阅 <em>The Java Tutorial</em> 中的 <a href="http://java.sun.com/docs/books/tutorial/uiswing/components/button.html#radiobutton">How to Radio Buttons</a> 一节。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.37 05/05/04
@author Jeff Dinkins

<!-- END DATA -->
<!-- BEGIN KEY -->
 javax.swing.ButtonModel javax.swing.ButtonGroup.selection
<!-- END KEY -->
<!-- BEGIN DATA -->
当前选择。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.ButtonGroup()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的 <code>ButtonGroup</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ButtonGroup.add(AbstractButton b)
<!-- END KEY -->
<!-- BEGIN DATA -->
将按钮添加到组中。
@param b 要添加的按钮

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ButtonGroup.remove(AbstractButton b)
<!-- END KEY -->
<!-- BEGIN DATA -->
从组中移除按钮。
@param b 要移除的按钮

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ButtonGroup.clearSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 清除选中内容，从而没有选择 <code>ButtonGroup</code> 中的任何按钮。
 
 @since 1.6       

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration<javax.swing.AbstractButton> javax.swing.ButtonGroup.getElements()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此组中的所有按钮。
@return  此组中的按钮的 <code>Enumeration</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.ButtonModel javax.swing.ButtonGroup.getSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回选择按钮的模型。
@return 选择的按钮模型

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ButtonGroup.setSelected(ButtonModel m, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
为 <code>ButtonModel</code> 设置选择值。一次只能选择组中的一个按钮。
@param m <code>ButtonModel</code>
@param b 如果此按钮被选择，则该参数为 <code>true</code>，否则为 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.ButtonGroup.isSelected(ButtonModel m)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对是否已选择一个 <code>ButtonModel</code> 的判断。
@return 如果选择了按钮，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ButtonGroup.getButtonCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此组中的按钮数。
@return  按钮计数
@since 1.3

<!-- END DATA -->
