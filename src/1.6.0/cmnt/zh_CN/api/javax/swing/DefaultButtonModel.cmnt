<!-- BEGIN KEY -->
public class javax.swing.DefaultButtonModel extends java.lang.Object implements javax.swing.ButtonModel, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Button</code> 组件的数据模型的默认实现。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.45 05/05/04
@author Jeff Dinkins

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.DefaultButtonModel.stateMask
<!-- END KEY -->
<!-- BEGIN DATA -->
用于存储按钮状态的位掩码。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.DefaultButtonModel.actionCommand
<!-- END KEY -->
<!-- BEGIN DATA -->
按钮所触发的动作命令字符串。 
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.ButtonGroup javax.swing.DefaultButtonModel.group
<!-- END KEY -->
<!-- BEGIN DATA -->
按钮所属的按钮组。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.DefaultButtonModel.mnemonic
<!-- END KEY -->
<!-- BEGIN DATA -->
按钮的助记符。 
<!-- END DATA -->
<!-- BEGIN KEY -->
protected transient javax.swing.event.ChangeEvent javax.swing.DefaultButtonModel.changeEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
每个按钮模型实例只需要一个 <code>ChangeEvent</code>，因为事件的唯一状态是源属性。所生成事件的源总是 &quot;this&quot;。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.EventListenerList javax.swing.DefaultButtonModel.listenerList
<!-- END KEY -->
<!-- BEGIN DATA -->
在此模型中存储侦听器。
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.DefaultButtonModel.ARMED
<!-- END KEY -->
<!-- BEGIN DATA -->
 标识位掩码中“选中的”位，该位指示选择/触发按钮操作的部分委托事项。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.DefaultButtonModel.SELECTED
<!-- END KEY -->
<!-- BEGIN DATA -->
标识位掩码中“选定的”位，该位指示按纽已被选定。只有某些类型的按钮需要该指示，比如单选钮或复选框。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.DefaultButtonModel.PRESSED
<!-- END KEY -->
<!-- BEGIN DATA -->
标识位掩码中“按下的”位，该位指示按钮已经被按下。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.DefaultButtonModel.ENABLED
<!-- END KEY -->
<!-- BEGIN DATA -->
标识位掩码中“启用的”位，该位指示可以通过输入设备（如鼠标指针）选择按钮。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.DefaultButtonModel.ROLLOVER
<!-- END KEY -->
<!-- BEGIN DATA -->
标识位掩码中“翻转的”位，该位指示鼠标位于按钮上。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.DefaultButtonModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>DefaultButtonModel</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setActionCommand(String actionCommand)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.DefaultButtonModel.getActionCommand()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultButtonModel.isArmed()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultButtonModel.isSelected()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultButtonModel.isEnabled()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultButtonModel.isPressed()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultButtonModel.isRollover()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setArmed(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setEnabled(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setSelected(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setPressed(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setRollover(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setMnemonic(int key)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.DefaultButtonModel.getMnemonic()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.addChangeListener(ChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.removeChangeListener(ChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.ChangeListener[] javax.swing.DefaultButtonModel.getChangeListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>DefaultButtonModel</code> 上所有已注册的更改侦听器组成的数组。

@return 此模型的所有 <code>ChangeListener</code>，如果当前没有已注册的更改侦听器，则返回一个空数组。
 
@see #addChangeListener
@see #removeChangeListener
 
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.DefaultButtonModel.fireStateChanged()
<!-- END KEY -->
<!-- BEGIN DATA -->
通知所有对此事件类型的通知感兴趣的已注册侦听器。以延迟方式创建事件实例。

@see EventListenerList

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.addActionListener(ActionListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.removeActionListener(ActionListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.ActionListener[] javax.swing.DefaultButtonModel.getActionListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>DefaultButtonModel</code> 上所有已注册的操作侦听器组成的数组。

@return 此模型的所有 <code>ActionListener</code>；如果当前没有注册任何操作侦听器，则返回一个空数组。

@see #addActionListener
@see #removeActionListener

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.DefaultButtonModel.fireActionPerformed(ActionEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
通知所有对此事件类型的通知感兴趣的已注册侦听器。

@param e 要传递给侦听器的 <code>ActionEvent</code>
@see EventListenerList

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.addItemListener(ItemListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.removeItemListener(ItemListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.ItemListener[] javax.swing.DefaultButtonModel.getItemListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>DefaultButtonModel</code> 上所有已注册的项侦听器组成的数组。

@return 此模型的所有 <code>ItemListener</code>，如果没有当前已注册的项侦听器，则返回一个空数组

@see #addItemListener
@see #removeItemListener

@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.DefaultButtonModel.fireItemStateChanged(ItemEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
通知所有对此事件类型的通知感兴趣的已注册侦听器。  

@param e 要传递给侦听器的 <code>ItemEvent</code>
@see EventListenerList

<!-- END DATA -->
<!-- BEGIN KEY -->
public T[] javax.swing.DefaultButtonModel.getListeners(java.lang.Class<T> listenerType)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回目前已在此模型上注册为 <code><em>Foo</em>Listener</code> 的所有对象组成的数组。<code><em>Foo</em>Listener</code> 是用 <code>add<em>Foo</em>Listener</code> 方法注册的。
 <p>
可以使用 class 字面值来指定 <code>listenerType</code> 参数，如 <code><em>Foo</em>Listener.class</code>。例如，可以使用下面的代码查询 <code>DefaultButtonModel</code> 实例 <code>m</code> 的操作侦听器：

 <pre>ActionListener[] als = (ActionListener[])(m.getListeners(ActionListener.class));</pre>

如果不存在这样的侦听器，则此方法将返回一个空数组。

@param listenerType 请求的侦听器类型；该参数应该指定一个从 <code>java.util.EventListener</code> 继承的接口
@return 在此模型上注册为 <code><em>Foo</em>Listener</code> 的所有对象组成的数组，如果没有添加这样的侦听器，则返回一个空数组
@exception ClassCastException 如果 <code>listenerType</code> 没有指定实现 <code>java.util.EventListener</code> 的类或接口

@see #getActionListeners
@see #getChangeListeners
@see #getItemListeners

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] javax.swing.DefaultButtonModel.getSelectedObjects()
<!-- END KEY -->
<!-- BEGIN DATA -->
重写以返回 <code>null</code>。
<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultButtonModel.setGroup(ButtonGroup group)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.ButtonGroup javax.swing.DefaultButtonModel.getGroup()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该按钮所属的组。通常用于单选钮，它们在其组中相互排斥。

@return 该按钮所属的 <code>ButtonGroup</code>

@since 1.3

<!-- END DATA -->
