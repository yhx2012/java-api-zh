<!-- BEGIN KEY -->
protected class javax.swing.JSpinner.AccessibleJSpinner extends javax.swing.JComponent.AccessibleJComponent implements javax.accessibility.AccessibleValue, javax.accessibility.AccessibleAction, javax.accessibility.AccessibleText, javax.accessibility.AccessibleEditableText, javax.swing.event.ChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>AccessibleJSpinner</code> 实现 <code>JSpinner</code> 类的可访问性支持。
@since 1.5 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JSpinner.AccessibleJSpinner()
<!-- END KEY -->
<!-- BEGIN DATA -->
AccessibleJSpinner 构造方法

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.stateChanged(ChangeEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
侦听器的目标已更改其状态时调用。

@param e 一个 <code>ChangeEvent</code> 对象。不能为 null。
@throws NullPointerException 如果参数为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.JSpinner.AccessibleJSpinner.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的职责。对象的职责是此对象的类的一般用途或用法。例如，按钮的职责是 AccessibleRole.PUSH_BUTTON。AccessibleRole 中提供了一些职责，组件开发人员可以在一组预定义职责中选择。这就使辅助技术能为各种交互的组件子类（例如，对所有充当按钮的组件使用 AccessibleRole.PUSH_BUTTON）以及区分行为各异的子类（例如，复选框 AccessibleRole.CHECK_BOX 和单选框 AccessibleRole.RADIO_BUTTON）提供一致的接口。
<p>注意 AccessibleRole 类也是可扩展的，因此如果预定义的职责集合不充分时，自定义组件的开发人员可以定义其自己的 AccessibleRole。

@return 描述该对象职责的 AccessibleRole 实例
@see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSpinner.AccessibleJSpinner.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象的可访问子级数。

@return  对象的可访问子级数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JSpinner.AccessibleJSpinner.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象的指定 Accessible 子级。Accessible 对象的 Accessible 子级是从 0 开始的，因此 Accessible 第一个子对象的索引为 0，第二个子对象的索引为 1，依此类推。

@param i 子级从 0 开始的索引
@return 对象的 Accessible 子级
@see #getAccessibleChildrenCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleAction javax.swing.JSpinner.AccessibleJSpinner.getAccessibleAction()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的可支持一个或多个操作的 AccessibleAction。 

@return 如果受对象支持，则返回 AccessibleAction；否则返回 null
@see AccessibleAction

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleText javax.swing.JSpinner.AccessibleJSpinner.getAccessibleText()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象相关联的可在显示器上表示的 AccessibleText。

@return 如果受对象支持，则返回 AccessibleText；否则返回 null
@see AccessibleText

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleValue javax.swing.JSpinner.AccessibleJSpinner.getAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的 AccessibleValue。 
 
@return 如果受对象支持，则返回 AccessibleValue；否则返回 null
@see AccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.swing.JSpinner.AccessibleJSpinner.getCurrentAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象数字形式的值。如果没有设置值，则返回值为 null。

@return 对象的值
@see #setCurrentAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JSpinner.AccessibleJSpinner.setCurrentAccessibleValue(Number n)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此对象的值设置为数字。

@param n 要设置此对象的值
@return 如果设置了值，则返回 true；否则返回 False
@see #getCurrentAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.swing.JSpinner.AccessibleJSpinner.getMinimumAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象数字形式的最小值。

@return 对象的最小值，如果此对象没有最小值，则返回 null
@see #getMaximumAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.swing.JSpinner.AccessibleJSpinner.getMaximumAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象数字形式的最大值。

@return 对象的最大值，如果此对象没有最大值，则返回 null
@see #getMinimumAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSpinner.AccessibleJSpinner.getAccessibleActionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象中可访问的操作数，如果多于一个，则第一个就被认为是此对象的&ldquo;默认&rdquo;操作。

支持两个操作：增加 spinner 值的 AccessibleAction.INCREMENT 和减少 spinner 值的 AccessibleAction.DECREMENT。

@return 此对象中从 0 开始的 Action 数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JSpinner.AccessibleJSpinner.getAccessibleActionDescription(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象指定操作的描述。

@param i 从 0 开始的操作索引
@return 操作的字符串描述
@see #getAccessibleActionCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JSpinner.AccessibleJSpinner.doAccessibleAction(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
对该对象执行指定的操作

@param i 从 0 开始的操作索引。第一个操作（索引为 0）是 AccessibleAction.INCREMENT 并且第二个操作（索引为 1）是 AccessibleAction.DECREMENT。
@return 如果执行操作则返回 true；否则返回 false。
@see #getAccessibleActionCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSpinner.AccessibleJSpinner.getIndexAtPoint(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
以本地坐标给定一个点，返回在该点处字符从 0 开始的索引。如果该点无效，则此方法返回 -1。

@param p 本地坐标中的点
@return 点 p 处字符从 0 开始的索引，如果该点无效则返回 -1。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Rectangle javax.swing.JSpinner.AccessibleJSpinner.getCharacterBounds(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定给定字符串索引处字符的边界。以本地坐标形式返回边界框。如果索引无效，则返回一个空的矩形。

@param i 对 String 的索引
@return 字符边界框的屏幕坐标，如果索引无效，则返回一个空矩形。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSpinner.AccessibleJSpinner.getCharCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回字符（有效索引）数。

@return 字符数

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSpinner.AccessibleJSpinner.getCaretPosition()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回从 0 开始的插入符号偏移量。

注：这表示插入符号的右边与偏移量（插入符号在两个字符之间）有相同的索引值。
@return 从 0 开始的插入符号偏移量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JSpinner.AccessibleJSpinner.getAtIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定索引处的 String。 

@param part 要检索的 CHARACTER、WORD 或 SENTENCE
@param index 文本中的一个索引
@return 字母、单词或句子

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JSpinner.AccessibleJSpinner.getAfterIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定索引后的 String。

@param part 要检索的 CHARACTER、WORD 或 SENTENCE
@param index 文本中的一个索引
@return 字母、单词或句子

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JSpinner.AccessibleJSpinner.getBeforeIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定索引前的 String。

@param part 要检索的 CHARACTER、WORD 或 SENTENCE
@param index 文本中的一个索引
@return 字母、单词或句子

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.JSpinner.AccessibleJSpinner.getCharacterAttribute(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定索引处给定字符的 AttributeSet

@param i 从 0 开始的文本索引
@return 字符的 AttributeSet

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSpinner.AccessibleJSpinner.getSelectionStart()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回选定文本中的开始偏移量。如果没有选项，但有一个插入符号，则开始和结尾偏移量是相同的。

@return 选择开始处对文本的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSpinner.AccessibleJSpinner.getSelectionEnd()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回选定文本中的结尾偏移量。如果没有选项，但有一个插入符号，则开始和结尾偏移量是相同的。

@return 选择结尾处对文本的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JSpinner.AccessibleJSpinner.getSelectedText()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回选中的部分文本。 

@return 选中文本的 String 部分。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.setTextContents(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
将文本内容设置为指定字符串。

@param s 要设置文本内容的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.insertTextAtIndex(int index, String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
在给定索引处插入指定的字符串。

@param index 将要插入字符串处的文本索引
@param s 要插入文本中的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JSpinner.AccessibleJSpinner.getTextRange(int startIndex, int endIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回两个索引之间的文本字符串。
 
@param startIndex 文本中的开始索引
@param endIndex 文本中的结尾索引
@return 两个索引之间的文本字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.delete(int startIndex, int endIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
删除两个索引之间的文本

@param startIndex 文本中的开始索引
@param endIndex 文本中的结尾索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.cut(int startIndex, int endIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
将两个索引之间的文本剪切到系统剪贴板中。

@param startIndex 文本中的开始索引
@param endIndex 文本中的结尾索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.paste(int startIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
将系统剪贴板中的文本粘贴到指定文本的文件开始处。

@param startIndex 文本中的开始索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.replaceText(int startIndex, int endIndex, String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
用指定的字符串替换两个索引之间的文本。

@param startIndex 文本中的开始索引
@param endIndex 文本中的结尾索引
@return 要替换两个索引之间文本的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.selectText(int startIndex, int endIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
选中两个索引之间的文本

@param startIndex 文本中的开始索引
@param endIndex 文本中的结尾索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSpinner.AccessibleJSpinner.setAttributes(int startIndex, int endIndex, AttributeSet as)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置两个索引之间文本的属性。

@param startIndex 文本中的开始索引
@param endIndex 文本中的结尾索引
@param as 属性集
@see AttributeSet

<!-- END DATA -->
