<!-- BEGIN KEY -->
public class javax.swing.JToggleButton extends javax.swing.AbstractButton implements javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
具有两个状态的（two-state）按钮的实现。<code>JRadioButton</code> 和 <code>JCheckBox</code> 类是此类的子类。有关如何使用按钮，请参阅 <em>The Java Tutorial</em> 中的 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/components/button.html">How to Use Buttons, Check Boxes, and Radio Buttons</a> 一节。
 <p>
通过 <code><a href="Action.html">Action</a></code> 可以配置按钮，并进行一定程度的控制。对按钮使用 <code>Action</code> 有许多直接配置按钮所不及的优点。有关更多信息，请参阅<a href="Action.html#buttonActions">支持 <code>Action</code> 的 Swing 组件</a>，可以在 <em>The Java Tutorial</em> 中的 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/misc/action.html">How
 to Use Actions</a> 一节找到更多信息。 
 <p>
<strong>警告：</strong>Swing 不是线程安全的。有关更多信息，请参阅　<a
 href="package-summary.html#threading">Swing's Threading Policy</a>。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

 @beaninfo
   attribute: isContainer false
 description: An implementation of a two-state button.
 
@see JRadioButton
@see JCheckBox
@version 1.59 12/19/03
@author Jeff Dinkins

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建最初未选定的切换按钮，不设置文本或图像。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton(Icon icon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个最初未选定的切换按钮，该按钮具有指定的图像但是没有文本。

@param icon  按钮应显示的图像

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton(Icon icon, boolean selected)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定图像和选择状态但没有文本的切换按钮。

@param icon  按钮应显示的图像
@param selected 如果为 true，则按钮最初是选定的；否则，按钮最初未选定

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton(String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定文本的未选定的切换按钮。

@param text  要在切换按钮上显示的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton(String text, boolean selected)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定文本和选择状态的切换按钮。

@param text  在切换按钮上显示的字符串
@param selected 如果为 true，则按钮最初是选定的；否则按钮最初未选定

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton(Action a)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个切换按钮，其属性从所提供的 Action 获取。

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton(String text, Icon icon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个最初未选定的切换按钮，该按钮具有指定的文本和图像。

@param text 在按钮上显示的字符串
@param icon 按钮应显示的图像

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToggleButton(String text, Icon icon, boolean selected)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定文本、图像和选择状态的切换按钮。

@param text 切换按钮的文本
@param icon  按钮应显示的图像
@param selected 如果为 true，则按钮最初是选定的；否则按钮最初未选定

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JToggleButton.updateUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
将 UI 属性重置为当前外观的值。

@see JComponent#updateUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JToggleButton.getUIClassID()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回指定了 l&f 类名称的字符串，其中 l&f 类呈现此组件。

@return String &quot;ToggleButtonUI&quot;
@see JComponent#getUIClassID
@see UIDefaults#getUI
 @beaninfo
  description: A string that specifies the name of the L&F class

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.JToggleButton.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 JToggleButton 的字符串表示形式。此方法仅在进行调试的时候使用，对于各个实现，所返回字符串的内容和格式可能有所不同。返回的字符串可能为空，但不可能为 <code>null</code>。
 
@return  此 JToggleButton 的字符串表示形式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JToggleButton.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此 JToggleButton 关联的 AccessibleContext。对于切换按钮，AccessibleContext 采用 AccessibleJToggleButton 的形式。必要时创建新的 AccessibleJToggleButton 实例。

@return 一个 AccessibleJToggleButton，它将充当此 JToggleButton 的 AccessibleContext
@beaninfo
       expert: true
  description: The AccessibleContext associated with this ToggleButton.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.swing.JToggleButton.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

有关 Swing 中序列化的更多信息，请参阅 JComponent 中的 readObject() 和 writeObject()。

<!-- END DATA -->
