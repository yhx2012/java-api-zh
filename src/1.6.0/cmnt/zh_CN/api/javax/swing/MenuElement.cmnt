<!-- BEGIN KEY -->
public interface javax.swing.MenuElement
<!-- END KEY -->
<!-- BEGIN DATA -->
可以放入菜单中的所有组件都应该实现此接口。此接口由 <code>MenuSelectionManager</code> 用来处理菜单层次结构中的选择和导航。

@version 1.12 12/19/03
@author Arnaud Weber

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.MenuElement.processMouseEvent(MouseEvent event, javax.swing.MenuElement[] path, MenuSelectionManager manager)
<!-- END KEY -->
<!-- BEGIN DATA -->
处理鼠标事件。<code>event</code> 是 <code>MouseEvent</code>，其源为接收元素的组件。<code>path</code> 是包括接收元素本身的菜单层次结构中接收元素的路径。<code>manager</code> 是菜单层次结构的 <code>MenuSelectionManager</code>。此方法应处理 <code>MouseEvent</code> 并根据需要通过使用 <code>MenuSelectionManager</code> 的 API 更改菜单选择。注：不必将事件转发到子组件。此操作可以通过 <code>MenuSelectionManager</code> 自动完成。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.MenuElement.processKeyEvent(KeyEvent event, javax.swing.MenuElement[] path, MenuSelectionManager manager)
<!-- END KEY -->
<!-- BEGIN DATA -->
处理键事件。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.MenuElement.menuSelectionChanged(boolean isIncluded)
<!-- END KEY -->
<!-- BEGIN DATA -->
在向菜单选择中添加或从中删除 <code>MenuElement</code> 时，由 <code>MenuSelectionManager</code> 调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.MenuElement[] javax.swing.MenuElement.getSubElements()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法应返回一个包含接收菜单元素的子元素的数组

@return MenuElements 的数组

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component javax.swing.MenuElement.getComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法应返回用于绘制接收元素的 java.awt.Component。返回的组件用于转换事件并检测事件是否位于 MenuElement 的组件中。

@return Component 值

<!-- END DATA -->
