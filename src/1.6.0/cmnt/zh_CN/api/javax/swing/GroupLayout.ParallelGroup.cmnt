<!-- BEGIN KEY -->
public class javax.swing.GroupLayout.ParallelGroup extends javax.swing.GroupLayout.Group
<!-- END KEY -->
<!-- BEGIN DATA -->
一个 {@code Group}，它对齐其子元素并确定其大小。{@code ParallelGroup} 以四种可能的方式对齐其子元素：沿基线、居中、固定在前端、固定在尾端。
<h3>基线</h3>
使其子元素沿基线对齐的 {@code ParallelGroup} 必须首先确定基线固定的位置。基线可以固定在组的顶部或底部。也就是说，基线和组开始位置之间的距离可以是一个恒定距离，或者组结束位置和基线之间的距离可以是一个恒定距离。可能的选择对应于 {@code BaselineResizeBehavior} 常量 {@link java.awt.Component.BaselineResizeBehavior#CONSTANT_ASCENT CONSTANT_ASCENT} 和 {@link java.awt.Component.BaselineResizeBehavior#CONSTANT_DESCENT CONSTANT_DESCENT}。
 <p>
基线锚点 (anchor) 可以由 {@code createBaselineGroup} 方法显式地指定，也可以根据元素来确定。如果没有显式地指定，那么如果所有带有基线以及向基线对齐的元素的基线调整大小行为都是 {@code CONSTANT_DESCENT}，则基线将固定在组的底部；否则，基线将固定在组的顶部。
 <p>
如果向基线对齐的元素的基线调整大小行为是 {@code CONSTANT_ASCENT} 或 {@code CONSTANT_DESCENT}，则它们是可调整大小的。基线调整大小行为是 {@code OTHER} 或 {@code CENTER_OFFSET} 的元素是不可调整大小的。
 <p>
基线是根据每个具有基线的元素的首选高度来计算的。使用以下算法来计算基线：{@code max(maxNonBaselineHeight, maxAscent + maxDescent)}，其中 {@code maxNonBaselineHeight} 是所有不具有基线或不沿基线对齐的元素中的最大高度。{@code maxAscent} 是所有具有基线并沿基线对齐的元素中的最大上升高度（基线）。{@code maxDescent} 是所有具有基线并沿基线对齐的元素中的最大下降高度（首选高度－基线）。
 <p>
使其元素沿基线对齐的 {@code ParallelGroup} 仅用于垂直轴。如果创建了一个基线组并沿水平轴使用它，那么在向 {@code GroupLayout} 请求最小大小、首选大小或最大大小，或者试图布置组件时，将抛出 {@code IllegalStateException}。
 <p>
没有向基线对齐并且大小小于 {@code ParallelGroup} 的元素以下面三种方式之一确定其位置：居中、固定在前端、固定在尾端。

<h3>无基线 {@code ParallelGroup}</h3>
用 {@code BASELINE} 以外的对齐方式创建的 {@code ParallelGroup} 将小于组大小的元素以下面三种方式之一进行对齐：居中、固定在前端、固定在尾端。
 <p>
前端是基于轴和 {@code ComponentOrientation} 的。对于垂直轴，往往顶边缘是前端，底边缘是尾端。当 {@code ComponentOrientation} 为 {@code LEFT_TO_RIGHT} 时，前端是左边缘，尾端是右边缘。{@code ComponentOrientation} 为 {@code RIGHT_TO_LEFT} 时则前端是右边缘，尾端是左边缘。根据添加元素时所使用的指定对齐方式来对齐子元素。如果没有指定对齐方式，则使用为 {@code ParallelGroup} 指定的对齐方式。
 <p>
要沿基线对齐元素，可以使用 {@code BASELINE} 对齐方式来 {@code createBaselineGroup} 或 {@code createParallelGroup}。如果组不是使用基线对齐方式创建的，那么在试图添加一个指定基线对齐方式的元素时将抛出 {@code IllegalArgumentException}。

@see #createParallelGroup()
@see #createBaselineGroup(boolean,boolean)
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addGroup(GroupLayout.Group group)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addComponent(Component component)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addComponent(Component component, int min, int pref, int max)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addGap(int pref)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addGap(int min, int pref, int max)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addGroup(GroupLayout.Alignment alignment, GroupLayout.Group group)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的对齐方式将 {@code Group} 添加到此 {@code ParallelGroup}。如果子元素小于 {@code Group}，则根据指定的对齐方式来对齐它。

@param alignment 对齐方式
@param group 要添加的 {@code Group}
@return 此 {@code ParallelGroup}
@throws IllegalArgumentException 如果 {@code alignment} 为 {@code null}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addComponent(Component component, GroupLayout.Alignment alignment)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的对齐方式将 {@code Component} 添加到此 {@code ParallelGroup}。

@param alignment 对齐方式
@param group 要添加的 {@code Component}
@return 此 {@code Group}
@throws IllegalArgumentException 如果 {@code alignment} 为 {@code null}

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup.addComponent(Component component, GroupLayout.Alignment alignment, int min, int pref, int max)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的对齐方式和大小将 {@code Component} 添加到此 {@code ParallelGroup}。

@param alignment 对齐方式
@param component 要添加的 {@code Component}
@param min 最小大小
@param pref 首选大小
@param max 最大大小
@throws IllegalArgumentException 如果 {@code alignment} 为 {@code null}
@return 此 {@code Group}

<!-- END DATA -->
