<!-- BEGIN KEY -->
public class javax.swing.JRadioButton extends javax.swing.JToggleButton implements javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
实现一个单选按钮，此按钮项可被选择或取消选择，并可为用户显示其状态。与 {@link ButtonGroup} 对象配合使用可创建一组按钮，一次只能选择其中的一个按钮。（创建一个 ButtonGroup 对象并用其 <code>add</code> 方法将 JRadioButton 对象包含在此组中。）
 <blockquote>
<strong>注：</strong>ButtonGroup 对象为逻辑分组，不是物理分组。要创建按钮面板，仍需要创建一个 {@link JPanel} 或类似的容器对象并将 {@link javax.swing.border.Border} 添加到其中以便将面板与周围的组件分开。
 </blockquote>
 <p>
通过 <code><a href="Action.html">Action</a></code> 可以配置按钮，并进行一定程度的控制。对按钮使用 <code>Action</code> 有许多直接配置按钮所不及的优点。有关更多信息，请参阅<a href="Action.html#buttonActions">支持 <code>Action</code> 的 Swing 组件</a>，可以在 <em>The Java Tutorial</em> 中的 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/misc/action.html">How
 to Use Actions</a> 一节找到更多信息。 
 <p>
有关更多内容，请参阅 <em>The Java Tutorial</em> 中的 <a href="http://java.sun.com/docs/books/tutorial/uiswing/components/button.html">How to Use Buttons, Check Boxes, and Radio Buttons</a>。
 <p>
<strong>警告：</strong>Swing 不是线程安全的。有关更多信息，请参阅 <a
 href="package-summary.html#threading">Swing's Threading
 Policy</a>。
 <p>
<strong>警告：</strong>此类的序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。
  
@beaninfo attribute: isContainer false description: A component which can display it's state as selected or deselected.

@see ButtonGroup
@see JCheckBox
@version 1.74 12/19/03
@author Jeff Dinkins

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个初始化为未选择的单选按钮，其文本未设定。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton(Icon icon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个初始化为未选择的单选按钮，其具有指定的图像但无文本。

@param icon  此按钮应显示的图像

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton(Action a)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个单选按钮，其属性来自提供的 Action。

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton(Icon icon, boolean selected)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个具有指定图像和选择状态的单选按钮，但无文本。
   
@param icon  此按钮应显示的图像
@param selected  如果为 true，按钮被初始化为选择；否则，按钮被初始化为未选择

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton(String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个具有指定文本的状态为未选择的单选按钮。
 
@param text  单选按钮上显示的字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton(String text, boolean selected)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个具有指定文本和选择状态的单选按钮。
 
@param text  单选按钮上显示的字符串
@param selected  如果为 true，按钮被初始化为选择；否则，按钮被初始化为未选择

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton(String text, Icon icon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个具有指定的文本和图像并初始化为未选择的单选按钮。

@param text  此单选按钮上显示的字符串
@param icon  此按钮应显示的图像

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JRadioButton(String text, Icon icon, boolean selected)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个具有指定的文本、图像和选择状态的单选按钮。

@param text  此单选按钮上显示的字符串
@param icon  此按钮应显示的图像

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JRadioButton.updateUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
将 UI 属性重置为当前外观对应的值。

@see JComponent#updateUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JRadioButton.getUIClassID()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回呈现此组件的 L&F 类的名称。

@return &quot;RadioButtonUI&quot; 字符串
@see JComponent#getUIClassID
@see UIDefaults#getUI
@beaninfo expert:true description: A string that specifies the name of the L&F class.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.JRadioButton.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 JRadioButton 的字符串表示形式。此方法仅在进行调试的时候使用，对于各个实现，所返回字符串的内容和格式可能有所不同。返回的字符串可能为空，但不可能为 <code>null</code>。
 
@return  此 JRadioButton 的字符串表示形式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JRadioButton.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此 JRadioButton 相关联的 AccessibleContext。对于 JRadioButton，AccessibleContext 采用 AccessibleJRadioButton 的形式。必要时创建新的 AccessibleJRadioButton 实例。

@return 一个 AccessibleJRadioButton，它将充当此 JRadioButton 的 AccessibleContext
@beaninfo expert:true description:The AccessibleContext associated with this Button

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.swing.JRadioButton.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

有关 Swing 中更多序列化的信息，请参阅 JComponent 中的 readObject() 和 writeObject()。

<!-- END DATA -->
