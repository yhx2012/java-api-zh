<!-- BEGIN KEY -->
public static class javax.swing.JTree.DynamicUtilTreeNode extends javax.swing.tree.DefaultMutableTreeNode
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>DynamicUtilTreeNode</code> 可以包装 vectors/hashtables/arrays/strings 并根据需要创建适当的子树节点。它是动态的，因为它在需要时才创建子节点。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.JTree.DynamicUtilTreeNode.hasChildren
<!-- END KEY -->
<!-- BEGIN DATA -->
此 <code>JTree</code> 是否具有子节点？目前未实现此属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object javax.swing.JTree.DynamicUtilTreeNode.childValue
<!-- END KEY -->
<!-- BEGIN DATA -->
用于创建子节点的值。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.JTree.DynamicUtilTreeNode.loadedChildren
<!-- END KEY -->
<!-- BEGIN DATA -->
是否已加载此子节点？
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JTree.DynamicUtilTreeNode(Object value, Object children)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定的对象作为其值并使用指定的子节点创建一个节点。对于允许子节点的节点，该子节点对象必须为对象数组、<code>Vector</code> 或 <code>Hashtable</code>（即使为空）。否则，该节点不允许有子节点。

@param value  作为新节点值的 <code>Object</code>
@param children 用于创建子节点的一组 <code>Object</code>、一个 <code>Vector</code> 或一个 <code>Hashtable</code>；如果指定了任何其他对象，或者该值为 <code>null</code>，则不允许此节点有子节点

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.JTree.DynamicUtilTreeNode.createChildren(DefaultMutableTreeNode parent, Object children)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>children</code> 中的所有子节点添加到父节点。如果 <code>children</code> 是一个数组或向量，则其添加的所有元素都是子级；否则，如果 <code>children</code> 是一个哈希表，则按照 <code>Enumeration</code> 返回它们的顺序添加所有键/值对。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JTree.DynamicUtilTreeNode.isLeaf()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此节点允许子节点，则返回 true。节点是否允许子节点取决于其创建方式。

@return 如果此节点允许子节点，则返回 true；否则返回 false
@see #JTree.DynamicUtilTreeNode

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JTree.DynamicUtilTreeNode.getChildCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回子节点数。

@return 子节点数

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.JTree.DynamicUtilTreeNode.loadChildren()
<!-- END KEY -->
<!-- BEGIN DATA -->
根据 <code>childValue</code> 加载子节点。如果 <code>childValue</code> 是一个 <code>Vector</code> 或数组，则每个元素都作为子节点添加；否则，如果 <code>childValue</code> 是一个 <code>Hashtable</code>，则按照 <code>Enumeration</code> 返回这些键的顺序添加每个键/值对。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.tree.TreeNode javax.swing.JTree.DynamicUtilTreeNode.getChildAt(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
必要时创建子类以加载此子节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration javax.swing.JTree.DynamicUtilTreeNode.children()
<!-- END KEY -->
<!-- BEGIN DATA -->
必要时创建子类以加载此子节点。

<!-- END DATA -->
