<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicLabelUI extends javax.swing.plaf.LabelUI implements java.beans.PropertyChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
LabelUI 的 Windows L&F 实现。此实现完全是静态的，即所有 JLabel 对象仅共享一种 UIView 实现。

@version 1.84 12/19/03
@author Hans Muller

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static javax.swing.plaf.basic.BasicLabelUI javax.swing.plaf.basic.BasicLabelUI.labelUI
<!-- END KEY -->
<!-- BEGIN DATA -->
默认 <code>BasicLabelUI</code> 实例。可以不使用此字段。要更改默认实例，请使用重写 <code>createUI</code> 方法的子类，并将该类名称置于默认表中 "LabelUI" 键之下。 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.plaf.basic.BasicLabelUI.layoutCL(JLabel label, FontMetrics fontMetrics, String text, Icon icon, Rectangle viewR, Rectangle iconR, Rectangle textR)
<!-- END KEY -->
<!-- BEGIN DATA -->
将调用转发到 SwingUtilities.layoutCompoundLabel()。此方法位于此处以便子类可执行特定于 Label 的布局，并可以使方法名简化一点。
 
@see SwingUtilities#layoutCompoundLabel

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicLabelUI.paintEnabledText(JLabel l, Graphics g, String s, int textX, int textY)
<!-- END KEY -->
<!-- BEGIN DATA -->
利用标签的前景色将 clippedText 绘制在 textX、textY 处。
 
@see #paint
@see #paintDisabledText

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicLabelUI.paintDisabledText(JLabel l, Graphics g, String s, int textX, int textY)
<!-- END KEY -->
<!-- BEGIN DATA -->
利用 background.lighter() 将 clippedText 绘制在 textX、textY 处，然后利用 background.darker() 向右下移动一个像素。
 
@see #paint
@see #paintEnabledText

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicLabelUI.paint(Graphics g, JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->

使用前景色绘制标签文本，如果标签不透明，则利用背景色绘制整个背景。Label 文本是由 paintEnabledText() 或 paintDisabledText() 绘制的。标签部分的位置由 layoutCL 计算。

@see #paintEnabledText
@see #paintDisabledText
@see #layoutCL

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicLabelUI.getMinimumSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
@return getPreferredSize(c)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicLabelUI.getMaximumSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
@return getPreferredSize(c)

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicLabelUI.getBaseline(JComponent c, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回基线。

 @throws NullPointerException {@inheritDoc}
 @throws IllegalArgumentException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component.BaselineResizeBehavior javax.swing.plaf.basic.BasicLabelUI.getBaselineResizeBehavior(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回一个枚举，它指示组件的基线如何随大小的改变而发生更改。

 @throws NullPointerException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
