<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicSplitPaneUI extends javax.swing.plaf.SplitPaneUI
<!-- END KEY -->
<!-- BEGIN DATA -->
SplitPaneUI 的基本 L&F 实现。

@version 1.80 05/18/04
@author Scott Violet
@author Steve Wilson
@author Ralph Kar

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static final java.lang.String javax.swing.plaf.basic.BasicSplitPaneUI.NON_CONTINUOUS_DIVIDER
<!-- END KEY -->
<!-- BEGIN DATA -->
用于非连续布局的分隔符通过此对象添加到拆分窗格。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static int javax.swing.plaf.basic.BasicSplitPaneUI.KEYBOARD_DIVIDER_MOVE_OFFSET
<!-- END KEY -->
<!-- BEGIN DATA -->
通过键盘上的光标键移动分隔符时移动的距离（相对）。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JSplitPane javax.swing.plaf.basic.BasicSplitPaneUI.splitPane
<!-- END KEY -->
<!-- BEGIN DATA -->
此实例为其提供外观的 JSplitPane 实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager javax.swing.plaf.basic.BasicSplitPaneUI.layoutManager
<!-- END KEY -->
<!-- BEGIN DATA -->
创建并放到拆分窗格中的 LayoutManager。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneUI.divider
<!-- END KEY -->
<!-- BEGIN DATA -->
此 JSplitPane 的分隔符的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicSplitPaneUI.propertyChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此 JSplitPane 的 PropertyChangeListener 的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.FocusListener javax.swing.plaf.basic.BasicSplitPaneUI.focusListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此 JSplitPane 的 FocusListener 的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneUI.dividerSize
<!-- END KEY -->
<!-- BEGIN DATA -->
拖动会话有效时分隔符的大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.plaf.basic.BasicSplitPaneUI.nonContinuousLayoutDivider
<!-- END KEY -->
<!-- BEGIN DATA -->
使用非连续布局时分隔符阴影的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.plaf.basic.BasicSplitPaneUI.draggingHW
<!-- END KEY -->
<!-- BEGIN DATA -->
如果任何一个子级（不包括 nonContinuousLayoutDivider）是重量级的，则在 startDragging 中设置 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneUI.beginDragDividerLocation
<!-- END KEY -->
<!-- BEGIN DATA -->
拖动会话开始时分隔符的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.upKey
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.downKey
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.leftKey
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.rightKey
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.homeKey
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.endKey
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.dividerResizeToggleKey
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardUpLeftListener
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardDownRightListener
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardHomeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardEndListener
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardResizeToggleListener
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用这种以前没有记录的字段。键绑定现在由 LookAndFeel 定义，有关更多详细信息，请参阅键绑定规范。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.plaf.ComponentUI javax.swing.plaf.basic.BasicSplitPaneUI.createUI(JComponent x)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 BasicSplitPaneUI 实例

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.installUI(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
安装 UI。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults()
<!-- END KEY -->
<!-- BEGIN DATA -->
安装 UI 默认值。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.installListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
安装 UI 的事件侦听器。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
安装 UI 的键盘动作。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallUI(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
卸载 UI。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults()
<!-- END KEY -->
<!-- BEGIN DATA -->
卸载 UI 默认值。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
卸载 UI 的事件侦听器。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
卸载 UI 的键盘动作。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建 JSplitPane UI 的 PropertyChangeListener。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.FocusListener javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建 JSplitPane UI 的 FocusListener。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用此方法。以前使用此方法的子类应改为创建包装 ActionListener 的 Action，再通过重写 <code>installKeyboardActions</code> 并将其置于 SplitPane 的 ActionMap 中来注册该 Action。有关进一步的细节，请参阅键绑定规范。
 <p>
创建侦听特定按键的 JSplitPane UI 的 ActionListener。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用此方法。以前使用此方法的子类应改为创建包装 ActionListener 的 Action，再通过重写 <code>installKeyboardActions</code> 并将其置于 SplitPane 的 ActionMap 中来注册该 Action。有关进一步的细节，请参阅键绑定规范。
 <p>
创建侦听特定按键的 JSplitPane UI 的 ActionListener。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用此方法。以前使用此方法的子类应改为创建包装 ActionListener 的 Action，再通过重写 <code>installKeyboardActions</code> 并将其置于 SplitPane 的 ActionMap 中来注册该 Action。有关进一步的细节，请参阅键绑定规范。
 <p>
创建侦听特定按键的 JSplitPane UI 的 ActionListener。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用此方法。以前使用此方法的子类应改为创建包装 ActionListener 的 Action，再通过重写 <code>installKeyboardActions</code> 并将其置于 SplitPane 的 ActionMap 中来注册该 Action。有关进一步的细节，请参阅键绑定规范。
 <p>
创建侦听特定按键的 JSplitPane UI 的 ActionListener。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用此方法。以前使用此方法的子类应改为创建包装 ActionListener 的 Action，再通过重写 <code>installKeyboardActions</code> 并将其置于 SplitPane 的 ActionMap 中来注册该 Action。有关进一步的细节，请参阅键绑定规范。
 <p>
创建侦听特定按键的 JSplitPane UI 的 ActionListener。

@deprecated 从 Java 2 platform v1.3 开始。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 JSplitPane 的方向。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation(int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 JSplitPane 的方向。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否将 JSplitPane 设置为使用连续布局。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
打开/关闭连续布局。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 JSplitPane 的最后拖动位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation(int l)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 JSplitPane 的最后拖动位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneUI.getDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回顶层 Component 之间的分隔符。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回默认的非连续布局分隔符，该分隔符是使用深灰色填充背景的 Canvas 的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component newDivider)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置要在将 splitPane 配置为非连续布局时使用的分隔符。此分隔符仅在拖动会话期间才能使用。建议传入重量级的组件。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component newDivider, boolean rememberSizes)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置要使用的分隔符。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回要在将 splitPane 配置为非连续布局时使用的分隔符。此分隔符仅在拖动会话期间才能使用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JSplitPane javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前包含此实例的拆分窗格。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建默认的分隔符。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
传递消息以重置首选大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setDividerLocation(JSplitPane jc, int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
将分隔符的位置设置到 location。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回分隔符的位置，该位置可能不同于拆分窗格认为分隔符所在的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取分隔符的最小位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取分隔符的最大位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren(JSplitPane jc, Graphics g)
<!-- END KEY -->
<!-- BEGIN DATA -->
在 JSplitPane 接收者将为绘制其子级提供外观后传递消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.paint(Graphics g, JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
传递消息以绘制外观。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回传入组件的首选大小，该大小将传递给当前布局管理器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回传入组件的最小大小，该大小将传递给当前布局管理器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回传入组件的最大大小，该大小将传递给当前布局管理器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.plaf.basic.BasicSplitPaneUI.getInsets(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 insets。该 insets 是从当前边框的边框 insets 返回的。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager()
<!-- END KEY -->
<!-- BEGIN DATA -->
基于方向重置布局管理器，并利用 invalidateLayout 传递其消息以拉入适当的 Component。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.startDragging()
<!-- END KEY -->
<!-- BEGIN DATA -->
应该在拖动会话开始、重置 lastDragLocation 和 dividerSize 之前传递消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo(int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
拖动会话期间传递消息以便将分隔符移动到传入位置。如果 continuousLayout 为 true，则重置位置并验证 splitPane。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo(int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
传递消息以完成拖动会话。如果非连续显示，则重置分隔符的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.3 开始，不再使用此方法。应该在分隔符上设置边框。
 <p>
返回一边的分隔符边框的宽度。

@deprecated 从 Java 2 平台 v1.3 开始，由在分隔符上设置边框取代。

<!-- END DATA -->
