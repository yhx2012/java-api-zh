<!-- BEGIN KEY -->
public class javax.swing.plaf.metal.DefaultMetalTheme extends javax.swing.plaf.metal.MetalTheme
<!-- END KEY -->
<!-- BEGIN DATA -->
提供 Java 外观原型的 {@code MetalTheme} 的一个具体实现，代码名称为“Steel”。有关更改默认主题的详细信息，请参阅 {@link MetalLookAndFeel#setCurrentTheme}。
 <p>
 {@code DefaultMetalTheme} 返回的所有颜色都是完全不透明的。

 <h3><a name="fontStyle"></a>字体样式</h3>

 {@code DefaultMetalTheme} 对许多控件使用黑体。要使所有控件（内部窗体标题栏和客户端已装饰窗体标题栏除外）使用无格式字体，可以执行以下操作之一：
 <ul>
 <li>将系统属性 <code>swing.boldMetal</code> 设置为 <code>false</code>。例如 <code>java&nbsp;-Dswing.boldMetal=false&nbsp;MyApp</code>。
 <li>将默认属性 <code>swing.boldMetal</code> 设置为 <code>Boolean.FALSE</code>。例如：<code>UIManager.put("swing.boldMetal",&nbsp;Boolean.FALSE);</code>
 </ul>
 默认属性 <code>swing.boldMetal</code>（如果已设置）优先于同名的系统属性。设置此默认属性后，需要重新安装 <code>MetalLookAndFeel</code>，并更新所有以前创建的窗口小部件的 UI。否则，结果是不确定的。以下代码说明了如何进行此操作： 
 <pre>
   // turn off bold fonts
   UIManager.put("swing.boldMetal", Boolean.FALSE);

   // re-install the Metal Look and Feel
   UIManager.setLookAndFeel(new MetalLookAndFeel());

   // Update the ComponentUIs for all Components. This
   // needs to be invoked for all windows.
   SwingUtilities.updateComponentTreeUI(rootComponent);
 </pre>
 <p>
<strong>警告：</strong>此类的序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@see MetalLookAndFeel
@see MetalLookAndFeel#setCurrentTheme
@version 1.27 03/03/04
@author Steve Wilson

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.metal.DefaultMetalTheme()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建并返回 {@code DefaultMetalTheme} 的一个实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.plaf.metal.DefaultMetalTheme.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此主题的名称。此方法返回 {@code "Steel"}。

 @return 此主题的名称

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getPrimary1()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 1 颜色。此方法返回 rgb 值分别为 102、102 和 153 的颜色。

 @return primary 1 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getPrimary2()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 2 颜色。此方法返回 rgb 值分别为 153、153、204 的颜色。

 @return  primary 2 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getPrimary3()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 3 颜色。此方法返回 rgb 值分别为 204、204、255 的颜色。

 @return primary 3 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSecondary1()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 secondary 1 颜色。此方法返回 rgb 值分别为 102、102 和 102 的颜色。

 @return  secondary 1 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSecondary2()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 secondary 2 颜色。此方法返回 rgb 值分别为 153、153 和 153 的颜色。

@return  secondary 2 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSecondary3()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 secondary 3 颜色。此方法返回 rgb 值分别为 204、204 和 204 的颜色。

 @return secondary 3 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getControlTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件文本字体。此方法返回 Dialog、12pt。如果如<a href="#fontStyle">字体样式</a>中所述启用了无格式字体，则字体样式为无格式的。否则，字体样式为黑体。
 
@return 控件文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSystemTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回系统文本字体。此方法返回 Dialog、12pt、无格式。

@return 系统文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getUserTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回用户文本字体。此方法返回 Dialog、12pt、无格式。
 
@return 用户文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getMenuTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单文本字体。此方法返回 Dialog、12pt。如果如<a href="#fontStyle">字体样式</a>中所述启用了无格式字体，则字体样式为无格式的。否则，字体样式为黑体。


@return 菜单文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getWindowTitleFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回窗口标题字体。此方法返回 Dialog、12pt、黑体。
 
@return 窗口标题字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSubTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回子文本字体。此方法返回 Dialog、10pt、无格式。
 
@return 子文本字体

<!-- END DATA -->
