<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicHTML extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
支持为 swing 组件提供 html 视图。它将简单的 html 字符串转换为 javax.swing.text.View 实现，它能呈现 html 并提供必需的布局语义。

@author  Timothy Prinzing
@version 1.27 04/07/06
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.plaf.basic.BasicHTML.propertyKey
<!-- END KEY -->
<!-- BEGIN DATA -->
存储为 JComponent 的客户端属性时用于 html 渲染器的键。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.plaf.basic.BasicHTML.documentBaseKey
<!-- END KEY -->
<!-- BEGIN DATA -->
存储为客户端属性以指示用作解析相关引用的基址的键。例如，假设要将图像保存在相对于代码路径的目录资源中，应该使用以下代码设置基址：
 <pre>
   jComponent.putClientProperty(documentBaseKey,
                                xxx.class.getResource(&quot;resources/&quot;));
 </pre>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.View javax.swing.plaf.basic.BasicHTML.createHTMLView(JComponent c, String html)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建给定组件和 html 字符串的 html 渲染器。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.plaf.basic.BasicHTML.getHTMLBaseline(View view, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回 html 渲染器的基线。 

 @param view 为其获取基线的视图
 @param w 为其获取基线的宽度 
 @param h 为其获取基线的高度 
 @throws IllegalArgumentException 如果宽度或高度 &lt; 0
 @return 基线；或者返回值 &lt; 0，指示没有合理的基线
 @see java.awt.FontMetrics
 @see javax.swing.JComponent#getBaseline(int,int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.plaf.basic.BasicHTML.isHTMLString(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
检查给定字符串以查看它是否应该在支持 html 呈现的非文本组件中触发 html 呈现逻辑。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.plaf.basic.BasicHTML.updateRenderer(JComponent c, String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
将给定文本的 HTML 渲染器隐藏在给定 JComponent 的客户端属性中。如果给定文本是<em>非 HTML</em>，则属性中的所有渲染器都将被清除掉。
 <p>
此方法对于静态（即共享）ComponentUI 实现十分有用，可以完全从 JComponent 中获取其状态。

<!-- END DATA -->
