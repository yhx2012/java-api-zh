<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicSliderUI extends javax.swing.plaf.SliderUI
<!-- END KEY -->
<!-- BEGIN DATA -->
SliderUI 的基本 L&F 实现。

@version 1.100 12/19/03
@author Tom Santos

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.plaf.basic.BasicSliderUI.isDragging()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果用户在拖动滑块，则返回 true。

@return 如果用户在拖动滑块，则返回 true
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSliderUI.getBaseline(JComponent c, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回基线。

 @throws NullPointerException {@inheritDoc}
 @throws IllegalArgumentException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component.BaselineResizeBehavior javax.swing.plaf.basic.BasicSliderUI.getBaselineResizeBehavior(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回一个枚举，它指示该组件的基线如何随大小的改变而发生更改。 

 @throws NullPointerException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.plaf.basic.BasicSliderUI.labelsHaveSameBaselines()
<!-- END KEY -->
<!-- BEGIN DATA -->
 如果标签表中的所有标签具有相同的基线，则返回 true。 

 @return 如果标签表中的所有标签具有相同的基线，则返回 true
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSliderUI.getTickLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取水平滑块的刻度区域的高度和垂直滑块的刻度区域的宽度。BasicSliderUI 使用返回值确定刻度区域矩形。如果要给刻度一些空间，则使此宽度大于所需宽度并使用 paintTicks() 远离边绘制刻度。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Integer javax.swing.plaf.basic.BasicSliderUI.getHighestValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回在标签表中有一个项的最大值。

 @return 在标签表中有一个项的最大值，或则返回 null。
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Integer javax.swing.plaf.basic.BasicSliderUI.getLowestValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回在标签表中有一个项的最小值。

 @return 在标签表中有一个项的最小值，或则返回 null。
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.plaf.basic.BasicSliderUI.getLowestValueLabel()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与标签表中的最高滑块值相对应的标签。
@see JSlider#setLabelTable

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.plaf.basic.BasicSliderUI.getHighestValueLabel()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与标签表中的最低滑块值相对应的标签。
@see JSlider#setLabelTable

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSliderUI.paintHorizontalLabel(Graphics g, int value, Component label)
<!-- END KEY -->
<!-- BEGIN DATA -->
为标签表中的每个标签调用此方法。用于绘制水平滑块的标签。已将图形转换为 labelRect.y。
@see JSlider#setLabelTable

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSliderUI.paintVerticalLabel(Graphics g, int value, Component label)
<!-- END KEY -->
<!-- BEGIN DATA -->
为标签表中的每个标签调用此方法。用于绘制垂直平滑块的标签。已将图形转换为 labelRect.x。
@see JSlider#setLabelTable

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSliderUI.scrollDueToClickInTrack(int dir)
<!-- END KEY -->
<!-- BEGIN DATA -->
在滑道（而非 thumb）中检测到 mousePressed 时调用此方法。默认行为按块滚动。可以重写此方法来阻止滚动或者添加其他行为。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSliderUI.yPositionForValue(int value, int trackY, int trackHeight)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回指定值的 y 位置。不对该参数进行检查。尤其是，如果 <code>trackHeight</code> 负数，则结果是不确定的。

 @param value 要获取其位置的滑块值
 @param trackY 滑道 y 原点 
 @param trackHeight 滑道高度
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSliderUI.valueForYPosition(int yPos)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给出 y 位置的值。如果 yPos 越过了滑道顶部或底部，则它会将该值设置为滑块的最小值或最大值，这一点取决于是否反转了滑块。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSliderUI.valueForXPosition(int xPos)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给出 x 位置的值。如果 xPos 越过了滑道左边或右边，则它会将该值设置为滑块的最小值或最大值，这一点取决于是否了反转滑块。

<!-- END DATA -->
