<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicComboPopup extends javax.swing.JPopupMenu implements javax.swing.plaf.basic.ComboPopup
<!-- END KEY -->
<!-- BEGIN DATA -->
此为 <code>ComboPopup</code> 接口的基本实现。
 
此类表示组合框的弹出部分的 UI。
 <p>
所有事件处理都是由利用 <code>createxxxListener()</code> 方法和内部类创建的侦听器类处理的。通过重写 <code>createxxxListener()</code> 方法，并提供自己的事件侦听器或者从此类提供的事件侦听器创建子类，可以更改此类的行为。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.78 03/05/04
@author Tom Santos
@author Mark Davidson

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JList javax.swing.plaf.basic.BasicComboPopup.list
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用访问器方法。

@see #getList
@see #createList

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JScrollPane javax.swing.plaf.basic.BasicComboPopup.scroller
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用创建方法。

@see #createScroller

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.plaf.basic.BasicComboPopup.valueIsAdjusting
<!-- END KEY -->
<!-- BEGIN DATA -->
从 Java 2 平台 v1.4 开始，不再使用这种以前没有记录的字段。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.mouseMotionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用访问器或创建方法。

@see #getMouseMotionListener
@see #createMouseMotionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.mouseListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用访问器或创建方法。

@see #getMouseListener
@see #createMouseListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.KeyListener javax.swing.plaf.basic.BasicComboPopup.keyListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用访问器或创建方法。

@see #getKeyListener
@see #createKeyListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListSelectionListener javax.swing.plaf.basic.BasicComboPopup.listSelectionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用创建方法。

@see #createListSelectionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.listMouseListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用创建方法。

@see #createListMouseListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.listMouseMotionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用创建方法。

@see #createListMouseMotionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicComboPopup.propertyChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用创建方法。

@see #createPropertyChangeListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListDataListener javax.swing.plaf.basic.BasicComboPopup.listDataListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用创建方法。

@see #createListDataListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ItemListener javax.swing.plaf.basic.BasicComboPopup.itemListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。可以改为使用创建方法。

@see #createItemListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.Timer javax.swing.plaf.basic.BasicComboPopup.autoscrollTimer
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护字段是特定于实现的。不要直接访问或重写。 

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.plaf.basic.BasicComboPopup.Handler javax.swing.plaf.basic.BasicComboPopup.handler
<!-- END KEY -->
<!-- BEGIN DATA -->
所有侦听器类的实现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicComboPopup.show()
<!-- END KEY -->
<!-- BEGIN DATA -->
ComboPopup.show() 的实现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicComboPopup.hide()
<!-- END KEY -->
<!-- BEGIN DATA -->
ComboPopup.hide() 的实现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JList javax.swing.plaf.basic.BasicComboPopup.getList()
<!-- END KEY -->
<!-- BEGIN DATA -->
ComboPopup.getList() 的实现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.getMouseListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
ComboPopup.getMouseListener() 的实现。
 
@return <code>MouseListener</code> 或 null
@see ComboPopup#getMouseListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.getMouseMotionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
ComboPopup.getMouseMotionListener() 的实现。

@return <code>MouseMotionListener</code> 或 null
@see ComboPopup#getMouseMotionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.KeyListener javax.swing.plaf.basic.BasicComboPopup.getKeyListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
ComboPopup.getKeyListener() 的实现。

@return <code>KeyListener</code> 或 null
@see ComboPopup#getKeyListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicComboPopup.uninstallingUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
卸载 UI 时调用。由于此弹出部分不在组件树中，因此其 uninstallUI() 不会被调用。它移除已添加在 addComboBoxListeners() 中的侦听器。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.uninstallComboBoxModelListeners(ComboBoxModel model)
<!-- END KEY -->
<!-- BEGIN DATA -->

从组合框模型中移除侦听器

@param model 要安装侦听器的组合框
@see #installComboBoxModelListeners

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.createMouseListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将观察组合框上的鼠标按下和释放事件的侦听器。
 
<strong>警告：</strong>重写此方法时，确保维护现有行为。

@return 将添加到组合框的 <code>MouseListener</code>，或者返回 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.createMouseMotionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将添加到组合框的鼠标移动侦听器。

<strong>警告：</strong>重写此方法时，确保维护现有行为。

@return 将添加到组合框的 <code>MouseMotionListener</code>，或者返回 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.KeyListener javax.swing.plaf.basic.BasicComboPopup.createKeyListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将添加到组合框的键侦听器。如果此方法返回 null，则不会将其添加到组合框。

@return <code>KeyListener</code> 的实例或 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListSelectionListener javax.swing.plaf.basic.BasicComboPopup.createListSelectionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建观察弹出列表中的选择更改的列表选择侦听器。如果此方法返回 null，则不会将其添加到弹出列表。

@return <code>ListSelectionListener</code> 的实例或 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListDataListener javax.swing.plaf.basic.BasicComboPopup.createListDataListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将添加到 <code>ComboBoxModel</code> 的列表数据侦听器。如果此方法返回 null，则不会将其添加到组合框模型。

@return <code>ListDataListener</code> 的实例或 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.createListMouseListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建观察弹出列表中的鼠标事件的鼠标侦听器。如果此方法返回 null，则不会将其添加到组合框。

@return <code>MouseListener</code> 的实例或 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.createListMouseMotionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建观察弹出列表中的鼠标移动事件的鼠标移动侦听器。如果此方法返回 null，则不会将其添加到组合框。

@return <code>MouseMotionListener</code> 的实例或 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicComboPopup.createPropertyChangeListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将添加到组合框的 <code>PropertyChangeListener</code>。如果此方法返回 null，则不会将其添加到组合框。
 
@return <code>PropertyChangeListener</code> 的实例或 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ItemListener javax.swing.plaf.basic.BasicComboPopup.createItemListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将添加到组合框的 <code>ItemListener</code>。如果此方法返回 null，则不会将其添加到组合框。
 <p>
子类可以重写此方法以返回其 ItemEvent 处理程序的实例。

@return <code>ItemListener</code> 的实例或 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JList javax.swing.plaf.basic.BasicComboPopup.createList()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建在显示组合框模型项的弹出控件中使用的 JList。创建 UI 类时调用此方法。

@return 用于显示组合框项的 <code>JList</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.configureList()
<!-- END KEY -->
<!-- BEGIN DATA -->
配置用于保存弹出部分中的组合框项的列表。创建 UI 类时调用此方法。

@see #createList

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.installListListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
将侦听器添加到列表控件。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JScrollPane javax.swing.plaf.basic.BasicComboPopup.createScroller()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建容纳可滚动列表的滚动窗格。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.configureScroller()
<!-- END KEY -->
<!-- BEGIN DATA -->
配置在组合框弹出控件中保存列表的可滚动部分。创建 UI 类时调用此方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.configurePopup()
<!-- END KEY -->
<!-- BEGIN DATA -->
配置组合框的弹出部分。创建 UI 类时调用此方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.installComboBoxListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法在 JComboBox 中添加必需的侦听器。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.installComboBoxModelListeners(ComboBoxModel model)
<!-- END KEY -->
<!-- BEGIN DATA -->

在组合框模型中安装侦听器。应该用 <code>uninstallComboBoxModelListeners</code> 移除添加到组合框模型上的所有侦听器。

@param model 要安装侦听器的组合框模型
@see #uninstallComboBoxModelListeners

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.plaf.basic.BasicComboPopup.isFocusTraversable()
<!-- END KEY -->
<!-- BEGIN DATA -->
重写以无条件返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.startAutoScrolling(int direction)
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护方法是特定于实现的，应该为私有，不要调用或重写。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.stopAutoScrolling()
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护方法是特定于实现的，应该为私有，不要调用或重写。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.autoScrollUp()
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护方法是特定于实现的，应该为私有，不要调用或重写。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.autoScrollDown()
<!-- END KEY -->
<!-- BEGIN DATA -->
此受保护方法是特定于实现的，应该为私有，不要调用或重写。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.plaf.basic.BasicComboPopup.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此 BasicComboPopup 关联的 AccessibleContext。将 AccessibleContext 的父级设置为 ComboBox。

@return 用于 BasicComboPopup 的 AccessibleContext
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.delegateFocus(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
此为一种实用程序方法，用于帮助事件处理程序计算出在调出弹出控件时将焦点发送到的位置。标准实现将焦点委托给编辑器（如果组合框可编辑）或者 JComboBox（如果组合框不可编辑）。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.togglePopup()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果弹出部分是隐藏的，则使其可见；如果它是可见的，则将其隐藏。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicComboPopup.getPopupHeightForRowCount(int maxRowCount)
<!-- END KEY -->
<!-- BEGIN DATA -->
基于当前 ListCellRenderer 和最大行数检索弹出部分的高度。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Rectangle javax.swing.plaf.basic.BasicComboPopup.computePopupBounds(int px, int py, int pw, int ph)
<!-- END KEY -->
<!-- BEGIN DATA -->
基于组合框的位置和封闭的屏幕界限计算组合框的弹出部分的位置和大小。如果不需要进行转换，则返回的矩形将具有相同的参数值。
 
@param px 初始 x 位置
@param py 初始 y 位置
@param pw 初始宽度
@param ph 初始高度
@return 表示弹出部分的位置和大小的矩形

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.updateListBoxSelectionForEvent(MouseEvent anEvent, boolean shouldScroll)
<!-- END KEY -->
<!-- BEGIN DATA -->
供事件侦听器使用的实用程序方法。如果给定鼠标事件，则其将列表选择更改为鼠标指针所在的列表项。

<!-- END DATA -->
