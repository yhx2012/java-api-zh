<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicTextAreaUI extends javax.swing.plaf.basic.BasicTextUI
<!-- END KEY -->
<!-- BEGIN DATA -->
为纯文本编辑器提供外观。在此实现中，扩展了默认的 UI 以充当简单的视图工厂。
 <p>
<strong>警告：</strong>此类的序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@author  Timothy Prinzing
@version 1.68 01/23/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.basic.BasicTextAreaUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的 BasicTextAreaUI 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.plaf.ComponentUI javax.swing.plaf.basic.BasicTextAreaUI.createUI(JComponent ta)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建 JTextArea 的 UI。

@param ta 文本区域
@return UI

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.plaf.basic.BasicTextAreaUI.getPropertyPrefix()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用作键以通过 UIManager 查找属性的名称。它用作所有标准文本属性的前缀。

@return 名称 (&quot;TextArea&quot;)

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicTextAreaUI.propertyChange(PropertyChangeEvent evt)
<!-- END KEY -->
<!-- BEGIN DATA -->
当关联的 JTextComponent 上有一个绑定 (bound) 属性改变时，此方法被调用。此为一个 (hook)，UI 实现可以更改它来反映 UI 显示 JTextComponent 子类的绑定属性的方式。当 <em>WrapLine</em> 或 <em>WrapStyleWord</em> 属性更改时，实现它以重新构建 View。

@param evt 属性更改事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicTextAreaUI.getPreferredSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
重写此方法以将插入符的宽度考虑在内。

@param c 编辑器组件
@return 首选大小
@throws IllegalArgumentException 如果传递了无效的值

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicTextAreaUI.getMinimumSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
重写此方法以将插入符的宽度考虑在内。

@param c 编辑器组件
@return 最小大小
@throws IllegalArgumentException 如果传递了无效的值

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.View javax.swing.plaf.basic.BasicTextAreaUI.create(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建元素的视图。返回 WrappedPlainView 或 PlainView。

@param elem 元素
@return 视图

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicTextAreaUI.getBaseline(JComponent c, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回基线。 

 @throws NullPointerException {@inheritDoc}
 @throws IllegalArgumentException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component.BaselineResizeBehavior javax.swing.plaf.basic.BasicTextAreaUI.getBaselineResizeBehavior(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回一个枚举，它指示组件的基线如何随大小的改变而发生更改。 

 @throws NullPointerException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
