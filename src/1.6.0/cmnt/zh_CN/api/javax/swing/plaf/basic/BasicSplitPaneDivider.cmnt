<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicSplitPaneDivider extends java.awt.Container implements java.beans.PropertyChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
BasicSplitPaneUI 使用的分隔符。子类可能希望重写 paint 以进行某些更有趣的操作。边框效果是在 BasicSplitPaneUI 中绘制的，所以如果不喜欢该边框，可以在那里重置。要有条件地从某些区域拖动，请为 mousePressed 创建子类并在希望开始拖动时调用 super。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.52 12/19/03
@author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static final int javax.swing.plaf.basic.BasicSplitPaneDivider.ONE_TOUCH_SIZE
<!-- END KEY -->
<!-- BEGIN DATA -->
基于 BasicSplitPaneUI 添加到它的两个方向的分隔符宽度和高度。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.basic.BasicSplitPaneDivider.DragController javax.swing.plaf.basic.BasicSplitPaneDivider.dragger
<!-- END KEY -->
<!-- BEGIN DATA -->
处理要进行实际拖动操作的鼠标拖动消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.plaf.basic.BasicSplitPaneDivider.splitPaneUI
<!-- END KEY -->
<!-- BEGIN DATA -->
从其创建此实例的 UI。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneDivider.dividerSize
<!-- END KEY -->
<!-- BEGIN DATA -->
分隔符的大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.plaf.basic.BasicSplitPaneDivider.hiddenDivider
<!-- END KEY -->
<!-- BEGIN DATA -->
用于非连续布局模式的分隔符。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JSplitPane javax.swing.plaf.basic.BasicSplitPaneDivider.splitPane
<!-- END KEY -->
<!-- BEGIN DATA -->
其中包含接收者的 JSplitPane。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler javax.swing.plaf.basic.BasicSplitPaneDivider.mouseHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
处理发自此类和拆分窗格的鼠标事件。为拆分窗格处理鼠标事件是因为在分隔符的边框上单击时希望能够拖动它，而该边框不是由分隔符绘制的。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneDivider.orientation
<!-- END KEY -->
<!-- BEGIN DATA -->
JSplitPane 的方向。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JButton javax.swing.plaf.basic.BasicSplitPaneDivider.leftButton
<!-- END KEY -->
<!-- BEGIN DATA -->
用于快速切换左边组件的按钮。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JButton javax.swing.plaf.basic.BasicSplitPaneDivider.rightButton
<!-- END KEY -->
<!-- BEGIN DATA -->
用于快速切换右边组件的按钮。

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.border.Border javax.swing.plaf.basic.BasicSplitPaneDivider.border
<!-- END KEY -->
<!-- BEGIN DATA -->
Border。
<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean javax.swing.plaf.basic.BasicSplitPaneDivider.mouseOver
<!-- END KEY -->
<!-- BEGIN DATA -->
鼠标是否位于分隔符上方？

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean javax.swing.plaf.basic.BasicSplitPaneDivider.centerOneTouchButtons
<!-- END KEY -->
<!-- BEGIN DATA -->
如果为 true，则单触式按钮在分隔符上居中。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.basic.BasicSplitPaneDivider(BasicSplitPaneUI ui)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建 BasicSplitPaneDivider 的实例。为鼠标事件和鼠标拖动事件注册此实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneDivider.setBasicSplitPaneUI(BasicSplitPaneUI newUI)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置要使用接收者的 SplitPaneUI。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.plaf.basic.BasicSplitPaneDivider.getBasicSplitPaneUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回接收者当前位于其中的 <code>SplitPaneUI</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneDivider.setDividerSize(int newSize)
<!-- END KEY -->
<!-- BEGIN DATA -->
将分隔符的大小设置为 <code>newSize</code>。如果拆分窗格为 <code>HORIZONTAL_SPLIT</code>，则此为宽度；拆分窗格为 <code>VERTICAL_SPLIT</code> 则其为高度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneDivider.getDividerSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回分隔符的大小。如果拆分窗格为 HORIZONTAL_SPLIT，则此为宽度；拆分窗格为 VERTICAL_SPLIT 则其为高度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneDivider.setBorder(Border border)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此组件的边框。
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.Border javax.swing.plaf.basic.BasicSplitPaneDivider.getBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此组件的边框，如果当前没有设置边框，则返回 null。

@return 此组件的边框对象
@see #setBorder
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.plaf.basic.BasicSplitPaneDivider.getInsets()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果已在此组件上设置了边框，则返回该边框的 insets；否则调用 super.getInsets。

@return insets 属性的值。
@see #setBorder

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneDivider.setMouseOver(boolean mouseOver)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置鼠标当前是否位于分隔符上。

@param mouseOver 鼠标当前是否位于分隔符上
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.plaf.basic.BasicSplitPaneDivider.isMouseOver()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回鼠标当前是否位于分隔符上

@return 鼠标当前是否位于分隔符上
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneDivider.getPreferredSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 dividerSize x dividerSize

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneDivider.getMinimumSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 dividerSize x dividerSize

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneDivider.propertyChange(PropertyChangeEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
属性更改事件（假定发自 JSplitPane）将在必要时传递 updateOrientation 的消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneDivider.paint(Graphics g)
<!-- END KEY -->
<!-- BEGIN DATA -->
绘制分隔符。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneDivider.oneTouchExpandableChanged()
<!-- END KEY -->
<!-- BEGIN DATA -->
当包含接收者的 JSplitPane 的 oneTouchExpandable 值发生更改时传递消息。将创建如果 <code>leftButton</code> 和 <code>rightButton</code> 为 null，则创建它们，同时使接收者无效。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JButton javax.swing.plaf.basic.BasicSplitPaneDivider.createLeftOneTouchButton()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建并返回 JButton 的实例，该实例可用于折叠拆分窗格中的左边组件。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JButton javax.swing.plaf.basic.BasicSplitPaneDivider.createRightOneTouchButton()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建并返回 JButton 的实例，该实例可用于折叠拆分窗格中的右边组件。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneDivider.prepareForDragging()
<!-- END KEY -->
<!-- BEGIN DATA -->
传递消息以准备拖动操作。它利用 startDragging 传递 BasicSplitPaneUI 的消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneDivider.dragDividerTo(int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
利用包含此实例的 dragDividerTo 传递 BasicSplitPaneUI 的消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneDivider.finishDraggingTo(int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
利用包含此实例的 finishDraggingTo 传递 BasicSplitPaneUI 的消息。

<!-- END DATA -->
