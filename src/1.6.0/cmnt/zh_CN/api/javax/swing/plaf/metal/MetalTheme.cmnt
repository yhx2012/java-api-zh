<!-- BEGIN KEY -->
public abstract class javax.swing.plaf.metal.MetalTheme extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
{@code MetalTheme} 提供 Java 外观所使用的调色板和字体。
<p>
 {@code MetalTheme} 是抽象的，有关具体实现，请参阅 {@code DefaultMetalTheme} 和 {@code OceanTheme}。
 <p>
 {@code MetalLookAndFeel} 维护 metal 的 {@code ComponentUI} 实现所使用的当前主题。有关更改当前主题的详细信息，请参阅 {@link MetalLookAndFeel#setCurrentTheme MetalLookAndFeel.setCurrentTheme(MetalTheme)}。
 <p>
 {@code MetalTheme} 提供获取颜色的多个公共方法。根据几个受保护的抽象方法实现这些方法。子类只需要重写受保护的抽象方法（{@code getPrimary1}、{@code getPrimary2}、{@code getPrimary3}、{@code getSecondary1}、{@code getSecondary2} 和 {@code getSecondary3}）；虽然子类也可以重写其他公共方法以对使用的颜色集进行更多控制。
 <p>
 {@code MetalTheme} 的具体实现必须从所有方法中返回{@code 非 null} 值。由于没有指定返回 {@code null} 的行为，所以返回 {@code null} 将导致不正确的行为。
 <p>
 建议子类最好返回完全不透明颜色。否则会导致呈现问题，比如可视化垃圾（visual garbage）。

@see DefaultMetalTheme
@see OceanTheme
@see MetalLookAndFeel#setCurrentTheme
@version 1.29 07/12/06
@author Steve Wilson

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String javax.swing.plaf.metal.MetalTheme.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此主题的名称。 

 @return 此主题的名称

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimary1()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 1 颜色。

 @return primary 1 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimary2()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 2 颜色。

 @return primary 2 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimary3()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 3 颜色。

 @return primary 3 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getSecondary1()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 secondary 1 颜色。

 @return secondary 1 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getSecondary2()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 secondary 2 颜色。

 @return secondary 2 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getSecondary3()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 secondary 3 颜色。

 @return secondary 3 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.plaf.FontUIResource javax.swing.plaf.metal.MetalTheme.getControlTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件文本字体。

@return 控件文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.plaf.FontUIResource javax.swing.plaf.metal.MetalTheme.getSystemTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回系统文本字体。

 @return 系统文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.plaf.FontUIResource javax.swing.plaf.metal.MetalTheme.getUserTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回用户文本字体。 

@return 用户文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.plaf.FontUIResource javax.swing.plaf.metal.MetalTheme.getMenuTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单文本字体。

 @return 菜单文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.plaf.FontUIResource javax.swing.plaf.metal.MetalTheme.getWindowTitleFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回窗口标题字体。

 @return 窗口标题字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.plaf.FontUIResource javax.swing.plaf.metal.MetalTheme.getSubTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回子文本字体。 

@return 子文本字体

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getWhite()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回白色。此方法返回不透明白色（{@code 0xFFFFFFFF}）。

 @return 白色

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getBlack()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回黑色。此方法返回不透明黑色（{@code 0xFF000000}）。

@return 黑色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getFocusColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回焦点颜色。此方法返回 {@code getPrimary2()} 的值。

 @return 焦点颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getDesktopColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回桌面颜色。此方法返回 {@code getPrimary2()} 的值。

 @return 桌面颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getControl()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件颜色。此方法返回 {@code getSecondary3()} 的值。

 @return 控件颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getControlShadow()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件阴影颜色。此方法返回 {@code getSecondary2()} 的值。

 @return 控件阴影颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getControlDarkShadow()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件加黑阴影颜色。此方法返回 {@code getSecondary1()} 的值。

 @return 控件加黑阴影颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getControlInfo()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件信息颜色。此方法返回 {@code getBlack()} 的值。

 @return 控件信息颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getControlHighlight()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件高亮显示颜色。此方法返回 {@code getWhite()} 的值。

 @return 控件高亮显示颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getControlDisabled()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件禁用的颜色。此方法返回 {@code getSecondary2()} 的值。

 @return 控件禁用的颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimaryControl()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 控件颜色。此方法返回 {@code getPrimary3()} 的值。

 @return  primary 控件颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimaryControlShadow()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 控件阴影颜色。此方法返回 {@code getPrimary2()} 的值。

 @return  primary 控件阴影颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimaryControlDarkShadow()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 控件加黑阴影颜色。此方法返回 {@code getPrimary1()} 的值。

 @return  primary 控件加黑阴影颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimaryControlInfo()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 控件信息颜色。此方法返回 {@code getBlack()} 的值。

 @return  primary 控件信息颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getPrimaryControlHighlight()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 primary 控件高亮显示颜色。此方法返回 {@code getWhite()} 的值。

 @return  primary 控件高亮显示颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getSystemTextColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回系统文本颜色。此方法返回 {@code getBlack()} 的值。

 @return 系统文本颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getControlTextColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回控件文本颜色。此方法返回 {@code getControlInfo()} 的值。

 @return 控件文本颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getInactiveControlTextColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回非活动控件文本颜色。此方法返回 {@code getControlDisabled()} 的值。

 @return 非活动控件文本颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getInactiveSystemTextColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回非活动系统文本颜色。此方法返回 {@code getSecondary2()} 的值。

 @return 非活动系统文本颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getUserTextColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回用户文本颜色。此方法返回 {@code getBlack()} 的值。

 @return 用户文本颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getTextHighlightColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回文本高亮显示的颜色。此方法返回 {@code getPrimary3()} 的值。

 @return 文本高亮显示的颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getHighlightedTextColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回高亮显示的文本颜色。此方法返回 {@code getControlTextColor()} 的值。

 @return 高亮显示的文本颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getWindowBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回窗口背景色。此方法返回 {@code getWhite()} 的值。

 @return 窗口背景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getWindowTitleBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回窗口标题背景色。此方法返回 {@code getPrimary3()} 的值。

 @return 窗口标题背景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getWindowTitleForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回窗口标题前景色。此方法返回 {@code getBlack()} 的值。

 @return 窗口标题前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getWindowTitleInactiveBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回窗口标题非活动背景色。此方法返回 {@code getSecondary3()} 的值。

 @return 窗口标题非活动背景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getWindowTitleInactiveForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回窗口标题非活动前景色。此方法返回 {@code getBlack()} 的值。

 @return 窗口标题非活动前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getMenuBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单背景色。此方法返回 {@code getSecondary3()} 的值。

 @return 菜单背景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getMenuForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单前景色。此方法返回 {@code getBlack()} 的值。

 @return 菜单前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getMenuSelectedBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单选中背景色。此方法返回 {@code getPrimary2()} 的值。

 @return 菜单选中背景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getMenuSelectedForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单选中前景色。此方法返回 {@code getBlack()} 的值。

 @return 菜单选中前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getMenuDisabledForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单禁用前景色。此方法返回 {@code getSecondary2()} 的值。

 @return 菜单禁用前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getSeparatorBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回分隔符背景色。此方法返回 {@code getWhite()} 的值。

 @return 分隔符背景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getSeparatorForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回分隔符前景色。此方法返回 {@code getPrimary1()} 的值。

 @return 分隔符前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getAcceleratorForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回加速器前景色。此方法返回 {@code getPrimary1()} 的值。

 @return 加速器前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.MetalTheme.getAcceleratorSelectedForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
 返回加速器选中前景色。此方法返回 {@code getBlack()} 的值。

 @return 加速器选中前景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.metal.MetalTheme.addCustomEntriesToTable(UIDefaults table)
<!-- END KEY -->
<!-- BEGIN DATA -->
将特定于此主题的值添加到默认表。从 {@code MetalLookAndFeel} 获取外观默认值时调用此方法。
 <p>
 此实现不执行任何操作；它用于要定制默认表的子类。

@param table 要向其中添加值的 {@code UIDefaults} 
@see MetalLookAndFeel#getDefaults

<!-- END DATA -->
