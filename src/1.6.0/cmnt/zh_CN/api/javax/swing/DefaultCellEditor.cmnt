<!-- BEGIN KEY -->
public class javax.swing.DefaultCellEditor extends javax.swing.AbstractCellEditor implements javax.swing.table.TableCellEditor, javax.swing.tree.TreeCellEditor
<!-- END KEY -->
<!-- BEGIN DATA -->
表单元格和树单元格的默认编辑器。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.50 12/19/03
@author Alan Chung
@author Philip Milne

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JComponent javax.swing.DefaultCellEditor.editorComponent
<!-- END KEY -->
<!-- BEGIN DATA -->
正被编辑的 Swing 组件。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.DefaultCellEditor.EditorDelegate javax.swing.DefaultCellEditor.delegate
<!-- END KEY -->
<!-- BEGIN DATA -->
处理从 <code>CellEditor</code> 发送的所有方法的委托类。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.DefaultCellEditor.clickCountToStart
<!-- END KEY -->
<!-- BEGIN DATA -->
指定开始编辑所需单击次数的整数。即使将 <code>clickCountToStart</code> 定义为零，也只有在发生单击后才能启动它。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.DefaultCellEditor(JTextField textField)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个使用文本字段的 <code>DefaultCellEditor</code>。

@param  textField 一个 <code>JTextField</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.DefaultCellEditor(JCheckBox checkBox)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个使用复选框的 <code>DefaultCellEditor</code> 对象。

@param  checkBox 一个 <code>JCheckBox</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.DefaultCellEditor(JComboBox comboBox)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个使用组合框的 <code>DefaultCellEditor</code> 对象。

@param  comboBox 一个 <code>JComboBox</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component javax.swing.DefaultCellEditor.getComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对编辑器组件的引用。

@return 编辑器 <code>Component</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultCellEditor.setClickCountToStart(int count)
<!-- END KEY -->
<!-- BEGIN DATA -->
指定开始编辑所需的单击次数。

@param count  指定开始编辑所需的单击次数的 int 值
@see #getClickCountToStart

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.DefaultCellEditor.getClickCountToStart()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回开始编辑所需的单击次数。
@return 开始编辑所需的单击次数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.DefaultCellEditor.getCellEditorValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
将消息从 <code>CellEditor</code> 转发到 <code>delegate</code>。
@see EditorDelegate#getCellEditorValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultCellEditor.isCellEditable(EventObject anEvent)
<!-- END KEY -->
<!-- BEGIN DATA -->
将消息从 <code>CellEditor</code> 转发到 <code>delegate</code>。
@see EditorDelegate#isCellEditable(EventObject)

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultCellEditor.shouldSelectCell(EventObject anEvent)
<!-- END KEY -->
<!-- BEGIN DATA -->
将消息从 <code>CellEditor</code> 转发到 <code>delegate</code>。
@see EditorDelegate#shouldSelectCell(EventObject)

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultCellEditor.stopCellEditing()
<!-- END KEY -->
<!-- BEGIN DATA -->
将消息从 <code>CellEditor</code> 转发到 <code>delegate</code>。
@see EditorDelegate#stopCellEditing

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultCellEditor.cancelCellEditing()
<!-- END KEY -->
<!-- BEGIN DATA -->
将消息从 <code>CellEditor</code> 转发到 <code>delegate</code>。
@see EditorDelegate#cancelCellEditing

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component javax.swing.DefaultCellEditor.getTreeCellEditorComponent(JTree tree, Object value, boolean isSelected, boolean expanded, boolean leaf, int row)
<!-- END KEY -->
<!-- BEGIN DATA -->
实现 <code>TreeCellEditor</code> 接口。
<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component javax.swing.DefaultCellEditor.getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column)
<!-- END KEY -->
<!-- BEGIN DATA -->
实现 <code>TableCellEditor</code> 接口。
<!-- END DATA -->
