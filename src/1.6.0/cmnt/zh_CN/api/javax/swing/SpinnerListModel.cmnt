<!-- BEGIN KEY -->
public class javax.swing.SpinnerListModel extends javax.swing.AbstractSpinnerModel implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->

其值由数组或 <code>List</code> 定义的 <code>SpinnerModel</code> 的简单实现。例如，创建一个由一周几天的名称数组定义的模型：
 <pre>
 String[] days = new DateFormatSymbols().getWeekdays();
 SpinnerModel model = new SpinnerListModel(Arrays.asList(days).subList(1, 8));
 </pre>
此类只存储对该数组或 <code>List</code> 的引用，所以，如果基础序列的元素发生变化，则应用程序有责任通过调用 <code>fireStateChanged</code> 通知 <code>ChangeListeners</code>。  
 <p>
此模型继承的是一个 <code>ChangeListener</code>。每当该模型的 <code>value</code> 或 <code>list</code> 属性发生变化时，就会通知 <code>ChangeListener</code>。
 
@see JSpinner
@see SpinnerModel
@see AbstractSpinnerModel
@see SpinnerNumberModel
@see SpinnerDateModel
 
@version 1.11 05/05/04
@author Hans Muller
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.SpinnerListModel(java.util.List<?> values)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个由指定 <code>List</code> 定义其值序列的 <code>SpinnerModel</code>。该模型的初始值（<i>当前元素</i>）将为 <code>values.get(0)</code>。如果 <code>values</code> 为 <code>null</code> 或具有零大小，则抛出一个 <code>IllegalArugmentException</code>。
 
@param values 此模型表示的序列
@throws IllegalArugmentException 如果 <code>values</code> 为 <code>null</code> 或零大小

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.SpinnerListModel(java.lang.Object[] values)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个由指定数组定义其值序列的 <code>SpinnerModel</code>。该模型的初始值将为 <code>values[0]</code>。如果 <code>values</code> 为 <code>null</code> 或具有零长度，则抛出一个 <code>IllegalArugmentException</code>。
 
@param values 此模型表示的序列
@throws IllegalArugmentException 如果 <code>values</code> 为 <code>null</code> 或零长度

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.SpinnerListModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个实际为空的 <code>SpinnerListModel</code>。该模型的列表将包含单个的 <code>&quot;empty&quot;</code> 字符串元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.List<?> javax.swing.SpinnerListModel.getList()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回定义此模型的序列的 <code>List</code>。
 
@return 该 <code>list</code> 属性的值
@see #setList

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.SpinnerListModel.setList(java.util.List<?> list)
<!-- END KEY -->
<!-- BEGIN DATA -->
更改定义此序列的列表，并将该模型 <code>value</code> 的索引重新设置为零。注意，不复制 <code>list</code>，该模型只存储对它的引用。
 <p>
如果 <code>list</code> 不等于当前列表，则此方法激发一个 <code>ChangeEvent</code>。
 
@param list 此模型表示的序列
@throws IllegalArgumentException 如果 <code>list</code> 为 <code>null</code> 或零长度
@see #getList

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.SpinnerListModel.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该序列的当前元素。
 
@return 该 <code>value</code> 属性
@see SpinnerModel#getValue
@see #setValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.SpinnerListModel.setValue(Object elt)
<!-- END KEY -->
<!-- BEGIN DATA -->
改变该序列的当前元素并通知 <code>ChangeListeners</code>。如果指定值不等于基础序列的元素，则抛出一个 <code>IllegalArgumentException</code>。在以下示例中，该 <code>setValue</code> 调用会抛出一个异常：
 <pre>
 String[] values = {&quot;one&quot;, &quot;two&quot;, &quot;free&quot;, &quot;four&quot;};
 SpinnerModel model = new SpinnerListModel(values);
 model.setValue(&quot;TWO&quot;);
 </pre>
 
@param elt 将作为模型当前值的序列元素
@throws IllegalArgumentException 如果不允许指定值
@see SpinnerModel#setValue
@see #getValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.SpinnerListModel.getNextValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回基础序列的下一个合法值，如果值已经是最后一个元素，则返回 <code>null</code>。
 
@return 该基础序列的下一个合法值，或返回 <code>null</code> 如果值已经是最后一个元素
@see SpinnerModel#getNextValue
@see #getPreviousValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.SpinnerListModel.getPreviousValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该基础序列的前一个元素，如果值已经是第一个元素，则返回 <code>null</code>。
 
@return 该基础序列的前一个元素，如果值已经是第一个元素，则返回 <code>null</code>
@see SpinnerModel#getPreviousValue
@see #getNextValue

<!-- END DATA -->
