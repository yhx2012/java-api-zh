<!-- BEGIN KEY -->
protected class javax.swing.JMenu.AccessibleJMenu extends javax.swing.JMenuItem.AccessibleJMenuItem implements javax.accessibility.AccessibleSelection
<!-- END KEY -->
<!-- BEGIN DATA -->
此类实现 <code>JMenu</code> 类的可访问性支持。它提供适合菜单用户界面元素的 Java Accessibility API 的实现。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JMenu.AccessibleJMenu.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该对象中可访问的子对象数。如果此对象的所有子级都实现 Accessible，则此方法应该返回此对象的子级数。

@return  对象的可访问子级数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JMenu.AccessibleJMenu.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象的第 n 个 Accessible 子对象。  

@param i 从零开始的子对象索引
@return 该对象的第 n 个 Accessible 子对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.JMenu.AccessibleJMenu.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的职责。

@return 描述该对象职责的 AccessibleRole 实例
@see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleSelection javax.swing.JMenu.AccessibleJMenu.getAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象相关联的 AccessibleSelection。在此类的 Java Accessibility API 的实现中，返回的是此对象，它负责为其本身实现 AccessibleSelection 接口。
 
@return 此对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JMenu.AccessibleJMenu.getAccessibleSelectionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果当前在此菜单中选择了子菜单，则返回 1。

@return 如果当前选择了菜单，则返回 1；否则返回 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JMenu.AccessibleJMenu.getAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前选择的子菜单（如果选择了），否则返回 null（只能选择一项并且只能选择子菜单，除非菜单项没有保持选中状态）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JMenu.AccessibleJMenu.isAccessibleChildSelected(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果选择了此对象的当前子对象（即此子对象为弹出子菜单），则返回 true。

@param i 此 Accessible 对象的子对象基于零的索引。
@see AccessibleContext#getAccessibleChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenu.AccessibleJMenu.addAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
选择菜单中的第 <code>i</code> 个菜单。如果该项为子菜单，则它将弹出以响应此方法。如果已经弹出了不同的项，则此操作将强制其关闭。如果此为已经弹出（已选择）的子菜单，则此方法无效。

@param i 要选择的项的索引
@see #getAccessibleStateSet

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenu.AccessibleJMenu.removeAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
从选择中移除第 n 个项。一般情况下，一次只能选择一个菜单中的项（如，打开一个弹出子菜单）。

@param i 所选项的从零开始的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenu.AccessibleJMenu.clearAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
清除对象中的选择，从而对象中没有选择任何项。此操作将关闭任何打开的子菜单。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenu.AccessibleJMenu.selectAllAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果对象支持多种选择，则通常导致选择对象中的所有选择项。此方法在菜单栏中没有意义，因此不执行任何操作。

<!-- END DATA -->
