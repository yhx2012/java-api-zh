<!-- BEGIN KEY -->
public class javax.swing.JToolTip extends javax.swing.JComponent implements javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
用来显示 Component 的“提示”。通常，组件提供 api，从而将使用 <code>ToolTip</code> 的过程自动化。例如，任何 Swing 组件都可以使用 <code>JComponent</code> <code>setToolTipText</code> 方法来指定一个标准的工具提示文本。需要创建自定义 <code>ToolTip</code> 显示的组件可以重写 <code>JComponent</code> 的 <code>createToolTip</code> 方法，并使用此类的一个子类。
 <p>
有关更多文档，请参阅 <em>The Java Tutorial</em> 中的 <a href="http://java.sun.com/docs/books/tutorial/uiswing/components/tooltip.html">How to Use Tool Tips</a> 一节。
 <p>
<strong>警告：</strong>Swing 不是线程安全的。有关更多信息，请参阅　<a
 href="package-summary.html#threading">Swing's Threading Policy</a>。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@see JComponent#setToolTipText
@see JComponent#createToolTip
@version 1.47 12/19/03
@author Dave Moore
@author Rich Shiavi

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToolTip()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个工具提示。
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ToolTipUI javax.swing.JToolTip.getUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回呈现此组件的 L&F 对象。

@return 呈现此组件的 <code>ToolTipUI</code> 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JToolTip.updateUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
将 UI 属性重置为当前外观的值。

@see JComponent#updateUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JToolTip.getUIClassID()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回呈现此组件的 L&F 类的名称。

@return 字符串 &quot;ToolTipUI&quot;
@see JComponent#getUIClassID
@see UIDefaults#getUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JToolTip.setTipText(String tipText)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置显示工具提示时要显示的文本。字符串 <code>tipText</code> 可以为 <code>null</code>。

@param tipText 要显示的 <code>String</code>
 @beaninfo
    preferred: true
        bound: true
  description: Sets the text of the tooltip

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JToolTip.getTipText()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回显示工具提示时所显示的文本。返回值可以为 <code>null</code>。

@return 显示的 <code>String</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JToolTip.setComponent(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
指定工具提示所描述的组件。组件 <code>c</code> 可以为 <code>null</code>，这时它将是无效的。
 <p>
这是一个绑定属性。

@param c 正在描述的 <code>JComponent</code>
@see JComponent#createToolTip
 @beaninfo
       bound: true
 description: Sets the component that the tooltip describes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JComponent javax.swing.JToolTip.getComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回工具提示所描述的组件。返回值可以为 <code>null</code>。

@return 工具提示所描述的组件

@see JComponent#createToolTip

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.JToolTip.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>JToolTip</code> 的字符串表示形式。此方法仅在进行调试的时候使用，对于各个实现，所返回字符串的内容和格式可能有所不同。返回的字符串可能为空，但不可能为 <code>null</code>。
 
@return  此 <code>JToolTip</code> 的字符串表示形式

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JToolTip.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此 JToolTip 关联的 AccessibleContext。对于工具提示，AccessibleContext 采用 AccessibleJToolTip 的形式。必要时创建新的 AccessibleJToolTip 实例。

@return 一个 AccessibleJToolTip，它充当此 JToolTip 的 AccessibleContext

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.swing.JToolTip.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

有关 Swing 中序列化的更多信息，请参阅 <code>JComponent</code> 中的 <code>readObject</code> 和 <code>writeObject</code>。

<!-- END DATA -->
