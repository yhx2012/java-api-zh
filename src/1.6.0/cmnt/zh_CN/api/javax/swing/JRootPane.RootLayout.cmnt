<!-- BEGIN KEY -->
protected class javax.swing.JRootPane.RootLayout extends java.lang.Object implements java.awt.LayoutManager2, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->

该自定义布局管理器负责 layeredPane、glassPane 和 menuBar 的布局。
 <p>
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参阅 {@link java.beans.XMLEncoder}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.JRootPane.RootLayout.preferredLayoutSize(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回布局要使用的空间量。

@param parent 为其使用此布局管理器的 Container
@return 包含此布局首选大小的 Dimension 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.JRootPane.RootLayout.minimumLayoutSize(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回布局需要的最小空间量。

@param parent 为其使用此布局管理器的 Container
@return 包含此布局最小大小的 Dimension 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.JRootPane.RootLayout.maximumLayoutSize(Container target)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回布局能够使用的最大空间量。

@param target 为其使用此布局管理器的 Container
@return 包含此布局最大大小的 Dimension 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JRootPane.RootLayout.layoutContainer(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
指示布局管理器为指定的容器执行布局。

@param parent 为其使用此布局管理器的 Container

<!-- END DATA -->
