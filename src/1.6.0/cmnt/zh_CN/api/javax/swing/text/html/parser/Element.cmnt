<!-- BEGIN KEY -->
public final class javax.swing.text.html.parser.Element extends java.lang.Object implements javax.swing.text.html.parser.DTDConstants, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
使用 ELEMENT 构造在 DTD 中描述的一个元素。这实质上是对标记的描述。它描述了类型、内容模式、属性和属性类型等。它用于由 Parser 正确解析一个文档。

@see DTD
@see AttributeList
@version 1.9, 12/19/03
@author Arthur van Hoff

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.text.html.parser.Element.data
<!-- END KEY -->
<!-- BEGIN DATA -->
存储用户数据的字段。通常用于存储样式表。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.html.parser.Element.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取元素的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.parser.Element.omitStart()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果可以忽略开始标记，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.parser.Element.omitEnd()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果可以忽略结束标记，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.html.parser.Element.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.ContentModel javax.swing.text.html.parser.Element.getContent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取内容模式

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.AttributeList javax.swing.text.html.parser.Element.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.html.parser.Element.getIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取索引。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.parser.Element.isEmpty()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查是否为空

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.html.parser.Element.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
转换为字符串。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.AttributeList javax.swing.text.html.parser.Element.getAttribute(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
按名称获取一个元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.AttributeList javax.swing.text.html.parser.Element.getAttributeByValue(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
按值获取一个属性。

<!-- END DATA -->
