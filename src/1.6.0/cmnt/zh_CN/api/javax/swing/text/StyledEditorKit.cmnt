<!-- BEGIN KEY -->
public class javax.swing.text.StyledEditorKit extends javax.swing.text.DefaultEditorKit
<!-- END KEY -->
<!-- BEGIN DATA -->
这是文本组件针对某些<em>类型</em> 的文本文档要成为合理发挥编辑器功能所需的实现集合。此实现提供了一个默认实现，该默认实现把文本当做样式化文本，并提供编辑样式化文本的最小操作集合。

@author  Timothy Prinzing
@version 1.45 02/04/04

<!-- END DATA -->
<!-- BEGIN KEY -->
 javax.swing.text.MutableAttributeSet javax.swing.text.StyledEditorKit.inputAttributes
<!-- END KEY -->
<!-- BEGIN DATA -->
这是用来存储输入属性的属性集。  

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.text.StyledEditorKit.AttributeTracker javax.swing.text.StyledEditorKit.inputAttributeUpdater
<!-- END KEY -->
<!-- BEGIN DATA -->
此侦听器将与 EditorKit 要在其上安装的文本组件的插入符相关联。这将保持输入属性的更新以供样式化操作使用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.StyledEditorKit()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建供样式化文档使用新的 EditorKit。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.MutableAttributeSet javax.swing.text.StyledEditorKit.getInputAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取该窗格的输入属性。当插入符移动并且没有选定项时，则输入属性将自动变化来反映当前插入符位置的字符属性。样式化编辑操作使用输入属性来执行其操作。

@return 属性集

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.StyledEditorKit.getCharacterAttributeRun()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取表示该插入符处当前运行的字符属性的元素。

@return 元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Action[] javax.swing.text.StyledEditorKit.getActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取编辑器的命令列表。此命令列表受超类支持，该超类是通过样式操作的本地定义的命令集合扩展的。

@return 命令列表

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Document javax.swing.text.StyledEditorKit.createDefaultDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个适合此编辑器类型的未初始化文本存储模型。

@return 模型

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.StyledEditorKit.install(JEditorPane c)
<!-- END KEY -->
<!-- BEGIN DATA -->
工具包安装到 JEditorPane 时调用。 

@param c 该 JEditorPane

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.StyledEditorKit.deinstall(JEditorPane c)
<!-- END KEY -->
<!-- BEGIN DATA -->
工具包从 JEditorPane 移除时调用。这可用于取消对任何所关联侦听器的注册。

@param c 该 JEditorPane

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.ViewFactory javax.swing.text.StyledEditorKit.getViewFactory()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取一个适合供由此包所产生的任何模型来产生视图的工厂。实现此方法来返回下列种类的元素的 View 实现。
 <ul>
 <li>AbstractDocument.ContentElementName
 <li>AbstractDocument.ParagraphElementName
 <li>AbstractDocument.SectionElementName
 <li>StyleConstants.ComponentElementName
 <li>StyleConstants.IconElementName
 </ul>

@return 工厂

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.text.StyledEditorKit.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建此编辑器工具包的一个副本。

@return 副本

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.StyledEditorKit.createInputAttributes(Element element, MutableAttributeSet set)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>element</code> 的 AttributeSet 键/值复制到 <code>set</code> 中。这操作不复制组件、图标或者元素名称属性。子类可能希望修改此处要复制什么，不复制什么。确保首先移除 <code>set</code> 中的所有属性。<p>
这在插入符移到一个不同位置时调用。

<!-- END DATA -->
