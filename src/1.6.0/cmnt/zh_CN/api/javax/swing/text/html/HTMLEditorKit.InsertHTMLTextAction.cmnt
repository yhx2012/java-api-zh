<!-- BEGIN KEY -->
public static class javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction extends javax.swing.text.html.HTMLEditorKit.HTMLTextAction
<!-- END KEY -->
<!-- BEGIN DATA -->
InsertHTMLTextAction 可用于将任意 HTML 字符串插入现有 HTML 文档。至少需要提供两个 HTML.Tag。第一个 Tag 是 parentTag，它标识要向其添加元素的文档中的父级。第二个 Tag 是 addTag，它标识在 HTML 字符串中所看到的、应该被添加到文档中的首个标记。要记住的一个重要问题是解析器将生成所有适当的标记，即使它们不在传入的 HTML 字符串中也是如此。<p>
例如，要创建一个动作，将一个表插入正文中。parentTag 应为 HTML.Tag.BODY，addTag 应为 HTML.Tag.TABLE，并且字符串可以类似于 &lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;。
<p>还有一个选项用来提供替换的 parentTag 和 addTag。如果在 offset 处没有 parentTag，则将检查它们。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.html
<!-- END KEY -->
<!-- BEGIN DATA -->
要插入的 HTML。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.parentTag
<!-- END KEY -->
<!-- BEGIN DATA -->
要在文档中检查的 Tag。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.addTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 HTML 中的 Tag（从此 Tag 开始添加标记）。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.alternateParentTag
<!-- END KEY -->
<!-- BEGIN DATA -->
如果未找到 parentTag，则要在文档中检查的替换 Tag。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.alternateAddTag
<!-- END KEY -->
<!-- BEGIN DATA -->
HTML 中的替换 Tag，如果未找到 parentTag 但找到了 alternateParentTag，则从此替换 Tag 开始添加标记。
<!-- END DATA -->
<!-- BEGIN KEY -->
 boolean javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.adjustSelection
<!-- END KEY -->
<!-- BEGIN DATA -->
如果为 true，则指示应该在插入后调整选择。
<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.insertHTML(JEditorPane editor, HTMLDocument doc, int offset, String html, int popDepth, int pushDepth, HTML.Tag addTag)
<!-- END KEY -->
<!-- BEGIN DATA -->
HTMLEditorKit.insertHTML 的一个覆盖。如果它抛出了一个异常，则将它包装到 RuntimeException 中并抛出。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.insertAtBoundary(JEditorPane editor, HTMLDocument doc, int offset, Element insertElement, String html, HTML.Tag parentTag, HTML.Tag addTag)
<!-- END KEY -->
<!-- BEGIN DATA -->
当在边界上插入时调用。它确定了弹出数，之后确定需要执行的压入数，然后调用 insertHTML。
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.insertAtBoundry(JEditorPane editor, HTMLDocument doc, int offset, Element insertElement, String html, HTML.Tag parentTag, HTML.Tag addTag)
<!-- END KEY -->
<!-- BEGIN DATA -->
当在边界上插入时调用。它确定了弹出数，之后确定需要执行的压入数，然后调用 insertHTML。
@deprecated 从 Java 2 平台 v1.3 开始，使用 insertAtBoundary

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.actionPerformed(ActionEvent ae)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 HTML 插入文档。

@param ae 事件

<!-- END DATA -->
