<!-- BEGIN KEY -->
public static class javax.swing.text.html.HTML.Tag extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
HTML 标记的类型安全的枚举。虽然 HTML 标记集合是一个封闭集合，但我们将此集合置于开放状态，以便用户可将自己的标记类型添加到其自定义解析器中，并且仍保持与 reader 的通信。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.text.html.HTML.Tag javax.swing.text.html.HTML.Tag.IMPLIED
<!-- END KEY -->
<!-- BEGIN DATA -->
所有文本内容必须包含在段落元素中。如果遇到内容时段落不存在，则构造一个段落。
 <p>
这是由 HTML reader 合成的标记。由于通过元素的标记类型来标识各个元素，所以我们创建某个伪标记类型来标记所构造的元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.text.html.HTML.Tag javax.swing.text.html.HTML.Tag.CONTENT
<!-- END KEY -->
<!-- BEGIN DATA -->
所有文本内容以此标记作为标签。
 <p>
这是由 HTML reader 合成的标记。由于通过元素的标记类型来标识各个元素，所以我们创建某个伪标记类型来标记所构造的元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.text.html.HTML.Tag javax.swing.text.html.HTML.Tag.COMMENT
<!-- END KEY -->
<!-- BEGIN DATA -->
所有注释以此标记作为标签。
 <p>
这是由 HTML reader 合成的标记。由于通过元素的标记类型来标识各个元素，所以我们创建某个伪标记类型来标记所构造的元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.HTML.Tag()
<!-- END KEY -->
<!-- BEGIN DATA -->
@since 1.3
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag(String id)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定 <code>id</code> 的新 <code>Tag</code>，且 <code>causesBreak</code> 和 <code>isBlock</code> 设置为 <code>false</code>。

@param id 新标记的 id

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag(String id, boolean causesBreak, boolean isBlock)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有指定 <code>id</code> 的新 <code>Tag</code>；<code>causesBreak</code> 和 <code>isBlock</code> 由用户定义。

@param id 新标记的 id
@param causesBreak  如果此标记导致数据流拆分，则为 <code>true</code>
@param isBlock 如果标记用于向文档添加结构，则为 <code>true</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.HTML.Tag.isBlock()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此标记是块标记（块标记是用于向文档添加结构的标记），则返回 <code>true</code>。
 
@return 如果此标记是块标记，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.HTML.Tag.breaksFlow()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此标记导致数据流换行，则返回 <code>true</code>；否则返回 <code>false</code>。
 
@return 如果此标记导致数据流换行，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.HTML.Tag.isPreformatted()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此标记是预格式化的，则返回 <code>true</code>，即如果此标记是 <code>PRE</code> 或 <code>TEXTAREA</code>，则为 true。

@return 如果此标记是预格式化的，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.html.HTML.Tag.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该标记的字符串表示形式。

@return 该标记的 <code>String</code> 表示形式

<!-- END DATA -->
