<!-- BEGIN KEY -->
public class javax.swing.text.html.FormView extends javax.swing.text.ComponentView implements java.awt.event.ActionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
实现表单元素、&lt;input&gt;、&lt;textarea&gt; 和 &lt;select&gt; 的视图接口的组件装饰符。组件模型存储为元素的属性（使用 StyleConstants.ModelAttribute），并用来构建视图的组件。模型类型假定为由 <code>HTMLDocument.HTMLReader.FormAction</code> 设置的类型。如果多个视图映射到文档，则它们将共享嵌入的组件模型。
 <p>
下表显示了此视图创建了哪些组件。
 <table summary="shows what components get built by this view">
 <tr>
<th>元素类型</th>
<th>构建的组件</th>
 </tr>
 <tr>
<td>输入，类型为 button</td>
<td>JButton</td>
 </tr>
 <tr>
<td>输入，类型为 checkbox</td>
<td>JCheckBox</td>
 </tr>
 <tr>
<td>输入，类型为 image</td>
<td>JButton</td>
 </tr>
 <tr>
<td>输入，类型为 password</td>
   <td>JPasswordField</td>
 </tr>
 <tr>
<td>输入，类型为 radio</td>
   <td>JRadioButton</td>
 </tr>
 <tr>
<td>输入，类型为 reset</td>
   <td>JButton</td>
 </tr>
 <tr>
<td>输入，类型为 submit</td>
   <td>JButton</td>
 </tr>
 <tr>
<td>输入，类型为 text</td>
   <td>JTextField</td>
 </tr>
 <tr>
<td>选择，size &gt; 1 或定义的多个属性</td>
<td>JScrollPane 中的 JList </td>
 </tr>
 <tr>
<td>选择，大小未指定或为 1</td>
   <td>JComboBox</td>
 </tr>
 <tr>
   <td>textarea</td>
<td>JScrollPane 中的 JTextArea</td>
 </tr>
 <tr>
<td>输入，类型为 file</td>
   <td>JTextField</td>
 </tr>
 </table>

@author Timothy Prinzing
@author Sunita Mani
@version 1.26 05/18/04

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.html.FormView.SUBMIT
<!-- END KEY -->
<!-- BEGIN DATA -->
如果没有为类型为 &quot;submit&quot; 的 FORM 输入元素指定值属性，则使用此默认字符串。

@deprecated 从 1.3 开始，将使用来自 UIManager property FormView.submitButtonText 的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.html.FormView.RESET
<!-- END KEY -->
<!-- BEGIN DATA -->
如果没有为类型为 &quot;reset&quot; 的 FORM 输入元素指定值属性，则使用此默认字符串。

@deprecated 从 1.3 开始，将使用来自 UIManager UIManager property FormView.resetButtonText 的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.FormView(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 FormView 对象。

@param elem 要修饰的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.text.html.FormView.createComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建组件。这基本上是基于标记类型和相关元素的 html 属性的一个大的 switch 语句。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.FormView.getMaximumSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某轴的最大区域。对于特定的组件，最大区域和首选区域是相同的。对于其他组件，这将返回 Component.getMaximumSize 沿所需轴所返回的值。

@param axis 可以是 View.X_AXIS 或 View.Y_AXIS
@return   视图可能要在其中呈现的区域，该值 &gt;= 0。通常会告知该视图在返回的区域中呈现，但不保证一定如此。父级可选择重新调整视图大小或拆分视图。
@exception IllegalArgumentException 如果轴无效

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.FormView.actionPerformed(ActionEvent evt)
<!-- END KEY -->
<!-- BEGIN DATA -->
负责处理 ActionEvent。如果与 FormView 关联的元素具有类型 &quot;submit&quot;、&quot;reset&quot;、&quot;text&quot; 或 &quot;password&quot;，则处理此操作。在类型为 &quot;submit&quot; 的情况下，将提交表单。在类型为 &quot;reset&quot; 的情况下，表单将被重置为其初始状态。在类型为 &quot;text&quot; 或 &quot;password&quot; 的情况下，如果元素是类型 &quot;text&quot; 或 &quot;password&quot; 的最后一个元素，则提交表单。否则，焦点将被传输到表单中的下一个组件。

@param evt the ActionEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.FormView.submitData(String data)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法负责提交表单数据。将分出一个线程来执行提交操作。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.FormView.imageSubmit(String imageData)
<!-- END KEY -->
<!-- BEGIN DATA -->
调用此方法来提交表单，以响应在图像上的单击，此图像是类型为 &quot;image&quot; 的 &lt;INPUT&gt; 表单元素。

@param imageData 鼠标单击坐标。

<!-- END DATA -->
