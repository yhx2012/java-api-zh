<!-- BEGIN KEY -->
public interface javax.swing.text.Element
<!-- END KEY -->
<!-- BEGIN DATA -->
描述文档的结构元素的接口。主要是为了体现 SGML 元素的精髓。

@author  Timothy Prinzing
@version 1.23 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Document javax.swing.text.Element.getDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此元素关联的文档。

@return 文档

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.Element.getParentElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得父元素。如果该元素为根元素，则返回 <code>null</code>。

@return 父元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.Element.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取元素的名称。如果该元素用于表示某些类型的结构，这将是类型名。

@return 元素名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.Element.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此元素包含的属性集合。

@return 元素的属性

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.Element.getStartOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此元素开始处的文档起始偏移量。如果此元素有子级，这将是其第一个子级的偏移量。至于文档位置，则可能存在向前的偏差。

@return 起始偏移量，该值 &gt;= 0 且 &lt; getEndOffset()；
@see Document
@see AbstractDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.Element.getEndOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此元素结束处的文档起始偏移量。如果此元素有子级，这将是其最后一个子级的结束偏移量。至于文档位置，则可能存在向后的偏差。
 <p>
所有默认的 <code>Document</code> 实现都继承自 <code>AbstractDocument</code>。<code>AbstractDocument</code> 在文档的结束处模仿了一个暗含的中断。因此，它有可能返回一个大于文档长度的值。
 
@return 结束偏移量，该值 &gt; getStartOffset() 且 &lt;= getDocument().getLength() + 1
@see Document
@see AbstractDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.Element.getElementIndex(int offset)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得离给定偏移量最近的子元素索引。偏移量的指定是相对于文档起始处的。如果 <code>Element</code> 是叶元素，则返回 <code>-1</code>；否则返回最能代表给定位置的 <code>Element</code> 索引。如果位置小于起始偏移量，则返回 <code>0</code>。如果位置大于或等于结束偏移量，则返回 <code>getElementCount() - 1</code>。

@param offset 指定的偏移量，该值 &gt;= 0
@return 元素索引，该值 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.Element.getElementCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得此元素包含的子元素数。如果此元素是叶元素，则返回零。

@return 子元素数，该值 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.Element.getElement(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取给定索引处的子元素。

@param index 指定的索引，该值 &gt;= 0
@return 子元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.Element.isLeaf()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此元素是否为叶元素。<i>可能</i> 有子级的元素（即便现在还没有子级）将返回 <code>false</code>。

@return 如果为叶元素，则返回 true；否则返回 false

<!-- END DATA -->
