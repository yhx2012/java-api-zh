<!-- BEGIN KEY -->
public class javax.swing.text.LabelView extends javax.swing.text.GlyphView implements javax.swing.text.TabableView
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>LabelView</code> 是一个样式化文本存储块，它表示映射文本模型中某个元素的视图。它缓存用于呈现的字符级属性。

@author Timothy Prinzing
@version 1.68 06/28/04

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.LabelView(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造在元素上包装的新视图。

@param elem  元素

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.LabelView.setUnderline(boolean u)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置视图是否加下划线。注意，此 setter 受保护，其真正意图仅为确定是否需要在设置时更新某些附加状态。

@param u  如果视图加下划线，则为 true；否则为 false
@see #isUnderline

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.LabelView.setStrikeThrough(boolean s)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置视图是否具有删除线。注意，此 setter 受保护，其真正意图仅为确定是否需要在设置时更新某些附加状态。

@param s  如果视图有删除线，则为 true；否则为 false
@see #isStrikeThrough

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.LabelView.setSuperscript(boolean s)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置视图是否有上标。注意，此 setter 受保护，其真正意图仅为确定是否需要在设置时更新某些附加状态。

@param s 如果视图有上标，则为 true；否则为 false
@see #isSuperscript

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.LabelView.setSubscript(boolean s)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置视图是否有下标。注意，此 setter 受保护，其真正意图仅为确定是否需要在设置时更新某些附加状态。

@param s 如果视图有下标，则为 true；否则为 false
@see #isSubscript

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.LabelView.setBackground(Color bg)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置视图的背景色。此方法通常作为配置此 <code>View</code> 的一部分调用。如果需要自定义背景色，则应重写 <code>setPropertiesFromAttributes</code> 并调用此方法。null 值指示不应呈现背景，这样将始终显示父级 <code>View</code> 的背景。

@param bg  背景色，或 null
@see #setPropertiesFromAttributes
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.LabelView.setPropertiesFromAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性集设置缓存的属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.FontMetrics javax.swing.text.LabelView.getFontMetrics()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于此视图的 <code>FontMetrics</code>。
@deprecated FontMetrics 不用于在 JDK 中运行时的字形呈现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.text.LabelView.getBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于呈现字形的背景色。实现此方法以返回缓存的背景色，该颜色默认为 <code>null</code>。
@since 1.3

@return  缓存的背景色

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.text.LabelView.getForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于呈现字形的前景色。实现此方法以返回缓存的前景色，该颜色默认为 <code>null</code>。

@return  缓存的前景色
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Font javax.swing.text.LabelView.getFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取字形应该以其为依据的字体。实现此方法以返回缓存的字体。

@return  缓存的字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.LabelView.isUnderline()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定字形是否应加下划线。如果为 true，则应通过基线绘制下划线。实现此方法以返回缓存的 underline 属性。

<p>当请求此属性时，<code>LabelView</code> 会重新将其状态与 <code>Element</code> 的 <code>AttributeSet</code> 属性同步。如果 <code>Element</code> 的 <code>AttributeSet</code> 没有此属性设置，则它将转换为 false。

@return  缓存的 <code>underline</code> 属性的值
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.LabelView.isStrikeThrough()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定字形是否应该有删除线。如果为 true，则会通过字形的中心划线。实现此方法以返回缓存的 <code>strikeThrough</code> 属性。

<p>当请求此属性时，<code>LabelView</code> 会重新将其状态与 <code>Element</code> 的 <code>AttributeSet</code> 属性同步。如果 <code>Element</code> 的 <code>AttributeSet</code> 没有此属性设置，则它将转换为 false。

@return  缓存的 <code>strikeThrough</code> 属性的值
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.LabelView.isSubscript()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定字形是否应该呈现为上标。
@return  缓存的 subscript 属性的值

<p>当请求此属性时，<code>LabelView</code> 会重新将其状态与 <code>Element</code> 的 <code>AttributeSet</code> 属性同步。如果 <code>Element</code> 的 <code>AttributeSet</code> 没有此属性设置，则它将转换为 false。

@return  缓存的 <code>subscript</code> 属性的值
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.LabelView.isSuperscript()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定字形是否应该呈现为下标。

<p>当请求此属性时，<code>LabelView</code> 会重新将其状态与 <code>Element</code> 的 <code>AttributeSet</code> 属性同步。如果 <code>Element</code> 的 <code>AttributeSet</code> 没有此属性设置，则它将转换为 false。

@return  缓存的 <code>superscript</code> 属性的值
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.LabelView.changedUpdate(DocumentEvent e, Shape a, ViewFactory f)
<!-- END KEY -->
<!-- BEGIN DATA -->
发出通知，通知文档此视图负责的位置处的属性已更改。

@param e 来自相关文档的更改信息
@param a 视图的当前分配区域
@param f 用于重建的工厂（如果该视图有子级）
@see View#changedUpdate

<!-- END DATA -->
