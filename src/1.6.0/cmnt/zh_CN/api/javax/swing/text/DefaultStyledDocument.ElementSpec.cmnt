<!-- BEGIN KEY -->
public static class javax.swing.text.DefaultStyledDocument.ElementSpec extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
构建元素的规范。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.StartTagType
<!-- END KEY -->
<!-- BEGIN DATA -->
getType 的可能值。它指定此记录类型为开始标记，同时表示指定元素开始的标记。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.EndTagType
<!-- END KEY -->
<!-- BEGIN DATA -->
getType 的可能值。它指定此记录类型为结束标记，同时表示指定元素结束的标记。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.ContentType
<!-- END KEY -->
<!-- BEGIN DATA -->
getType 的可能值。它指定此记录类型表示内容。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.JoinPreviousDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
getDirection 的可能值。它指定与此记录关联的数据应与位于它之前的元素连接。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.JoinNextDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
getDirection 的可能值。它指定与此记录关联的数据应与跟随它的元素连接。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.OriginateDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
getDirection 的可能值。它指定与此记录关联的数据应用于生成新元素。这将是正常的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.JoinFractureDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
getDirection 的可能值。它指定与此记录关联的数据应与离散的元素连接。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet a, short type)
<!-- END KEY -->
<!-- BEGIN DATA -->
当标记不在文档中存储时供标记使用的构造方法。

@param a 元素的属性
@param type 元素类型（StartTagType、EndTagType 和 ContentType）

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet a, short type, int len)
<!-- END KEY -->
<!-- BEGIN DATA -->
供文档内部解析使用的构造方法，在数据已添加但还需要 len 信息时使用。

@param a 元素的属性
@param type 元素类型（StartTagType、EndTagType 和 ContentType）
@param len 长度，该长度 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet a, short type, char[] txt, int offs, int len)
<!-- END KEY -->
<!-- BEGIN DATA -->
用于外部创建规范的构造方法，供批量输入内容和标记到文档中。

@param a 元素的属性
@param type 元素类型（StartTagType、EndTagType 和 ContentType）
@param txt 元素的文本
@param offs 文本偏移量，该偏移量 &gt;= 0
@param len 文本长度，该长度 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementSpec.setType(short type)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置元素类型。

@param type 元素类型（StartTagType、EndTagType 和 ContentType）

<!-- END DATA -->
<!-- BEGIN KEY -->
public short javax.swing.text.DefaultStyledDocument.ElementSpec.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得元素类型。

@return  元素类型（StartTagType、EndTagType 和 ContentType）

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementSpec.setDirection(short direction)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置方向。

@param direction 方向（JoinPreviousDirection、JoinNextDirection）

<!-- END DATA -->
<!-- BEGIN KEY -->
public short javax.swing.text.DefaultStyledDocument.ElementSpec.getDirection()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得方向。

@return 方向（JoinPreviousDirection 和 JoinNextDirection）

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.DefaultStyledDocument.ElementSpec.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得元素属性。

@return 属性集

<!-- END DATA -->
<!-- BEGIN KEY -->
public char[] javax.swing.text.DefaultStyledDocument.ElementSpec.getArray()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得字符数组。

@return 数组

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.DefaultStyledDocument.ElementSpec.getOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得起始偏移量。

@return 偏移量，该偏移量 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.DefaultStyledDocument.ElementSpec.getLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得长度。

@return 长度，该长度 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.DefaultStyledDocument.ElementSpec.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
将元素转换为字符串。

@return 字符串

<!-- END DATA -->
