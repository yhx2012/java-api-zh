<!-- BEGIN KEY -->
public interface javax.swing.text.Caret
<!-- END KEY -->
<!-- BEGIN DATA -->
文档视图中的一个位置，它表示文档模型中能插入其他内容的位置。插入符在文档中有一个称作点的位置。点就是插入符当前在模型中的位置。插入符还保留一个位置，它表示选定项的另一端，称为标记。如果没有选定项，点和标记将相等。如果存在选定项，这两个值将不相同。
 <p>
通过调用 <code>setDot</code> 或 <code>moveDot</code> 可以放置点。设置点能够移除任何以前存在的选定项。点和标记将相等。移动点将能够创建选定项，而标记将保留在它以前所在的任何位置。

@author  Timothy Prinzing
@version 1.30 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.install(JTextComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
在将 UI 安装到 JTextComponent 的接口中时调用。使用它可以获得对正由此接口的实现导航的模型的访问。 

@param c JTextComponent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.deinstall(JTextComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
在将 UI 从 JTextComponent 的接口中移除时调用。这可用于取消对任何所关联侦听器的注册。

@param c JTextComponent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.paint(Graphics g)
<!-- END KEY -->
<!-- BEGIN DATA -->
呈现插入符。UI 类调用此方法。

@param g 图形上下文

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.addChangeListener(ChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
添加作为跟踪任何插入符位置更改的侦听器。

@param l 更改侦听器

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.removeChangeListener(ChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
移除跟踪插入符位置更改的侦听器。

@param l 更改侦听器

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.Caret.isVisible()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定插入符当前是否可见。

@return 如果插入符可见，则返回 true；否则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.setVisible(boolean v)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置插入符的可见性。

@param v  如果插入符应该显示，则返回 true；如果插入符应该隐藏，则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.Caret.isSelectionVisible()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定选定项当前是否可见。

@return 如果插入符可见，则返回 true；否则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.setSelectionVisible(boolean v)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置选定项的可见性

@param v  如果插入符应该显示，则返回 true；如果插入符应该隐藏，则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.setMagicCaretPosition(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置当前插入符的可视位置。这可供在具有不规则结束位置的行间（例如，插入符出现上下移动）移动时使用。如果文本按从左到右或从右到左流入，x 坐标将指示垂直移动所需要的导航位置。如果文本按从上到下或从下到上流入，y 坐标将指示水平移动所需要的导航位置。

@param p  用于所保存位置的 Point。它可以为 null，表示无可见位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Point javax.swing.text.Caret.getMagicCaretPosition()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取当前插入符可见位置。 

@return 可见位置。
@see #setMagicCaretPosition

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.setBlinkRate(int rate)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置插入符的闪烁率。它确定了插入符是否闪烁以及闪烁的速度，通常作为增强插入符的吸引力的一种手段使用。

@param rate  延迟的毫秒数，该值 &gt;= 0。如果该值为零，则插入符不闪烁。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.Caret.getBlinkRate()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取插入符的闪烁率。它确定了插入符是否闪烁以及闪烁的速度，通常作为增强插入符的吸引力的一种手段使用。

@return 延迟的毫秒数，该值 &gt;= 0。  如果该值为零，则插入符不闪烁。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.Caret.getDot()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取插入符的当前位置。

@return 位置，其值 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.Caret.getMark()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取标记的当前位置。如果有一个选定项，则标记将与点不同。

@return 位置，其值 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.setDot(int dot)
<!-- END KEY -->
<!-- BEGIN DATA -->
将插入符位置设置为其他某个位置。这使得标记变得与点相同，从而有效地将选定项范围设置为零。
<p>
如果参数为负或超出文档的长度，则分别将插入符置于开始位置或结束位置。

@param dot  插入符将设置的新位置

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.Caret.moveDot(int dot)
<!-- END KEY -->
<!-- BEGIN DATA -->
将插入符位置（点）移动到其他某个位置，放在标记后面。这对进行选择很有用。

@param dot  插入符将移动的新位置，其值 &gt;= 0

<!-- END DATA -->
