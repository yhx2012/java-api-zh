<!-- BEGIN KEY -->
public static class javax.swing.text.AbstractDocument.ElementEdit extends javax.swing.undo.AbstractUndoableEdit implements javax.swing.event.DocumentEvent.ElementChange
<!-- END KEY -->
<!-- BEGIN DATA -->
一个 ElementChange 实现，可将其添加到文档事件中。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AbstractDocument.ElementEdit(Element e, int index, javax.swing.text.Element[] removed, javax.swing.text.Element[] added)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个编辑记录。这不会修改元素，所以对于刚刚关联到模型的视图可安全地使用它，以便让该视图<em>符合</em> 当前的模型状态。

@param e 元素
@param index 模型中的索引，该索引 &gt;= 0
@param removed 已移除的元素集
@param added 已添加的元素集

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.AbstractDocument.ElementEdit.getElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回基础元素。

@return 元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.ElementEdit.getIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回元素列表中的索引。

@return 索引，该索引 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element[] javax.swing.text.AbstractDocument.ElementEdit.getChildrenRemoved()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得已移除的子元素列表。

@return 列表

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element[] javax.swing.text.AbstractDocument.ElementEdit.getChildrenAdded()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得已添加的子元素列表。

@return 列表

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.AbstractDocument.ElementEdit.redo() throws javax.swing.undo.CannotRedoException
<!-- END KEY -->
<!-- BEGIN DATA -->
重复执行更改。

@exception CannotRedoException 如果无法重复执行该更改

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.AbstractDocument.ElementEdit.undo() throws javax.swing.undo.CannotUndoException
<!-- END KEY -->
<!-- BEGIN DATA -->
撤消更改。

@exception CannotUndoException 如果无法撤消该更改

<!-- END DATA -->
