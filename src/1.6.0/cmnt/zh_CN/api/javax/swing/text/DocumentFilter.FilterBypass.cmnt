<!-- BEGIN KEY -->
public abstract static class javax.swing.text.DocumentFilter.FilterBypass extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
充当避开回调 Document 进行更改的方法。希望支持 DocumentFilter 的 Document 实现必须提供一种实现，以便在从 DocumentFilter 调用下列方法时不回调 DocumentFilter。
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.text.Document javax.swing.text.DocumentFilter.FilterBypass.getDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回发生变化的 Document。

@return Document 移除/插入 String 操作将在其中执行的文档

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void javax.swing.text.DocumentFilter.FilterBypass.remove(int offset, int length) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
移除指定的文本区域，绕过 DocumentFilter。

@param offset 起始位置的偏移量，该值 &gt;= 0
@param length 要移除的字符数，该值 &gt;= 0
@exception BadLocationException 移除范围的某些部分不是文档的有效部分。异常中的位置为遇到的第一个损坏位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void javax.swing.text.DocumentFilter.FilterBypass.insertString(int offset, String string, AttributeSet attr) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
插入指定的文本，绕过 DocumentFilter。
@param offset  文档中要插入内容处的偏移量，该值 &gt;= 0。跟踪给定的位置或其后位置的更改的所有位置都将移动。
@param string 要插入的字符串
@param attr 与要插入的内容关联的属性。如果没有属性，则它可能为 null。
@exception BadLocationException  给定的插入位置不是文档中的有效位置

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void javax.swing.text.DocumentFilter.FilterBypass.replace(int offset, int length, String string, AttributeSet attrs) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
删除从 <code>offset</code> 到 <code>offset + length</code> 的文本区域，并用 <code>text</code> 替换。

@param offset Document 中的位置
@param length 要删除的文本长度
@param string 要插入的文本，null 指示没有要插入的文本
@param attrs 指示插入文本属性的 AttributeSet，null 也合法。
@exception BadLocationException  给定的插入位置不是文档中的有效位置

<!-- END DATA -->
