<!-- BEGIN KEY -->
public abstract class javax.swing.text.TextAction extends javax.swing.AbstractAction
<!-- END KEY -->
<!-- BEGIN DATA -->
用于跨多个不同文本组件共享的键绑定的 Action 实现。因为共享该动作，所以它一定有一个获得其动作目标的途径。此类提供试图查找要操作的文本组件的支持。获得要操作的组件的首选途径是通过接收到的 ActionEvent。如果由 getSource 返回的 Object 能收缩为一个文本组件，则使用它。如果动作事件为 null 或者不能被收缩，则试用最后一个获得焦点的文本组件。这通过配合使用一个安排与 TextAction 共享信息的 JTextController 来确定。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@author  Timothy Prinzing
@version 1.29 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.TextAction(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的 JTextAction 对象。

@param name 动作的名称

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final javax.swing.text.JTextComponent javax.swing.text.TextAction.getTextComponent(ActionEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定动作所使用的组件。如果 ActionEvent 不为 null 且能够被收缩，则从 ActionEvent 的源获取该组件。否则，就使用最后一个获得焦点的组件。

@param e ActionEvent
@return 组件

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.Action[] javax.swing.text.TextAction.augmentList(javax.swing.Action[] list1, javax.swing.Action[] list2)
<!-- END KEY -->
<!-- BEGIN DATA -->
取一个命令列表并用另一个命令列表去扩充。第二个列表优先于第一个列表；即当两个列表包含相同名称的一个命令时，使用第二个列表中的那个命令。

@param list1 第一个列表，可能为空但不是 <code>null</code>
@param list2 第二个列表，可能为空但不是 <code>null</code>
@return 扩充后的列表

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final javax.swing.text.JTextComponent javax.swing.text.TextAction.getFocusedComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取当前具有焦点的文本组件。这允许动作能在文本组件之间共享，这对其中要定义大型动作集但通常在不同组件间使用同一方式的键绑定很有用。

@return 组件

<!-- END DATA -->
