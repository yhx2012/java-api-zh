<!-- BEGIN KEY -->
public class javax.swing.text.DefaultStyledDocument.ElementBuffer extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
管理对元素层次结构更改的类。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementBuffer(Element root)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的 ElementBuffer。

@param root 根元素
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.DefaultStyledDocument.ElementBuffer.getRootElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得根元素。

@return 根元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementBuffer.insert(int offset, int length, javax.swing.text.DefaultStyledDocument.ElementSpec[] data, AbstractDocument.DefaultDocumentEvent de)
<!-- END KEY -->
<!-- BEGIN DATA -->
插入新内容。

@param offset 起始偏移量，该值 &gt;= 0
@param length 长度，该值 &gt;= 0
@param data 要插入的数据
@param de 捕获此编辑的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementBuffer.remove(int offset, int length, AbstractDocument.DefaultDocumentEvent de)
<!-- END KEY -->
<!-- BEGIN DATA -->
移除内容。

@param offset 起始偏移量，该值 &gt;= 0
@param length 长度，该值 &gt;= 0
@param de 捕获此编辑的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementBuffer.change(int offset, int length, AbstractDocument.DefaultDocumentEvent de)
<!-- END KEY -->
<!-- BEGIN DATA -->
更改内容。

@param offset 起始偏移量，该值 &gt;= 0
@param length 长度，该值 &gt;= 0
@param de 捕获此编辑的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.DefaultStyledDocument.ElementBuffer.insertUpdate(javax.swing.text.DefaultStyledDocument.ElementSpec[] data)
<!-- END KEY -->
<!-- BEGIN DATA -->
向文档添加更新。

@param data 要插入的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.DefaultStyledDocument.ElementBuffer.removeUpdate()
<!-- END KEY -->
<!-- BEGIN DATA -->
更新元素结构，以响应对文档中关联序列的移除操作。移除区域中的任何元素都将被移除。  

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.DefaultStyledDocument.ElementBuffer.changeUpdate()
<!-- END KEY -->
<!-- BEGIN DATA -->
更新元素结构，以响应文档中的更改。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.DefaultStyledDocument.ElementBuffer.clone(Element parent, Element clonee)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建此元素的一个副本，使其具有不同的父级。

@param parent 父元素
@param clonee 要复制的元素
@return 副本

<!-- END DATA -->
