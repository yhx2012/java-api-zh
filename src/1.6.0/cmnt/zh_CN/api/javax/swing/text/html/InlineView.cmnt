<!-- BEGIN KEY -->
public class javax.swing.text.html.InlineView extends javax.swing.text.LabelView
<!-- END KEY -->
<!-- BEGIN DATA -->
显示基于 css 属性的 <dfn>inline element</dfn> 样式。

@author  Timothy Prinzing
@version 1.25 03/05/04

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.InlineView(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造在元素上包装的新视图。

@param elem 所需元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.InlineView.insertUpdate(DocumentEvent e, Shape a, ViewFactory f)
<!-- END KEY -->
<!-- BEGIN DATA -->
发出通知，通知文档中此视图负责的位置已插入内容。如果任何一个参数为 <code>null</code>，则此方法的行为将取决于实现。
  
@param e 来自相关文档的更改信息
@param a 视图的当前分配区域
@param f 用于重建的工厂（如果该视图有子级）
@since 1.5
@see View#insertUpdate

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.InlineView.removeUpdate(DocumentEvent e, Shape a, ViewFactory f)
<!-- END KEY -->
<!-- BEGIN DATA -->
发出通知，通知文档中此视图负责的位置已移除内容。如果任何一个参数为 <code>null</code>，则此方法的行为将取决于实现。 

@param e 来自相关文档的更改信息
@param a 视图的当前分配区域
@param f 用于重建的工厂（如果该视图有子级）
@since 1.5
@see View#removeUpdate

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.InlineView.changedUpdate(DocumentEvent e, Shape a, ViewFactory f)
<!-- END KEY -->
<!-- BEGIN DATA -->
发出通知，通知文档此视图负责的位置处的属性已更改。

@param e 来自相关文档的更改信息
@param a 视图的当前分配区域
@param f 用于重建的工厂（如果该视图有子级）
@see View#changedUpdate

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.html.InlineView.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取呈现时要使用的属性。实现它的目的是为了使用 StyleSheet 多路传输模型中指定的属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.html.InlineView.getBreakWeight(int axis, float pos, float len)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图拆分的可能性有多大。这可用于确定在格式化过程中哪个视图最需要调用 <code>breakView</code>。例如，对于表示文本的视图，包含空格的视图比不包含空格的视图可能更需要调用此方法。权重越高，需要拆分的可能性越大。值等于或小于 <code>BadBreakWeight</code> 时不考虑拆分。值大于或等于 <code>ForcedBreakWeight</code> 时应该拆分视图。
 <p>
实现它的目的是为了提供返回 <code>BadBreakWeight</code> 的默认行为，除非长度大于视图的长度，这种情况下整个视图将表示片段。除非在编写视图时支持拆分行为，否则不需要尝试和拆分视图。支持拆分的一个视图示例是 <code>LabelView</code>。使用拆分权重的一个视图示例是 <code>ParagraphView</code>。

@param axis 可以是 View.X_AXIS，也可以是 View.Y_AXIS
@param pos 已拆分视图的潜在起始位置，该值 &gt;= 0。这可能对计算选项卡的位置有用。
@param len 指定从 <em>pos</em>（此处可能需要拆分）开始的相对长度，其值 &gt;= 0。
@return 权重，它应该是 ForcedBreakWeight 和 BadBreakWeight 之间的一个值。
@see LabelView
@see ParagraphView
@see javax.swing.text.View#BadBreakWeight
@see javax.swing.text.View#GoodBreakWeight
@see javax.swing.text.View#ExcellentBreakWeight
@see javax.swing.text.View#ForcedBreakWeight

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.View javax.swing.text.html.InlineView.breakView(int axis, int offset, float pos, float len)
<!-- END KEY -->
<!-- BEGIN DATA -->
尝试在给定轴上拆分此视图。有关此方法的完整描述，请参阅 {@link javax.swing.text.View#breakView}。
<p>如果 <code>axis</code> 既不是 <code>View.X_AXIS</code>，也不是 <code>View.Y_AXIS</code>，或者 <code>offset</code>、<code>pos</code> 或 <code>len</code> 为 null，则此方法的行为是不确定的。
   
@param axis 可以是 <code>View.X_AXIS</code>，也可以是 <code>View.Y_AXIS</code>
@param offset 拆分后的片段将要在文档模型中占用的位置，其值 &gt;= 0。这应该是返回的片段的初始偏移量
@param pos 拆分后的视图将沿轴占用的位置，其值 &gt;= 0。这可能对于诸如制表符计算这样的操作很有用
@param len 指定了沿轴（可能需要在此轴上进行拆分）的距离，其值 &gt;= 0
@return 表示给定区域的视图片段。
@since 1.5
@see javax.swing.text.View#breakView

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.InlineView.setPropertiesFromAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
从 attribute 设置缓存的属性。

<!-- END DATA -->
