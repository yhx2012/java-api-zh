<!-- BEGIN KEY -->
public class javax.swing.text.html.BlockView extends javax.swing.text.BoxView
<!-- END KEY -->
<!-- BEGIN DATA -->
用来显示具有 CSS 规范的块（作为一个框）的视图实现。

@author  Timothy Prinzing
@version 1.36 03/05/04

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.BlockView(Element elem, int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建表示 html 框的新视图。此操作可用于许多元素。

@param elem 用来创建视图的元素
@param axis 要么是 View.X_AXIS，要么是 View.Y_AXIS

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.BlockView.setParent(View parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
建立此视图的父视图。如果父视图的功能正确，在调用任何其他方法之前要确保调用此方法。
 <p> 
实现此方法的目的是为了转发到超类，以及调用 {@link #setPropertiesFromAttributes()} 方法来设置 css 属性中的段落属性。此时进行调用可确保能够通过父视图属性向上进行解析。

@param parent 新父级，如果该视图正从其以前添加到的父视图中移除，则返回 null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.SizeRequirements javax.swing.text.html.BlockView.calculateMajorAxisRequirements(int axis, SizeRequirements r)
<!-- END KEY -->
<!-- BEGIN DATA -->
计算块沿主轴的要求（即沿其平铺的轴）。如果指定了 CSS 的宽度或高度属性并应用于该轴，则实现此方法是为了提供超类行为，然后对其调整。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.SizeRequirements javax.swing.text.html.BlockView.calculateMinorAxisRequirements(int axis, SizeRequirements r)
<!-- END KEY -->
<!-- BEGIN DATA -->
计算块沿辅轴的要求（即垂直沿其平铺的轴的轴）。如果指定了 CSS 的宽度或高度属性并应用于该轴，则实现此方法是为了提供超类行为，然后对其调整。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.BlockView.layoutMinorAxis(int targetSpan, int axis, int[] offsets, int[] spans)
<!-- END KEY -->
<!-- BEGIN DATA -->
执行对框的辅轴（即与它所代表的轴垂直的轴）的布局。布局的结果（每个子级的偏移量和区域）存储在给定的数组中，它表示沿辅轴对子级的分配。

@param targetSpan 为视图分配的总区域，它应该用来布局子视图。
@param axis 正在进行布局的轴
@param offsets 每个子视图的视图原点的偏移量；这是一个返回值并且由此方法的实现来填充
@param spans 每个子视图的区域，这是一个返回值并且由此方法的实现来填充

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.BlockView.paint(Graphics g, Shape allocation)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用给定呈现面和该表面的区域呈现。实现它的目的是为了把 painter 委托给 css 框，以便在进行内部绘制之前先绘制边框和背景。

@param g 要使用的呈现表面
@param allocation 分配的要在其中呈现的区域
@see View#paint

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.html.BlockView.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取呈现时要使用的属性。实现它的目的是为了使用 StyleSheet 多路传输模型中指定的属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.html.BlockView.getResizeWeight(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取调整的权重。

@param axis 可以是 X_AXIS，也可以是 Y_AXIS
@return 权重
@exception IllegalArgumentException 如果是无效的轴

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.BlockView.getAlignment(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取对齐方式。

@param axis 可以是 X_AXIS，也可以是 Y_AXIS
@return 对方方式

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.BlockView.getPreferredSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某个轴的首选区域。

@param axis 可以为 <code>View.X_AXIS</code> 或 <code>View.Y_AXIS</code>
@return   视图可能要在其中呈现的区域，其值 &gt;= 0；通常要求视图呈现在返回的区域中，尽管不一定如此；父级可选择重新调整视图大小或分解视图
@exception IllegalArgumentException 如果轴类型无效

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.BlockView.getMinimumSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某个轴的最小区域。

@param axis 可以为 <code>View.X_AXIS</code> 或 <code>View.Y_AXIS</code>
@return   视图可能要在其中呈现的区域，其值 &gt;= 0；通常要求视图呈现在返回的区域中，尽管不一定如此；父级可选择重新调整视图大小或分解视图
@exception IllegalArgumentException 如果轴类型无效

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.BlockView.getMaximumSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某轴的最大区域。

@param axis 可以为 <code>View.X_AXIS</code> 或 <code>View.Y_AXIS</code>
@return   视图可能要在其中呈现的区域，其值 &gt;= 0；通常要求视图呈现在返回的区域中，尽管不一定如此；父级可选择重新调整视图大小或分解视图
@exception IllegalArgumentException 如果轴类型无效

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.BlockView.setPropertiesFromAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
更新来自属性的任何缓存的值。

<!-- END DATA -->
