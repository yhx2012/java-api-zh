<!-- BEGIN KEY -->
public static class javax.swing.text.FlowView.FlowStrategy extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
维护流的物理形式的策略。默认实现是完全无状态的，并且如果给定的 FlowView 布局无效，则要重新计算整个流。备用策略可以通过创建子类实现，并且可以对布局或备用分解行为执行增量修复。
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.FlowView.FlowStrategy.insertUpdate(FlowView fv, DocumentEvent e, Rectangle alloc)
<!-- END KEY -->
<!-- BEGIN DATA -->
发出通知，通知在文档中此视图负责的某个位置已插入内容。该策略应能更新相应的已更改区域（这取决于修复所用的策略）。

@param e 来自相关文档的更改信息
@param alloc 该 insets 内此视图的当前分配区域。如果视图尚未显示，则此值为 null。
@see View#insertUpdate

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.FlowView.FlowStrategy.removeUpdate(FlowView fv, DocumentEvent e, Rectangle alloc)
<!-- END KEY -->
<!-- BEGIN DATA -->
发出通知，通知已从文档中此给定流视图负责的某个位置移除某些内容。

@param e 来自相关文档的更改信息
@param alloc 该 insets 内此视图的当前分配区域。
@see View#removeUpdate

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.FlowView.FlowStrategy.changedUpdate(FlowView fv, DocumentEvent e, Rectangle alloc)
<!-- END KEY -->
<!-- BEGIN DATA -->
发出通知，通知文档中此视图负责的某个位置的属性已更改。

@param fv     包含这些更改的 <code>FlowView</code>
@param e      描述对文档做出的更改的 <code>DocumentEvent</code>
@param alloc  视图的边界
@see View#changedUpdate

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.View javax.swing.text.FlowView.FlowStrategy.getLogicalView(FlowView fv)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法提供访问 FlowView 的逻辑视图的流策略。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.FlowView.FlowStrategy.layout(FlowView fv)
<!-- END KEY -->
<!-- BEGIN DATA -->

更新给定 FlowView 的流。默认情况下，这样会导致所有行（子视图）的重建，以匹配每行的给定约束。此方法由 FlowView.layout 调用来更新流中的子视图。

@param fv 回流视图

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.text.FlowView.FlowStrategy.layoutRow(FlowView fv, int rowIndex, int pos)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个符合该行布局区域的视图的行。它将由布局方法调用。通过重复调用 createView 方法来实现行的填充，直到用尽可用区域、遇到强制中断或 createView 方法返回 null 为止。如果已用尽剩余区域，则调用 adjustRow 方法来调整该行，试图使它符合给定区域。

@param rowIndex 要使用视图填充的行的索引。假定行入口为空。
@param pos  视图子级中元素从其开始的当前位置。
@return 开始下一行的位置

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.FlowView.FlowStrategy.adjustRow(FlowView fv, int rowIndex, int desiredSpan, int x)
<!-- END KEY -->
<!-- BEGIN DATA -->
如有可能，调整给定行以使其适合布局区域。默认情况下，此操作将试图能在最接近行结尾的位置找到最高中断权重。如果遇到强制中断，则该中断将定位于强制中断的位置。
 
@param rowIndex 调整当前布局区域的行。
@param desiredSpan 当前布局区域，该值 &gt;= 0
@param x 行开始处的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.View javax.swing.text.FlowView.FlowStrategy.createView(FlowView fv, int startOffset, int spanLeft, int rowIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个可用于表示流的当前片段的视图。这可以是逻辑视图中的整个视图，也可以是该逻辑视图的一个片段。

@param fv 保存流的视图
@param startOffset 正创建的视图的开始位置
@param spanLeft 行中填充的区域左半部分
@param rowIndex 视图将放入其中的行

<!-- END DATA -->
