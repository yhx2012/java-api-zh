<!-- BEGIN KEY -->
public class javax.swing.text.AsyncBoxView.ChildState extends java.lang.Object implements java.lang.Runnable
<!-- END KEY -->
<!-- BEGIN DATA -->
表示子视图布局状态的记录。它作为另一个线程上的任务是可运行的。所有基于模型上的读取锁定、对子视图的访问在此对象上都应该是同步的（例如，布局线程和 GUI 线程可同时在模型上具有读取锁定，并且相互之间不设置保护）。通过对 ChildState 实例的同步，对子视图层次结构的访问是序列化的。
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AsyncBoxView.ChildState(View v)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造子视图状态。这需要从相当大的范围开始，这样在开始就不会错误地认为所有子视图都是可见的。
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.View javax.swing.text.AsyncBoxView.ChildState.getChildView()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此记录表示的子视图。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.AsyncBoxView.ChildState.run()
<!-- END KEY -->
<!-- BEGIN DATA -->
更新 ChildState。此方法应该由需要花费一定时间更新子视图状态的线程调用（应该是布局线程）。
 <p>
在更新期间要求在关联的文档上获得一个读取锁定，从而确保进行操作时模型不被更改。首先应检查是否需要实际完成工作。然后在等待更新状态的同时可发生下列可能的事件：
 <ol>
<li>可能已从视图层次结构中移除了子视图。
<li>可能已由更高优先级的操作更新了子视图（如子视图可能变为可见的）。
 </ol>

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.AsyncBoxView.ChildState.getMinorSpan()
<!-- END KEY -->
<!-- BEGIN DATA -->
沿辅轴的跨距是什么。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.AsyncBoxView.ChildState.getMinorOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
沿辅轴的偏移量是什么

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.AsyncBoxView.ChildState.getMajorSpan()
<!-- END KEY -->
<!-- BEGIN DATA -->
沿主轴的跨距是什么。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.AsyncBoxView.ChildState.getMajorOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
沿主轴的偏移量是什么。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.AsyncBoxView.ChildState.setMajorOffset(float offs)
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法应该仅由 ChildLocator 调用，它只是一个保存缓存位置的便捷场所。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.AsyncBoxView.ChildState.preferenceChanged(boolean width, boolean height)
<!-- END KEY -->
<!-- BEGIN DATA -->
标记此子视图更改的首选项。

@param width 如果已更改宽度首选项，则为 true
@param height 如果已更改高度首选项，则为 true
@see javax.swing.JComponent#revalidate

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.AsyncBoxView.ChildState.isLayoutValid()
<!-- END KEY -->
<!-- BEGIN DATA -->
是否已对子视图进行布局。

<!-- END DATA -->
