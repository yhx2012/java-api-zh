<!-- BEGIN KEY -->
public class javax.swing.text.StyleConstants extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>
一个<em>已知的</em> 或常见的属性键和方法的集合，可通过应用 AttributeSet 或 MutableAttributeSet 方法以类型安全的方式获取/设置属性。  
 <p>
段落属性定义了所呈现的段落。所有的大小都是以点的形式指定的（如 postscript 中所示），其测量与设备无关。
 </p>
<p align=center><img src="doc-files/paragraph.gif"
 alt="图表显示 SpaceAbove、FirstLineIndent、LeftIndent、RightIndent 
和 SpaceBelow 为一个段落。"></p>
 <p>
 
@author  Timothy Prinzing
@version 1.36 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.StyleConstants.ComponentElementName
<!-- END KEY -->
<!-- BEGIN DATA -->
用于表示组件的元素名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.StyleConstants.IconElementName
<!-- END KEY -->
<!-- BEGIN DATA -->
用于表示图标的元素名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.NameAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
用于命名属性集合的属性名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ResolveAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
用来标识属性的解析父集的属性名（如果定义了属性的解析父集）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ModelAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
用来标识嵌入了对象的模型的属性，这些嵌入的对象具有分开的模型视图。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.BidiLevel
<!-- END KEY -->
<!-- BEGIN DATA -->
由 Unicode bidi 算法指派的字符双向级别。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.FontFamily
<!-- END KEY -->
<!-- BEGIN DATA -->
字体系列的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Family
<!-- END KEY -->
<!-- BEGIN DATA -->
字体系列的名称。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.FontSize
<!-- END KEY -->
<!-- BEGIN DATA -->
字体大小的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Size
<!-- END KEY -->
<!-- BEGIN DATA -->
字体大小的名称。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Bold
<!-- END KEY -->
<!-- BEGIN DATA -->
粗体属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Italic
<!-- END KEY -->
<!-- BEGIN DATA -->
斜体属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Underline
<!-- END KEY -->
<!-- BEGIN DATA -->
下划线属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.StrikeThrough
<!-- END KEY -->
<!-- BEGIN DATA -->
删除线属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Superscript
<!-- END KEY -->
<!-- BEGIN DATA -->
上标属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Subscript
<!-- END KEY -->
<!-- BEGIN DATA -->
下标属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Foreground
<!-- END KEY -->
<!-- BEGIN DATA -->
前景色属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Background
<!-- END KEY -->
<!-- BEGIN DATA -->
背景色属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ComponentAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
组件属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.IconAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
图标属性的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ComposedTextAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
撰写文本的输入法属性的名称。此属性的值是表示所撰写文本的 AttributedString 的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.FirstLineIndent
<!-- END KEY -->
<!-- BEGIN DATA -->
段落第一行要缩进的空间量。此值在相反方向可能为负的偏移量。类型为 Float，并且以点的形式指定空间大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.LeftIndent
<!-- END KEY -->
<!-- BEGIN DATA -->
段落左边的缩进量。类型为 float，并且以点的形式指定大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.RightIndent
<!-- END KEY -->
<!-- BEGIN DATA -->
段落右边的缩进量。类型为 float，并且以点的形式指定大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.LineSpacing
<!-- END KEY -->
<!-- BEGIN DATA -->
段落的行之间的空间量。类型为 float，并且以行高的因子来指定大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.SpaceAbove
<!-- END KEY -->
<!-- BEGIN DATA -->
段落上方的空间量。类型为 float，并且以点的形式指定大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.SpaceBelow
<!-- END KEY -->
<!-- BEGIN DATA -->
段落下方的空间量。类型为 float，并且以点的形式指定大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Alignment
<!-- END KEY -->
<!-- BEGIN DATA -->
段落的对齐方式。类型为 Integer。有效值有：
 <ul>
 <li>ALIGN_LEFT
 <li>ALIGN_RIGHT
 <li>ALIGN_CENTER
 <li>ALIGN_JUSTIFED
 </ul>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.TabSet
<!-- END KEY -->
<!-- BEGIN DATA -->
段落的 TabSet，类型为包含了 TabStop 的 TabSet。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Orientation
<!-- END KEY -->
<!-- BEGIN DATA -->
段落的方向。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_LEFT
<!-- END KEY -->
<!-- BEGIN DATA -->
段落对齐方式的可能值。它指定文本左对齐，并且要将额外的空白放在右边。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_CENTER
<!-- END KEY -->
<!-- BEGIN DATA -->
段落对齐的可能值。它指定文本中间对齐，并且要将额外的空白放在左边和右边。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_RIGHT
<!-- END KEY -->
<!-- BEGIN DATA -->
段落对齐的可能值。它指定文本右对齐，并且要将额外的空白放在左边。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_JUSTIFIED
<!-- END KEY -->
<!-- BEGIN DATA -->
段落对齐的可能值。它指定额外空间必须分散在段落的行间，文本行除了最后一行应该左对齐之外都具有左边和右边的缩进。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.StyleConstants.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回字符串表示形式。

@return 字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.text.StyleConstants.getBidiLevel(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 BidiLevel 设置。

@param a 属性集
@return 值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setBidiLevel(MutableAttributeSet a, int o)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 BidiLevel。

@param a 属性集
@param o 双向级别值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.Component javax.swing.text.StyleConstants.getComponent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性列表中获取组件设置。

@param a 属性集
@return 组件，如果没有则为 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setComponent(MutableAttributeSet a, Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置组件属性。

@param a 属性集
@param c 组件

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.Icon javax.swing.text.StyleConstants.getIcon(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性列表中获取图标设置。

@param a 属性集
@return 图标，如果没有则为 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setIcon(MutableAttributeSet a, Icon c)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置图标属性。

@param a 属性集
@param c 图标

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.lang.String javax.swing.text.StyleConstants.getFontFamily(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性列表中获取字体系列设置。

@param a 属性集
@return 字体系列，默认为 &quot;Monospaced&quot;

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setFontFamily(MutableAttributeSet a, String fam)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置字体属性。

@param a 属性集
@param  fam 字体

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.text.StyleConstants.getFontSize(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性列表中获取字体大小设置。

@param a 属性集
@return 字体大小，默认为 12

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setFontSize(MutableAttributeSet a, int s)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置字体大小属性。

@param a 属性集
@param s 字体大小

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isBold(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否设置了粗体属性。

@param a 属性集
@return 如果已设置则为 true；否则为 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setBold(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置粗体属性。

@param a 属性集
@param b 指定 true/false 来表示是否设置了这一属性

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isItalic(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否设置了斜体属性。

@param a 属性集
@return 如果已设置则为 true；否则为 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setItalic(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置斜体属性。

@param a 属性集
@param b 指定 true/false 来表示是否设置了这一属性

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isUnderline(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否设置了下划线属性。

@param a 属性集
@return 如果已设置则为 true；否则为 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isStrikeThrough(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否设置了删除线属性。

@param a 属性集
@return 如果已设置则为 true；否则为 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isSuperscript(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否设置了上标属性。

@param a 属性集
@return 如果已设置则为 true；否则为 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isSubscript(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否设置了下标属性。

@param a 属性集
@return 如果已设置则为 true；否则为 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setUnderline(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置下标属性。

@param a 属性集
@param b 指定 true/false 来表示是否设置了这一属性

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setStrikeThrough(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置删除线属性。

@param a 属性集
@param b 指定 true/false 来表示是否设置了这一属性

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSuperscript(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置上标属性。

@param a 属性集
@param b 指定 true/false 来表示是否设置了这一属性

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSubscript(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置下标属性。

@param a 属性集
@param b 指定 true/false 来表示是否设置了这一属性

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.Color javax.swing.text.StyleConstants.getForeground(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性列表中获取前景色设置。

@param a 属性集
@return 颜色，默认为 Color.black

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setForeground(MutableAttributeSet a, Color fg)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置前景色。

@param a 属性集
@param fg 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.Color javax.swing.text.StyleConstants.getBackground(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性列表中获取背景色设置。

@param a 属性集
@return 颜色，默认为 Color.black

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setBackground(MutableAttributeSet a, Color fg)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置背景色。

@param a 属性集
@param fg 颜色

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getFirstLineIndent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取首行缩进设置。

@param a 属性集
@return 值，如果未设置则为 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setFirstLineIndent(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置首行缩进。

@param a 属性集
@param i 值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getRightIndent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取右边缩进设置。

@param a 属性集
@return 值，如果未设置则为 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setRightIndent(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置右边缩进。

@param a 属性集
@param i 值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getLeftIndent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取左边缩进设置。

@param a 属性集
@return 值，如果未设置则为 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setLeftIndent(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置左边缩进。

@param a 属性集
@param i 值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getLineSpacing(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取行间距设置。

@param a 属性集
@return 值，如果未设置则为 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setLineSpacing(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置行间距。

@param a 属性集
@param i 值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getSpaceAbove(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取上部空间设置。

@param a 属性集
@return 值，如果未设置则为 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSpaceAbove(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置上部空间。

@param a 属性集
@param i 值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getSpaceBelow(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取下部空间设置。

@param a 属性集
@return 值，如果未设置则为 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSpaceBelow(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置下部空间。

@param a 属性集
@param i 值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.text.StyleConstants.getAlignment(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取对齐设置。

@param a 属性集
@return 值，如果未设置则为 <code>StyleConstants.ALIGN_LEFT</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setAlignment(MutableAttributeSet a, int align)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置对齐方式。

@param a 属性集
@param align 对齐方式值

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.TabSet javax.swing.text.StyleConstants.getTabSet(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 TabSet。

@param a 属性集
@return <code>TabSet</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setTabSet(MutableAttributeSet a, TabSet tabs)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置 TabSet。

@param a 属性集。
@param tabs TabSet

<!-- END DATA -->
