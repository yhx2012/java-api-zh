<!-- BEGIN KEY -->
public final class javax.swing.text.html.parser.ContentModel extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
内容模式的表示形式。内容模式基本上是一个受限制的 BNF 表达式。受限制从某种意义上来说就是，它必须是确定的。这意味着您不必将它表示为一个有限状态自动机。<p>
有关更多信息，请参阅 SGML 手册第 556 页中的 Annex H 内容。

@author   Arthur van Hoff
@version  1.11,05/05/04

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.html.parser.ContentModel.type
<!-- END KEY -->
<!-- BEGIN DATA -->
类型。可以是 '*'、'?'、'+'、','、'|'、'&amp;'。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.text.html.parser.ContentModel.content
<!-- END KEY -->
<!-- BEGIN DATA -->
内容。可以是一个 Element 或者一个 ContentModel。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.ContentModel javax.swing.text.html.parser.ContentModel.next
<!-- END KEY -->
<!-- BEGIN DATA -->
下一个内容模式（使用 ','、'|' 或 '&amp;' 表达式）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.ContentModel(Element content)
<!-- END KEY -->
<!-- BEGIN DATA -->
为元素创建一个内容模式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.ContentModel(int type, ContentModel content)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个特定类型的内容模式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.ContentModel(int type, Object content, ContentModel next)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个特定类型的内容模式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.parser.ContentModel.empty()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果内容模式可以匹配一个空输入流，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.parser.ContentModel.getElements(java.util.Vector<javax.swing.text.html.parser.Element> elemVec)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用作为此 contentModel 一部分的元素列表更新 elemVec。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.parser.ContentModel.first(Object token)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果标记可能为输入流中第一个标记，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.parser.Element javax.swing.text.html.parser.ContentModel.first()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回必须具有下一个的元素。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.html.parser.ContentModel.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
转换为字符串。

<!-- END DATA -->
