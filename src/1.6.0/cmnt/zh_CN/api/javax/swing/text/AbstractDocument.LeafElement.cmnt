<!-- BEGIN KEY -->
public class javax.swing.text.AbstractDocument.LeafElement extends javax.swing.text.AbstractDocument.AbstractElement
<!-- END KEY -->
<!-- BEGIN DATA -->
实现可直接表示某类内容的元素。
 <p>
<strong>警告：</strong>此类的已序列化对象与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@see     Element

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AbstractDocument.LeafElement(Element parent, AttributeSet a, int offs0, int offs1)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个表示文档中内容的元素（没有子元素）。

@param parent 父元素
@param a 元素属性
@param offs0 起始偏移量，该偏移量 &gt;= 0
@param offs1 结束偏移量，该偏移量 &gt;= offs0
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.AbstractDocument.LeafElement.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
将该元素转换为字符串。

@return  字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.LeafElement.getStartOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得模型中该元素的起始偏移量。

@return 偏移量，该偏移量 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.LeafElement.getEndOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得模型中该元素的结束偏移量。

@return 偏移量，该偏移量 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.AbstractDocument.LeafElement.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得元素名。

@return 名称

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.LeafElement.getElementIndex(int pos)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得与给定模型偏移量最接近的子元素索引。

@param pos 偏移量，该偏移量 &gt;= 0
@return 元素索引，该索引 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.AbstractDocument.LeafElement.getElement(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得一个子元素。

@param index 子元素的索引，该索引 &gt;= 0 &amp;&amp; &lt; getElementCount()
@return 子元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.LeafElement.getElementCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回子元素的数量。

@return 子元素的数量，该数量 &gt;= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.AbstractDocument.LeafElement.isLeaf()
<!-- END KEY -->
<!-- BEGIN DATA -->
检查该元素是否为叶元素。

@return 如果为叶元素，则返回 true

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.AbstractDocument.LeafElement.getAllowsChildren()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果接收者允许接收子元素，则返回 true。
@return 如果接收者允许接收子元素，则返回 true；否则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration javax.swing.text.AbstractDocument.LeafElement.children()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 <code>Enumeration</code> 的形式返回接收者的子级。
@return 接收者的子级

<!-- END DATA -->
