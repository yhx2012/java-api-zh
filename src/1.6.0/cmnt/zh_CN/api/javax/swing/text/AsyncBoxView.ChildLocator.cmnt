<!-- BEGIN KEY -->
public class javax.swing.text.AsyncBoxView.ChildLocator extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
该类在本地化区域发生更改时，管理该本地化区域中子视图的有效位置。AsyncBoxView 可能在不断地更改，但是在布局线程决定向父级发布更新之前，可见的区域需要保持相对的稳定。
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.AsyncBoxView.ChildState javax.swing.text.AsyncBoxView.ChildLocator.lastValidOffset
<!-- END KEY -->
<!-- BEGIN DATA -->
最后一次有效偏移量计算的位置。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Rectangle javax.swing.text.AsyncBoxView.ChildLocator.lastAlloc
<!-- END KEY -->
<!-- BEGIN DATA -->
最后的可见分配区域（用于向上刷新更改时进行重新绘制）。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Rectangle javax.swing.text.AsyncBoxView.ChildLocator.childAlloc
<!-- END KEY -->
<!-- BEGIN DATA -->
用于子级分配区域以避免创建大量垃圾的形状。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AsyncBoxView.ChildLocator()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造 ChildLocator。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.swing.text.AsyncBoxView.ChildLocator.childChanged(AsyncBoxView.ChildState cs)
<!-- END KEY -->
<!-- BEGIN DATA -->
子级已更改的通知。无论是否需要新的偏移量计算这都有效。由已更改其主跨距的 ChildState 对象调用此方法。所以此方法可以由多个线程调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.swing.text.AsyncBoxView.ChildLocator.paintChildren(Graphics g)
<!-- END KEY -->
<!-- BEGIN DATA -->
绘制与剪贴区域相交的子级。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.awt.Shape javax.swing.text.AsyncBoxView.ChildLocator.getChildAllocation(int index, Shape a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于子视图的分配区域。这将更新那些位于给定索引之前尚未更新的所有子级的偏移量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AsyncBoxView.ChildLocator.getViewIndexAtPoint(float x, float y, Shape a)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取位于给定点的子视图索引。此方法由各种 View 方法调用，这些方法需要计算将消息转发到哪个子视图。这应该由在此对象上同步的代码块调用，并且通常应该后跟一个或多个对 getChildAllocation 的调用，该调用也应该在同步的代码块中进行。

@param x X 坐标，该坐标 &gt;= 0
@param y Y 坐标，该坐标 &gt;= 0
@param a  View 的分配区域
@return 最近的子视图索引

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Shape javax.swing.text.AsyncBoxView.ChildLocator.getChildAllocation(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取用于子视图的分配区域。<em>这不更新 ChildState 记录中的偏移量。</em>

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.AsyncBoxView.ChildLocator.setAllocation(Shape a)
<!-- END KEY -->
<!-- BEGIN DATA -->
将当前已分配的形状复制到用于存储当前分配区域的 Rectangle 中。在特定于 Java2D 的实现中，这是一个浮点矩形。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.text.AsyncBoxView.ChildLocator.getViewIndexAtVisualOffset(float targetOffset)
<!-- END KEY -->
<!-- BEGIN DATA -->
查找负责表示沿主轴方向框中偏移量位置的视图。确保在 ChildState 对象上设置的偏移量最高到超出所需偏移量的给定目标跨距。

@return 表示给定可见位置的视图索引 (targetOffset)，如果没有视图表示该位置，则返回 -1

<!-- END DATA -->
