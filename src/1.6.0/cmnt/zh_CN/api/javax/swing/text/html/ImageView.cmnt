<!-- BEGIN KEY -->
public class javax.swing.text.html.ImageView extends javax.swing.text.View
<!-- END KEY -->
<!-- BEGIN DATA -->
图像视图，用于支持 HTML &lt;IMG&gt; 标记。支持通过标记的 HEIGHT 和 WIDTH 属性进行缩放。如果不能加载图像，则将呈现任何通过 <code>ALT</code> 属性指定的文本。
 <p>
虽然此类现在已经是 swing 的一部分，但它是从 1.4 版本才开始公开。

@author  Scott Violet
@version 1.56 12/19/03
@see IconView
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.ImageView(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建表示 IMG 元素的新视图。

@param elem 要为其创建视图的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.html.ImageView.getAltText()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果不能加载图像，则返回要显示的文本。这是从具有属性名称 <code>HTML.Attribute.ALT</code> 的 Elements 属性集获取的。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.net.URL javax.swing.text.html.ImageView.getImageURL()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回图像源的 URL，如果不能确定图像源，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Icon javax.swing.text.html.ImageView.getNoImageIcon()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果不能找到图像，则返回要使用的图标。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Icon javax.swing.text.html.ImageView.getLoadingImageIcon()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回加载图像过程中要使用的图标。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Image javax.swing.text.html.ImageView.getImage()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回要呈现的图像。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.ImageView.setLoadsSynchronously(boolean newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置如何加载图像。如果 <code>newValue</code> 为 true，则图像将在首次被请求时加载，否则将异步加载。默认是不同步加载，也即异步加载。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.ImageView.getLoadsSynchronously()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果图像应该在首次被请求时加载，则返回 true。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.StyleSheet javax.swing.text.html.ImageView.getStyleSheet()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 StyleSheet 的便捷方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.html.ImageView.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取呈现时要使用的属性。实现它的目的是为了使用 StyleSheet 多路传输模型中指定的属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.html.ImageView.getToolTipText(float x, float y, Shape allocation)
<!-- END KEY -->
<!-- BEGIN DATA -->
对于图像，工具提示文本来自于 <code>ALT</code> 属性指定的文本。对其进行重写以返回 <code>getAltText</code>。

@see JTextComponent#getToolTipText

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.ImageView.setPropertiesFromAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
更新来自属性的任何缓存的值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.ImageView.setParent(View parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
建立此视图的父视图。此时应该缓存您所在的 AWT Container。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.ImageView.changedUpdate(DocumentEvent e, Shape a, ViewFactory f)
<!-- END KEY -->
<!-- BEGIN DATA -->
当 Elements 属性已更改时调用。重新创建图像。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.ImageView.paint(Graphics g, Shape a)
<!-- END KEY -->
<!-- BEGIN DATA -->
绘制 View。

@param g 要使用的呈现表面
@param a 分配的要在其中呈现的区域
@see View#paint

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.ImageView.getPreferredSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某轴的首选区域。

@param axis 可以是 X_AXIS，也可以是 Y_AXIS
@return  要呈现该视图的区域。通常会告知该视图在返回的区域中呈现，但不保证一定如此；父视图可以选择调整或拆分视图

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.ImageView.getAlignment(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某个轴所需的调整值。实现此方法以使图标底部沿 y 轴对齐，而默认是沿 x 轴对齐。

@param axis 可以是 X_AXIS，也可以是 Y_AXIS
@return 所需的对齐方式；这应该是 0.0 和 1.0 之间的一个值，其中 0 指示对齐到原点，1.0 指示对齐到区域的边界，0.5 指示对齐到视图的中心

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Shape javax.swing.text.html.ImageView.modelToView(int pos, Shape a, Position.Bias b) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
提供从文档模型坐标空间到所映射的视图坐标空间的映射。

@param pos 要转换的位置
@param a 分配的要在其中呈现的区域
@return 给定位置的边界框
@exception BadLocationException  如果给定位置在所关联的文档中不是一个有效位置
@see View#modelToView

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.html.ImageView.viewToModel(float x, float y, Shape a, javax.swing.text.Position.Bias[] bias)
<!-- END KEY -->
<!-- BEGIN DATA -->
提供从视图坐标空间到该模型的逻辑坐标空间的映射。

@param x X 坐标
@param y Y 坐标
@param a 要在其中呈现的分配区域
@return 模型中最能代表视图中给定点的位置
@see View#viewToModel

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.ImageView.setSize(float width, float height)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置视图的大小。如果此方法有任何布局任务，则会导致布局视图。

@param width 宽度，其值 &gt;= 0
@param height 高度，其值 &gt;= 0

<!-- END DATA -->
