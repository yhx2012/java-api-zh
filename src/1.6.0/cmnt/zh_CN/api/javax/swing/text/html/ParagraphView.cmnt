<!-- BEGIN KEY -->
public class javax.swing.text.html.ParagraphView extends javax.swing.text.ParagraphView
<!-- END KEY -->
<!-- BEGIN DATA -->
显示段落，并使用 css 属性作为其配置。

@author  Timothy Prinzing
@version 1.28 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.ParagraphView(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造给定元素的 ParagraphView。

@param elem 此视图负责的元素

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.ParagraphView.setParent(View parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
建立此视图的父视图。在父视图功能正常的情况下，此操作可保证在调用其他任何方法之前先调用该方法。
 <p> 
实现此方法可转发超类和调用 <a href="#setPropertiesFromAttributes">setPropertiesFromAttributes</a> 方法，以便通过 css 属性设置段落属性。此时进行调用可确保能够通过父视图属性向上进行解析。

@param parent 新父级，如果该视图正从其以前添加到的父视图中移除，则返回 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.html.ParagraphView.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取呈现时所使用的属性。实现此方法以便多路传输 StyleSheet 模型中指定的属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.html.ParagraphView.setPropertiesFromAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
通过 css 属性设置段落，而不是根据 StyleConstants 中的值（即超类所使用的值）设置段落。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.SizeRequirements javax.swing.text.html.ParagraphView.calculateMinorAxisRequirements(int axis, SizeRequirements r)
<!-- END KEY -->
<!-- BEGIN DATA -->
计算段落沿辅轴的要求。实现此方法以便使用超类的要求，然后稍加修改来设置允许的最小区域。典型的 html 呈现不会让视图大小小于最长的字的长度。  

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.ParagraphView.isVisible()
<!-- END KEY -->
<!-- BEGIN DATA -->
指示是否应显示此视图。如果不希望显示任何子级，并且惟一的可视子级是结束段落的中断，则不认为这是一个可视段落。否则，则认为该段落为可视段落，并返回 true。
 
@return 如果应显示该段落，则返回 true

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.ParagraphView.paint(Graphics g, Shape a)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用给定的呈现面和该面上的区域进行呈现。实现此方法以便在中断用作选项卡计算的基坐标之后委托给超类。

@param g 要使用的呈现表面
@param a 分配的要在其中呈现的区域
@see View#paint

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.ParagraphView.getPreferredSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图的首选区域。如果该视图不可见，则返回 0，否则，将调用超类方法来获取沿某轴的首选区域。

@param axis 要么是 View.X_AXIS，要么是 View.Y_AXIS
@return   该视图可能要在其中呈现的区域；通常会告知视图要呈现在返回的区域中，但不能保证一定如此；父级可能会选择调整或拆分该视图
@see javax.swing.text.ParagraphView#getPreferredSpan

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.ParagraphView.getMinimumSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某轴的最小区域。如果该视图不可见，则返回 0，否则，将调用 superclass 方法来获取最小区域。

@param axis 要么是 <code>View.X_AXIS</code>，要么是 <code>View.Y_AXIS</code>
@return  该视图可在其中呈现的最小区域
@see javax.swing.text.ParagraphView#getMinimumSpan

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.html.ParagraphView.getMaximumSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此视图沿某轴的最大区域。如果该视图不可见，则返回 0，否则，将调用 superclass 方法来获取最大区域。

@param axis 要么是 <code>View.X_AXIS</code>，要么是 <code>View.Y_AXIS</code>
@return  该视图可在其中呈现的最大区域
@see javax.swing.text.ParagraphView#getMaximumSpan

<!-- END DATA -->
