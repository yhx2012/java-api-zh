<!-- BEGIN KEY -->
protected class javax.swing.ProgressMonitor.AccessibleProgressMonitor extends javax.accessibility.AccessibleContext implements javax.accessibility.AccessibleText, javax.swing.event.ChangeListener, java.beans.PropertyChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>AccessibleProgressMonitor</code> 实现 <code>ProgressMonitor</code> 类的可访问性支持。
@since 1.5 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.ProgressMonitor.AccessibleProgressMonitor()
<!-- END KEY -->
<!-- BEGIN DATA -->
AccessibleProgressMonitor 构造方法

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ProgressMonitor.AccessibleProgressMonitor.stateChanged(ChangeEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
在侦听器的目标已更改其状态时调用。

@param e <code>ChangeEvent</code> 对象。不能为 null。
@throws NullPointerException 如果参数为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ProgressMonitor.AccessibleProgressMonitor.propertyChange(PropertyChangeEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
更改绑定 (bound) 属性时，调用此方法。

@param e 描述事件源和更改的属性的 <code>PropertyChangeEvent</code> 对象。不能为 null。
@throws NullPointerException 如果参数为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的 accessibleName 属性。对象的 accessibleName 属性是指定该对象目的的本地化 String。例如，标签和按钮的 accessibleName 属性可以是标签或按钮本身的文本。对于不显示其名称的对象，仍应设置 accessibleName。例如，对于用于输入城市名称的文本字段，en_US 语言环境的 accessibleName 可以为 &quot;city&quot;。

@return 对象的本地化名称；如果此对象没有名称，则返回 null

@see #setAccessibleName

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleDescription()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取对象的 accessibleDescription 属性。此对象的 accessibleDescription 属性是描述该对象目的的本地化短语。例如，对于 &quot;Cancel&quot; 按钮，accessibleDescription 可以是 &quot;Ignore changes and close dialog box&quot;（忽略更改并关闭对话框）。

@return 该对象的本地化描述；如果此对象没有描述，则返回 null

@see #setAccessibleDescription

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的职责。对象的职责是此对象的类的一般用途或用法。例如，按钮的职责是 AccessibleRole.PUSH_BUTTON。AccessibleRole 中提供了一些职责，组件开发人员可以在一组预定义职责中选择。这就使辅助技术能为各种交互的组件子类（例如，对所有充当按钮的组件使用 AccessibleRole.PUSH_BUTTON）以及区分行为各异的子类（例如，复选框 AccessibleRole.CHECK_BOX 和单选框 AccessibleRole.RADIO_BUTTON）提供一致的接口。
<p>注意，AccessibleRole 类也是可扩展的，因此如果预定义的职责集合不充分时，自定义组件的开发人员可以定义其自己的 AccessibleRole。

@return 描述该对象职责的 AccessibleRole 实例
@see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的状态集。对象的 AccessibleStateSet 由一组惟一的 AccessibleStates 组成。对象的 AccessibleStateSet 中的更改将导致激发 ACCESSIBLE_STATE_PROPERTY 属性的 PropertyChangeEvent。

@return 包含对象的当前状态设置的 AccessibleStateSet 的实例
@see AccessibleStateSet
@see AccessibleState
@see #addPropertyChangeListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的 Accessible 父对象。

@return 此对象的 Accessible 父对象；如果此对象没有 Accessible 父对象，则返回 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleIndexInParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象在其可访问的父对象中的索引。

@return 返回此对象父级中从零开始的索引；如果此对象没有可访问父级，则返回 -1。

@see #getAccessibleParent
@see #getAccessibleChildrenCount
@see #getAccessibleChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象中可访问的子级数。

@return  对象的可访问子级数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回该对象指定的 Accessible 子对象。Accessible 对象的 Accessible 子级是从零开始的，因此 Accessible 第一个子对象的索引为 0，第二个子对象的索引为 1，依此类推。

@param i 子级从零开始的索引
@return 对象的 Accessible 子级
@see #getAccessibleChildrenCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Locale javax.swing.ProgressMonitor.AccessibleProgressMonitor.getLocale() throws java.awt.IllegalComponentStateException
<!-- END KEY -->
<!-- BEGIN DATA -->

获取该组件的语言环境。如果该组件没有语言环境，则返回其父级的语言环境。  

@return 此组件的语言环境。如果此组件没有语言环境，则返回其父级的语言环境。

@exception IllegalComponentStateException 如果该 Component 没有自己的语言环境，并且尚未被添加到包含层次结构（那样可以从包含父级确定其语言环境）。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleComponent javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的 AccessibleComponent，它具有图形表示形式。

@return 如果受对象支持，则返回 AccessibleComponent；否则返回 null
@see AccessibleComponent

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleValue javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象关联的 AccessibleValue，该对象支持数值。 
 
@return 如果受对象支持，则返回 AccessibleValue；否则返回 null
@see AccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleText javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleText()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与在显示器上显示文本的此对象关联的 AccessibleText。

@return 如果受对象支持，则返回 AccessibleText；否则返回 null
@see AccessibleText

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ProgressMonitor.AccessibleProgressMonitor.getIndexAtPoint(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
在本地坐标中给定一个点，返回该 Point 下字符的从零开始的索引。如果该点无效，则此方法返回 -1。

@param p 本地坐标中的点
@return 点 p 处字符从零开始的索引，如果该点无效则返回 -1。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Rectangle javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharacterBounds(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定字符串中给定索引处的字符的边界框。以本地坐标形式返回边界框。如果索引无效，则返回一个空的矩形。

@param i 对 String 的索引
@return 字符边界框的屏幕坐标，如果索引无效，则返回一个空矩形。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回字符（有效索引）的数量

@return 字符数

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCaretPosition()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回插入符号的从零开始的偏移量。

注：这表示插入符号的右边与偏移量（插入符号在两个字符之间）有相同的索引值。
@return 从零开始的插入符号偏移量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAtIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定索引处的 String。 

@param part 要检索的 CHARACTER、WORD 或 SENTENCE
@param index 文本中的一个索引
@return 字母、单词或句子

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAfterIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定索引后面的 String。

@param part 要检索的 CHARACTER、WORD 或 SENTENCE
@param index 文本中的索引
@return 字母、单词或句子

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.ProgressMonitor.AccessibleProgressMonitor.getBeforeIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回给定索引前面的 String。

@param part 要检索的 CHARACTER、WORD 或 SENTENCE
@param index 文本中的索引
@return 字母、单词或句子

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharacterAttribute(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回位于给定索引处的给定字符的 AttributeSet

@param i 从零开始的文本索引
@return 字符的 AttributeSet

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectionStart()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回选择的文本中的初始偏移量。如果没有选项，但有一个插入符号，则开始和结尾偏移量是相同的。

@return 选择开始处对文本的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectionEnd()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回选择文本中的结束偏移量。如果没有选项，但有一个插入符号，则开始和结尾偏移量是相同的。

@return 选择结尾处对文本的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectedText()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回选择的一部分文本。 

@return 返回选定文本的 String 部分

<!-- END DATA -->
