<!-- BEGIN KEY -->
protected class javax.swing.JList.AccessibleJList extends javax.swing.JComponent.AccessibleJComponent implements javax.accessibility.AccessibleSelection, java.beans.PropertyChangeListener, javax.swing.event.ListSelectionListener, javax.swing.event.ListDataListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此类实现 {@code JList} 类的可访问性支持。它提供适合列表用户界面元素的 Java Accessibility API 的实现。
 <p>
<strong>警告：</strong>此类的序列化对象与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.propertyChange(PropertyChangeEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
Property Change Listener 更改方法。用于跟踪对 DataModel 和 ListSelectionModel 的更改，以便重新设置对它们的侦听器，以通过 Accessibility PropertyChange 机制报告对它们进行的更改。

@param e PropertyChangeEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.valueChanged(ListSelectionEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
List Selection Listener 值更改方法。用于激发属性更改。

@param e ListSelectionEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.intervalAdded(ListDataEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
List Data Listener 间隔添加方法。用于激发可见数据属性更改。

@param e ListDataEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.intervalRemoved(ListDataEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
List Data Listener 间隔移除方法。用于激发可见数据属性更改。

@param e ListDataEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.contentsChanged(ListDataEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
List Data Listener 内容更改方法。用于激发可见数据属性更改。

@param e ListDataEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet javax.swing.JList.AccessibleJList.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的状态设置。

@return 包含对象当前状态的 AccessibleState 的实例
@see AccessibleState

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.JList.AccessibleJList.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的职责。

@return 描述该对象职责的 AccessibleRole 实例
@see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JList.AccessibleJList.getAccessibleAt(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回包含在本地坐标 <code>Point</code> 中的 <code>Accessible</code> 子容器（如果存在）。否则返回 <code>null</code>。

@return 指定位置的 <code>Accessible</code>（如果存在）

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JList.AccessibleJList.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象中可访问的子级数。如果此对象的所有子级都实现 Accessible，则此方法应该返回此对象的子级数。

@return  对象的可访问子级数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JList.AccessibleJList.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回对象的第 n 个可访问子级。

@param i 从零开始的子对象索引
@return 该对象的第 n 个可访问子对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleSelection javax.swing.JList.AccessibleJList.getAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与此对象相关联的 AccessibleSelection。在此类的 Java Accessibility API 的实现中，返回的是此对象，它负责为其本身实现 AccessibleSelection 接口。
 
@return 此对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JList.AccessibleJList.getAccessibleSelectionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回当前选择的项数。如果未选择项，则返回值 0。

@return 当前选择的项数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JList.AccessibleJList.getAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回表示对象中指定选项的 Accessible。如果没有选择，或选择的项数小于传入的整数，则返回的值将为 <code>null</code>。

@param i 所选项的从零开始的索引
@return 包含所选项的 Accessible

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JList.AccessibleJList.isAccessibleChildSelected(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果选择了此对象的当前子级，则返回 true。

@param i 此 Accessible 对象子级的从零开始的索引。
@see AccessibleContext#getAccessibleChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.addAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
将对象中的指定选项添加到对象选择中。如果对象支持多种选择，则将指定项添加到所有现有选择中，否则它将替换对象中的所有现有选择。如果已经选择了指定的项，则此方法无效。

@param i 可选择项的从零开始的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.removeAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
从对象选择中移除对象中的指定选项。如果当前没有选择指定的项，则此方法无效。

@param i 可选择项的从零开始的索引

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.clearAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
清除对象中的选择，从而对象中没有选择任何项。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.selectAllAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果对象支持多种选择，则导致选择对象中的所有选择项。

<!-- END DATA -->
