<!-- BEGIN KEY -->
public class javax.swing.DefaultListCellRenderer extends javax.swing.JLabel implements javax.swing.ListCellRenderer, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
呈现列表中的一个项。
 <p>
<strong><a name="override">实现注意事项：</a></strong> 此类重写 <code>invalidate</code>、<code>validate</code>、<code>revalidate</code>、<code>repaint</code>、<code>isOpaque</code> 和 <code>firePropertyChange</code> 只是为了提高性能。如果不重写这些方法，这些经常调用的方法将执行那些对于默认列表单元格渲染器不必要的代码路径。如果编写自己的渲染器，则要小心权衡重写这些方法的利弊。

 <p>
 
<strong>警告：</strong>此类的序列化对象将与以后的 Swing 版本不兼容。当前的序列化支持适用于短期存储或运行相同 Swing 版本的应用程序之间的 RMI。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@version 1.25 12/19/03
@author Philip Milne
@author Hans Muller

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static javax.swing.border.Border javax.swing.DefaultListCellRenderer.noFocusBorder
<!-- END KEY -->
<!-- BEGIN DATA -->
 一个空 <code>Border</code>。可以不使用此字段。要更改此渲染器所使用的 <code>Border</code>，需要重写 <code>getListCellRendererComponent</code> 方法并直接设置返回组件的边框。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.DefaultListCellRenderer()
<!-- END KEY -->
<!-- BEGIN DATA -->
为列表中的项构造默认渲染器对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.DefaultListCellRenderer.isOpaque()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

@since 1.5
@return 如果背景是完全不透明的并且不同于 JList 的背景，则返回 <code>true</code>，否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.validate()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.invalidate()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.repaint()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.revalidate()
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.repaint(long tm, int x, int y, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.repaint(Rectangle r)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, Object oldValue, Object newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, byte oldValue, byte newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, char oldValue, char newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, short oldValue, short newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, int oldValue, int newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, long oldValue, long newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, float oldValue, float newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, double oldValue, double newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.DefaultListCellRenderer.firePropertyChange(String propertyName, boolean oldValue, boolean newValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
因为性能原因而被重写。有关更多详细信息，请参阅<a href="#override">实现注意事项</a>。

<!-- END DATA -->
