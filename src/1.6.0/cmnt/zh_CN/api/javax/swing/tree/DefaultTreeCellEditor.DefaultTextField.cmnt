<!-- BEGIN KEY -->
public class javax.swing.tree.DefaultTreeCellEditor.DefaultTextField extends javax.swing.JTextField
<!-- END KEY -->
<!-- BEGIN DATA -->
不提供任何编辑器时所使用的 <code>TextField</code>。此文本字段被锁定在构造它的边框内。也可以首选其字体上的父级字体。而且，如果 renderer 不为 <code>null</code>，并且没有指定任何字体，那么首选高度就是该 renderer 的高度。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.border.Border javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.border
<!-- END KEY -->
<!-- BEGIN DATA -->
要使用的边框。
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.tree.DefaultTreeCellEditor.DefaultTextField(Border border)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>DefaultTreeCellEditor.DefaultTextField</code> 对象。

@param border  <code>Border</code> 对象
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.setBorder(Border border)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此组件的边框。<p>
这是一个绑定 (bound) 属性。

@param border 为此组件呈现的边框
@see Border
@see CompoundBorder
@beaninfo bound:true preferred:true attribute:visualUpdate true description: The component's border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.Border javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.getBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
重写 <code>JComponent.getBorder</code>，以返回当前边框。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.getPreferredSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
重写 <code>JTextField.getPreferredSize</code>，以根据当前字体（如果设置）返回首选大小，否则使用 renderer 的字体。
@return 包含首选大小的 <code>Dimension</code> 对象

<!-- END DATA -->
