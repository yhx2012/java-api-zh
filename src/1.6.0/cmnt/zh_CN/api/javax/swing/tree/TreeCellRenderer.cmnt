<!-- BEGIN KEY -->
public interface javax.swing.tree.TreeCellRenderer
<!-- END KEY -->
<!-- BEGIN DATA -->
定义针对显示树节点的对象的要求。有关实现显示自定义图标的树单元格渲染器的示例，请参阅 <em>The Java Tutorial</em> 中的 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/components/tree.html">How to Use Trees</a> 一节。

@version 1.20 12/19/03
@author Rob Davis
@author Ray Ryan
@author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component javax.swing.tree.TreeCellRenderer.getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus)
<!-- END KEY -->
<!-- BEGIN DATA -->
将当前树单元格的值设置为 <code>value</code>。如果 <code>selected</code> 为 true，则将单元格作为已选择的单元格进行绘制。如果 <code>expanded</code> 为 true，则当前扩展该节点，如果 <code>leaf</code> 为 true，则该节点表示叶节点，如果 <code>hasFocus</code> 为 true，则该节点当前拥有焦点。<code>tree</code> 是为其配置接收者的 <code>JTree</code>。返回渲染器用来绘制值的 <code>Component</code>。

 <p>
 <code>TreeCellRenderer</code> 也负责呈现表示树当前 DnD 放置位置的单元格（如果有）。如果此渲染器关心呈现 DnD 放置位置，则它应该直接查询该树以查看给定行是否表示放置位置：
 <pre>
     JTree.DropLocation dropLocation = tree.getDropLocation();
     if (dropLocation != null
             && dropLocation.getChildIndex() == -1
             && tree.getRowForPath(dropLocation.getPath()) == row) {

         // this row represents the current drop location
         // so render it specially, perhaps with a different color
     }
 </pre>

@return  渲染器用来绘制值的 <code>Component</code>

<!-- END DATA -->
