<!-- BEGIN KEY -->
public interface javax.swing.tree.MutableTreeNode extends javax.swing.tree.TreeNode
<!-- END KEY -->
<!-- BEGIN DATA -->
定义针对树节点对象的要求，这些树节点可以通过以下操作更改：添加或移除子节点，或更改该节点中存储的用户对象的内容。

@see DefaultMutableTreeNode
@see javax.swing.JTree

@version 1.11 12/19/03
@author Rob Davis
@author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.insert(MutableTreeNode child, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
将 <code>child</code> 添加到 <code>index</code> 位置的接收者。<code>child</code> 通过 <code>setParent</code> 接收消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.remove(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
从接收者移除 <code>index</code> 位置的子节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.remove(MutableTreeNode node)
<!-- END KEY -->
<!-- BEGIN DATA -->
从接收者移除 <code>node</code>。对 <code>node</code> 发送 <code>setParent</code> 消息。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.setUserObject(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->
将接收者的用户对象重新设置为 <code>object</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.removeFromParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
从其父对象移除接收者。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.setParent(MutableTreeNode newParent)
<!-- END KEY -->
<!-- BEGIN DATA -->
将接收者的父对象设置为 <code>newParent</code>。

<!-- END DATA -->
