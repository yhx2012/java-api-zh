<!-- BEGIN KEY -->
public class javax.swing.JCheckBoxMenuItem extends javax.swing.JMenuItem implements javax.swing.SwingConstants, javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
可以被选定或取消选定的菜单项。如果被选定，菜单项的旁边通常会出现一个复选标记。如果未被选定或被取消选定，菜单项的旁边就没有复选标记。像常规菜单项一样，复选框菜单项可以有与之关联的文本或图标，或者二者兼而有之。
 <p>
<code>isSelected</code>/<code>setSelected</code> 或 <code>getState</code>/<code>setState</code> 都可以用来确定/指定菜单项的选择状态。首选方法是 <code>isSelected</code> 和 <code>setSelected</code>，它们可用于所有菜单和按钮。<code>getState</code> 和 <code>setState</code> 方法用于与其他组件集的兼容性。
 <p>
 通过 <code><a href="Action.html">Action</a></code> 可配置按钮，并进行某种程度的控制。将 <code>Action</code> 用于菜单项具有许多直接配置菜单项所不及的优点。有关更多详细信息，请参阅<a href="Action.html#buttonActions">支持 <code>Action</code></a> 的 Swing 组件，可在 <em>The Java Tutorial</em> 中的 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/misc/action.html">How
 to Use Actions</a> 一节找到更多信息。
 <p>
有关使用复选框菜单项的更多信息和示例，请参阅 <em>The Java Tutorial</em> 中的 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/components/menu.html">How to Use Menus</a> 一节。 
 <p>
 <strong>警告：</strong> Swing 不是线程安全的。有关更多信息，请参阅 <a
 href="package-summary.html#threading">Swing's Threading
 Policy</a>。
 <p>
<strong>警告：</strong>此类的序列化对象与以后的 Swing 版本不兼容。当前序列化支持适用于短期存储，或适用于在运行相同 Swing 版本的应用程序之间进行 RMI（Remote Method Invocation，远程方法调用）。从 1.4 版本开始，已在 <code>java.beans</code> 包中添加了支持所有 JavaBeans<sup><font size="-2">TM</font></sup> 长期存储的功能。请参见 {@link java.beans.XMLEncoder}。

@beaninfo attribute: isContainer false description: A menu item which can be selected or deselected.

@version 1.55 12/19/03
@author Georges Saab
@author David Karlton

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JCheckBoxMenuItem()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个没有设置文本或图标的、最初未选定的复选框菜单项。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JCheckBoxMenuItem(Icon icon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建有一个带图标的、最初未被选定的复选框菜单项。

@param icon CheckBoxMenuItem 的图标。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JCheckBoxMenuItem(String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个带文本的、最初未被选定的复选框菜单项。

@param text  CheckBoxMenuItem 的文本

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JCheckBoxMenuItem(Action a)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个从所提供的 Action 中获取其属性的菜单项。

@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JCheckBoxMenuItem(String text, Icon icon)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有指定文本和图标的、最初未被选定的复选框菜单项。

@param text CheckBoxMenuItem 的文本
@param icon CheckBoxMenuItem 的图标

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JCheckBoxMenuItem(String text, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有指定文本和选择状态的复选框菜单项。

@param text  复选框菜单项的文本
@param b  复选框菜单项的选定状态

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JCheckBoxMenuItem(String text, Icon icon, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建带有指定文本、图标和选择状态的复选框菜单项。

@param text 复选框菜单项的文本
@param icon 复选框菜单项的图标
@param b 复选框菜单项的选定状态

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JCheckBoxMenuItem.getUIClassID()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回呈现此组件的 L&F 类的名称。

@return &quot;CheckBoxMenuItemUI&quot;
@see JComponent#getUIClassID
@see UIDefaults#getUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JCheckBoxMenuItem.getState()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回菜单项的选定状态。此方法仅用于 AWT 兼容性。新代码应该使用 isSelected() 。

@return 如果该项被选定，则返回 true

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.swing.JCheckBoxMenuItem.setState(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置该项的选定状态。此方法仅用于 AWT 兼容性。新代码应该使用 setSelected() 。

@param b  指示该项选定状态的 boolean 值，其中 true = 选定
@beaninfo description: 隐藏的复选框菜单项的选择状态：true

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] javax.swing.JCheckBoxMenuItem.getSelectedObjects()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回包含复选框菜单项标签的数组 (length 1)，如果没有选定复选框，则返回 null。

@return 如果该项被选定，则返回包含一个 Object（菜单项的文本）的数组，否则返回 null 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.JCheckBoxMenuItem.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 JCheckBoxMenuItem 的字符串表示形式。此方法仅在进行调试时使用，对于各个实现，所返回字符串的内容和格式可能有所不同。返回的字符串可能为空，但不可能为 <code>null</code>。
 
@return  此 JCheckBoxMenuItem 的字符串表示形式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JCheckBoxMenuItem.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得与此 JCheckBoxMenuItem 关联的 AccessibleContext。对于 JCheckBoxMenuItems，AccessibleContext 采用 AccessibleJCheckBoxMenuItem 的形式。如有必要，可创建一个新的 AccessibleJCheckBoxMenuItem 实例。

@return 一个 AccessibleJCheckBoxMenuItem，它充当此 AccessibleJCheckBoxMenuItem 的 AccessibleContext

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.swing.JCheckBoxMenuItem.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

有关 Swing 中序列化的更多信息，请参阅 JComponent 中的 readObject() 和 writeObject()。

<!-- END DATA -->
