<!-- BEGIN KEY -->
public class javax.swing.ActionMap extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>ActionMap</code> 提供从 <code>Object</code>（称为<em>键</em> 或 <em><code>Action</code> 名</em>）到 <code>Action</code> 的映射。当按下某一个键时，<code>ActionMap</code> 通常与 <code>InputMap</code> 一起使用来定位特定操作。与 <code>InputMap</code> 一同使用时，<code>ActionMap</code> 可以有一个父级，用来搜索没有在该 <code>ActionMap</code> 中定义的键。
<p>与 <code>InputMap</code> 一同使用时，如果创建一个循环，例如：
 <pre>
   ActionMap am = new ActionMap();
   ActionMap bm = new ActionMap():
   am.setParent(bm);
   bm.setParent(am);
 </pre>
则某些方法将导致抛出 StackOverflowError。

@see InputMap

@version 1.14 12/19/03
@author Scott Violet
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.ActionMap javax.swing.ActionMap.parent
<!-- END KEY -->
<!-- BEGIN DATA -->
处理此 ActionMap 未包含的所有绑定的父级。
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.ActionMap()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个没有父级和映射关系的 <code>ActionMap</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ActionMap.setParent(ActionMap map)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置此 <code>ActionMap</code> 的父级。
 
@param map  作为此 ActionMap 父级的 <code>ActionMap</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.ActionMap javax.swing.ActionMap.getParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>ActionMap</code> 的父级。
 
@return 作为此 ActionMap 父级的 <code>ActionMap</code>，如果此 <code>ActionMap</code> 没有父级，则返回 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ActionMap.put(Object key, Action action)
<!-- END KEY -->
<!-- BEGIN DATA -->
添加一个 <code>key</code> 到 <code>action</code> 的绑定。如果 <code>action</code> 为 null，则移除 <code>key</code> 的当前绑定。
<p>在大多数情况下，<code>key</code> 将是 <code>action.getValue(NAME)</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Action javax.swing.ActionMap.get(Object key)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>key</code> 的绑定，如果该绑定不是本地定义的，则将此消息传递给父 <code>ActionMap</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ActionMap.remove(Object key)
<!-- END KEY -->
<!-- BEGIN DATA -->
从此 <code>ActionMap</code> 中移除 <code>key</code> 的绑定。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.ActionMap.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
从此 <code>ActionMap</code> 中移除所有映射关系。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] javax.swing.ActionMap.keys()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>ActionMap</code> 中绑定的 <code>Action</code> 名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.ActionMap.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>KeyStroke</code> 绑定的数量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object[] javax.swing.ActionMap.allKeys()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回在此 <code>ActionMap</code> 及其父级中定义的键所组成的数组。此方法与 <code>keys()</code> 的不同之处在于：此方法包括父级中定义的键。

<!-- END DATA -->
