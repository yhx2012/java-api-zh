<!-- BEGIN KEY -->
public interface javax.net.ssl.X509TrustManager extends javax.net.ssl.TrustManager
<!-- END KEY -->
<!-- BEGIN DATA -->

此接口的实例管理使用哪一个 X509 证书来验证远端的安全套接字。决定是根据信任的证书授权、证书撤消列表、在线状态检查或其他方式做出的。

@since 1.4
@version 1.11

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.net.ssl.X509TrustManager.checkClientTrusted(java.security.cert.X509Certificate[] chain, String authType) throws java.security.cert.CertificateException
<!-- END KEY -->
<!-- BEGIN DATA -->

给出同位体提供的部分或完整的证书链，构建到可信任的根的证书路径，并且返回是否可以确认和信任将其用于基于验证类型的客户端 SSL 验证。

验证类型由实际使用的证书确定。例如，如果使用 RSAPublicKey，则 authType 应为 &quot;RSA&quot;。检查是否大小写敏感的。

@param chain 同位体的证书链
@param authType 基于客户端证书的验证类型
@throws IllegalArgumentException 如果将 null 或长度为零的 chain 传递给 chain 参数，或者将 null 或长度为零的字符串传递给 authType 参数
@throws CertificateException 如果证书链不受此 TrustManager 信任。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.net.ssl.X509TrustManager.checkServerTrusted(java.security.cert.X509Certificate[] chain, String authType) throws java.security.cert.CertificateException
<!-- END KEY -->
<!-- BEGIN DATA -->

给出同位体提供的部分或完整的证书链，构建到可信任的根的证书路径，并且返回是否可以确认和信任将其用于基于验证类型的服务器 SSL 验证。

验证类型是表示为一个 String 的密码套件的密钥交换算法部分，例如 &quot;RSA&quot;、&quot;DHE_DSS&quot;。注：对于一些可输出的密码套件，密钥交换算法是在运行时的联络期间确定的。例如，对于 TLS_RSA_EXPORT_WITH_RC4_40_MD5，当临时的 RSA 密钥 用于密钥交换时 authType 应为 RSA_EXPORT，当使用来自服务器证书的密钥时 authType 应为 RSA。检查是否大小写敏感的。

@param chain 同位体的证书链
@param authType 使用的密钥交换算法
@throws IllegalArgumentException 如果 null 或长度为零的 chain 传递给 chain 参数，或者 null 或长度为零的字符串传递给 authType 参数
@throws CertificateException 如果证书链不受此 TrustManager 信任。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.X509Certificate[] javax.net.ssl.X509TrustManager.getAcceptedIssuers()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回受验证同位体信任的认证中心的数组。

@return  可接受的 CA 发行者证书的非 null（可能为空）的数组。

<!-- END DATA -->
