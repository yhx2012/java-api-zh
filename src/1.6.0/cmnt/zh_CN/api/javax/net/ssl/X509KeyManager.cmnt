<!-- BEGIN KEY -->
public interface javax.net.ssl.X509KeyManager extends javax.net.ssl.KeyManager
<!-- END KEY -->
<!-- BEGIN DATA -->

此接口的实例管理使用哪一个基于 X509 证书的密钥对来验证本地的安全套接字。
 <P>
在安全套接字协商期间，实现调用此接口中的方法来完成下面的工作：
 <UL>
<LI>	确定基于现有标准进行协商可以使用的别名集合，
<LI>	选择基于现有标准的<ITALIC>最好的别名</ITALIC>，和
<LI>	为指定别名获取相应的密钥材料。
 </UL>
 <P>
注：应该使用 X509ExtendedKeyManager 支持此类。

@since 1.4
@version 1.16

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.net.ssl.X509KeyManager.getClientAliases(String keyType, java.security.Principal[] issuers)
<!-- END KEY -->
<!-- BEGIN DATA -->

根据给定公钥类型和同位体识别的证书发行者授权机构列表（如果有），获取用于验证安全套接字客户端的匹配别名。

@param keyType 密钥算法类型名称
@param issuers 可接受的 CA 发行者主体名称列表，如果使用哪个发行者并不重要，则此参数为 null。
@return 匹配的别名数组；如果没有匹配的，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.net.ssl.X509KeyManager.chooseClientAlias(java.lang.String[] keyType, java.security.Principal[] issuers, Socket socket)
<!-- END KEY -->
<!-- BEGIN DATA -->

根据给定公钥类型和同位体识别的证书发行者授权机构列表（如果有），选择用于验证安全套接字客户端的别名。

@param keyType 密钥算法类型名称，以首选的密钥类型在前的顺序。
@param issuers 可接受的 CA 发行者主体名称列表，如果使用哪个发行者并不重要，则此参数为 null。
@param socket 将用于此连接的套接字。此参数可以为 null，这表示实现可以自由选择适用于任何套接字的别名。
@return 所需密钥的别名；如果没有匹配项，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.net.ssl.X509KeyManager.getServerAliases(String keyType, java.security.Principal[] issuers)
<!-- END KEY -->
<!-- BEGIN DATA -->

根据给定公钥类型和同位体识别的证书发行者授权机构列表（如果有），获取用于验证安全套接字服务器端的别名。

@param keyType 密钥算法类型名称
@param issuers 可接受的 CA 发行者主体名称列表，如果使用哪个发行者并不重要，则此参数为 null。
@return 匹配的别名数组；如果没有匹配的，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.net.ssl.X509KeyManager.chooseServerAlias(String keyType, java.security.Principal[] issuers, Socket socket)
<!-- END KEY -->
<!-- BEGIN DATA -->

根据给定公钥类型和同位体识别的证书发行者授权机构列表（如果有），选择用于验证安全套接字服务器端的别名。

@param keyType 密钥算法类型名称。
@param issuers 可接受的 CA 发行者主体名称列表，如果使用哪个发行者并不重要，则此参数为 null。
@param socket 将用于此连接的套接字。此参数可以为 null，这表示实现可以自由选择适用于任何套接字的别名。
@return 所需密钥的别名；如果没有匹配项，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.X509Certificate[] javax.net.ssl.X509KeyManager.getCertificateChain(String alias)
<!-- END KEY -->
<!-- BEGIN DATA -->

返回与给定别名关联的证书链。

@param alias 别名
@return 证书链（以用户证书在前根证书授权在后的顺序）；如果没有找到别名，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.PrivateKey javax.net.ssl.X509KeyManager.getPrivateKey(String alias)
<!-- END KEY -->
<!-- BEGIN DATA -->

返回与给定别名关联的密钥。

@param alias 别名
@return 请求的密钥；如果不能找到别名，则返回 null。

<!-- END DATA -->
