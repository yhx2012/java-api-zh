<!-- BEGIN KEY -->
public static final class javax.net.ssl.SSLEngineResult.HandshakeStatus extends java.lang.Enum
<!-- END KEY -->
<!-- BEGIN DATA -->

描述此 <code>SSLEngine</code> 的当前握手状态的 <code>SSLEngineResult</code> 枚举。

@author Brad R. Wetmore
@version 1.5, 04/04/19
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NOT_HANDSHAKING
<!-- END KEY -->
<!-- BEGIN DATA -->

<code>SSLEngine</code> 当前没有进行握手。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.FINISHED
<!-- END KEY -->
<!-- BEGIN DATA -->

<code>SSLEngine</code> 已经完成握手。
 <P>
此值只能通过调用 <code>SSLEngine.wrap()/unwrap()</code> 且该调用结束了一次握手过程时生成。它从来不由 <code>SSLEngine.getHandshakeStatus()</code> 生成。

@see SSLEngine#wrap(ByteBuffer, ByteBuffer)
@see SSLEngine#unwrap(ByteBuffer, ByteBuffer)
@see SSLEngine#getHandshakeStatus()

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NEED_TASK
<!-- END KEY -->
<!-- BEGIN DATA -->

<code>SSLEngine</code> 在继续进行握手前需要一个（或多个）代理任务的结果。

@see SSLEngine#getDelegatedTask()

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NEED_WRAP
<!-- END KEY -->
<!-- BEGIN DATA -->

在继续进行握手前，<code>SSLEngine</code> 必须向远端发送数据，所以应该调用 <code>SSLEngine.wrap()</code>。

@see SSLEngine#wrap(ByteBuffer, ByteBuffer)

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NEED_UNWRAP
<!-- END KEY -->
<!-- BEGIN DATA -->

在继续进行握手前，<code>SSLEngine</code> 需要从远端接收数据。

<!-- END DATA -->
