<!-- BEGIN KEY -->
public final class javax.net.ssl.SSLPermission extends java.security.BasicPermission
<!-- END KEY -->
<!-- BEGIN DATA -->

此类用于各种网络权限。SSLPermission 包含一个名称（也称为&ldquo;目标名称&rdquo;），但没有动作列表；您并非一定拥有所指定的权限。
 <P>
目标名称是网络权限的名称（见下文）。命名约定遵守层次结构属性命名约定。另外，名称的末尾可能有一个星号，星号前有一个&ldquo;.&rdquo;，或者只有星号，用来表示通配符。例如：&quot;foo.*&quot; 或 &quot;*&quot; 是有效的，而 &quot;*foo&quot; 或 &quot;a*b&quot; 则是无效的。
 <P>
下表列出了所有可能的 SSLPermission 目标名称，并描述了每个名称允许何种权限，还讨论了将权限授予代码的风险。
 <P>

 <table border=1 cellpadding=5
  summary="permission name, what it allows, and associated risks">
 <tr>
<th>权限目标名称</th>
<th>权限所允许的操作</th>
<th>允许此权限所带来的风险</th>
 </tr>

 <tr>
   <td>setHostnameVerifier</td>
<td>设置回调的能力，回调能决定是否允许通过 HttpsURLConnection 连接的主机不匹配服务器证书中的公共名称字段。
  </td>
<td>恶意代码可以设置校验器，从而监视由 HttpsURLConnection 请求访问的主机名或允许服务器证书使用无效的公共名称。
 </td>
 </tr>

 <tr>
   <td>getSSLSessionContext</td>
<td>获取 SSLSession 的 SLSessionContext 的能力。
 </td>
<td>恶意代码可以监视在 SSL 同级之间的会话，或者使会话无效从而降低性能。
 </td>
 </tr>

 <tr>
   <td>setDefaultSSLContext</td>
   <td>设置默认的 SSL 上下文的能力
 </td>
   <td>恶意代码可以设置监视打开连接的上下文，或者传送的纯文本数据。
 </td>
 </tr>

 </table>

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

@since 1.4
@version 1.9
@author Marianne Mueller
@author Roland Schemers

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.net.ssl.SSLPermission(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
用指定的名称创建一个新的 SSLPermission。此名称是 SSLPermission 的符号名，比如&ldquo;setDefaultAuthenticator&rdquo;等等。名称的末尾可能有一个星号，它的前面有一个&ldquo;.&rdquo;，或者只有星号，用来表示通配符。

@param name SSLPermission 的名称。

@throws NullPointerException 如果 <code>name</code> 为 null。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.net.ssl.SSLPermission(String name, String actions)
<!-- END KEY -->
<!-- BEGIN DATA -->
用指定的名称创建一个新的 SSLPermission 对象。此名称是 SSLPermission 的符号名，当前不使用动作 String，其应该为 null。 

@param name SSLPermission 的名称。
@param actions 忽略。

@throws NullPointerException 如果 <code>name</code> 为 null。
@throws IllegalArgumentException 如果 <code>name</code> 为空。

<!-- END DATA -->
