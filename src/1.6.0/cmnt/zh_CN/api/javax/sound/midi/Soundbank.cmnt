<!-- BEGIN KEY -->
public interface javax.sound.midi.Soundbank
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Soundbank</code> 包含可加载到 <code>Synthesizer</code> 中的一组 <code>Instruments</code>。注意，Java Sound <code>Soundbank</code> 不同于 MIDI 库。MIDI 允许有 16383 个库，每个库包含 128 种乐器（有时又称程序、包或音色）。但是，一个 <code>Soundbank</code> 可包含 16383 乘以 128 种乐器，因为 <code>Soundbank</code> 中的乐器按 MIDI 程序号和 MIDI 库号索引的（通过 <code>Patch</code> 对象）。因此，一个 <code>Soundbank</code> 可当作一组 MIDI 库。
 <p>
<code>Soundbank</code> 包括了返回 <code>String</code> 对象的方法（该对象中包含音库名称、制造商、版本号和描述）。这些字符串的准确内容和格式留给实现程序掌握。
 <p>
不同的合成器使用各种合成技巧。常见的一种合成技巧是波表合成，回放其中一个录制的声音段，通常使用循环和音高更改。Downloadable Sound (DLS) 格式使用录制的声音段，如同 Headspace Engine 一样。基于波表合成（或其他使用所存储的录制声音）的 <code>Soundbanks</code> 和 <code>Instruments</code> 通常应实现 <code>getResources()</code> 方法，以提供对这些录制段的访问。但是，这是可选的；如果合成技巧未使用采样声音（FM 合成和物理建模是这类技巧的示例），或者使用了采样声音但实现程序选择了使采样不可访问，则此方法可返回一个长度为零的数组。


@see Synthesizer#getDefaultSoundbank
@see Synthesizer#isSoundbankSupported
@see Synthesizer#loadInstruments(Soundbank, Patch[])
@see Patch
@see Instrument
@see SoundbankResource


@version 1.25, 05/11/17
@author David Rivas
@author Kara Kytle

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.midi.Soundbank.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得音库的名称。
@return 命名音库的 <code>String</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.midi.Soundbank.getVersion()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得音库的版本字符串。
@return 指示音库版本的 <code>String</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.midi.Soundbank.getVendor()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得命名提供此音库的公司的 <code>string</code>
@return 供应商字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.midi.Soundbank.getDescription()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得音库适于显示的文本描述。
@return 描述音库的 <code>String</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.midi.SoundbankResource[] javax.sound.midi.Soundbank.getResources()
<!-- END KEY -->
<!-- BEGIN DATA -->
提取音库中包含的非乐器资源列表。
@return 一个资源数组，不包含乐器。如果音库不包含任何资源（乐器除外），则返回长度为 0 的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.midi.Instrument[] javax.sound.midi.Soundbank.getInstruments()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得包含在此音库中的乐器列表。
@return 此 <code>SoundBank</code> 中的 <code>Instruments</code> 的数组，如果音库中未包含任何乐器，则返回长度为 0 的数组。

@see Synthesizer#getLoadedInstruments
@see #getInstrument(Patch)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.midi.Instrument javax.sound.midi.Soundbank.getInstrument(Patch patch)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得取自给定 <code>Patch</code> 的 <code>Instrument</code>。
@param patch 一个指定库索引和程序更改号的 <code>Patch</code> 对象
@return 所请求的乐器，如果音库中未包含任何乐器，则返回 <code>null</code>

@see #getInstruments
@see Synthesizer#loadInstruments(Soundbank, Patch[])

<!-- END DATA -->
