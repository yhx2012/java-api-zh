<!-- BEGIN KEY -->
public interface javax.sound.midi.Receiver
<!-- END KEY -->
<!-- BEGIN DATA -->
一个 <code>Receiver</code>，用于接收 <code>{@link MidiEvent}</code> 对象，并且通常执行一些响应性的操作，例如，解释该对象以生成声音或原始 MIDI 输出。常见的 MIDI 接收器包括合成器和 MIDI Out 端口。  

@see MidiDevice
@see Synthesizer
@see Transmitter

@version 1.22, 05/11/17
@author Kara Kytle

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sound.midi.Receiver.send(MidiMessage message, long timeStamp)
<!-- END KEY -->
<!-- BEGIN DATA -->
向接收器发送一个 MIDI 消息和时间戳。如果该接收器不支持时间戳，则该时间戳值应为 -1。
@param message 要发送的 MIDI 消息
@param timeStamp 消息的时间戳，以微秒为单位。
@throws IllegalStateException 如果接收器关闭

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sound.midi.Receiver.close()
<!-- END KEY -->
<!-- BEGIN DATA -->
指示应用程序已结束使用接收器，以及其请求的受限制资源可能已被释放或已可用。

<p>如果创建此 <code>Receiver</code> 导致隐式打开底层设备，则该方法隐式关闭该设备。只有当设备由其他隐式打开该设备的 <code>Receiver</code> 或 <code>Transmitter</code> 实例保持打开，以及此设备已显式打开时才会出现这种情况。如果从其检索该 <code>Receiver</code> 的设备通过调用 {@link MidiDevice#close MidiDevice.close} 显式关闭，则 <code>Receiver</code> 也被关闭。有关打开/关闭行为的详细描述，请参见 {@link javax.sound.midi.MidiDevice MidiDevice} 的类描述。

@see javax.sound.midi.MidiSystem#getReceiver

<!-- END DATA -->
