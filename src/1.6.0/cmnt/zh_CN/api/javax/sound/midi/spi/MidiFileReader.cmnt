<!-- BEGIN KEY -->
public abstract class javax.sound.midi.spi.MidiFileReader extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>MidiFileReader</code> 提供 MIDI 文件读取服务。实现此接口的类可从一种或多种类型的 MIDI 文件解析格式信息，并可从这些类型的文件生成 <code>Sequence</code> 对象。

@author Kara Kytle
@version 1.14 05/11/17
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.midi.MidiFileFormat javax.sound.midi.spi.MidiFileReader.getMidiFileFormat(InputStream stream) throws javax.sound.midi.InvalidMidiDataException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
获得所提供的输入流的 MIDI 文件格式。流必须指向有效的 MIDI 文件数据。通常，MIDI 文件 reader 可能需要在确定它们是否支持流之前从中读取一些数据。这些解析器必须能够标记流，读取足够多的数据来确定它们是否支持流，并且如果不支持，则将流的阅读指针重新设置到其初始位置。如果输入流不支持此操作，则此方法可能会失败，并抛出 <code>IOException</code>。
@param  stream  应该从中提取文件格式信息的输入流
@return  描述 MIDI 文件格式的 <code>MidiFileFormat</code> 对象
@throws  InvalidMidiDataException  如果流没有指向系统识别的有效 MIDI 文件数据
@throws  IOException  如果发生 I/O 异常
@see  InputStream#markSupported
@see  InputStream#mark

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.midi.MidiFileFormat javax.sound.midi.spi.MidiFileReader.getMidiFileFormat(URL url) throws javax.sound.midi.InvalidMidiDataException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
获得提供的 URL 的 MIDI 文件格式。URL 必须指向有效的 MIDI 文件数据。
@param  url  应该从中提取文件格式信息的 URL 
@return  描述 MIDI 文件格式的 <code>MidiFileFormat</code> 对象 
@throws  InvalidMidiDataException  如果 URL 没有指向系统识别的有效 MIDI 文件数据 
@throws  IOException  如果发生 I/O 异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.midi.MidiFileFormat javax.sound.midi.spi.MidiFileReader.getMidiFileFormat(File file) throws javax.sound.midi.InvalidMidiDataException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
获得提供的 <code>File</code> 的 MIDI 文件格式。<code>File</code> 必须指向有效的 MIDI 文件数据。
@param  file  应该从中提取文件格式信息的 <code>File</code> 
@return 描述 MIDI 文件格式的 <code>MidiFileFormat</code> 对象
@throws  InvalidMidiDataException  如果 <code>File</code> 没有指向系统识别的有效 MIDI 文件数据
@throws  IOException  如果发生 I/O 异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.midi.Sequence javax.sound.midi.spi.MidiFileReader.getSequence(InputStream stream) throws javax.sound.midi.InvalidMidiDataException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
从提供的输入流获得 MIDI 序列。流必须指向有效的 MIDI 文件数据。通常，MIDI 文件 reader 可能需要在确定它们是否支持流之前从中读取一些数据。这些解析器必须能够标记流，读取足够多的数据来确定它们是否支持流，并且如果不支持，则将流的阅读指针重新设置到其初始位置。如果输入流不支持此操作，则此方法可能会失败，并抛出 IOException。
@param  stream  应该从中构造 <code>Sequence</code> 的输入流 
@return  基于包含在输入流中的 MIDI 文件数据的 <code>Sequence</code> 对象。
@throws  InvalidMidiDataException  如果该流没有指向系统识别的有效 MIDI 文件数据
@throws  IOException  如果发生 I/O 异常
@see  InputStream#markSupported
@see  InputStream#mark

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.midi.Sequence javax.sound.midi.spi.MidiFileReader.getSequence(URL url) throws javax.sound.midi.InvalidMidiDataException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
从提供的 URL 获得 MIDI 序列。URL 必须指向有效的 MIDI 文件数据。
@param  url  应该为其构造 <code>Sequence</code> 的 URL
@return  基于由 URL 指向的 MIDI 文件数据的 <code>Sequence</code> 对象
@throws  InvalidMidiDataException 如果 URL 没有指向系统识别的有效 MIDI 文件数据
@throws  IOException 如果发生 I/O 异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.midi.Sequence javax.sound.midi.spi.MidiFileReader.getSequence(File file) throws javax.sound.midi.InvalidMidiDataException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
从提供的 <code>File</code> 获得 MIDI 序列。<code>File</code> 必须指向有效的 MIDI 文件数据。
@param  file  应该从中构造 <code>Sequence</code> 的 <code>File</code>
@return  基于由 <code>File</code> 指向的 MIDI 文件数据的 <code>Sequence</code> 对象
@throws  InvalidMidiDataException 如果 <code>File</code> 没有指向系统识别的有效 MIDI 文件数据
@throws  IOException 如果发生 I/O 异常

<!-- END DATA -->
