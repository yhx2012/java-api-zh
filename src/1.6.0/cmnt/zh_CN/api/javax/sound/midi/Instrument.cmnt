<!-- BEGIN KEY -->
public abstract class javax.sound.midi.Instrument extends javax.sound.midi.SoundbankResource
<!-- END KEY -->
<!-- BEGIN DATA -->
乐器是带特定参数设置的声音合成算法，通常是为模仿现实世界的特定乐器或为获得特定音效而设计的。乐器通常存储在称为 soundbank（音库）的集合中。要让乐器演奏乐曲，必须先将其加载到合成器中，然后还需要在一个或多个通道中通过程序更改命令选用该乐器。这些通道上后续接收的 MIDI 乐曲将使用选定乐器的声音演奏。

@see Soundbank
@see Soundbank#getInstruments
@see Patch
@see Synthesizer#loadInstrument(Instrument)
@see MidiChannel#programChange(int, int)
@version 1.17, 05/11/17
@author Kara Kytle

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.sound.midi.Instrument(Soundbank soundbank, Patch patch, String name, java.lang.Class<?> dataClass)
<!-- END KEY -->
<!-- BEGIN DATA -->
从指定的 <code>Patch</code> 构造一个新的 MIDI 乐器。在有加载此乐器的后续请求时，音库将搜索其内容中是否有此乐器的 <code>Patch</code>，然后将此乐器加载到由 <code>Patch</code> 对象指示的库和程序位置的合成器中。
@param soundbank 包含此乐器的音库
@param patch 此乐器的包
@param name 此乐器的名称
@param dataClass 用于表示样本数据的类。

@see Synthesizer#loadInstrument(Instrument)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.midi.Patch javax.sound.midi.Instrument.getPatch()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得 <code>Patch</code> 对象，该对象指示此乐器在合成器中存储位置处的库和程序号。
@return 此乐器的包

<!-- END DATA -->
