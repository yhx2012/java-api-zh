<!-- BEGIN KEY -->
public class javax.sound.sampled.LineEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>LineEvent</code> 类封装某一行每次打开、关闭、启动或停止时向其侦听器发送的信息。这四种状态更改中的每一种更改都由相应的事件类型表示。侦听器将事件作为一个参数接收到其 {@link LineListener#update update} 方法中。通过查询事件，侦听器可以了解事件的类型、负责该事件的行，以及发生事件时行所处理的数据量。

<p>尽管此类实现了 Serializable，但试图序列化 <code>LineEvent</code> 对象仍将失败。

@author Kara Kytle
@version 1.27, 05/11/17

@see Line
@see LineListener#update
@since 1.3

@serial exclude

<!-- END DATA -->
<!-- BEGIN KEY -->
private final javax.sound.sampled.LineEvent.Type javax.sound.sampled.LineEvent.type
<!-- END KEY -->
<!-- BEGIN DATA -->
行事件的种类（<code>OPEN</code>、<code>CLOSE</code>、<code>START</code> 或 <code>STOP</code>）。
@see #getType
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private final long javax.sound.sampled.LineEvent.position
<!-- END KEY -->
<!-- BEGIN DATA -->
事件发生时的介质位置，用样本帧表示。注意，此字段只与数据行生成的某些事件相关，如 <code>START</code> 和 <code>STOP</code>。对于不依赖样本帧的那些行生成的事件，以及未知此值的任何其他事件而言，位置值应该是 {@link AudioSystem#NOT_SPECIFIED}。
@serial
@see #getFramePosition

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.sampled.LineEvent(Line line, LineEvent.Type type, long position)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造源自指定行的指定类型的新事件。
@param  line  此事件的源 
@param  type  事件类型（<code>OPEN</code>、<code>CLOSE</code>、<code>START</code> 或 <code>STOP</code>）
@param  position  事件发生时行已经处理的样本帧数，或 {@link AudioSystem#NOT_SPECIFIED}

@throws  IllegalArgumentException 如果 <code>line</code> 为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final javax.sound.sampled.Line javax.sound.sampled.LineEvent.getLine()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得作为此事件的源的音频行。
@return  负责此事件的行

<!-- END DATA -->
<!-- BEGIN KEY -->
public final javax.sound.sampled.LineEvent.Type javax.sound.sampled.LineEvent.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得事件的类型。
@return  此事件的类型（{@link Type#OPEN}、{@link Type#CLOSE}、{@link Type#START} 或 {@link Type#STOP}）

<!-- END DATA -->
<!-- BEGIN KEY -->
public final long javax.sound.sampled.LineEvent.getFramePosition()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得事件发生时行的音频数据的位置，用样本帧表示。例如，如果暂停时源行已经回放了 14 个样本帧，则暂停事件应将行的位置报告为 14。使用从 0 开始的计数时，要处理的下一帧应是帧号 14，使用从 1 开始计数时则应是 15。
 <p>
注意，此字段只与数据行生成的某些事件相关，如 <code>START</code> 和 <code>STOP</code>。对于不依赖样本帧的那些行生成的事件，以及未知此值的任何其他事件而言，位置值应该是 {@link AudioSystem#NOT_SPECIFIED}。
 
@return  以样本帧数表示的行的位置

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.sampled.LineEvent.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得事件的字符串表示形式。字符串的内容在 Java Sound 的实现之间可能是各不相同的。
@return  描述该事件的字符串。

<!-- END DATA -->
