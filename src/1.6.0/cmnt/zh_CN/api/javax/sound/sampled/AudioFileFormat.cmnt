<!-- BEGIN KEY -->
public class javax.sound.sampled.AudioFileFormat extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>AudioFileFormat</code> 类的实例描述音频文件，包括文件类型、文件长度（以字节为单位）、文件中包含的音频数据的长度（以示例帧为单位），以及音频数据的格式。
 <p>
<code>{@link AudioSystem}</code> 类包括确定音频文件格式的方法、从音频文件获得音频输入流的方法，以及从音频输入流写入音频文件的方法。

<p><code>AudioFileFormat</code> 对象可以包括属性的集合。属性是一对键和值：键的类型是 <code>String</code>，其关联属性值是任意对象。属性指定其他信息元数据（如作者、版权和文件期限）。属性是可选信息，不需要文件 reader 和文件 writer 实现来提供或识别属性。

<p>下表列出了一些应该在实现中使用的常见属性：

 <table border=1>
  <tr>
<th>属性键</th>
<th>值类型</th>
<th>描述</th>
  </tr>
  <tr>
<td>&ldquo;期限&rdquo;</td>
   <td>{@link java.lang.Long Long}</td>
<td>以微秒为单位的文件回放期限</td>
  </tr>
  <tr>
<td>&ldquo;作者&rdquo;</td>
   <td>{@link java.lang.String String}</td>
<td>此文件的作者姓名</td>
  </tr>
  <tr>
<td>&ldquo;标题&rdquo;</td>
   <td>{@link java.lang.String String}</td>
<td>此文件的标题</td>
  </tr>
  <tr>
<td>&ldquo;版权&rdquo;</td>
   <td>{@link java.lang.String String}</td>
<td>版权消息</td>
  </tr>
  <tr>
<td>&ldquo;日期&rdquo;</td>
   <td>{@link java.util.Date Date}</td>
<td>录制或发行日期</td>
  </tr>
  <tr>
<td>&ldquo;注释&rdquo;</td>
   <td>{@link java.lang.String String}</td>
<td>任意文本</td>
  </tr>
 </table>

@author David Rivas
@author Kara Kytle
@author Florian Bomers
@version 1.24 05/11/17
@see AudioInputStream
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.sound.sampled.AudioFileFormat(AudioFileFormat.Type type, int byteLength, AudioFormat format, int frameLength)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造音频文件格式对象。此受保护的构造方法旨在返回音频文件或受支持音频文件格式的信息时供文件读取服务的提供者使用。
@param  type  音频文件的类型 
@param  byteLength  以字节为单位的文件长度，或 <code>AudioSystem.NOT_SPECIFIED</code> 
@param  format  文件中包含的音频文件的格式 
@param  frameLength  以示例帧为单位的音频数据的长度，或 <code>AudioSystem.NOT_SPECIFIED</code>

@see #getType

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.sampled.AudioFileFormat(AudioFileFormat.Type type, AudioFormat format, int frameLength)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造音频文件格式对象。应用程序可以使用此公共构造方法描述请求的音频文件的属性。
@param  type  音频文件的类型 
@param  format  文件中包含的音频数据的格式
@param  frameLength  以示例帧为单位的音频数据的长度，或 <code>AudioSystem.NOT_SPECIFIED</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.sampled.AudioFileFormat(AudioFileFormat.Type type, AudioFormat format, int frameLength, java.util.Map<java.lang.String, java.lang.Object> properties)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有定义的属性集合的音频文件格式对象。应用程序可以使用此公共构造方法描述请求的音频文件的属性。复制属性映射以防对其进行更改。

@param  type  音频文件的类型
@param  format  文件中包含的音频数据的格式
@param  frameLength  以示例帧为单位的音频数据的长度，或 <code>AudioSystem.NOT_SPECIFIED</code>
@param  properties  带属性的 <code>Map&lt;String,Object&gt;</code> 对象

@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.sampled.AudioFileFormat.Type javax.sound.sampled.AudioFileFormat.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得音频文件类型，如 <code>WAVE</code> 或 <code>AU</code>。
@return  音频文件类型

@see Type#WAVE
@see Type#AU
@see Type#AIFF
@see Type#AIFC
@see Type#SND

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.sound.sampled.AudioFileFormat.getByteLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得以字节为单位的整个文件（不只是其音频数据）的大小。
@return  以字节为单位的音频文件的长度
@see  AudioSystem#NOT_SPECIFIED

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sound.sampled.AudioFormat javax.sound.sampled.AudioFileFormat.getFormat()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得音频文件中包含的音频数据的格式。
@return  音频数据的格式

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.sound.sampled.AudioFileFormat.getFrameLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得文件中包含的音频数据的长度，以示例帧为单位表示。
@return  文件中音频数据的示例帧数
@see  AudioSystem#NOT_SPECIFIED

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Map<java.lang.String, java.lang.Object> javax.sound.sampled.AudioFileFormat.properties()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得不可修改的属性映射。属性的概念在{@link AudioFileFormat 类描述}进一步解释。

@return  包含所有属性的 <code>Map&lt;String,Object&gt;</code> 对象。如果不能识别任何属性，则返回空映射。

@see #getProperty(String)
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.sound.sampled.AudioFileFormat.getProperty(String key)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得键指定的属性值。属性的概念在{@link AudioFileFormat 类描述}进一步解释。

<p>如果指定属性不是为特定文件格式定义的，则此方法返回 <code>null</code>。

@param  key  所需属性的键
@return  具有指定键的属性值；如果属性不存在，则返回 <code>null</code>。

@see #properties
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.sampled.AudioFileFormat.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
提供文件格式的字符串表示形式。
@return  以字符串表示的文件格式

<!-- END DATA -->
