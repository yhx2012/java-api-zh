<!-- BEGIN KEY -->
public abstract class javax.sound.sampled.spi.FormatConversionProvider extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
格式转换提供者提供从一种或多种输入格式到一种或多种输出格式的格式转换服务。转换器包括编码器（编码或解码音频数据）和代码转换器等。格式转换器提供确定所支持的转换方法和从可以读取的转换数据获得音频流的方法。
 <p>
源格式表示要转换的转入音频数据的格式。
 <p>
目标格式表示已处理的、已转换的音频数据的格式。这是可以从由某个 <code>getAudioInputStream</code> 方法返回的流中读取的数据的格式。

@author Kara Kytle
@version 1.30, 05/11/17
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.sampled.AudioFormat.Encoding[] javax.sound.sampled.spi.FormatConversionProvider.getSourceEncodings()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得源格式编码的集合，此提供者从该集合中提供格式转换服务。
@return  源格式编码的数组。数组将始终具有至少为 1 的长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.sampled.AudioFormat.Encoding[] javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得目标格式编码的集合，此提供者向该集合提供格式转换服务。
@return  目标格式编码的数组。数组将始终具有至少为 1 的长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.sound.sampled.spi.FormatConversionProvider.isSourceEncodingSupported(AudioFormat.Encoding sourceEncoding)
<!-- END KEY -->
<!-- BEGIN DATA -->
指示格式转换器是否支持从指定源格式编码的转换。
@param  sourceEncoding  为其提供查询支持的源格式编码
@return  如果编码受支持，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.sound.sampled.spi.FormatConversionProvider.isTargetEncodingSupported(AudioFormat.Encoding targetEncoding)
<!-- END KEY -->
<!-- BEGIN DATA -->
指示格式转换器是否支持到指定目标格式编码的转换。
@param  targetEncoding  为其提供查询支持的目标格式编码 
@return  如果编码受支持，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.sampled.AudioFormat.Encoding[] javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings(AudioFormat sourceFormat)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得受给定了特定源格式的格式转换器支持的目标格式编码集合。如果没有为此源格式受支持的目标格式编码，则返回一个长度为 0 的数组。
@return  受支持的目标格式编码的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)
<!-- END KEY -->
<!-- BEGIN DATA -->
指示格式转换器是否支持从特定格式向特定编码的转换。
@param  argetEncoding  传出数据所需的编码 
@param  sourceFormat  传入数据的格式 
@return  如果转换受支持，则返回 <code>true</code>；否则返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.sampled.AudioFormat[] javax.sound.sampled.spi.FormatConversionProvider.getTargetFormats(AudioFormat.Encoding targetEncoding, AudioFormat sourceFormat)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得具有受格式转换器支持的指定编码的目标格式集合。如果没有为此源格式受支持的具有指定编码的目标格式，则返回一个长度为 0 的数组。
@return  受支持的目标格式的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat targetFormat, AudioFormat sourceFormat)
<!-- END KEY -->
<!-- BEGIN DATA -->
指示格式转换器是否支持到从一种特定格式到另一种格式的转换。
@param  targetFormat  传出数据所需的格式 
@param  sourceFormat  传入数据的格式 
@return  如果转换受支持，则返回 <code>true</code>；否则，返回 <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.sampled.AudioInputStream javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat.Encoding targetEncoding, AudioInputStream sourceStream)
<!-- END KEY -->
<!-- BEGIN DATA -->
从给定的音频输入流获得具有指定编码的音频输入流。
@param  targetEncoding  处理后的流所需的编码 
@param  sourceStream  应该从中读取要处理数据的数据流 
@return  可以读取已处理的具有指定目标编码的数据流 
@throws  IllegalArgumentException  如果提供的格式组合不受支持。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.sound.sampled.AudioInputStream javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat targetFormat, AudioInputStream sourceStream)
<!-- END KEY -->
<!-- BEGIN DATA -->
从给定的音频输入流获得具有指定格式的音频输入流。
@param  targetFormat  处理后的流所需的数据格式 
@param  sourceStream  应该从中读取要处理数据的数据流 
@return  可以从中读取已处理的具有指定格式的数据流 
@throws  IllegalArgumentException  如果提供的格式组合不受支持。

<!-- END DATA -->
