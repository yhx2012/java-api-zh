<!-- BEGIN KEY -->
public abstract class javax.sound.sampled.BooleanControl extends javax.sound.sampled.Control
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>BooleanControl</code> 能够在影响行音频的两个可能的设置之间切换。这些设置都是 boolean 值（<code>true</code> 和 <code>false</code>）。图形用户界面可以表示由两个状态按钮、一个 on/off 开关、两个互斥按钮或一个复选框（在其他几种可能性之间）组成的控件。例如，按下一个按钮可能激活 <code>{@link BooleanControl.Type#MUTE MUTE}</code> 控件，以抑制行音频。
 <p>
与其他 <code>{@link Control}</code> 子类一样，将提供一个为适合在用户界面中显示的值返回字符串标签的方法。

@author Kara Kytle
@version 1.16, 05/11/17
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.sound.sampled.BooleanControl(BooleanControl.Type type, boolean initialValue, String trueStateLabel, String falseStateLabel)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个具有给定参数的新 boolean 控件对象。

@param  type  此 float 控件对象表示的控件类型 
@param  initialValue  初始控件值 
@param  trueStateLabel  由 <code>true</code> 表示的状态标签，如 &quot;true&quot; 或 &quot;on&quot;。
@param  falseStateLabel  由 <code>false</code> 表示的状态标签，如 &quot;false&quot; 或 &quot;off&quot;。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.sound.sampled.BooleanControl(BooleanControl.Type type, boolean initialValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个具有给定参数的新 boolean 控件对象。<code>true</code> 和 <code>false</code> 状态的标签默认为 &quot;true&quot; 和 &quot;false&quot;。

@param  type  由此 float 控件对象表示的控件类型 
@param  initialValue  初始控件值

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sound.sampled.BooleanControl.setValue(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置控件的当前值。默认实现只设置所指示的值。有些控件需要在受设置值的影响之前打开行。
@param  value  所需的新值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.sound.sampled.BooleanControl.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
获得此控件的当前值。
@return  当前值。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.sampled.BooleanControl.getStateLabel(boolean state)
<!-- END KEY -->
<!-- BEGIN DATA -->
获得指定状态的标签。
@return  指定状态的标签，如 <code>true</code> 的标签 &quot;true&quot; 或 &quot;on&quot;，或指示 <code>false</code> 的标签 &quot;false&quot; 或 &quot;off&quot;。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.sampled.BooleanControl.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
提供控件的字符串表示形式 
@return  字符串描述

<!-- END DATA -->
