<!-- BEGIN KEY -->
public abstract class javax.security.auth.login.ConfigurationSpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
此类为 <code>Configuration</code> 类定义<i>服务提供者接口</i>（<b>SPI</b>）。每个想要提供 Configuration 实现的服务提供者都必须实现此类中的所有抽象方法。

<p> 此抽象类的子类实现必须提供可将 <code>Configuration.Parameters</code> 对象作为输入参数的公共构造方法。如果此构造方法不理解 <code>Configuration.Parameters</code> 输入，那么它也必须抛出 IllegalArgumentException。

@version 1.2, 11/17/05

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.security.auth.login.AppConfigurationEntry[] javax.security.auth.login.ConfigurationSpi.engineGetAppConfigurationEntry(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取指定 <i>name</i> 的 AppConfigurationEntry。

 <p>

@param name 用于索引 Configuration 的名称。

@return 指定 <i>name</i> 的 AppConfigurationEntry 数组；如果不存在指定 <i>name</i> 的条目，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.security.auth.login.ConfigurationSpi.engineRefresh()
<!-- END KEY -->
<!-- BEGIN DATA -->
刷新并重新加载 Configuration。

<p> 此方法导致此 Configuration 对象以与实现有关的方式刷新/重新加载其内容。例如，如果此 Configuration 对象将其条目存储在文件中，则调用 <code>refresh</code> 可能导致重新读取该文件。

<p> 此方法的默认实现不执行任何操作。如果实现支持刷新操作，则应该重写此方法。

@exception SecurityException 如果调用者没有刷新其 Configuration 的权限。

<!-- END DATA -->
