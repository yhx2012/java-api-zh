<!-- BEGIN KEY -->
public class javax.security.auth.login.AppConfigurationEntry extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
此类表示为在 <code>Configuration</code> 类中的 <code>getAppConfigurationEntry(String appName)</code> 方法中指定的应用程序配置的单个 <code>LoginModule</code> 条目。每个 <code>AppConfigurationEntry</code> 都包含 <code>LoginModule</code> 名称、控制标记（指定此 <code>LoginModule</code> 是否为 REQUIRED、REQUISITE、SUFFICIENT 或 OPTIONAL）和特定于 LoginModule 的选项。有关不同的控制标记及其语义的更多信息，请参考 <code>Configuration</code> 类。


@version 1.34, 05/05/04
@see javax.security.auth.login.Configuration

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.login.AppConfigurationEntry(String loginModuleName, AppConfigurationEntry.LoginModuleControlFlag controlFlag, java.util.Map<java.lang.String, ?> options)
<!-- END KEY -->
<!-- BEGIN DATA -->
此类的默认构造方法。

<p> 此条目表示为在 <code>Configuration</code> 类中的 <code>getAppConfigurationEntry(String appName)</code> 方法中指定的应用程序配置的单个 <code>LoginModule</code> 条目。

@param loginModuleName 表示为指定的应用程序配置的 <code>LoginModule</code> 的类名称的 String。 <p>

@param controlFlag REQUIRED、REQUISITE、SUFFICIENT 或 OPTIONAL。 <p>

@param options 为此 <code>LoginModule</code> 配置的选项。

@exception IllegalArgumentException 如果 <code>loginModuleName</code> 为 null；如果 <code>LoginModuleName</code> 的长度为 0；如果 <code>controlFlag</code> 不是 REQUIRED、REQUISITE、SUFFICIENT 或 OPTIONAL；如果 <code>options</code> 为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.auth.login.AppConfigurationEntry.getLoginModuleName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取所配置的 <code>LoginModule</code> 的类名称。

@return 所配置的 <code>LoginModule</code> 的 String 形式的类名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag javax.security.auth.login.AppConfigurationEntry.getControlFlag()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 <code>LoginModule</code> 的 controlFlag（REQUIRED、REQUISITE、SUFFICIENT 或 OPTIONAL 中的任何一个）。

@return 此 <code>LoginModule</code> 的 controlFlag（REQUIRED、REQUISITE、SUFFICIENT 或 OPTIONAL 中的任何一个）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Map<java.lang.String, ?> javax.security.auth.login.AppConfigurationEntry.getOptions()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取为此 <code>LoginModule</code> 配置的选项。

@return 为此 <code>LoginModule</code> 配置的不可修改的 <code>Map</code> 形式的选项。

<!-- END DATA -->
