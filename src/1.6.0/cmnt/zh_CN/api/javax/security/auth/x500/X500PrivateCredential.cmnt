<!-- BEGIN KEY -->
public final class javax.security.auth.x500.X500PrivateCredential extends java.lang.Object implements javax.security.auth.Destroyable
<!-- END KEY -->
<!-- BEGIN DATA -->
<p> 此类表示一个 <code>X500PrivateCredential</code>。它将 X.509 证书、相应的私钥和用于引用 KeyStore 中的确切密钥对的 KeyStore 别名联系在一起。这允许在主体中查找 X.500 主体的私有证书。 

@version 1.8, 12/19/03

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.x500.X500PrivateCredential(X509Certificate cert, PrivateKey key)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将 X.509 证书、私钥和 KeyStore 别名联系在一起的 X500PrivateCredential。
 <p>
@param cert X509Certificate
@param key 证书的 PrivateKey
@exception IllegalArgumentException 如果 <code>cert</code> 或 <code>key</code> 为 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.x500.X500PrivateCredential(X509Certificate cert, PrivateKey key, String alias)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建将 X.509 证书、私钥和 KeyStore 别名联系在一起的 X500PrivateCredential。
 <p>
@param cert X509Certificate
@param key 证书的 PrivateKey
@param alias KeyStore 别名
@exception IllegalArgumentException 如果 <code>cert</code>、<code>key</code> 或 <code>alias</code> 为 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.X509Certificate javax.security.auth.x500.X500PrivateCredential.getCertificate()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 X.509 证书。
 <p>
@return X509Certificate

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.PrivateKey javax.security.auth.x500.X500PrivateCredential.getPrivateKey()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 PrivateKey。
 <p>
@return PrivateKey

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.auth.x500.X500PrivateCredential.getAlias()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 KeyStore 别名。
 <p>
@return KeyStore 别名

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.x500.X500PrivateCredential.destroy()
<!-- END KEY -->
<!-- BEGIN DATA -->
清除对此对象中的 X.509 证书、私钥和 KeyStore 别名的引用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.security.auth.x500.X500PrivateCredential.isDestroyed()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定是否已清除对此对象中的 X.509 证书、私钥和 KeyStore 别名的引用。
 <p>
@return 如果 X509Certificate 和 PrivateKey 为 null

<!-- END DATA -->
