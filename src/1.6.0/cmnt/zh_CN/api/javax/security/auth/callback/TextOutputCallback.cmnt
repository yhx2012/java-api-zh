<!-- BEGIN KEY -->
public class javax.security.auth.callback.TextOutputCallback extends java.lang.Object implements javax.security.auth.callback.Callback, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
<p> 底层安全服务实例化一个 <code>TextOutputCallback</code> 并将其传递给 <code>CallbackHandler</code> 的 <code>handle</code> 方法，以显示信息消息、警告消息和错误消息。

@version 1.15, 12/19/03
@see javax.security.auth.callback.CallbackHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.security.auth.callback.TextOutputCallback.INFORMATION
<!-- END KEY -->
<!-- BEGIN DATA -->
信息消息。
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.security.auth.callback.TextOutputCallback.WARNING
<!-- END KEY -->
<!-- BEGIN DATA -->
警告消息。
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.security.auth.callback.TextOutputCallback.ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
错误消息。
<!-- END DATA -->
<!-- BEGIN KEY -->
private int javax.security.auth.callback.TextOutputCallback.messageType
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.security.auth.callback.TextOutputCallback.message
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.callback.TextOutputCallback(int messageType, String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个带消息类型和将要显示的消息的 TextOutputCallback。

 <p>

@param messageType 消息类型（<code>INFORMATION</code>、<code>WARNING</code> 或 <code>ERROR</code>）。 <p>

@param message 将要显示的消息。 <p>

@exception IllegalArgumentException 如果 <code>messageType</code> 不是 <code>INFORMATION</code>、<code>WARNING</code> 或 <code>ERROR</code>，如果 <code>message</code> 为 null，或者 <code>message</code> 的长度为 0。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.security.auth.callback.TextOutputCallback.getMessageType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取消息类型。

 <p>

@return 消息类型（<code>INFORMATION</code>、<code>WARNING</code> 或 <code>ERROR</code>）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.auth.callback.TextOutputCallback.getMessage()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取将要显示的消息。

 <p>

@return 将要显示的消息。

<!-- END DATA -->
