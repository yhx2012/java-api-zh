<!-- BEGIN KEY -->
public class javax.security.auth.callback.PasswordCallback extends java.lang.Object implements javax.security.auth.callback.Callback, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
<p> 底层安全服务实例化一个 <code>PasswordCallback</code> 并将其传递给 <code>CallbackHandler</code> 的 <code>handle</code> 方法，以获取密码信息。

@version 1.18, 12/19/03
@see javax.security.auth.callback.CallbackHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.security.auth.callback.PasswordCallback.prompt
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean javax.security.auth.callback.PasswordCallback.echoOn
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private char[] javax.security.auth.callback.PasswordCallback.inputPassword
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.callback.PasswordCallback(String prompt, boolean echoOn)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造带提示和布尔值的 <code>PasswordCallback</code>，该布尔值指定键入密码时是否应该显示该密码。

 <p>

@param prompt 用来请求密码的提示。 <p>

@param echoOn 如果密码应该在键入时显示，则该参数为 true。

@exception IllegalArgumentException 如果 <code>prompt</code> 为 null 或者 <code>prompt</code> 的长度为 0。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.auth.callback.PasswordCallback.getPrompt()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取提示。

 <p>

@return 提示。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.security.auth.callback.PasswordCallback.isEchoOn()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回密码是否应该在键入时显示。

 <p>

@return 密码是否应该在键入时显示。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.callback.PasswordCallback.setPassword(char[] password)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置获取到的密码。

<p> 此方法在存储 <i>password</i> 前对其进行了复制。
 
 <p>

@param password 获取到的密码，它可以为 null。


@see #getPassword

<!-- END DATA -->
<!-- BEGIN KEY -->
public char[] javax.security.auth.callback.PasswordCallback.getPassword()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取检索到的密码。

<p> 此方法返回获取到的密码的一份副本。

<p>

@return 获取到的密码，它可以为 null。

@see #setPassword

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.callback.PasswordCallback.clearPassword()
<!-- END KEY -->
<!-- BEGIN DATA -->
清除获取到的密码。

<!-- END DATA -->
