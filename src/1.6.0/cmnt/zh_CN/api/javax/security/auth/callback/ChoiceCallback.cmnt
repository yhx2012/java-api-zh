<!-- BEGIN KEY -->
public class javax.security.auth.callback.ChoiceCallback extends java.lang.Object implements javax.security.auth.callback.Callback, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
<p> 底层安全服务实例化一个 <code>ChoiceCallback</code> ，并将它传递给 <code>CallbackHandler</code> 的 <code>handle</code> 方法，以显示选项列表并获取选中的选项。

@version 1.17, 12/19/03
@see javax.security.auth.callback.CallbackHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.security.auth.callback.ChoiceCallback.prompt
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String[] javax.security.auth.callback.ChoiceCallback.choices
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 选项列表
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private int javax.security.auth.callback.ChoiceCallback.defaultChoice
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 用作默认选项的选项
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean javax.security.auth.callback.ChoiceCallback.multipleSelectionsAllowed
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 选项列表中是否允许进行多重选择
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private int[] javax.security.auth.callback.ChoiceCallback.selections
<!-- END KEY -->
<!-- BEGIN DATA -->
@serial 选中的选项，表示为 <code>choices</code> 列表中的索引。
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.callback.ChoiceCallback(String prompt, java.lang.String[] choices, int defaultChoice, boolean multipleSelectionsAllowed)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 <code>ChoiceCallback</code>，带有提示、选项列表、默认选项和指定选项列表是否允许进行多重选择的布尔值。

 <p>

@param prompt 用于描述选项列表的提示。 <p>

@param choices 选项列表。 <p>

@param defaultChoice 该选项用作显示选项列表时的默认选项。此值表示为 <code>choices</code> 数组中的索引。 <p>

@param multipleSelectionsAllowed 指定是否可以从选项列表进行多重选择的布尔值。

@exception IllegalArgumentException 如果 <code>prompt</code> 为 null，如果 <code>prompt</code> 的长度为 0，如果 <code>choices</code> 为 null，如果 <code>choices</code> 的长度为 0，如果 <code>choices</code> 中的任何元素为 null，如果 <code>choices</code> 中的任何元素的长度为 0，或者 <code>defaultChoice</code> 不在 <code>choices</code> 的数组边界内。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.auth.callback.ChoiceCallback.getPrompt()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取提示。

 <p>

@return 提示。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.security.auth.callback.ChoiceCallback.getChoices()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取选项列表。

 <p>

@return 选项列表。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.security.auth.callback.ChoiceCallback.getDefaultChoice()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 defaultChoice。

 <p>

@return defaultChoice，表示为 <code>choices</code> 列表中的索引。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.security.auth.callback.ChoiceCallback.allowMultipleSelections()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取布尔值，该布尔值确定是否允许从该 <code>choices</code> 列表进行多重选择。

 <p>

@return 是否允许进行多重选择。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.callback.ChoiceCallback.setSelectedIndex(int selection)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置选中的选项。

 <p>

@param selection 表示为 <code>choices</code> 列表中的索引的选择。


@see #getSelectedIndexes

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.callback.ChoiceCallback.setSelectedIndexes(int[] selections)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置选中的选项。

 <p>

@param selections 表示为 <code>choices</code> 列表中的索引的选择。

@exception UnsupportedOperationException 如果不允许进行多重选择（由 <code>allowMultipleSelections</code> 确定），则抛出该异常。

@see #getSelectedIndexes

<!-- END DATA -->
<!-- BEGIN KEY -->
public int[] javax.security.auth.callback.ChoiceCallback.getSelectedIndexes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取选中的选项。

 <p>

@return 选中的选项，表示为 <code>choices</code> 列表中的索引。

@see #setSelectedIndexes

<!-- END DATA -->
