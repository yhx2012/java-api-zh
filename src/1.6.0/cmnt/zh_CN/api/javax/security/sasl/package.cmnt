<!-- BEGIN KEY -->
javax.security.sasl
<!-- END KEY -->
<!-- BEGIN DATA -->

包含用于支持 SASL 的类和接口。

此包为 SASL 机制定义了各种类和接口。开发人员使用它来添加对使用 SASL 的、基于连接的协议的验证支持。

<h4>SASL 概述</h4>
<p>

简单验证和安全层 (SASL) 指定了一种挑战-响应协议，使用该协议在客户端和服务器之间交换数据，从而实现验证和（可选）建立一个可承载后续通信的安全层。它与基于连接的协议，如 LDAPv3 或 IMAPv4 一起使用。<A HREF="http://www.ietf.org/rfc/rfc2222.txt">RFC 2222</A> 中描述了 SASL。

<p>
为 SASL 定义了各种<em>机制</em>。每种机制都为成功进行验证而定义了客户端和服务器之间必须交换的数据。特定机制所需的这种数据交换被称作其<em>协议配置文件</em>。下面是 Internet 标准团体已经定义的一些机制的示例。
<ul>
<li>DIGEST-MD5 (<A HREF="http://www.ietf.org/rfc/rfc2831.txt">RFC 2831</a>)。此机制定义了如何将 HTTP 摘要验证用作 SASL 机制。
<li>Anonymous (<A HREF="http://www.ietf.org/rfc/rfc2245.txt">RFC 2245</a>)。此机制是匿名验证，其中无需使用证书。
<li>External (<A HREF="http://www.ietf.org/rfc/rfc2222.txt">RFC 2222</A>)。此机制从外部源（如 TLS 或 IPsec）获得验证信息。
<li>S/Key (<A HREF="http://www.ietf.org/rfc/rfc2222.txt">RFC 2222</A>)。此机制使用 MD4 摘要算法并基于共享密钥来交换数据。
<li>GSSAPI (<A HREF="http://www.ietf.org/rfc/rfc2222.txt">RFC 2222</A>)。此机制使用 <A HREF="http://www.ietf.org/rfc/rfc2078.txt">GSSAPI</A> 来获得验证信息。
</ul>

<p>
某些机制同时提供验证和建立安全层，而其他机制则只提供验证。Anonymous 和 S/Key 不提供给任何安全层。GSSAPI 和 DIGEST-MD5 允许进行安全层的协商。对于 External，由外部协议来确定安全层。

<h4>使用</h4>

<p>
此 API 的用户通常是为基于连接的协议（如 LDAPv3 和 IMAPv4）生成客户端库实现的开发人员，以及编写服务器（如 LDAP 服务器和 IMAP 服务器）的开发人员。编写客户端库的开发人员可使用 <tt>SaslClient</tt> 和 <tt>SaslClientFactory</tt> 接口。编写服务器的开发人员可使用 <tt>SaslServer</tt> 和 <tt>SaslServerFactory</tt> 接口。
<p>
这两组用户的每一组都可以进一步再分成两组：那些<em>生成</em> SASL 机制和那些<em>使用</em> SASL 机制的用户。SASL 机制的生产者需要提供这些接口的实现，而 SASL 机制的用户使用此包中的 API 来访问这些实现。

<h2>相关文档</h2>

有关如何使用此 API 的信息，请参阅 <a href="../../../../technotes/guides/security/sasl/sasl-refguide.html">Java SASL Programming Guide</a>。

@since 1.5

<!-- END DATA -->
