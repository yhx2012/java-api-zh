<!-- BEGIN KEY -->
public interface javax.annotation.processing.RoundEnvironment
<!-- END KEY -->
<!-- BEGIN DATA -->
注释处理工具框架将{@linkplain Processor#process 提供一个注释处理器和一个实现此接口的对象}，这样处理器可以查询有关注释处理的 round 的信息。
 
@author Joseph D. Darcy
@author Scott Seligman
@author Peter von der Ah&eacute;
@version 1.6 06/08/02
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.annotation.processing.RoundEnvironment.processingOver()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此 round 生成的类型不是以注释处理的后续 round 为准，则返回 {@code true}；否则返回 {@code false}。

@return 如果此 round 生成的类型不是以注释处理的后续 round 为准，则返回 {@code true}；否则返回 {@code false}

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.annotation.processing.RoundEnvironment.errorRaised()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果在以前的处理 round 中发生错误，则返回 {@code true}；否则返回 {@code false}。
 
@return 如果在以前的处理 round 中发生错误，则返回 {@code true}；否则返回 {@code false}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<? extends javax.lang.model.element.Element> javax.annotation.processing.RoundEnvironment.getRootElements()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回以前的 round 生成的注释处理根元素。

@return 返回以前的 round 生成的注释处理根元素；如果没有这样的元素，则返回一个空集

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<? extends javax.lang.model.element.Element> javax.annotation.processing.RoundEnvironment.getElementsAnnotatedWith(TypeElement a)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回使用给定注释类型注释的元素。该注释可能直接出现或者被继承。只返回注释处理的此 round 中<i>包括</i> 的 package 元素和 type 元素、成员声明、参数或者这些元素中声明的类型参数。所包括的 type 元素是{@linkplain #getRootElements 根类型}和嵌套在这些类型中的所有成员类型。包中的元素不认为被包含在内，因为已经为该包创建了一个 {@code package-info} 文件。

@param a 将被请求的注释类型
@return 使用给定注释类型注释的元素；如果没有这样的元素，则返回一个空集
@throws IllegalArgumentException 如果参数不表示注释类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<? extends javax.lang.model.element.Element> javax.annotation.processing.RoundEnvironment.getElementsAnnotatedWith(java.lang.Class<? extends java.lang.annotation.Annotation> a)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回使用给定注释类型注释的元素。该注释可能直接出现或者被继承。只返回注释处理的此 round 中<i>包括</i> 的 package 元素和 type 元素、成员声明、参数或者这些元素中声明的类型参数。所包括的 type 元素是{@linkplain #getRootElements 根类型}和嵌套在这些类型中的所有成员类型。包中的元素不认为被包含在内，因为已经为该包创建了一个 {@code package-info} 文件。

@param a 将被请求的注释类型
@return 使用给定注释类型注释的元素；如果没有这样的元素，则返回一个空集
@throws IllegalArgumentException 如果参数不表示注释类型

<!-- END DATA -->
