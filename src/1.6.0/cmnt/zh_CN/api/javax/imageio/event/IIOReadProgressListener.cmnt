<!-- BEGIN KEY -->
public interface javax.imageio.event.IIOReadProgressListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
供 <code>ImageReader</code> 实现用于通知其图像和缩略图读取方法的调用者相关进度的接口。

<p> 此接口接收解码进度的通用指示（通过 <code>imageProgress</code> 和 <code>thumbnailProgress</code> 方法）和指示何时整个图像已经更新的事件（通过 <code>imageStarted</code>、<code>imageComplete</code>、<code>thumbnailStarted</code> 和 <code>thumbnailComplete</code> 方法）。希望在像素更新发生时得到通知的应用程序（例如，在逐步解码过程中）应该提供 <code>IIOReadUpdateListener</code>。

@see IIOReadUpdateListener
@see javax.imageio.ImageReader#addIIOReadProgressListener
@see javax.imageio.ImageReader#removeIIOReadProgressListener

@version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.sequenceStarted(ImageReader source, int minIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告读操作序列将要开始。<code>ImageReader</code> 实现需要从其 <code>readAll(Iterator)</code> 方法仅调用此方法一次。

@param source 调用此方法的 <code>ImageReader</code> 对象。
@param minIndex 要读取的第一个图像的索引。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.sequenceComplete(ImageReader source)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告读操作序列已经完成。<code>ImageReader</code> 实现需要从其 <code>readAll(Iterator)</code> 方法仅调用此方法一次。

@param source 调用此方法的 <code>ImageReader</code> 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.imageStarted(ImageReader source, int imageIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告图像读操作将要开始。所有 <code>ImageReader</code> 实现均需在开始图像读操作时仅调用此方法一次。

@param source 调用此方法的 <code>ImageReader</code> 对象。
@param imageIndex 图像的索引，该图像将从包含其的输入文件或流中读取。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.imageProgress(ImageReader source, float percentageDone)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告对关联 <code>ImageReader</code> 的 <code>read</code> 当前调用的近似完成程度。

<p> 完成程度以百分比表示，变动范围从 <code>0.0F</code> 到 <code>100.0F</code>。在理想情况下，应该按照完成的剩余时间来计算百分比，但使用定义更加明确的度量标准（如解码的像素或输入流的消耗部分）往往更为实际。无论如何，在给定读操作过程中调用此方法的序列都应该提供一个百分比值的单调渐增序列。没有必要提供确切值 <code>0</code> 和 <code>100</code>，因为来自其他方法的被调用者可以推导出这些值。

<p> 每个特定 <code>ImageReader</code> 实现可以用所需的任何频率调用此方法。单凭经验的方法是每 5 个百分点调用该方法一次。

@param source 调用此方法的 <code>ImageReader</code> 对象。
@param percentageDone 已经完成的解码的近似百分比。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.imageComplete(ImageReader source)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告当前图像读操作已经完成。所有 <code>ImageReader</code> 实现均需在完成每个图像读操作时仅调用此方法一次。

@param source 调用此方法的 <code>ImageReader</code> 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.thumbnailStarted(ImageReader source, int imageIndex, int thumbnailIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告缩略图读操作将要开始。所有 <code>ImageReader</code> 实现均需在开始缩略图读操作时仅调用此方法一次。

@param source 调用此方法的 <code>ImageReader</code> 对象。
@param imageIndex 图像的索引，该图像将从包含其的输入文件或流中读取。
@param thumbnailIndex 要读取的缩略图的索引。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.thumbnailProgress(ImageReader source, float percentageDone)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告在关联的 <code>ImageReader</code> 中完成当前 <code>getThumbnail</code> 调用的近似程度。该语义与 <code>imageProgress</code> 中的相同。

@param source 调用此方法的 <code>ImageReader</code> 对象。
@param percentageDone 已经完成的解码的近似百分比。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.thumbnailComplete(ImageReader source)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告缩略图读操作已经完成。所有 <code>ImageReader</code> 实现均需在完成每个缩略图读操作时仅调用此方法一次。

@param source 调用此方法的 <code>ImageReader</code> 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.event.IIOReadProgressListener.readAborted(ImageReader source)
<!-- END KEY -->
<!-- BEGIN DATA -->
报告已通过 reader 的 <code>abort</code> 方法中止读操作。没有给出进一步的通知。

@param source 调用此方法的 <code>ImageReader</code> 对象。

<!-- END DATA -->
