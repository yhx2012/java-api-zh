<!-- BEGIN KEY -->
public interface javax.imageio.metadata.IIOMetadataController
<!-- END KEY -->
<!-- BEGIN DATA -->
该接口将由可以确定 <code>IIOMetadata</code> 对象设置值（通过提供一个 GUI 来从用户那里获取值或其他方式）的对象实现。此接口只指定调用控制器的一般 <code>activate</code> 方法，不考虑该控制器获得值的方式（<i>也就是说</i>，该控制器是提供一个 GUI 还是只计算一个值的集合与此接口无关）。

<p> 在 <code>activate</code> 方法中，控制器通过查询 <code>IIOMetadata</code> 对象的设置（使用 XML DOM 树或特定于插件的接口）获取初始值，通过所有方法修改值，然后再使用 <code>setFromTree</code> 或 <code>mergeTree</code> 方法抑或特定于插件的接口修改 <code>IIOMetadata</code> 对象的设置值。通常，应用程序可能期望在 <code>activate</code> 方法返回 <code>true</code> 时，<code>IIOMetadata</code> 对象已经准备好用于写入操作。

<p> 供应商可以选择为他们针对特定插件定义的 <code>IIOMetadata</code> 子类提供 GUI。其可以作为相应 <code>IIOParam</code> 子类中的默认控制器。

<p> 作为选择，可以将算法过程（比如数据库查找或解析命令行）用作控制器，在这种情况下，<code>activate</code> 方法将只查找或计算设置值，调用 <code>IIOMetadata</code> 上的方法设置其状态以及返回 <code>true</code>。

@see IIOMetadata#setController
@see IIOMetadata#getController
@see IIOMetadata#getDefaultController
@see IIOMetadata#hasController
@see IIOMetadata#activateController

@version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.metadata.IIOMetadataController.activate(IIOMetadata metadata)
<!-- END KEY -->
<!-- BEGIN DATA -->
激活控制器。如果返回 <code>true</code>，则 <code>IIOMetadata</code> 对象中的所有设置都应该已经准备好用于写入操作。如果返回 <code>false</code>，则 <code>IIOMetadata</code> 对象中没有任何设置会被干扰（<i>也就是说</i>，用户取消了该操作）。

@param metadata 要修改的 <code>IIOMetadata</code> 对象。

@return 如果已经修改了 <code>IIOMetadata</code>，则返回 <code>true</code>，否则返回 <code>false</code>。
 
@exception IllegalArgumentException 如果 <code>metadata</code> 为 <code>null</code> 或者不是正确类的实例。

<!-- END DATA -->
