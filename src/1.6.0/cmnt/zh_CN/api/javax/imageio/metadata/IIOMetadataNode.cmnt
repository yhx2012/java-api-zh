<!-- BEGIN KEY -->
public class javax.imageio.metadata.IIOMetadataNode extends java.lang.Object implements org.w3c.dom.Element, org.w3c.dom.NodeList
<!-- END KEY -->
<!-- BEGIN DATA -->
表示元数据树中节点的类，该类实现 <a
 href="../../../../api/org/w3c/dom/Element.html"><code>org.w3c.dom.Element</code></a> 接口，还允许通过 <code>getUserObject</code> 和 <code>setUserObject</code> 方法存储非文本对象。

<p> 此类不用于进行通用 XML 处理。尤其是，在 Image I/O API 中创建的 <code>Element</code> 节点与 SUN 的 <code>org.w3.dom</code> API 标准实现创建的节点不兼容。特别是该实现经过调整只能用于一些简单用途，它不能很好地进行密集处理。

<p> 在此实现中名称空间将被忽略。术语&ldquo;标记名称&rdquo;和&ldquo;节点名称&rdquo;始终被视为同义。

@see IIOMetadata#getAsTree
@see IIOMetadata#setFromTree
@see IIOMetadata#mergeTree

@version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.metadata.IIOMetadataNode()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个空的 <code>IIOMetadataNode</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.metadata.IIOMetadataNode(String nodeName)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个具有给定节点名称的 <code>IIOMetadataNode</code>。

@param nodeName 以 <code>String</code> 形式表示的节点名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getNodeName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此节点关联的节点名称。

@return 以 <code>String</code> 形式表示的节点名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public short javax.imageio.metadata.IIOMetadataNode.getNodeType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回节点类型，其始终为 <code>ELEMENT_NODE</code>。

@return <code>short</code> 值 <code>ELEMENT_NODE</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getParentNode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此节点的父节点。<code>null</code> 值指示该节点是它自己的树的根。要在现有树中添加节点，请使用 <code>insertBefore</code>、<code>replaceChild</code> 或 <code>appendChild</code> 方法之一。
 
@return 以 <code>Node</code> 形式表示的父节点。

@see #insertBefore
@see #replaceChild
@see #appendChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getFirstChild()
<!-- END KEY -->
<!-- BEGIN DATA -->
此节点的第一个子节点；如果该节点没有子节点，则返回 <code>null</code>。

@return 以 <code>Node</code> 形式表示的第一个子节点；或者 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getLastChild()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此节点的最后一个子节点；如果该节点没有子节点，则返回 <code>null</code>。

@return 以 <code>Node</code> 形式表示的最后一个子节点；或者 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getPreviousSibling()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此节点的上一个兄弟节点；如果该节点没有上一个兄弟节点，则返回 <code>null</code>。

@return 以 <code>Node</code> 形式表示的上一个兄弟节点；或者 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getNextSibling()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此节点的下一个兄弟节点；如果该节点没有下一个兄弟节点，则返回 <code>null</code>。

@return 以 <code>Node</code> 形式表示的下一个兄弟节点；或者 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Document javax.imageio.metadata.IIOMetadataNode.getOwnerDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>null</code>，因为 <code>IIOMetadataNode</code> 不属于任何 <code>Document</code>。

@return <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.insertBefore(Node newChild, Node refChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
在现有子节点 <code>refChild</code> 之前插入节点 <code>newChild</code>。如果 <code>refChild</code> 为 <code>null</code>，则将 <code>newChild</code> 插入到子节点列表的末尾。

@param newChild 要插入的 <code>Node</code>。
@param refChild 引用 <code>Node</code>。

@return 要插入的节点。

@exception IllegalArgumentException 如果 <code>newChild</code> 为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.replaceChild(Node newChild, Node oldChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
将子节点 <code>oldChild</code> 替换为子节点列表中的 <code>newChild</code>，并返回 <code>oldChild</code> 节点。

@param newChild 要插入的 <code>Node</code>。
@param oldChild 要替换的 <code>Node</code>。

@return 替换的节点。

@exception IllegalArgumentException 如果 <code>newChild</code> 为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.removeChild(Node oldChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
从子节点列表中移除 <code>oldChild</code> 所指示的子节点，并将其返回。

@param oldChild 要移除的 <code>Node</code>。

@return 移除的节点。

@exception IllegalArgumentException 如果 <code>oldChild</code> 为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.appendChild(Node newChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
将节点 <code>newChild</code> 添加到此节点子节点列表的末尾。

@param newChild 要插入的 <code>Node</code>。

@return 添加的节点。

@exception IllegalArgumentException 如果 <code>newChild</code> 为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.metadata.IIOMetadataNode.hasChildNodes()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此节点有子节点，则返回 <code>true</code>。

@return 如果此节点有子节点，则返回 <code>true</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.cloneNode(boolean deep)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此节点的副本。副本节点没有父节点（<code>getParentNode</code> 返回 <code>null</code>）。如果正在执行浅表复制（<code>deep</code> 为 <code>false</code>），则新节点将没有任何子节点或兄弟节点。如果正在执行深层复制，则新节点将形成完整复制的子树的根。

@param deep 如果为 <code>true</code>，则在指定节点下递归式复制子树；如果为 <code>false</code>，则仅复制节点本身。

@return 副本节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.normalize()
<!-- END KEY -->
<!-- BEGIN DATA -->
不执行任何操作，因为 <code>IIOMetadataNode</code> 不包含 <code>Text</code> 子节点。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.metadata.IIOMetadataNode.isSupported(String feature, String version)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>false</code>，因为不支持 DOM 功能。

@return <code>false</code>。

@param feature 一个 <code>String</code>，忽略该参数。
@param version 一个 <code>String</code>，忽略该参数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getNamespaceURI() throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>null</code>，因为不支持名称空间。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getPrefix()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>null</code>，因为不支持名称空间。

@return <code>null</code>。

@see #setPrefix

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.setPrefix(String prefix)
<!-- END KEY -->
<!-- BEGIN DATA -->

不执行任何操作，因为不支持名称空间。

@param prefix 一个 <code>String</code>，忽略该参数。

@see #getPrefix

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getLocalName()
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>getNodeName</code>。

@return 以 <code>String</code> 形式表示的节点名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getAttributeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>getAttribute(localName)</code>。

@see #setAttributeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.setAttributeNS(String namespaceURI, String qualifiedName, String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>setAttribute(qualifiedName, value)</code>。

@see #getAttributeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.removeAttributeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>removeAttribute(localName)</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Attr javax.imageio.metadata.IIOMetadataNode.getAttributeNodeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>getAttributeNode(localName)</code>。

@see #setAttributeNodeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Attr javax.imageio.metadata.IIOMetadataNode.setAttributeNodeNS(Attr newAttr)
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>setAttributeNode(newAttr)</code>。

@see #getAttributeNodeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.NodeList javax.imageio.metadata.IIOMetadataNode.getElementsByTagNameNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>getElementsByTagName(localName)</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.metadata.IIOMetadataNode.hasAttributeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
等效于 <code>hasAttribute(localName)</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.imageio.metadata.IIOMetadataNode.getUserObject()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此节点关联的 <code>Object</code> 值。

@return 用户 <code>Object</code>。

@see #setUserObject

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.setUserObject(Object userObject)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置与此节点关联的值。

@param userObject 用户 <code>Object</code>。

@see #getUserObject

<!-- END DATA -->
