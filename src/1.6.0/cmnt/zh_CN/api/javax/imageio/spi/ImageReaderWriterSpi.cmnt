<!-- BEGIN KEY -->
public abstract class javax.imageio.spi.ImageReaderWriterSpi extends javax.imageio.spi.IIOServiceProvider
<!-- END KEY -->
<!-- BEGIN DATA -->
包含 <code>ImageReaderSpi</code> 和 <code>ImageWriterSpi</code> 常用实例变量和方法的一个超类。

@see IIORegistry
@see ImageReaderSpi
@see ImageWriterSpi

@version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.names
<!-- END KEY -->
<!-- BEGIN DATA -->
从 <code>getFormatNames</code> 返回的字符串数组，该数组最初为 <code>null</code>。构造方法应将此字符串设置为一个非 <code>null</code> 值。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.suffixes
<!-- END KEY -->
<!-- BEGIN DATA -->
从 <code>getFileSuffixes</code> 返回的字符串数组，该数组最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.MIMETypes
<!-- END KEY -->
<!-- BEGIN DATA -->
从 <code>getMIMETypes</code> 返回的字符串数组，该数组最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.imageio.spi.ImageReaderWriterSpi.pluginClassName
<!-- END KEY -->
<!-- BEGIN DATA -->
包含关联的插件类名称的 <code>String</code>，该字符串最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.imageio.spi.ImageReaderWriterSpi.supportsStandardStreamMetadataFormat
<!-- END KEY -->
<!-- BEGIN DATA -->
指示此插件是否支持流元数据的标准元数据格式的 boolean 值，该值最初为 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.imageio.spi.ImageReaderWriterSpi.nativeStreamMetadataFormatName
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的本地流元数据格式名称的 <code>String</code>，该字符串最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.imageio.spi.ImageReaderWriterSpi.nativeStreamMetadataFormatClassName
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的本地流元数据格式的类名称的 <code>String</code>，初始为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.extraStreamMetadataFormatNames
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的其他任何流元数据格式的名称的 <code>String</code> 数组，该字符串最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.extraStreamMetadataFormatClassNames
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的其他任何流元数据格式的类名称的 <code>String</code> 数组，该数组最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.imageio.spi.ImageReaderWriterSpi.supportsStandardImageMetadataFormat
<!-- END KEY -->
<!-- BEGIN DATA -->
指示此插件是否支持图像元数据的标准元数据格式的 boolean 值，该值最初为 <code>false</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.imageio.spi.ImageReaderWriterSpi.nativeImageMetadataFormatName
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的本地流元数据格式名称的 <code>String</code>，该字符串最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.imageio.spi.ImageReaderWriterSpi.nativeImageMetadataFormatClassName
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的本地流元数据格式的类名称的 <code>String</code>，该字符串最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.extraImageMetadataFormatNames
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的其他任何图像元数据格式的名称的 <code>String</code> 数组，该数组最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.extraImageMetadataFormatClassNames
<!-- END KEY -->
<!-- BEGIN DATA -->
包含此插件支持的其他任何图像元数据格式的类名称的 <code>String</code> 数组，该数组最初为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.spi.ImageReaderWriterSpi(String vendorName, String version, java.lang.String[] names, java.lang.String[] suffixes, java.lang.String[] MIMETypes, String pluginClassName, boolean supportsStandardStreamMetadataFormat, String nativeStreamMetadataFormatName, String nativeStreamMetadataFormatClassName, java.lang.String[] extraStreamMetadataFormatNames, java.lang.String[] extraStreamMetadataFormatClassNames, boolean supportsStandardImageMetadataFormat, String nativeImageMetadataFormatName, String nativeImageMetadataFormatClassName, java.lang.String[] extraImageMetadataFormatNames, java.lang.String[] extraImageMetadataFormatClassNames)
<!-- END KEY -->
<!-- BEGIN DATA -->
用给定的一组值构造 <code>ImageReaderWriterSpi</code>。

@param vendorName 供应商名称，它是一个非 <code>null</code> 的 <code>String</code>。
@param version 版本标识符，它是一个非 <code>null</code> 的 <code>String</code>。
@param names 指示格式名称的一个非 <code>null</code> 的 <code>String</code> 数组。必须至少有一个项。
@param suffixes 指示常用文件后缀的 <code>String</code> 数组。如果未定义后缀，则应指定为 <code>null</code>。长度为 0 的数组将被标准化为 <code>null</code>。
@param MIMETypes 指示格式的 MIME 类型的 <code>String</code> 数组。如果未定义 MIME 类型，则应指定为 <code>null</code>。长度为 0 的数组将被标准化为 <code>null</code>。
@param pluginClassName 所关联的 <code>ImageReader</code> 或 <code>ImageWriter</code> 类的完全限定名，它为一个非 <code>null</code> 的 <code>String</code>。
@param supportsStandardStreamMetadataFormat 一个 <code>boolean</code> 值，指示流元数据对象是否可使用由标准元数据格式描述的树。
@param nativeStreamMetadataFormatName 将从 <code>getNativeStreamMetadataFormatName</code> 返回的一个 <code>String</code>，或者为 <code>null</code>。
@param nativeStreamMetadataFormatClassName 将用于实例化从 <code>getNativeStreamMetadataFormat</code> 返回的元数据格式对象的 <code>String</code>，或者为 <code>null</code>。
@param extraStreamMetadataFormatNames 将从 <code>getExtraStreamMetadataFormatNames</code> 返回的 <code>String</code> 数组，或者为 <code>null</code>。长度为 0 的数组将被标准化为 <code>null</code>。
@param extraStreamMetadataFormatClassNames 将用于实例化从 <code>getStreamMetadataFormat</code> 返回的元数据格式对象的 <code>String</code> 数组，或者为 <code>null</code>。长度为 0 的数组将被标准化为 <code>null</code>。
@param supportsStandardImageMetadataFormat 一个 <code>boolean</code> 值，指示图像元数据对象是否可使用由标准元数据格式描述的树。
@param nativeImageMetadataFormatName 将从 <code>getNativeImageMetadataFormatName</code> 返回的一个 <code>String</code>，或者为 <code>null</code>。
@param nativeImageMetadataFormatClassName 将用于实例化从 <code>getNativeImageMetadataFormat</code> 返回的元数据格式对象的 <code>String</code>，或者为 <code>null</code>。
@param extraImageMetadataFormatNames 将从 <code>getExtraImageMetadataFormatNames</code> 返回的 <code>String</code> 数组。长度为 0 的数组将被标准化为 <code>null</code>。
@param extraImageMetadataFormatClassNames 将用于实例化从 <code>getImageMetadataFormat</code> 返回的元数据格式对象的 <code>String</code> 数组，或者为 <code>null</code>。长度为 0 的数组将被标准化为 <code>null</code>。

@exception IllegalArgumentException 如果 <code>vendorName</code> 为 <code>null</code>。
@exception IllegalArgumentException 如果 <code>version</code> 为 <code>null</code>。
@exception IllegalArgumentException 如果 <code>names</code> 为 <code>null</code> 或长度为 0。
@exception IllegalArgumentException 如果 <code>pluginClassName</code> 为 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.spi.ImageReaderWriterSpi()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个空的 <code>ImageReaderWriterSpi</code>。为提供所有方法的可用版本，由子类负责初始化实例变量和/或重写方法实现。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.getFormatNames()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 <code>String</code> 数组，该数组包含通常由与此服务提供者关联的 <code>ImageReader</code> 或 <code>ImageWriter</code> 实现使用的那些格式的可读名称。例如，单独一个 <code>ImageReader</code> 就可以处理 PBM 和 PNM 文件。

@return 非 <code>null</code> 的 <code>String</code> 数组，或者返回一个长度至少为 1 的、包含与此 reader 或 writer 关联的非正式格式名称的数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.getFileSuffixes()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个包含通常可由与此服务提供者关联的 <code>ImageReader</code> 或 <code>ImageWriter</code> 实现所用格式所关联文件后缀列表的 <code>String</code> 数组。例如，单独一个 <code>ImageReader</code> 就可以处理带 '.pbm' 和 '.pnm' 或 '.jpg' 和 '.jpeg' 后缀的文件。如果没有已知的文件后缀，则返回 <code>null</code>。

<p> 返回一个特定的后缀并不保证能够处理具有此后缀的文件；它仅仅指示值得尝试使用此服务提供者解码或编码这样的文件。

@return <code>String</code> 数组，或者返回一个长度至少为 1 的、包含与此 reader 或 writer 关联的常用文件后缀的数组，抑或返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.getMIMETypes()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回一个 <code>String</code> 数组，该数组包含与通常由与此服务提供者关联的 <code>ImageReader</code> 或 <code>ImageWriter</code> 实现使用的格式有关的 MIME 类型的列表。

<p> 理想的情况下，描述一个特定的格式只需要单独某一 MIME 类型。但是，由于种种原因，有必要为每个服务提供者关联一个类型列表。首先，许多常见图像文件不具有标准的 MIME 类型，所以需要一个常用的非正式名称列表，例如 <code>image/x-pbm</code> 和 <code>image/x-portable-bitmap</code>。有些文件格式虽然具有正式的 MIME 类型，但有时被指示使用它们以前的非正式指定，例如使用 <code>image/x-png</code> 而不使用正式的 <code>image/png</code>。最后，从 MIME 的角度来讲，单个服务提供者能够分析多个不同的类型，例如 <code>image/x-xbitmap</code> 和 <code>image/x-xpixmap</code>。

<p> 返回一个特定的 MIME 类型并不保证能够处理声明为此类型的文件；它仅仅指示值得尝试使用此服务提供者解码或编码这样的文件。

@return <code>String</code> 数组或长度至少为 1 的、包含与此 reader 或 writer 关联的 MIME 类型的数组，或者返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.spi.ImageReaderWriterSpi.getPluginClassName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与此服务提供者关联的 <code>ImageReader</code> 或 <code>ImageWriter</code> 插件的完全限定类名称。

@return 类名，它是一个非 <code>null</code> 的 <code>String</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.spi.ImageReaderWriterSpi.isStandardStreamMetadataFormatSupported()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果标准元数据格式是此插件生成或使用的流元数据对象的 <code>getAsTree</code> 和 <code>setFromTree</code> 方法能够识别的文档格式之一，则返回 <code>true</code>。

@return 如果标准格式是流元数据支持的格式，则返回 <code>true</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.spi.ImageReaderWriterSpi.getNativeStreamMetadataFormatName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此插件的&ldquo;本地&rdquo;流元数据格式的名称，它通常允许无损失地编码和传输按照由此插件处理的格式存储的流元数据。如果不支持这样的格式，将返回 <code>null</code>。

<p> 默认实现返回 <code>nativeStreamMetadataFormatName</code> 实例变量，这通常由构造方法设置。

@return 本地流元数据格式的名称，或返回 <code>null</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.getExtraStreamMetadataFormatNames()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回包含其他文档格式名称，而不是此插件生成或使用的流元数据对象的 <code>getAsTree</code> 和 <code>setFromTree</code> 方法可识别的本地和标准格式的 <code>String</code> 数组。

<p> 如果插件不处理元数据，则应返回 null。

<p> 格式集可能因读取或写入的特定图像而不同；此方法应指示插件在任何情况下都支持的其他所有格式。

<p> 默认实现返回 <code>extraStreamMetadataFormatNames</code> 实例变量的副本，该变量通常由构造方法设置。

@return <code>String</code> 数组，或返回 null。

@see IIOMetadata#getMetadataFormatNames
@see #getExtraImageMetadataFormatNames
@see #getNativeStreamMetadataFormatName

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.spi.ImageReaderWriterSpi.isStandardImageMetadataFormatSupported()
<!-- END KEY -->
<!-- BEGIN DATA -->
如果标准元数据格式为此插件生成或使用的图像元数据对象的 <code>getAsTree</code> 和 <code>setFromTree</code> 方法可识别的文档格式之一，则返回 <code>true</code>。

@return 如果标准格式支持图像元数据，则返回 <code>true</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.spi.ImageReaderWriterSpi.getNativeImageMetadataFormatName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此插件的&ldquo;本地&rdquo;图像元数据格式的名称，它通常允许无损失地编码或传输按照由此插件处理的格式存储的图像元数据。如果不支持这样的格式，将返回 <code>null</code>。

<p> 默认实现返回 <code>nativeImageMetadataFormatName</code> 实例变量，该变量通常由构造方法设置。

@return 本地图像元数据格式的名称，或返回 <code>null</code>。

@see #getExtraImageMetadataFormatNames

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.imageio.spi.ImageReaderWriterSpi.getExtraImageMetadataFormatNames()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回包含其他文档格式名称，而不是此插件生成或使用的图像元数据对象的 <code>getAsTree</code> 和 <code>setFromTree</code> 方法可识别的本地和标准格式的 <code>String</code> 数组。

<p> 如果插件不处理图像元数据，则应返回 null。

<p> 格式集可能因读取或写入的特定图像而有所不同；此方法应指示插件在任何情况下都支持的其他所有格式。

<p> 默认的实现返回 <code>extraImageMetadataFormatNames</code> 实例变量的副本，该变量通常由构造方法设置。

@return <code>String</code> 数组，或返回 null。

@see IIOMetadata#getMetadataFormatNames
@see #getExtraStreamMetadataFormatNames
@see #getNativeImageMetadataFormatName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.metadata.IIOMetadataFormat javax.imageio.spi.ImageReaderWriterSpi.getStreamMetadataFormat(String formatName)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回描述给定的流元数据格式的 <code>IIOMetadataFormat</code> 对象，如果没有可用的描述，则返回 <code>null</code>。给定的名称必须是本地流元数据格式名称、标准元数据格式名称或由 <code>getExtraStreamMetadataFormatNames</code> 返回的格式名称之一。

@param formatName 需要的流元数据格式。

@return <code>IIOMetadataFormat</code> 对象。

@exception IllegalArgumentException 如果 <code>formatName</code> 为 <code>null</code> 或者是不受支持的名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.metadata.IIOMetadataFormat javax.imageio.spi.ImageReaderWriterSpi.getImageMetadataFormat(String formatName)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回描述给定的图像元数据格式的 <code>IIOMetadataFormat</code> 对象，如果没有可用的描述，则返回 <code>null</code>。给定的名称必须是本地图像元数据格式名称、标准元数据格式名称或由 <code>getExtraImageMetadataFormatNames</code> 返回的格式名称之一。

@param formatName 需要的图像元数据格式。

@return <code>IIOMetadataFormat</code> 对象。

@exception IllegalArgumentException 如果 <code>formatName</code> 为 <code>null</code> 或者是不受支持的名称。

<!-- END DATA -->
