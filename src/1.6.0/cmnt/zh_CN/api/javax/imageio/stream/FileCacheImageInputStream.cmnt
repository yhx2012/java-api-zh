<!-- BEGIN KEY -->
public class javax.imageio.stream.FileCacheImageInputStream extends javax.imageio.stream.ImageInputStreamImpl
<!-- END KEY -->
<!-- BEGIN DATA -->
从常规 <code>InputStream</code> 获取其输入的 <code>ImageInputStream</code> 的实现。使用文件缓存以前读取的数据。

@version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.stream.FileCacheImageInputStream(InputStream stream, File cacheDir) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个将从给定 <code>InputStream</code> 进行读取的 <code>FileCacheImageInputStream</code>。

<p> 将临时文件用作缓存。如果 <code>cacheDir</code> 不为 <code>null</code> 且是一个目录，则在该处创建文件。如果为 <code>null</code>，则使用与系统相关的默认临时文件目录（有关详细资料，请参阅 <code>File.createTempFile</code> 的文档）。

@param stream 要从其进行读取的 <code>InputStream</code>。
@param cacheDir 一个指示缓存文件创建目录的 <code>File</code>；或 <code>null</code>，指示使用系统目录。

@exception IllegalArgumentException 如果 <code>stream</code> 为 <code>null</code>。
@exception IllegalArgumentException 如果 <code>cacheDir</code> 不为 <code>null</code> 但不是一个目录。
@exception IOException 如果无法创建缓存文件。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.stream.FileCacheImageInputStream.isCached()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>true</code>，因为此 <code>ImageInputStream</code> 为了允许逆向查找而缓存了数据。

@return <code>true</code>。

@see #isCachedMemory
@see #isCachedFile

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.stream.FileCacheImageInputStream.isCachedFile()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>true</code>，因为此 <code>ImageInputStream</code> 维护文件缓存。

@return <code>true</code>。

@see #isCached
@see #isCachedMemory

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.stream.FileCacheImageInputStream.isCachedMemory()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回 <code>false</code>，因为此 <code>ImageInputStream</code> 不维护主存缓存。

@return <code>false</code>。

@see #isCached
@see #isCachedFile

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.stream.FileCacheImageInputStream.close() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
关闭此 <code>FileCacheImageInputStream</code>，关闭并移除缓存文件。但不关闭源 <code>InputStream</code>。

@exception IOException 如果发生错误。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.imageio.stream.FileCacheImageInputStream.finalize() throws java.lang.Throwable
<!-- END KEY -->
<!-- BEGIN DATA -->
 {@inheritDoc}

<!-- END DATA -->
