<!-- BEGIN KEY -->
public interface javax.rmi.CORBA.StubDelegate
<!-- END KEY -->
<!-- BEGIN DATA -->
支持 {@link Stub} 中方法实现的委托。委托是类的实例，此类实现此接口并提供 <code>javax.rmi.CORBA.Stub</code> 的所有方法的替代实现。如果启用了委托，则每个 stub 都有一个关联的委托。

通过提供委托的类名称作为 <code>javax.rmi.CORBA.StubClass</code> 系统属性的值来启用委托。

@see Stub

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.rmi.CORBA.StubDelegate.hashCode(Stub self)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@link Stub#hashCode} 的委托调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.rmi.CORBA.StubDelegate.equals(Stub self, Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@link Stub#equals} 的委托调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.rmi.CORBA.StubDelegate.toString(Stub self)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@link Stub#toString} 的委托调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.rmi.CORBA.StubDelegate.connect(Stub self, ORB orb) throws java.rmi.RemoteException
<!-- END KEY -->
<!-- BEGIN DATA -->
{@link Stub#connect} 的委托调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.rmi.CORBA.StubDelegate.readObject(Stub self, ObjectInputStream s) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
<a href="{@docRoot}/serialized-form.html#javax.rmi.CORBA.Stub"><code>Stub.readObject(java.io.ObjectInputStream)</code></a> 的委托调用。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.rmi.CORBA.StubDelegate.writeObject(Stub self, ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
<a href="{@docRoot}/serialized-form.html#javax.rmi.CORBA.Stub"><code>Stub.writeObject(java.io.ObjectOutputStream)</code></a> 的委托调用。

<!-- END DATA -->
