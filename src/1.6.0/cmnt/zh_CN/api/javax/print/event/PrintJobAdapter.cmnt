<!-- BEGIN KEY -->
public abstract class javax.print.event.PrintJobAdapter extends java.lang.Object implements javax.print.event.PrintJobListener
<!-- END KEY -->
<!-- BEGIN DATA -->
接收打印作业事件的抽象适配器类。此类中的方法为空。此类存在的目的只是为了便于创建侦听器对象。扩展此类可创建 {@link PrintJobEvent} 侦听器并重写所需事件的方法。与 {@link java.awt.event.ComponentListener ComponentListener} 接口不同，此抽象接口提供了 null 方法，因此您只需要定义所需的方法，而不需要定义所有的方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.print.event.PrintJobAdapter.printDataTransferCompleted(PrintJobEvent pje)
<!-- END KEY -->
<!-- BEGIN DATA -->
调用此方法来通知客户端，已成功地将数据传输到打印服务，客户端可以释放分配给该数据的本地资源。接收到此事件之后，客户端不应假定已完全打印了该数据。

@param pje 要通知的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.print.event.PrintJobAdapter.printJobCompleted(PrintJobEvent pje)
<!-- END KEY -->
<!-- BEGIN DATA -->

调用此方法来通知客户端，作业已成功完成。

@param pje 要通知的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.print.event.PrintJobAdapter.printJobFailed(PrintJobEvent pje)
<!-- END KEY -->
<!-- BEGIN DATA -->

调用此方法来通知客户端，无法成功完成作业，必须重新提交该作业。

@param pje 要通知的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.print.event.PrintJobAdapter.printJobCanceled(PrintJobEvent pje)
<!-- END KEY -->
<!-- BEGIN DATA -->

调用此方法来通知客户端，作业已被用户或程序取消。

@param pje 要通知的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.print.event.PrintJobAdapter.printJobNoMoreEvents(PrintJobEvent pje)
<!-- END KEY -->
<!-- BEGIN DATA -->

调用此方法来通知客户端，不需要再提供事件。生成此事件的原因之一是：作业已成功完成，但打印系统功能有限，无法验证此事件。如果未提供其他的终端事件（完成/失败/取消），则必须提供此事件。

@param pje 要通知的事件

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.print.event.PrintJobAdapter.printJobRequiresAttention(PrintJobEvent pje)
<!-- END KEY -->
<!-- BEGIN DATA -->

调用此方法来通知客户端，可能会发生一些用户可纠正的问题（例如打印机缺纸）。

@param pje 要通知的事件

<!-- END DATA -->
