<!-- BEGIN KEY -->
public static class javax.print.DocFlavor.INPUT_STREAM extends javax.print.DocFlavor
<!-- END KEY -->
<!-- BEGIN DATA -->
类 DocFlavor.INPUT_STREAM 提供了预定义的静态常量 DocFlavor 对象，例如使用 byte 流 ({@link java.io.InputStream <CODE>java.io.InputStream</CODE>}) 作为打印数据表示形式类的 DocFlavor。 
 <P>

@author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_HOST
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/plain&quot;</CODE>（以主机平台编码形式编码）的 DocFlavor。请参阅 {@link DocFlavor#hostEncoding <CODE>hostEncoding</CODE>}。打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_8
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/plain; charset=utf-8&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_16
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/plain; charset=utf-16&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_16BE
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/plain; charset=utf-16be&quot;</CODE>（big-endian 字节顺序），打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_16LE
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/plain; charset=utf-16le&quot;</CODE>（little-endian 字节顺序），打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_US_ASCII
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/plain; charset=us-ascii&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_HOST
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/html&quot;</CODE>（以主机平台编码形式编码）的 DocFlavor。请参阅 {@link DocFlavor#hostEncoding <CODE>hostEncoding</CODE>}。打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_8
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/html; charset=utf-8&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_16
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/html; charset=utf-16&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_16BE
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/html; charset=utf-16be&quot;</CODE>（big-endian 字节顺序），打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_16LE
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/html; charset=utf-16le&quot;</CODE>（little-endian 字节顺序），打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_US_ASCII
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;text/html; charset=us-ascii&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.PDF
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;application/pdf&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.POSTSCRIPT
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;application/postscript&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.PCL
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;application/vnd.hp-PCL&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.GIF
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;image/gif&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.JPEG
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;image/jpeg&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.PNG
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;image/png&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.AUTOSENSE
<!-- END KEY -->
<!-- BEGIN DATA -->
MIME 类型 = <CODE>&quot;application/octet-stream&quot;</CODE>，打印数据表示形式类名 = <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的 DocFlavor。客户端必须确定使用此 DocFlavor 所描述的数据对于打印机是否有效。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.DocFlavor.INPUT_STREAM(String mimeType)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有给定 MIME 类型和打印数据表示形式类名 <CODE>&quot;java.io.InputStream&quot;</CODE>（byte 流）的新 DocFlavor。 

@param mimeType MIME 媒体类型字符串。

@exception NullPointerException （未经检查的异常）如果 <CODE>mimeType</CODE> 为 null。
@exception IllegalArgumentException （未经检查的异常）如果 <CODE>mimeType</CODE> 未遵守 MIME 媒体类型字符串的语法约定。 

<!-- END DATA -->
