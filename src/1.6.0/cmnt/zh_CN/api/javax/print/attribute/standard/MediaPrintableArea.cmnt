<!-- BEGIN KEY -->
public final class javax.print.attribute.standard.MediaPrintableArea extends java.lang.Object implements javax.print.attribute.DocAttribute, javax.print.attribute.PrintRequestAttribute, javax.print.attribute.PrintJobAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
MediaPrintableArea 类是打印属性类，用于区分介质的可打印区域和不可打印区域。
 <p>
可打印区域被指定为介质总维度之内的矩形。 
 <p>
大多数打印机不能在介质的整个表面上打印，这是由于打印机的硬件限制。此类可用于查询所假定的打印作业的可接受值，以及请求要在打印作业中使用的可打印区域的限制之内的某个区域。
 <p>
要查询可打印区域，客户机必须提供适合的上下文。如果不至少指定要使用的介质尺寸，则不能获取有意义的可打印区域值。
 <p>
此属性不是根据与纸边的距离描述的，部分是强调此属性不是与特定介质无关的，但必须在其他属性的选择上下文中进行描述。此外，客户机使用可打印区域更为方便。
 <p>
硬件的最小页边距不仅是打印机的属性，而且是介质尺寸、方向、介质类型和任何指定的 finishing 的函数。<code>PrintService</code> 提供了在适合的上下文中查询支持的属性值的方法：参见 {@link javax.print.PrintService#getSupportedAttributeValues(Class,DocFlavor, AttributeSet) <code>PrintService.getSupportedAttributeValues()</code>}
 <p>
矩形可打印区域定义如下：在纵向模式中，(x,y) 原点位于纸张左上角，与在请求上下文中所指定的方向无关。例如，纵向或横向方向中 A4 纸的可打印区域中， height &gt; width。
 <p>
可打印区域属性的值以整数值形式进行内部存储，以 micrometers (&micro;m) 为单位，其中 1 micrometer = 10<SUP>-6</SUP> meter = 1/1000 millimeter = 1/25400 inch。这使要表示的维度精确到 1/1000 毫米 (= 1 &#xB5;m) 或 1/100 英寸 (= 254 &#xB5;m)。如果小数 inch 以 2 的负数次幂表示，则这允许将维度精确表示为 1/8 inch (= 3175 &#xB5;m) 而不是 1/16 inch 的精度（因为 1/16 inch 不等于整数的 &#xB5;m）。
 <p>
 <B>IPP Compatibility:</B> MediaPrintableArea 不是 IPP 属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.attribute.standard.MediaPrintableArea.INCH
<!-- END KEY -->
<!-- BEGIN DATA -->
指示以 inch (in) 为单位的值。它实际上是转换因子，英寸乘以该转换因子得到微米 (25400)。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.attribute.standard.MediaPrintableArea.MM
<!-- END KEY -->
<!-- BEGIN DATA -->
指示以 millimeters (mm) 为单位的值。它实际上是转换因子，毫米乘以该转换因子得到微米 (1000)。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.MediaPrintableArea(float x, float y, float w, float h, int units)
<!-- END KEY -->
<!-- BEGIN DATA -->
从浮点值构造 MediaPrintableArea 对象。
@param x      可打印的 x
@param y      可打印的 y
@param w      可打印的 width
@param h      可打印的 height
@param units  用于表示值的单位。

@exception  IllegalArgumentException 如果 <CODE>x</CODE> &lt; 0 或 <CODE>y</CODE> &lt; 0 或 <CODE>w</CODE> &lt;= 0 或 <CODE>h</CODE> &lt;= 0 或 <CODE>units</CODE> &lt; 1，则抛出此异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.MediaPrintableArea(int x, int y, int w, int h, int units)
<!-- END KEY -->
<!-- BEGIN DATA -->
从整数值构造 MediaPrintableArea 对象。
@param x      可打印的 x
@param y      可打印的 y
@param w      可打印的 width
@param h      可打印的 height
@param units  用于表示值的单位。
 
@exception  IllegalArgumentException 如果 <CODE>x</CODE> &lt; 0 或 <CODE>y</CODE> &lt; 0 或 <CODE>w</CODE> &lt;= 0 或 <CODE>h</CODE> &lt;= 0 或 <CODE>units</CODE> &lt; 1，则抛出此异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float[] javax.print.attribute.standard.MediaPrintableArea.getPrintableArea(int units)
<!-- END KEY -->
<!-- BEGIN DATA -->
以顺序为 x, y, w, h 的 4 个值的数组形式获取可打印区域。返回的值以给定单位为单位。
@param  units 单位转换因子，例如，{@link #INCH <CODE>INCH</CODE>} 或 {@link #MM <CODE>MM</CODE>}。

@return 以指定的单位返回 x, y, w, h 数组形式的可打印区域。

@exception  IllegalArgumentException （未经检查的异常）如果 <CODE>units</CODE> &lt; 1，则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.print.attribute.standard.MediaPrintableArea.getX(int units)
<!-- END KEY -->
<!-- BEGIN DATA -->
以指定的单位获取可打印区域的原点的 x 位置。
@param  units 单位转换因子，例如，{@link #INCH <CODE>INCH</CODE>} 或 {@link #MM <CODE>MM</CODE>}。

@return  以指定单位返回可打印区域的原点的 x 位置。

@exception  IllegalArgumentException （未经检查的异常）如果 <CODE>units</CODE> &lt; 1，则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.print.attribute.standard.MediaPrintableArea.getY(int units)
<!-- END KEY -->
<!-- BEGIN DATA -->
以指定单位获取可打印区域的原点的 y 位置。
@param  units 单位转换因子，例如，{@link #INCH <CODE>INCH</CODE>} 或 {@link #MM <CODE>MM</CODE>}。

@return  以指定单位返回可打印区域的原点的 y 位置。

@exception  IllegalArgumentException （未经检查的异常）如果 <CODE>units</CODE> &lt; 1，则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.print.attribute.standard.MediaPrintableArea.getWidth(int units)
<!-- END KEY -->
<!-- BEGIN DATA -->
以指定单位获取可打印区域的 width。
@param  units 单位转换因子，例如，{@link #INCH <CODE>INCH</CODE>} 或 {@link #MM <CODE>MM</CODE>}。

@return  以指定单位返回可打印区域的 width。

@exception  IllegalArgumentException （未经检查的异常）如果 <CODE>units</CODE> &lt; 1，则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.print.attribute.standard.MediaPrintableArea.getHeight(int units)
<!-- END KEY -->
<!-- BEGIN DATA -->
以指定单位获取可打印区域的 height。
@param  units 单位转换因子，例如 {@link #INCH <CODE>INCH</CODE>} 或 {@link #MM <CODE>MM</CODE>}。

@return  以指定单位返回可打印区域的 height。

@exception  IllegalArgumentException （未经检查的异常）如果 <CODE>units</CODE> &lt; 1，则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.print.attribute.standard.MediaPrintableArea.equals(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此介质页边距属性是否等效于传入的对象。若要等效，以下所有条件都必须为 true：
 <OL TYPE=1>
 <LI>
<CODE>object</CODE> 不为 null。
 <LI>
<CODE>object</CODE> 为 MediaPrintableArea 类的实例。
 <LI>
原点和维度是相同的。
 </OL>

@param  object  要比较的 Object。

@return 如果 <CODE>object</CODE> 等效于此介质页边距属性，则返回 true，否则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<? extends javax.print.attribute.Attribute> javax.print.attribute.standard.MediaPrintableArea.getCategory()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取将被用作此打印属性值的&ldquo;类别&rdquo;的打印属性类。
 <P>
对于 MediaPrintableArea 类，类别为 MediaPrintableArea 类本身。

@return  打印属性类（类别），它是 {@link java.lang.Class java.lang.Class} 类的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String javax.print.attribute.standard.MediaPrintableArea.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取类别名称，此属性值为该类别的实例。
 <P>
对于 MediaPrintableArea 类，类别名称为 <CODE>&quot;media-printable-area&quot;</CODE>。
<p>这不是 IPP V1.1 属性。

@return  属性类别名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.print.attribute.standard.MediaPrintableArea.toString(int units, String unitsName)
<!-- END KEY -->
<!-- BEGIN DATA -->
以给定单位返回此矩形大小属性的字符串版本。

@param  units 单位转换因子，例如 {@link #INCH <CODE>INCH</CODE>} 或 {@link #MM <CODE>MM</CODE>}。
@param  unitsName 单位名称字符串，例如 <CODE>&quot;in&quot;</CODE> 或 <CODE>&quot;mm&quot;</CODE>。如果为 null，则没有任何单位名称附加到该结果。

@return  此二维大小属性的字符串版本。

@exception  IllegalArgumentException （未经检查的异常）如果 <CODE>units</CODE> &lt; 1，则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.print.attribute.standard.MediaPrintableArea.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 mm 为单位返回此矩形大小属性的字符串版本。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.print.attribute.standard.MediaPrintableArea.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此属性的哈希码值。

<!-- END DATA -->
