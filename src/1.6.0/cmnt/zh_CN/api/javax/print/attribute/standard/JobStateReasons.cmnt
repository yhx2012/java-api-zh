<!-- BEGIN KEY -->
public final class javax.print.attribute.standard.JobStateReasons extends java.util.HashSet implements javax.print.attribute.PrintJobAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
JobStateReasons 类是打印属性类，它是一个枚举值集合，提供了有关作业当前状态的额外信息，即扩充作业的 {@link JobState JobState} 属性值的信息。
 <P>
{@link JobStateReason JobStateReason} 的实例不直接出现在 Print Job 的属性集中。但是，JobStateReasons 属性出现在 Print Job 的属性集中。JobStateReasons 属性包含零个、一个或多个 {@link JobStateReason JobStateReason} 对象，它们属于 Print Job 的状态。当 Print Job 的对应条件变为 true 时，打印机将 {@link JobStateReason JobStateReason} 对象添加到 Print Job 的 JobStateReasons 属性，且当对应条件变为 false 时，再移除 {@link JobStateReason JobStateReason} 对象，而不管 Print Job 的总体 {@link JobState JobState} 是否也更改。 
 <P>
JobStateReasons 类从 {@link java.util.HashSet java.util.HashSet} 类继承其实现。与大多数构造后不可变的打印属性不同，我们把 JobStateReasons 类设计为可变的，您可以将 {@link JobStateReason JobStateReason} 对象添加到现有 JobStateReasons 对象中，也可以再移除它们。但是，与 {@link java.util.HashSet java.util.HashSet} 类一样, JobStateReasons 类不是多线程安全的。如果 JobStateReasons 对象将供多个线程使用，则要保证使其操作同步（例如，使用从 {@link java.util.Collections java.util.Collections} 类获取的同步 set 视图）。 
 <P>
 <B>IPP 兼容性：</B>每个单个 {@link JobStateReason JobStateReason} 对象的 <CODE>toString()</CODE> 方法所返回的字符串值给出了 IPP 关键字值。<CODE>getName()</CODE> 所返回的类别名称给出了 IPP 属性名称。 
 <P>

@author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.JobStateReasons()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的空作业状态原因属性；底层哈希集合具有默认的初始容量和加载因子。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.JobStateReasons(int initialCapacity)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的空作业状态原因属性；底层哈希集合具有给定的初始容量和默认的加载因子。 

@param  initialCapacity 初始容量。
@throws  IllegalArgumentException 如果初始容量小于零。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.JobStateReasons(int initialCapacity, float loadFactor)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的空作业状态原因属性；底层哈希集合具有给定的容量和加载因子。 

@param  initialCapacity 初始容量。
@param  loadFactor      加载因子。
@throws  IllegalArgumentException 如果初始容量小于零。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.JobStateReasons(java.util.Collection<javax.print.attribute.standard.JobStateReason> collection)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造新的作业状态原因属性，它包含与给定集合相同的 {@link JobStateReason JobStateReason} 对象。底层哈希集合的初始容量和加载因子如超类构造方法 {@link java.util.HashSet#HashSet(java.util.Collection) <CODE>HashSet(Collection)</CODE>} 中所指定的那样。 

@param  collection  要复制的集合。

@exception  NullPointerException （未检查的异常）如果 <CODE>collection</CODE> 为 null，或 <CODE>collection</CODE> 中任何元素为 null，则抛出此异常。
@throws  ClassCastException （未检查的异常）如果 <CODE>collection</CODE> 中任何元素不是 {@link JobStateReason JobStateReason} 类的实例，则抛出此异常。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.print.attribute.standard.JobStateReasons.add(JobStateReason o)
<!-- END KEY -->
<!-- BEGIN DATA -->
将指定的元素添加到此作业状态原因属性（如果它尚未存在）。要添加的元素必须为 {@link JobStateReason JobStateReason} 类的实例。如果此作业状态原因属性已经包含指定的元素，则该调用不改变此作业状态原因属性并返回 <tt>false</tt>。 

@param o 将要添加到此作业状态原因属性中的元素。

@return  如果此作业状态原因属性不包含指定的元素，则返回 <tt>true</tt>。 
 
@throws  NullPointerException （未检查的异常）如果指定的元素为 null，则抛出此异常。
@throws  ClassCastException （未检查的异常）如果指定的元素不是 {@link JobStateReason JobStateReason} 类的实例，则抛出此异常。
@since 1.5 

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<? extends javax.print.attribute.Attribute> javax.print.attribute.standard.JobStateReasons.getCategory()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取将被用作此打印属性值的&ldquo;类别&rdquo;的打印属性类。
 <P>
对于 JobStateReasons 类，类别为 JobStateReasons 类本身。 

@return  打印属性类（类别），它是 {@link java.lang.Class java.lang.Class} 类的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String javax.print.attribute.standard.JobStateReasons.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取类别名称，此属性值为该类别的实例。 
 <P>
对于 JobStateReasons 类，类别名称为 <CODE>&quot;job-state-reasons&quot;</CODE>。 

@return  属性类别名称。

<!-- END DATA -->
