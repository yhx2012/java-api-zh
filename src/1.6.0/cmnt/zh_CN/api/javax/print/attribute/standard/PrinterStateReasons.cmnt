<!-- BEGIN KEY -->
public final class javax.print.attribute.standard.PrinterStateReasons extends java.util.HashMap implements javax.print.attribute.PrintServiceAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
PrinterStateReasons 类是打印属性类，它是一组枚举值集合，提供了有关打印机当前状态的附加信息，即扩充了打印机 {@link PrinterState PrinterState} 属性值的信息。 
 <P>
{@link PrinterStateReason PrinterStateReason} 的实例不会直接出现在 Print Service 的属性集中。而 PrinterStateReasons 属性则会出现在 Print Service 的属性集中。PrinterStateReasons 属性包括零、一个或多个与 Print Service 的状态相关的 {@link PrinterStateReason PrinterStateReason} 对象，并且每个 {@link PrinterStateReason PrinterStateReason} 对象都与 REPORT（不太严重）、WARNING 或 ERROR（最严重）的 {@link Severity Severity} 级别相关联。当相应的条件变成了打印机的真实条件时，打印机将把 {@link PrinterStateReason PrinterStateReason} 对象添加到 Print Service 的 PrinterStateReasons 属性中，而当相应的条件变成虚假条件时，无论 Print Service 的总体 {@link PrinterState PrinterState} 是否也已更改，打印机都将再次移除 {@link PrinterStateReason PrinterStateReason} 对象。 
 <P>
类 PrinterStateReasons 从类 {@link java.util.HashMap java.util.HashMap} 中继承了其实现。映射中的每一项都包括映射到 {@link Severity Severity} 对象（值）的 {@link PrinterStateReason PrinterStateReason} 对象（键）：
 <P>
与大部分一旦构造就不可改变的打印属性不同，类 PrinterStateReasons 设计为可变的；您可以将 {@link PrinterStateReason PrinterStateReason} 对象添加到现有的 PrinterStateReasons 对象中，并可将它们移除。不过，与类 {@link java.util.HashMap java.util.HashMap} 一样，类 PrinterStateReasons 具有 bot 多线程安全性。如果 PrinterStateReasons 对象将由多线程使用，则一定要同步其操作（例如，使用从类 {@link java.util.Collections java.util.Collections} 中获取的已同步映射视图）。 
 <P>
<B>IPP 兼容性：</B>字符串值由每个 {@link PrinterStateReason PrinterStateReason} 对象和相关的 {@link Severity Severity} 对象的 <CODE>toString()</CODE> 方法返回，它们之间用连字号 (<CODE>&quot;-&quot;</CODE>) 连接，该值提供了 IPP 关键字值。由 <CODE>getName()</CODE> 返回的类别名称提供了 IPP 属性名称。 
 <P>

@author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.PrinterStateReasons()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的空 PrinterStateReasons 属性；底层哈希映射具有默认的初始容量和加载因子。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.PrinterStateReasons(int initialCapacity)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的空 PrinterStateReasons 属性；底层哈希映射具有给定的初始容量和默认的加载因子。 

@param initialCapacity 初始容量。

@throws IllegalArgumentException 如果初始容量小于零。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.PrinterStateReasons(int initialCapacity, float loadFactor)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的空 PrinterStateReasons 属性；底层哈希映射具有给定的初始容量和加载因子。 

@param initialCapacity 初始容量。
@param loadFactor 加载因子。

@throws IllegalArgumentException 如果初始容量小于零。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.PrinterStateReasons(java.util.Map<javax.print.attribute.standard.PrinterStateReason, javax.print.attribute.standard.Severity> map)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的 PrinterStateReasons 属性，它包括与给定映射相同的 {@link PrinterStateReason PrinterStateReason} 到 {@link Severity Severity} 映射关系。底层哈希映射的初始容量和加载因子与在超类构造方法 {@link java.util.HashMap#HashMap(java.util.Map) <CODE>HashMap(Map)</CODE>} 中指定的相同。 

@param map 要复制的映射。

@exception NullPointerException （未经检查的异常）如果 <CODE>map</CODE> 为 null，或者 <CODE>map</CODE> 中的任何键或值为 null。
@throws ClassCastException （未经检查的异常）如果 <CODE>map</CODE> 中的任何键不是类 {@link PrinterStateReason PrinterStateReason} 的一个实例，或者 <CODE>map</CODE> 中的任何值不是类 {@link Severity Severity} 一个实例。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.Severity javax.print.attribute.standard.PrinterStateReasons.put(PrinterStateReason reason, Severity severity)
<!-- END KEY -->
<!-- BEGIN DATA -->
根据给定的严重性级别，将给定的打印机状态原因添加到此 PrinterStateReasons 属性中。如果此 PrinterStateReasons 属性以前包含了给定打印机状态原因的映射关系，则取代原来的值。 

@param reason 打印机状态原因。这必须是类 {@link PrinterStateReason PrinterStateReason} 的一个实例。
@param severity 打印机状态原因的严重性。这必须是类 {@link Severity Severity} 的一个实例。

@return 以前与给定打印机状态原因相关联的严重性，如果给定的打印机状态原因不存在，则返回 <tt>null</tt>。 
 
@throws NullPointerException （未经检查的异常）如果 <CODE>reason</CODE> 为 null，或者 <CODE>severity</CODE> 为 null。
@throws ClassCastException （未经检查的异常）如果 <CODE>reason</CODE> 不是类 {@link PrinterStateReason PrinterStateReason} 的一个实例，或者 <CODE>severity</CODE> 不是类 {@link Severity Severity} 的一个实例。
@since 1.5 

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<? extends javax.print.attribute.Attribute> javax.print.attribute.standard.PrinterStateReasons.getCategory()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取将用作此打印属性值的&ldquo;类别&rdquo;的打印属性类。
 <P>
对于类 PrinterStateReasons，该类别就是类 PrinterStateReasons 本身。 

@return 打印属性类（类别），这是类 {@link java.lang.Class java.lang.Class} 的一个实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String javax.print.attribute.standard.PrinterStateReasons.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取类别的名称，此属性值是该类别的一个实例。 
 <P>
对于类 PrinterStateReasons，类别名称是 <CODE>&quot;printer-state-reasons&quot;</CODE>。 

@return 属性类别名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<javax.print.attribute.standard.PrinterStateReason> javax.print.attribute.standard.PrinterStateReasons.printerStateReasonSet(Severity severity)
<!-- END KEY -->
<!-- BEGIN DATA -->
在此 PrinterStateReasons 中，获得在给定的严重性级别每个 PrinterStateReasons 属性的不可修改的视图集。该视图集中的每个元素都是一个 {@link PrinterStateReason PrinterStateReason} 对象。视图集中仅有的元素是映射到给定严重性值的 {@link PrinterStateReason PrinterStateReason} 对象。该视图集受此 PrinterStateReasons 属性支持，因此，对此 PrinterStateReasons 属性的更改会在视图集中反映出来。该视图集不支持元素插入或移除。视图集的迭代器不支持元素移除。 

@param severity 严重性级别。

@return 在给定 {@link Severity Severity} 级别每个 {@link PrinterStateReason PrinterStateReason} 属性的视图集。 

@exception NullPointerException （未经检查的异常）如果 <CODE>severity</CODE> 为 null。

<!-- END DATA -->
