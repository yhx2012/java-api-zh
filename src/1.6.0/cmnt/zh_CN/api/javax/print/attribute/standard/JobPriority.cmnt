<!-- BEGIN KEY -->
public final class javax.print.attribute.standard.JobPriority extends javax.print.attribute.IntegerSyntax implements javax.print.attribute.PrintRequestAttribute, javax.print.attribute.PrintJobAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
JobPriority 类是整数值形式的打印属性类，它指定了打印作业的优先级。 
 <P>
如果为 Print Job 指定了 JobPriority 属性，则它指定了安排作业的优先级。较高的值指定较高的优先级。值 1 指示最低的可能优先级。值 100 指示最高的可能优先级。在准备打印的作业中，打印机必须在打印优先级值为 <I>n</I>-1 的所有作业之前，打印所有优先级值为 <I>n</I> 的作业。 
 <P>
如果客户机未指定 Print Job 的 JobPriority 属性，且打印机不支持 JobPriority 属性，则打印机必须使用由实现所定义的默认值。 
 <P>
客户机可以总是为某作业指定任何 1 到 100 的作业优先级值。但是，Print Service 实例可能支持小于 100 的不同作业优先级级别。如果是这种情况，则 Print Service 实例自动将由客户机指定的作业优先级值映射为某个支持的作业优先级级别，将 100 个优先级值平均分为可用的作业优先级级别。 
 <P>
 <B>IPP Compatibility:</B> 整数值给出了 IPP 整数值。<CODE>getName()</CODE> 所返回的类别名称给出了 IPP 属性名称。 
 <P>

@author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.JobPriority(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有给定整数值的新 JobPriority 属性。 

@param  value  整数值。

@exception  IllegalArgumentException （未检查的异常）如果 <CODE>value</CODE> 小于 1 或大于 100，则抛出该异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.print.attribute.standard.JobPriority.equals(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此作业优先级属性是否等效于传入的对象。若要等效，以下所有条件都必须为 true： 
 <OL TYPE=1>
 <LI>
<CODE>object</CODE> 不为 null。
 <LI>
<CODE>object</CODE> 为 JobPriority 类的实例。
 <LI>
此作业优先级属性的值与 <CODE>object</CODE> 的值相等。 
 </OL>

@param  object  要比较的 Object。

@return 如果 <CODE>object</CODE> 等效于此作业优先级属性，则返回 true，否则返回 false。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<? extends javax.print.attribute.Attribute> javax.print.attribute.standard.JobPriority.getCategory()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取将被用作此打印属性值的&ldquo;类别&rdquo;的打印属性类。
 <P>
对于 JobPriority 类，类别为 JobPriority 类本身。

@return  打印属性类（类别），它是 {@link java.lang.Class java.lang.Class} 类的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String javax.print.attribute.standard.JobPriority.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取类别名称，此属性值为该类别的实例。 
 <P>
对于 JobPriority 类，类别名称为 <CODE>&quot;job-priority&quot;</CODE>。

@return  属性类别名称。

<!-- END DATA -->
