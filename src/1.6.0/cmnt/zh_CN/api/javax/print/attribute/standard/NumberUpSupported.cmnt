<!-- BEGIN KEY -->
public final class javax.print.attribute.standard.NumberUpSupported extends javax.print.attribute.SetOfIntegerSyntax implements javax.print.attribute.SupportedValuesAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
NumberUpSupported 类是打印属性类，它是一个整数集，给出了支持的 {@link NumberUp NumberUp} 属性值。 
 <P>
 <B>IPP Compatibility:</B> NumberUpSupported 属性的规范数组形式给出了要包含于 IPP &quot;number-up-supported&quot; 属性中的 number-up 的范围的下边界和上边界。有关规范数组形式的解释，请参见 {@link javax.print.attribute.SetOfIntegerSyntax SetOfIntegerSyntax}。<CODE>getName()</CODE> 所返回的类别名称给出了 IPP 属性名称。 
 <P>

@author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.NumberUpSupported(int[][] members)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造具有给定成员的新的 NumberUpSupported 属性。支持的 NumberUp 值用&quot;数组形式&quot;指定；有关数据形式的解释，请参见 {@link javax.print.attribute.SetOfIntegerSyntax SetOfIntegerSyntax} 类。 

@param  members  数组形式的集合成员。

@exception  NullPointerException （未检查的异常）如果 <CODE>members</CODE> 为 null 或 <CODE>members</CODE> 的任何元素为 null，则抛出此异常。
@exception  IllegalArgumentException （未检查的异常）如果 <CODE>members</CODE> 的任何元素不是长度为 1 或 2 的数组，则抛出此异常。如果 <CODE>members</CODE> 为零长度的数组或集合的任何成员小于 1，也抛出此异常。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.NumberUpSupported(int member)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个包含单个整数的新的 NumberUpSupported 属性。即仅支持 NumberUp 的某个值。 

@param  member  集合成员。

@exception  IllegalArgumentException （未检查的异常）如果 <CODE>member</CODE> 小于 1，则抛出此异常。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.attribute.standard.NumberUpSupported(int lowerBound, int upperBound)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个包含单个整数范围的新的 NumberUpSupported 属性。即仅支持某个范围中的 NumberUp 值。 

@param  lowerBound  范围的下边界。
@param  upperBound  范围的上边界。

@exception  IllegalArgumentException （未检查的异常）如果指定了 null 范围，或者指定了 <CODE>lowerBound</CODE> 小于 1 的非 null 范围，则抛出此异常。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.print.attribute.standard.NumberUpSupported.equals(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此 NumberUpSupported 属性是否等效于传入的对象。若要等效，以下所有条件都必须为 true： 
 <OL TYPE=1>
 <LI>
<CODE>object</CODE> 不为 null。
 <LI>
<CODE>object</CODE> 为 NumberUpSupported 类的实例。
 <LI>
此 NumberUpSupported 属性的成员与 <CODE>object</CODE> 的成员相同。 
 </OL>

@param  object  要比较的 Object。

@return 如果 <CODE>object</CODE> 等效于此 NumberUpSupported 属性，则返回 true，否则返回 false。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<? extends javax.print.attribute.Attribute> javax.print.attribute.standard.NumberUpSupported.getCategory()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取将被用作此打印属性值的&ldquo;类别&rdquo;的打印属性类。
 <P>
对于 NumberUpSupported 类，类别为 NumberUpSupported 类本身。 

@return  打印属性类（类别），它是 {@link java.lang.Class java.lang.Class} 类的实例。

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String javax.print.attribute.standard.NumberUpSupported.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取类别名称，此属性值为该类别的实例。 
 <P>
对于 NumberUpSupported 类，类别名称为 <CODE>&quot;number-up-supported&quot;</CODE>。

@return  属性类别名称。

<!-- END DATA -->
