<!-- BEGIN KEY -->
public class javax.script.SimpleBindings extends java.lang.Object implements javax.script.Bindings
<!-- END KEY -->
<!-- BEGIN DATA -->
一个受 <code>HashMap</code> 或其他某些指定 <code>Map</code> 支持的 Bindings 的简单实现。
 
@author Mike Grogan
@version 1.0
@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.script.SimpleBindings(java.util.Map<java.lang.String, java.lang.Object> m)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造方法使用现有 <code>Map</code> 来存储值。
@param m 支持此 <code>SimpleBindings</code> 的 <code>Map</code>。
@throws NullPointerException 如果 m 为 null

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.script.SimpleBindings()
<!-- END KEY -->
<!-- BEGIN DATA -->
默认构造方法使用 <code>HashMap</code>。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.script.SimpleBindings.put(String name, Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置底层 <code>map</code> 字段中的指定键/值。

@param name 值的名称
@param value 要设置的值。

@return 指定键以前的值。如果以前没有设置键，则返回 null。

@throws NullPointerException 如果 name 为 null。
@throws IllegalArgumentException 如果 name 为空。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.script.SimpleBindings.putAll(java.util.Map<? extends java.lang.String, ? extends java.lang.Object> toMerge)
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>putAll</code> 是使用 <code>Map.putAll</code> 实现的。

@param toMerge 要添加的值的 <code>Map</code>。

@throws NullPointerException 如果 toMerge 映射为 null，或者该映射中的某些键为 null。
@throws IllegalArgumentException 如果该映射中的某些键为空 String。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.script.SimpleBindings.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}
<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.script.SimpleBindings.containsKey(Object key)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果此映射包含指定键的映射关系，则返回 <tt>true</tt>。更正式地说，当且仅当此映射包含针对满足 <tt>(key==null ? k==null :key.equals(k))</tt> 的键 <tt>k</tt> 的映射关系时，返回 <tt>true</tt>。（最多只能有一个这样的映射关系。）

@param key 要测试是否存在于此映射中的键。
@return 如果此映射包含指定键的映射关系，则返回 <tt>true</tt>。

@throws NullPointerException 如果 key 为 null
@throws ClassCastException 如果 key 不是 String
@throws IllegalArgumentException 如果 key 为空 String

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.script.SimpleBindings.containsValue(Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}
<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.Object>> javax.script.SimpleBindings.entrySet()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}
<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.script.SimpleBindings.get(Object key)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此映射将指定键所映射到的值。如果此映射中没有此键的映射关系，则返回 <tt>null</tt>。返回 <tt>null</tt> 值不<i>一定</i> 表示此映射不包含该键的映射关系；也可能此映射将该键显式地映射为 <tt>null</tt>。可使用 <tt>containsKey</tt> 操作来区分这两种情况。

<p>更正式地说，如果此映射包含满足 <tt>(key==null ? k==null :key.equals(k))</tt> 的键 <tt>k</tt> 到值 <tt>v</tt> 的映射关系，那么此方法返回 <tt>v</tt>；否则返回 <tt>null</tt>。（最多只能有一个这样的映射关系。）

@param key 要返回关联值的键。
@return  此映射中指定键所映射的值；如果映射不包含此键的映射关系，则返回 <tt>null</tt>。

@throws NullPointerException 如果 key 为 null
@throws ClassCastException 如果 key 不是 String
@throws IllegalArgumentException 如果 key 为空 String

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.script.SimpleBindings.isEmpty()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}
<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.lang.String> javax.script.SimpleBindings.keySet()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}
<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.script.SimpleBindings.remove(Object key)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果存在此键的映射关系，则将其从此映射中移除（可选操作）。更正式地说，如果此映射包含满足 <code>(key==null ? k==null :key.equals(k))</code> 的键 <tt>k</tt> 到值 <tt>v</tt> 的映射关系，则移除该映射关系。（该映射最多只能包含一个这样的映射关系。）

<p>返回映射中以前关联该键的值；如果映射不包含此键的映射关系，则返回 <tt>null</tt>。（如果该实现支持 <tt>null</tt> 值，则返回 <tt>null</tt> 也可能表示映射以前将 <tt>null</tt> 与指定的键关联。）调用返回后，映射将不包含指定键的映射关系。

@param key 其映射关系要从映射中移除的键。
@return 以前与指定键关联的值；如果没有该键的映射关系，则返回 <tt>null</tt>。

@throws NullPointerException 如果 key 为 null
@throws ClassCastException 如果 key 不是 String
@throws IllegalArgumentException 如果 key 为空 String

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.script.SimpleBindings.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}
<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Collection<java.lang.Object> javax.script.SimpleBindings.values()
<!-- END KEY -->
<!-- BEGIN DATA -->
{@inheritDoc}
<!-- END DATA -->
