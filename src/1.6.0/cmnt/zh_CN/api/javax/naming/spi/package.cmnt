<!-- BEGIN KEY -->
javax.naming.spi
<!-- END KEY -->
<!-- BEGIN DATA -->

提供一些方法来动态地插入对通过 <tt>javax.naming</tt> 和相关包访问命名和目录服务的支持。

<p>
此包定义 Java Naming and Directory Interface<font size=-2><sup>TM</sup></font> (JNDI) 的服务提供者接口 (SPI)。&#xA0; JNDI 向使用 Java 编程语言编写的应用程序提供命名和目录功能。它被设计成与任何特定的命名或目录服务实现无关。因此可以使用共同的方式对多种服务（新的、新出现的及已经部署的服务）进行访问。

<p>
JNDI SPI 提供一些方法来创建 JNDI 服务提供者，JNDI 应用程序可通过这些提供者访问不同的命名和目录服务。


<h4>插件架构</h4>

服务提供者包允许动态插入不同实现。这些不同的实现包括用于<em>初始上下文</em> 的那些实现，以及用于可从初始上下文到达的那些上下文的实现。

<h4>Java 对象支持</h4>

服务提供者包支持 <tt>javax.naming.Context.lookup()</tt> 以及相关方法的实现方返回非常适合 Java 程序员的 Java 对象。例如，当从目录中查找打印机名称时，用户很自然地会期望返回一个能在上面进行操作的打印机对象。


<h4>多个命名系统（联合）</h4>

JNDI 操作允许应用程序提供跨多个命名系统的名称。因此在完成某一操作的过程中，服务提供者可能需要与另一个服务提供者进行交互，以便（举例来说）传递该操作，使它在下一个命名系统中得以继续。服务提供者包支持不同的提供者协作完成 JNDI 操作。


<h2>包规范</h2>

JNDI API 规范及相关文档可在
<a href="../../../../technotes/guides/jndi/index.html">JNDI documentation</a> 中找到。

@since 1.3


<!-- END DATA -->
