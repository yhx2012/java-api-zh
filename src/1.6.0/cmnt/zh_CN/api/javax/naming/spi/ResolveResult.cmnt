<!-- BEGIN KEY -->
public class javax.naming.spi.ResolveResult extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->

此类表示解析某一名称的结果。它包含作为名称解析结果的对象和尚未解析的名称部分。
<p>
ResolveResult 实例与并发多线程访问不同步。试图访问和修改单个 ResolveResult 实例的多个线程应该锁定对象。

@author Rosanna Lee
@author Scott Seligman
@version 1.10 03/12/19
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object javax.naming.spi.ResolveResult.resolvedObj
<!-- END KEY -->
<!-- BEGIN DATA -->
该字段包含已成功解析成的 Object。它只在使用子类构造时可以为 null。构造方法应该总是初始化此字段。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.naming.Name javax.naming.spi.ResolveResult.remainingName
<!-- END KEY -->
<!-- BEGIN DATA -->
该字段包含要解析的剩余名称。它只在使用子类构造时可以为 null。构造方法应该总是初始化此字段。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.naming.spi.ResolveResult()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 ResolveResult 实例，使已解析对象和剩余名称都被初始化为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.spi.ResolveResult(Object robj, String rcomp)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的 ResolveResult 实例，该实例由已解析对象和剩余未解析组件组成。

@param robj 作为解析结果的非 null 对象。
@param rcomp 尚未解析的单个剩余名称组件。不能为 null（但可以为空）。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.spi.ResolveResult(Object robj, Name rname)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的 ResolveResult 实例，该实例由已解析 Object 和剩余名称组成。

@param robj 作为解析结果的非 null Object。
@param rname 尚未解析的剩余名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.Name javax.naming.spi.ResolveResult.getRemainingName()
<!-- END KEY -->
<!-- BEGIN DATA -->
检索名称的剩余未解析部分。
 
@return 名称的剩余未解析部分。不能为 null 但可以为空。
@see #appendRemainingName
@see #appendRemainingComponent
@see #setRemainingName

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.naming.spi.ResolveResult.getResolvedObj()
<!-- END KEY -->
<!-- BEGIN DATA -->
检索已成功解析成的 Object。

@return 已成功解析成的 Object。不能为 null。
@see #setResolvedObj

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.setRemainingName(Name name)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此结果的剩余名称字段设置为 name。生成 name 的副本，从而在此 ResolveResult 中修改该副本不会影响 <code>name</code>，反之亦然。

@param name 用来设置剩余名称的名称。不能为 null。
@see #getRemainingName
@see #appendRemainingName
@see #appendRemainingComponent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.appendRemainingName(Name name)
<!-- END KEY -->
<!-- BEGIN DATA -->
将组件添加到剩余名称的末尾。

@param name 要添加的组件。可以为 null。
@see #getRemainingName
@see #setRemainingName
@see #appendRemainingComponent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.appendRemainingComponent(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
将单个组件添加到剩余名称末尾。

@param name 要添加的组件。可以为 null。
@see #getRemainingName
@see #appendRemainingName

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.setResolvedObj(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此结果的已解析 Object 字段设置为 obj。

@param obj 用来设置已解析 obj 字段的对象。不能为 null。
@see #getResolvedObj

<!-- END DATA -->
