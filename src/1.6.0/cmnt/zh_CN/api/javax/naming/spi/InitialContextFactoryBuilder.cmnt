<!-- BEGIN KEY -->
public interface javax.naming.spi.InitialContextFactoryBuilder
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口表示创建初始上下文工厂的生成器。
<p>
JNDI 框架允许在运行时指定不同的初始上下文实现。初始上下文是使用初始上下文工厂创建的。通过调用 NamingManager.setInitialContextFactoryBuilder()，程序可以安装自己的创建初始上下文工厂的生成器，从而可以重写该框架使用的默认策略。这类生成器必须实现 InitialContextFactoryBuilder 接口。

@author Rosanna Lee
@author Scott Seligman
@version 1.12 05/11/17

@see InitialContextFactory
@see NamingManager#getInitialContext
@see NamingManager#setInitialContextFactoryBuilder
@see NamingManager#hasInitialContextFactoryBuilder
@see javax.naming.InitialContext
@see javax.naming.directory.InitialDirContext
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.spi.InitialContextFactory javax.naming.spi.InitialContextFactoryBuilder.createInitialContextFactory(java.util.Hashtable<?, ?> environment) throws javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用指定环境创建一个初始上下文工厂。
<p>
环境参数由调用者所有。该实现不会修改对象或保持对该对象的引用，尽管可能保持对其副本的引用。

@param environment 用来创建初始上下文实现的环境。可以为 null。
@return 非 null 初始上下文工厂。
@exception NamingException 如果无法创建初始上下文工厂。

<!-- END DATA -->
