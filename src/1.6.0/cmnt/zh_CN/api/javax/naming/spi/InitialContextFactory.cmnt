<!-- BEGIN KEY -->
public interface javax.naming.spi.InitialContextFactory
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口表示创建初始上下文的工厂。
<p>
JNDI 框架允许在运行时指定不同的初始上下文实现。初始上下文是使用<em>初始上下文工厂</em> 创建的。初始上下文工厂必须实现 InitialContextFactory 接口，该接口提供了一个方法，用于创建实现 Context 接口的初始上下文的实例。此外，工厂类必须是公共的，必须有一个不接受任何参数的公共构造方法。

@author Rosanna Lee
@author Scott Seligman
@version 1.11 05/11/17


@see InitialContextFactoryBuilder
@see NamingManager#getInitialContext
@see javax.naming.InitialContext
@see javax.naming.directory.InitialDirContext
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.Context javax.naming.spi.InitialContextFactory.getInitialContext(java.util.Hashtable<?, ?> environment) throws javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个初始上下文，以便开始进行名称解析。使用 <code>environment</code> 提供此上下文的特殊需要。
<p>
环境参数由调用者所有。该实现不会修改对象或保持对该对象的引用，尽管可能保持对其副本的引用。

@param environment 指定在创建初始上下文时所使用信息的环境（可能为 null）。
@return 实现 Context 接口的非 null 初始上下文对象。
@exception NamingException 如果无法创建初始上下文。

<!-- END DATA -->
