<!-- BEGIN KEY -->
public class javax.naming.InterruptedNamingException extends javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
当正被调用的命名操作已经被中断时，抛出此异常。例如，应用程序可以中断正在执行搜索的线程。如果该搜索支持被中断，则将抛出 InterruptedNamingException。某一操作是否是可中断的以及何时中断取决于其实现（由服务提供者提供）。不同的实现使用不同的方式来避免其资源和对象因为无法预期的中断而毁坏。
 <p>
应用于 NamingException 的同步和序列化问题在这里可以直接应用。

@author Rosanna Lee
@author Scott Seligman
@version 1.9 05/11/17

@see Context
@see javax.naming.directory.DirContext
@see java.lang.Thread#interrupt
@see java.lang.InterruptedException
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.InterruptedNamingException(String explanation)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用问题的解释构造一个 InterruptedNamingException 实例。所有与解析有关的名称字段都被初始化为 null。
@param explanation	解释问题的可能为 null 的消息。
@see java.lang.Throwable#getMessage

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.InterruptedNamingException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个 InterruptedNamingException 实例，将解释和所有名称解析字段初始化为 null。

<!-- END DATA -->
