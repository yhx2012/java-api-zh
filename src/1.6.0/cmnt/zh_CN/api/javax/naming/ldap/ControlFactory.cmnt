<!-- BEGIN KEY -->
public abstract class javax.naming.ldap.ControlFactory extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
此抽象类表示用于创建 LDAPv3 控件的工厂。LDAPv3 控件是在 <A HREF="ftp://ftp.isi.edu/in-notes/rfc2251.txt">RFC 2251</A> 中定义的。
<p>
当服务提供者收到响应控件时，它使用控件工厂返回特定/适当的控件类实现。

@author Rosanna Lee
@author Scott Seligman
@author Vincent Ryan
@version 1.13 05/11/17

@see Control
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.naming.ldap.Control javax.naming.ldap.ControlFactory.getControlInstance(Control ctl) throws javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用此控件工厂创建控件。
<p>
服务提供者使用工厂以专用控件类的形式返回从 LDAP 协议读取的控件。不使用此机制，提供者将返回仅包含 BER 编码格式的数据的控件。
<p>
通常，<tt>ctl</tt> 是包含 BER 编码数据的&ldquo;基本&rdquo;控件。通常通过解码 BER 编码数据使用工厂创建专门的控件实现，该实现提供一些方法以类型安全的、友好的方式来访问该数据。
 <p>
例如，工厂可能使用基本控件中的 BER 编码数据并返回 VirtualListReplyControl 的实例。
<p>
如果此工厂不能使用提供的参数创建控件，则其应该返回 null。工厂只有在可以确定它是唯一需要的工厂并且不应该再尝试其他控件工厂时才抛出异常。例如，在控件中的 BER 数据不匹配给定 OID 的控件所期望的数据时，会发生这种情况。此方法抛出 <tt>NamingException</tt>，因此应该传播的所有其他内部生成的异常都必须被包装在 <tt>NamingException</tt> 中。

@param ctl 非 null 控件。

@return 一个控件（可能为 null）。
@exception NamingException 如果 <tt>ctl</tt> 包含无效数据，这些无效数据阻止它用于创建控件。工厂只有在已知生成控件（由 OID 标识）的方式但由于某些原因（例如，BER 数据无效）不能生成控件时才抛出异常。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.naming.ldap.Control javax.naming.ldap.ControlFactory.getControlInstance(Control ctl, Context ctx, java.util.Hashtable<?, ?> env) throws javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
使用已知控件工厂创建控件。
 <p>
使用以下规则创建控件：
<ul>
<li> 使用环境的 <tt>LdapContext.CONTROL_FACTORIES</tt> 属性和与 <tt>ctx</tt> 关联的提供者资源文件的 <tt>LdapContext.CONTROL_FACTORIES</tt> 属性中指定的控件工厂，并使用原来的顺序。此属性的值是按顺序尝试的以冒号分隔的工厂类名称列表，使用的名称是第一个成功创建控件的名称。如果无法加载任何工厂，则返回 <code>ctl</code>。如果在创建控件时遇到异常，则将异常传递到调用者。
</ul>
 <p>
注意，控件工厂必须是公共的，并且必须具有不接受任何参数的公共构造方法。
 <p>
@param ctl 包含 OID 和 BER 数据的非 null 控件对象。
@param ctx 将创建控件的上下文（可能为 null）。如果为 null，则所有这些信息都不可用。
@param env 上下文的环境（可能为 null）。此值用于查找 <tt>LdapContext.CONTROL_FACTORIES</tt> 属性的值。
@return 使用 <code>ctl</code> 创建的控件对象；如果使用上述算法无法创建控件对象，则返回 <code>ctl</code>。
@exception NamingException 如果在尝试创建控件对象时遇到了命名异常。如果访问的工厂之一抛出异常，则该异常将被传播到调用者。如果在加载和实例化工厂和对象类时遇到错误，则异常将被包装在 <tt>NamingException</tt> 中，然后重新抛出。

<!-- END DATA -->
