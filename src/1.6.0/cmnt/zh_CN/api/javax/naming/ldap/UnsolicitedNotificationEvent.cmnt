<!-- BEGIN KEY -->
public class javax.naming.ldap.UnsolicitedNotificationEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
此类表示为响应 LDAP 服务器发送的未经请求的通知而触发的事件。

@author Rosanna Lee
@author Scott Seligman
@author Vincent Ryan
@version 1.9 05/11/17

@see UnsolicitedNotification
@see UnsolicitedNotificationListener
@see javax.naming.event.EventContext#addNamingListener
@see javax.naming.event.EventDirContext#addNamingListener
@see javax.naming.event.EventContext#removeNamingListener
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.naming.ldap.UnsolicitedNotification javax.naming.ldap.UnsolicitedNotificationEvent.notice
<!-- END KEY -->
<!-- BEGIN DATA -->
导致触发此事件的通知。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.ldap.UnsolicitedNotificationEvent(Object src, UnsolicitedNotification notice)
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的 <tt>UnsolicitedNotificationEvent</tt> 实例。
 
@param src 触发事件的非 null 源。
@param notice 未经请求的非 null 通知。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.ldap.UnsolicitedNotification javax.naming.ldap.UnsolicitedNotificationEvent.getNotification()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回未经请求的通知。
@return 导致触发此事件的未经请求的非 null 通知。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.ldap.UnsolicitedNotificationEvent.dispatch(UnsolicitedNotificationListener listener)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用此事件对侦听器调用 <tt>notificationReceived()</tt> 方法。
@param listener 要调用 <tt>notificationReceived</tt> 方法的非 null 侦听器。

<!-- END DATA -->
