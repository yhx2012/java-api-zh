<!-- BEGIN KEY -->
public interface javax.naming.ldap.UnsolicitedNotificationListener extends javax.naming.event.NamingListener
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口用于处理 <tt>UnsolicitedNotificationEvent</tt>。&ldquo;未经请求的通知&rdquo;在 <A HREF="ftp://ftp.isi.edu/in-notes/rfc2251.txt">RFC 2251</A> 中定义。它允许服务器将未经请求的通知发送到客户端。<tt>UnsolicitedNotificationListener</tt> 必须：
<ol>
<li>实现此接口及其方法
<li>实现 <tt>NamingListener.namingExceptionThrown()</tt>，以便在尝试收集未经请求的通知事件期间抛出异常时得到通知。
<li>使用 <tt>EventContext</tt> 或 <tt>EventDirContext</tt> 中的 <tt>addNamingListener()</tt> 方法之一向上下文注册。对于 <tt>UnsolicitedNotificationListener</tt> 而言，这些方法只能使用 <tt>NamingListener</tt> 参数；其他参数都将被忽略。（如果它实现了其他侦听器接口的话这些参数可能适用）。
</ol>
 
@author Rosanna Lee
@author Scott Seligman
@author Vincent Ryan
@version 1.8 05/11/17

@see UnsolicitedNotificationEvent
@see UnsolicitedNotification
@see javax.naming.event.EventContext#addNamingListener
@see javax.naming.event.EventDirContext#addNamingListener
@see javax.naming.event.EventContext#removeNamingListener
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.ldap.UnsolicitedNotificationListener.notificationReceived(UnsolicitedNotificationEvent evt)
<!-- END KEY -->
<!-- BEGIN DATA -->
当收到了未经请求的通知时调用。

@param evt 非 null UnsolicitedNotificationEvent

<!-- END DATA -->
