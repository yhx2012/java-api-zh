<!-- BEGIN KEY -->
public interface javax.naming.directory.Attributes extends java.lang.Cloneable, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
此接口表示属性的集合。
<p>
在目录中，命名的对象可以与其属性关联。Attributes 接口表示属性的集合。例如，可以从目录请求与对象关联的属性。这些属性在实现 Attributes 接口的对象中返回。
<p>
实现 Attributes 接口的对象中的属性是无序的。该对象可以有零个或多个属性。Attributes 或者区分大小写或者不区分大小写（忽略大小写）。此属性在创建 Attributes 对象时确定。（有关示例，请参阅 BasicAttributes 构造方法）。在不区分大小写的 Attributes 中，搜索属性或添加属性时将忽略其属性标识符的大小写。在区分大小写的 Attributes 中，大小写至关重要。
<p>
注意，更新 Attribute（如添加或移除属性）对目录中的相应表示形式没有影响。只有使用 DirContext 接口中的操作才能实现对目录的更新。

@author Rosanna Lee
@author Scott Seligman
@version 1.11 05/11/17

@see DirContext#getAttributes
@see DirContext#modifyAttributes
@see DirContext#bind
@see DirContext#rebind
@see DirContext#createSubcontext
@see DirContext#search
@see BasicAttributes
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.naming.directory.Attributes.isCaseIgnored()
<!-- END KEY -->
<!-- BEGIN DATA -->
确定在检索或添加属性时属性集是否忽略属性标识符的大小写。
@return 如果忽略大小写，则返回 true；否则，返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.naming.directory.Attributes.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
在属性集中检索属性数。

@return 此属性集中的非负属性数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.Attribute javax.naming.directory.Attributes.get(String attrID)
<!-- END KEY -->
<!-- BEGIN DATA -->
利用属性集中的给定属性 id 检索属性。

@param attrID 要检索的属性的非 null id。如果此属性集忽略其属性 id 的字符大小写，则忽略 attrID 的大小写。
@return 由 attrID 标识的属性；如果找不到，则返回 null。
@see #put
@see #remove

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.NamingEnumeration<? extends javax.naming.directory.Attribute> javax.naming.directory.Attributes.getAll()
<!-- END KEY -->
<!-- BEGIN DATA -->
检索属性集中属性的枚举。在此枚举上更新此属性集的结果是不确定的。

@return 此属性集中属性的非 null 枚举。每个枚举元素都属于 <tt>Attribute</tt> 类。如果属性集的属性数为零，则返回空枚举。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.NamingEnumeration<java.lang.String> javax.naming.directory.Attributes.getIDs()
<!-- END KEY -->
<!-- BEGIN DATA -->
检索属性集中属性的 id 的枚举。在此枚举上更新此属性集的结果是不确定的。

@return 此属性集中属性 id 的非 null 枚举。每个枚举元素都属于 String 类。如果属性集的属性数为零，则返回空枚举。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.Attribute javax.naming.directory.Attributes.put(String attrID, Object val)
<!-- END KEY -->
<!-- BEGIN DATA -->
向属性集中添加新属性。

@param attrID	要添加的属性的非 null id。如果属性集忽略其属性 id 的字符大小写，则忽略 attrID 的大小写。
@param val	要添加的属性的可能为 null 的值。如果为 null，则属性不具有任何值。
@return 以前在此属性集中的具有 attrID 的 Attribute；如果不存在这种属性，则返回 null。
@see #remove

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.Attribute javax.naming.directory.Attributes.put(Attribute attr)
<!-- END KEY -->
<!-- BEGIN DATA -->
向属性集中添加新属性。

@param attr	要添加的非 null 属性。如果属性集忽略其属性 id 的字符大小写，则忽略 attr 标识符的大小写。
@return 以前在此属性集中的与 attr 具有相同 ID 的 Attribute；如果不存在这种属性，则返回 null。
@see #remove

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.Attribute javax.naming.directory.Attributes.remove(String attrID)
<!-- END KEY -->
<!-- BEGIN DATA -->
从属性集中移除属性 id 为 'attrID' 的属性。如果该属性不存在，则忽略。

@param attrID	要移除的属性的非 null id。如果属性集忽略其属性 id 的字符大小写，则忽略 attrID 的大小写。
@return 以前在属性集中的与 attrID 具有相同 ID 的 Attribute；如果不存在这种属性，则返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.naming.directory.Attributes.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
对属性集进行复制。新集合包含与初始集合相同的属性：这些属性不是其本身的副本。对副本的更改不会影响原件，反之亦然。

@return 此属性集的非 null 副本。

<!-- END DATA -->
