<!-- BEGIN KEY -->
public class javax.naming.directory.SchemaViolationException extends javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
当方法在某些方面违反模式时，抛出此异常。修改违反对象模式定义的对象属性就是一个违反模式的示例。另一个示例是，将对象重命名或移动到违反名称空间模式定义的名称空间部分。
 <p>
应用于 NamingException 的同步和序列化问题在这里可以直接应用。

@author Rosanna Lee
@author Scott Seligman
@version 1.8 05/11/17

@see javax.naming.Context#bind
@see DirContext#bind
@see javax.naming.Context#rebind
@see DirContext#rebind
@see DirContext#createSubcontext
@see javax.naming.Context#createSubcontext
@see DirContext#modifyAttributes
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SchemaViolationException()
<!-- END KEY -->
<!-- BEGIN DATA -->
构造一个新的 SchemaViolationException 实例。将所有字段都设置为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SchemaViolationException(String explanation)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用所提供的解释构造一个新的 SchemaViolationException 实例。将所有其他字段都设置为 null。
@param explanation 关于此异常的详细信息。可以为 null。
@see java.lang.Throwable#getMessage

<!-- END DATA -->
