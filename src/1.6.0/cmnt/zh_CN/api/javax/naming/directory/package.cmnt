<!-- BEGIN KEY -->
javax.naming.directory
<!-- END KEY -->
<!-- BEGIN DATA -->

扩展 <tt>javax.naming</tt> 包以提供访问目录服务的功能。

<p>
此包定义 Java Naming and Directory Interface<font size=-2><sup>TM</sup></font> (JNDI) 的目录操作。&nbsp; JNDI 向使用 Java 编程语言编写的应用程序提供命名和目录功能。它被设计成与任何特定的命名或目录服务实现无关。因此可以使用共同的方式对多种服务（新的、新出现的及已经部署的服务）进行访问。

<p>
此包允许应用程序检索和更新与存储在目录中的对象关联的属性，以及使用指定属性搜索对象。

<h4>目录上下文</h4>

<tt>DirContext</tt> 接口表示<em>目录上下文</em>。该接口定义了一些方法来检验和更新与<em>目录对象</em>（有时称为<em>目录项</em>）关联的属性。
<p>
	可以使用 <tt>getAttributes()</tt> 检索与目录对象（为其提供名称）关联的属性。使用 <tt>modifyAttributes()</tt> 修改属性。使用此操作可以添加、替换或移除属性和/或属性值。
<p>
通过扩展 <tt>javax.naming</tt> 包中的 <tt>Context</tt> 接口，<tt>DirContext</tt> 还可以用作命名上下文。这意味着所有目录对象也都可以提供命名上下文。例如，某个人的目录对象可能包含该人的属性，同时提供与该人相关的命名对象（如他的打印机和住宅目录）的上下文。

<h4>搜索</h4>
<tt>DirContext</tt> 包含一些对目录执行基于内容的搜索的方法。最简单和最普通的用法是，应用程序指定一属性集（可能带有特定值）来匹配 <tt>search()</tt> 方法，并将此属性集提交给该方法。也有其他重载形式的 <tt>search()</tt>，可支持更复杂的<em>搜索过滤器</em>。

<h2>包规范</h2>

JNDI API 规范及相关文档可在
<a href="../../../../technotes/guides/jndi/index.html">JNDI documentation</a> 中找到。

@since 1.3

<!-- END DATA -->
