<!-- BEGIN KEY -->
public class javax.naming.directory.ModificationItem extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
此类表示修改项。它由修改代码和要执行操作的属性组成。
<p>
ModificationItem 实例与并发多线程访问不同步。试图访问和修改单个 ModificationItem 实例的多个线程应该锁定对象。

@author Rosanna Lee
@author Scott Seligman
@version 1.9 05/11/17
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private int javax.naming.directory.ModificationItem.mod_op
<!-- END KEY -->
<!-- BEGIN DATA -->
包含标识要执行的修改的整数。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.naming.directory.Attribute javax.naming.directory.ModificationItem.attr
<!-- END KEY -->
<!-- BEGIN DATA -->
包含标识要应用于修改的属性和/或其值的属性。
@serial 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.ModificationItem(int mod_op, Attribute attr)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新的 ModificationItem 实例。
@param mod_op 要应用的修改。它必须是以下值之一：DirContext.ADD_ATTRIBUTE DirContext.REPLACE_ATTRIBUTE DirContext.REMOVE_ATTRIBUTE
@param attr	用于修改的非 null 属性。
@exception IllegalArgumentException 如果 attr 为 null，或者 mod_op 不是上面指定的值之一。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.naming.directory.ModificationItem.getModificationOp()
<!-- END KEY -->
<!-- BEGIN DATA -->
检索此修改项的修改代码。
@return 修改代码。它是以下值之一：DirContext.ADD_ATTRIBUTE DirContext.REPLACE_ATTRIBUTE DirContext.REMOVE_ATTRIBUTE

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.Attribute javax.naming.directory.ModificationItem.getAttribute()
<!-- END KEY -->
<!-- BEGIN DATA -->
检索与此修改项关联的属性。
@return 用于修改的非 null 属性。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.naming.directory.ModificationItem.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
生成此修改项的字符串表示形式，该表示形式由修改操作及其相关属性组成。该字符串表示形式用于调试，不以编程方式进行解释。

@return 此修改项的非 null 字符串表示形式。

<!-- END DATA -->
