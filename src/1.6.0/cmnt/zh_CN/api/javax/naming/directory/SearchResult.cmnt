<!-- BEGIN KEY -->
public class javax.naming.directory.SearchResult extends javax.naming.Binding
<!-- END KEY -->
<!-- BEGIN DATA -->
此类表示作为 DirContext.search() 方法的结果返回的 NamingEnumeration 中的一项。
<p>
SearchResult 实例与并发多线程访问不同步。试图访问和修改单个 SearchResult 实例的多个线程应该锁定对象。

@author Rosanna Lee
@author Scott Seligman
@version 1.10 05/11/17

@see DirContext#search
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.naming.directory.Attributes javax.naming.directory.SearchResult.attrs
<!-- END KEY -->
<!-- BEGIN DATA -->
包含与对象一起返回的属性。
@serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, Object obj, Attributes attrs)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用结果的名称、绑定对象及其属性构造一个搜索结果。
<p>
如果还没有使用 <tt>setClassName()</tt> 显式设置类名称，则 <tt>getClassName()</tt> 将返回 <tt>obj</tt> 的类名称（或者 null，如果 <tt>obj</tt> 为 null）。 

@param name 搜索项的非 null 名称。它是相对于搜索的<em>目标上下文</em>（由 <code>search()</code> 方法的第一个参数指定）的名称

@param obj 绑定到名称的对象。可以为 null。
@param attrs 请求与此搜索项一起返回的属性。不能为 null。
@see javax.naming.NameClassPair#setClassName
@see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, Object obj, Attributes attrs, boolean isRelative)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用结果的名称、绑定对象、属性以及该名称是否是相对的构造一个搜索结果。
<p>
如果还没有使用 <tt>setClassName()</tt> 显式设置类名称，则 <tt>getClassName()</tt> 将返回 <tt>obj</tt> 的类名称（或者 null，如果 <tt>obj</tt> 为 null）

@param name 搜索项的非 null 名称。
@param obj 绑定到名称的对象。可以为 null。
@param attrs 请求与此搜索项一起返回的属性。不能为 null。
@param isRelative 如果 <code>name</code> 是一个相对于搜索的目标上下文（由 <code>search()</code> 方法的第一个参数命名）的名称，则该参数为 true；如果 <code>name</code> 是一个 URL 字符串，则该参数为 false。
@see javax.naming.NameClassPair#setClassName
@see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, String className, Object obj, Attributes attrs)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用结果的名称、类名称、绑定对象及其属性构造一个搜索结果。

@param name 搜索项的非 null 名称。它是相对于搜索的<em>目标上下文</em>（由 <code>search()</code> 方法的第一个参数命名）的名称

@param	className	绑定到 <tt>name</tt> 的对象的类名称（可能为 null）。如果为 null，则 <tt>obj</tt> 的类名称由 <tt>getClassName()</tt> 返回。如果 <tt>obj</tt> 也为 null，则 <tt>getClassName()</tt> 将返回 null。
@param obj 绑定到名称的对象。可以为 null。
@param attrs 请求与此搜索项一起返回的属性。不能为 null。
@see javax.naming.NameClassPair#setClassName
@see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, String className, Object obj, Attributes attrs, boolean isRelative)
<!-- END KEY -->
<!-- BEGIN DATA -->
使用结果的名称、类名称、绑定对象、属性以及该名称是否是相对的构造一个搜索结果。

@param name 搜索项的非 null 名称。
@param	className	绑定到 <tt>name</tt> 的对象的类名称（可能为 null）。如果为 null，则 <tt>obj</tt> 的类名称由 <tt>getClassName()</tt> 返回。如果 <tt>obj</tt> 也为 null，则 <tt>getClassName()</tt> 将返回 null。
@param obj 绑定到名称的对象。可以为 null。
@param attrs 请求与此搜索项一起返回的属性。不能为 null。
@param isRelative 如果 <code>name</code> 是一个相对于搜索的目标上下文（由 <code>search()</code> 方法的第一个参数命名）的名称，则该参数为 true；如果 <code>name</code> 是一个 URL 字符串，则该参数为 false。
@see javax.naming.NameClassPair#setClassName
@see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.Attributes javax.naming.directory.SearchResult.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
检索此搜索结果中的属性。

@return 此搜索结果中的非 null 属性。可以为空。
@see #setAttributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.directory.SearchResult.setAttributes(Attributes attrs)
<!-- END KEY -->
<!-- BEGIN DATA -->
将此搜索结果的属性设置为 <code>attrs</code>。
@param attrs 要使用的非 null 属性。可以为空。
@see #getAttributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.naming.directory.SearchResult.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
生成此 SearchResult 的字符串表示形式。该字符串表示形式由绑定的字符串表示形式和此搜索结果属性的字符串表示形式组成，两个表示形式之间用 ':' 分隔。此字符串的内容用于调试目的，不以编程方式对其进行解释。

@return 此 SearchResult 的字符串表示形式。不能为 null。

<!-- END DATA -->
