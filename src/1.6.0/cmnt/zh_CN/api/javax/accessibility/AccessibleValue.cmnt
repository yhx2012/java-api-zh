<!-- BEGIN KEY -->
public interface javax.accessibility.AccessibleValue
<!-- END KEY -->
<!-- BEGIN DATA -->
任何支持数字值的对象（例如滚动条）都应支持 AccessibleValue 接口。此接口为辅助技术提供了标准机制，以确定和设置数字值，以及获取最小值和最大值。应用程序通过先获取某个对象的 AccessibleContext（参见 {@link Accessible}），然后调用 {@link AccessibleContext#getAccessibleValue} 方法，能够确定该对象是否支持 AccessibleValue 接口。如果返回值不为 null，则该对象支持此接口。

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleValue

@version     1.9 10/12/99 15:41:54
@author	Peter Korn
@author      Hans Muller
@author      Willie Walker

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.accessibility.AccessibleValue.getCurrentAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 Number 形式获取此对象的值。如果没有设置值，则返回值为 null。

@return 对象的值
@see #setCurrentAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleValue.setCurrentAccessibleValue(Number n)
<!-- END KEY -->
<!-- BEGIN DATA -->
以 Number 形式设置此对象的值。

@return 如果设置了值，则返回 True，否则返回 False
@see #getCurrentAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.accessibility.AccessibleValue.getMinimumAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 Number 形式设置此对象的最小值。

@return 对象的最小值，如果此对象没有最小值，则返回 null
@see #getMaximumAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.accessibility.AccessibleValue.getMaximumAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 Number 形式获取此对象的最大值。

@return 对象的最大值，如果此对象没有最大值，则返回 null
@see #getMinimumAccessibleValue

<!-- END DATA -->
