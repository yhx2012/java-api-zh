<!-- BEGIN KEY -->
public class javax.accessibility.AccessibleStateSet extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
AccessibleStateSet 类确定组件的状态集。组件的状态集是 AccessibleState 对象和描述的集合。例如，对象当前的总体状态，它是否是启用的，是否具有焦点等等。

@see AccessibleState

@version     1.10 10/12/99 15:05:34
@author      Willie Walker

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.Vector<javax.accessibility.AccessibleState> javax.accessibility.AccessibleStateSet.states
<!-- END KEY -->
<!-- BEGIN DATA -->
Vector 中的每个项表示一个 AccessibleState。
@see #add
@see #addAll
@see #remove
@see #contains
@see #toArray
@see #clear

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的空状态集。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet(javax.accessibility.AccessibleState[] states)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建一个新状态，其初始状态集包含在传入的状态数组中。忽略重复项。

@param states 描述状态集的 AccessibleState 数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleStateSet.add(AccessibleState state)
<!-- END KEY -->
<!-- BEGIN DATA -->
如果某个新状态不在当前状态集中，则将它添加到当前状态集中。如果该状态已经在状态集中，则不更改状态集，并且返回值为 false。否则，将该状态添加到状态集中，并且返回值为 true。
@param state 要添加到状态集中的状态
@return 如果状态被添加到状态集中，则返回 true；如果不更改状态集，则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.accessibility.AccessibleStateSet.addAll(javax.accessibility.AccessibleState[] states)
<!-- END KEY -->
<!-- BEGIN DATA -->
将所有状态添加到现有状态集中。忽略重复项。
@param states  描述状态集的 AccessibleState 数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleStateSet.remove(AccessibleState state)
<!-- END KEY -->
<!-- BEGIN DATA -->
从当前状态集中移除一个状态。如果该状态不在状态集中，则不更改状态集，返回值将为 false。如果该状态在状态集中，则将它从状态集中移除，返回值将为 true。
	
@param state 要从状态集中移除的状态
@return 如果该状态在状态集中，则返回 true；如果不更改状态集，则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.accessibility.AccessibleStateSet.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
从当前状态集中移除所有状态。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleStateSet.contains(AccessibleState state)
<!-- END KEY -->
<!-- BEGIN DATA -->
检查当前状态是否在状态集中。
@param state 状态
@return 如果该状态在状态集中，则返回 true；否则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleState[] javax.accessibility.AccessibleStateSet.toArray()
<!-- END KEY -->
<!-- BEGIN DATA -->
以 AccessibleState 数组形式返回当前状态集
@return 包含当前状态的 AccessibleState 数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.accessibility.AccessibleStateSet.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
使用默认语言环境创建表示状态集中所有状态的本地化 String。

@return 用逗号分隔的本地化 String
@see AccessibleBundle#toDisplayString

<!-- END DATA -->
