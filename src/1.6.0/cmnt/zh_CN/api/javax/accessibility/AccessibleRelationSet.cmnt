<!-- BEGIN KEY -->
public class javax.accessibility.AccessibleRelationSet extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
AccessibleRelationSet 类确定了组件的关系集。组件的关系集是描述该组件与其他组件的关系的 AccessibleRelation 对象的集合。

@see AccessibleRelation

@version     1.13 05/05/04
@author      Lynn Monsanto
@since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.Vector<javax.accessibility.AccessibleRelation> javax.accessibility.AccessibleRelationSet.relations
<!-- END KEY -->
<!-- BEGIN DATA -->
Vector 中的每个项表示一个 AccessibleRelation。

@see #add
@see #addAll
@see #remove
@see #contains
@see #get
@see #size
@see #toArray
@see #clear

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelationSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
创建新的空关系集。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelationSet(javax.accessibility.AccessibleRelation[] relations)
<!-- END KEY -->
<!-- BEGIN DATA -->
创建具有传入的关系数组中所包含的初始关系集的新关系。忽略重复项。

@param relations 描述关系集的 AccessibleRelation 数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleRelationSet.add(AccessibleRelation relation)
<!-- END KEY -->
<!-- BEGIN DATA -->
将新关系添加到当前关系集中。如果该关系已在关系集中，则将目标（或多个目标）的指定关系与目标（或多个目标）的现有关系合并。否则，将新关系添加到关系集中。

@param relation 要添加到关系集的关系
@return 如果关系被添加到关系集中，则返回 true；如果关系集不发生更改，则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.accessibility.AccessibleRelationSet.addAll(javax.accessibility.AccessibleRelation[] relations)
<!-- END KEY -->
<!-- BEGIN DATA -->
将所有关系添加到现有关系集中。忽略重复项。

@param relations  描述关系集的 AccessibleRelation 数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleRelationSet.remove(AccessibleRelation relation)
<!-- END KEY -->
<!-- BEGIN DATA -->
从当前关系集中移除一个关系。如果该关系不在关系集中，则关系集将不发生更改，返回值将为 false。如果该关系在关系集中，则将它从关系集中移除，返回值将为 true。
	
@param relation 要从关系集中移除的关系
@return 如果此关系在关系集中，则返回 true；如果关系集不发生更改，则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.accessibility.AccessibleRelationSet.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
从当前关系集中移除所有关系。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.accessibility.AccessibleRelationSet.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回关系集中的关系数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleRelationSet.contains(String key)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回关系集是否包含与指定键匹配的关系。
@param key AccessibleRelation 键
@return 如果该关系在关系集中，则返回 true；否则返回 false

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelation javax.accessibility.AccessibleRelationSet.get(String key)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回与指定键匹配的关系。
@param key AccessibleRelation 键
@return 与指定键匹配的关系（如果存在）。否则，返回 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelation[] javax.accessibility.AccessibleRelationSet.toArray()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回作为 AccessibleRelation 数组的当前关系集
@return 连接当前关系的 AccessibleRelation 数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.accessibility.AccessibleRelationSet.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
使用默认语言环境创建表示关系集中所有关系的本地化 String。

@return 用逗号分隔的本地化 String
@see AccessibleBundle#toDisplayString

<!-- END DATA -->
