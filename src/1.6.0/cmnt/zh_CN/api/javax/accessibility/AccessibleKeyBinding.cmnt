<!-- BEGIN KEY -->
public interface javax.accessibility.AccessibleKeyBinding
<!-- END KEY -->
<!-- BEGIN DATA -->
任何具有键盘绑定（例如可用于选择对象的键盘助记符和/或键盘快捷键）功能的对象都应支持 AccessibleKeyBinding 接口。此接口为辅助技术提供了标准机制，以确定此对象存在的键绑定。任何具有这样的键绑定的对象都应支持此接口。应用程序通过先获取某个对象的 AccessibleContext（参见 {@link Accessible}），然后调用 {@link AccessibleContext#getAccessibleKeyBinding} 方法，能够确定该对象是否支持 AccessibleKeyBinding 接口。如果返回值不为 null，则该对象支持此接口。

@see Accessible
@see Accessible#getAccessibleContext
@see AccessibleContext
@see AccessibleContext#getAccessibleKeyBinding

@version     1.4 12/19/03
@author	Lynn Monsanto
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.accessibility.AccessibleKeyBinding.getAccessibleKeyBindingCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象的键绑定数。

@return 此对象从 0 开始的键绑定数

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.accessibility.AccessibleKeyBinding.getAccessibleKeyBinding(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象的键绑定。返回值为一个 java.lang.Object，必须根据键的底层实现将它强制转换为适当的类型。例如，如果返回的 Object 是一个 javax.swing.KeyStroke，则此方法的用户应执行以下操作：
<nf><code>
 Component c = <get the component that has the key bindings>
 AccessibleContext ac = c.getAccessibleContext();
 AccessibleKeyBinding akb = ac.getAccessibleKeyBinding();
 for (int i = 0; i < akb.getAccessibleKeyBindingCount(); i++) {
     Object o = akb.getAccessibleKeyBinding(i);
     if (o instanceof javax.swing.KeyStroke) {
         javax.swing.KeyStroke keyStroke = (javax.swing.KeyStroke)o;
         <do something with the key binding>
     }
 }
 </code></nf>

@param i 键绑定基于零的索引
@return 指定了键绑定的 javax.lang.Object
@see #getAccessibleKeyBindingCount

<!-- END DATA -->
