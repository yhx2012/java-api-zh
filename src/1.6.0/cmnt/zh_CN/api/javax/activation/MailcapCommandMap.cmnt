<!-- BEGIN KEY -->
public class javax.activation.MailcapCommandMap extends javax.activation.CommandMap
<!-- END KEY -->
<!-- BEGIN DATA -->
MailcapCommandMap 扩展 CommandMap 抽象类。它实现配置基于 mailcap 文件 (<A HREF="http://www.ietf.org/rfc/rfc1524.txt">RFC 1524</A>) 的 CommandMap。可以以编程方式和通过配置文件的方式来配置 MailcapCommandMap。
 <p>
<b>mailcap 文件搜索顺序：</b><p>
MailcapCommandMap 在用户系统的各个位置查找 mailcap 文件条目。当发出请求以搜索 MailcapCommandMap 中的命令时，它以下面的顺序搜索 mailcap 文件：
 <p>
 <ol>
<li> 以编程方式添加到 MailcapCommandMap 实例的条目。
<li> 用户主目录中的 <code>.mailcap</code> 文件。
<li> &lt;<i>java.home</i>&gt;<code>/lib/mailcap</code> 文件。
<li> 名为 <code>META-INF/mailcap</code> 的文件或资源。
<li> 名为 <code>META-INF/mailcap.default</code> 的文件或资源（通常只存在于 <code>activation.jar</code> 文件中）。
 </ol>
 <p>
<b>mailcap 文件格式：</b><p>

mailcap 文件必须符合 mailcap 文件规范 (RFC 1524, <i>A User Agent Configuration Mechanism For Multimedia Mail Format Information</i>)。文件格式由与特定 MIME 类型对应的条目组成。一般情况下，当客户机本身不能对指定的 MIME 类型进行操作时，该规范为其指定使用的<i>应用程序</i>。MailcapCommandMap 扩展了此规范，它在 mailcap 文件中使用一个参数机制，该机制允许指定 JavaBeans(tm) 组件对应于 MIME 类型的特定命令。<p>

解析一个 mailcap 文件时，MailcapCommandMap 识别出某些参数签名，特别是以 <code>x-java-</code> 开头的参数名称。MailcapCommandMap 使用此签名查找命令条目，以将其包含到注册表。用名称 <i>name</i> 标识一个命令时，MailcapCommandMap 读取 <code>x-java-&lt;name&gt;</code> 形式的参数名称。当 <i>name</i> 为 <code>content-handler</code> 时，MailcapCommandMap 将此参数所表示的类视为 <i>DataContentHandler</i>。所有其他命令的处理通常忽略其命令名。命令实现由 JavaBean(tm) 组件的一个完全限定类名指定。例如，查看某些数据的命令可以被指定为：<code>x-java-view=com.foo.ViewBean</code>。<p>

当命令名是 <code>fallback-entry</code> 时，命令的值可以为 <code>true</code> 或 <code>false</code>。包含 <code>x-java-fallback-entry=true</code> 参数的 MIME 类型的条目定义了该 MIME 类型的回退 (fallback) 命令，只在找不到非回退条目的情况下才使用该命令。例如，形式为 <code>text/*; ; x-java-fallback-entry=true; x-java-view=com.sun.TextViewer</code> 的条目指定了用于任何文本 MIME 类型的查看命令。此查看命令只在找不到 MIME 类型的非回退查看命令的情况下使用。<p>
 
支持 MailcapCommandMap 的 mailcap 文件的一般形式如下：<p>
<code># 注释以 '#' 开头并延续到行的末尾。<br> &lt;mime type&gt;; ; &lt;parameter list&gt;<br> # 其中参数列表由一个或多个参数组成，<br> # 其中参数类似于：x-java-view=com.sun.TextViewer<br> # 参数列表类似于：<br> 纯文本; ; x-java-view=com.sun.TextViewer; x-java-edit=com.sun.TextEdit <br> # 注意，不包含 'x-java' 参数的 mailcap 条目 <br> # 和遵守 RFC 1524 的条目将被忽略：<br>image/gif; /usr/dt/bin/sdtimage %s<br>

 </code>
 <p>

@author Bart Calder
@author Bill Shannon

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.MailcapCommandMap()
<!-- END KEY -->
<!-- BEGIN DATA -->
默认的构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.MailcapCommandMap(String fileName) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
允许调用者指定 <i>mailcap</i> 文件路径的构造方法。

@param fileName 要打开的 <i>mailcap</i> 文件的名称
@exception	IOException	如果不能访问该文件

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.MailcapCommandMap(InputStream is)
<!-- END KEY -->
<!-- BEGIN DATA -->
允许调用者指定一个包含 mailcap 文件的 <i>InputStream</i> 的构造方法。

@param is	要打开的 <i>mailcap</i> 文件的 InputStream

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized javax.activation.CommandInfo[] javax.activation.MailcapCommandMap.getPreferredCommands(String mimeType)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取 MIME 类型的首选命令列表。MailcapCommandMap 以如上所述的 <i>mailcap 文件搜索顺序</i> 来搜索 mailcap 文件。<p>

搜索的结果是此 MailcapCommandMap 实例已知的所有 mailmap 文件中可用命令的适当子集。特定命令的第一个条目被视为首选命令。

@param mimeType	MIME 类型
@return 表示首选命令的 CommandInfo 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized javax.activation.CommandInfo[] javax.activation.MailcapCommandMap.getAllCommands(String mimeType)
<!-- END KEY -->
<!-- BEGIN DATA -->
针对此 MIME 类型获取此 MailcapCommandMap 实例已知的所有 mailcap 文件中的所有可用命令。

@param mimeType	MIME 类型
@return 表示所有命令的 CommandInfo 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized javax.activation.CommandInfo javax.activation.MailcapCommandMap.getCommand(String mimeType, String cmdName)
<!-- END KEY -->
<!-- BEGIN DATA -->
针对 MIME 类型获取与 <code>cmdName</code> 对应的命令。

@param mimeType	MIME 类型
@param cmdName	命令名
@return 与命令对应的 CommandInfo 对象。

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.activation.MailcapCommandMap.addMailcap(String mail_cap)
<!-- END KEY -->
<!-- BEGIN DATA -->
将条目添加到注册表。搜索其他条目之前，先搜索以编程方式添加的条目。<p>

传入的字符串应该是 mailcap 格式。

@param mail_cap 已正确格式化的 mailcap 字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized javax.activation.DataContentHandler javax.activation.MailcapCommandMap.createDataContentHandler(String mimeType)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回指定 MIME 类型的 DataContentHandler。

@param mimeType	MIME 类型
@return		DataContentHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.String[] javax.activation.MailcapCommandMap.getMimeTypes()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此命令映射已知的所有 MIME 类型。

@return		字符串形式的 MIME 类型数组
@since	JAF 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.String[] javax.activation.MailcapCommandMap.getNativeCommands(String mimeType)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取给定 MIME 类型的本地命令。返回一个字符串数组，其中每个字符串都是一个完整的 mailcap 文件条目。应用程序需要解析条目以提取实际命令以及它需要的所有属性。关于 mailcap 条目语法的详细信息，请参阅 <A HREF="http://www.ietf.org/rfc/rfc1524.txt">RFC 1524</A>。只返回为指定的 MIME 类型指定查看命令的 mailcap 条目。

@return		本地命令条目数组
@since	JAF 1.1

<!-- END DATA -->
