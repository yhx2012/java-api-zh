<!-- BEGIN KEY -->
public abstract class javax.activation.FileTypeMap extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
FileTypeMap 是一个抽象类，它为文件提供数据分类接口。此类的实现将实现 getContentType 方法，该方法将从文件名或 File 对象得到内容类型。FileTypeMap 可以使用任一方案来确定数据类型，从检查文件的文件扩展名（如 MimetypesFileTypeMap）到打开文件并尝试从文件内容得到其类型。FileDataSource 类使用默认的 FileTypeMap（若无更改，则是 MimetypesFileTypeMap）来确定文件的内容类型。

@see javax.activation.FileTypeMap
@see javax.activation.FileDataSource
@see javax.activation.MimetypesFileTypeMap

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.FileTypeMap()
<!-- END KEY -->
<!-- BEGIN DATA -->
默认的构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String javax.activation.FileTypeMap.getContentType(File file)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回文件对象的类型。此方法应始终返回有效的 MIME 类型。

@param file 要分类的文件。
@return 内容类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String javax.activation.FileTypeMap.getContentType(String filename)
<!-- END KEY -->
<!-- BEGIN DATA -->
返回传入文件的类型。此方法应始终返回有效的 MIME 类型。

@param filename 文件的路径名。
@return 内容类型。

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.activation.FileTypeMap.setDefaultFileTypeMap(FileTypeMap map)
<!-- END KEY -->
<!-- BEGIN DATA -->
设置系统的默认 FileTypeMap。此实例将返回给 getDefaultFileTypeMap 的调用者。

@param map FileTypeMap。
@exception SecurityException 如果调用者不具有更改默认值的权限

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.activation.FileTypeMap javax.activation.FileTypeMap.getDefaultFileTypeMap()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回系统的默认 FileTypeMap。如果调用了 setDefaultFileTypeMap，则返回该实例，否则返回 <code>MimetypesFileTypeMap</code> 的一个实例。

@return 默认的 FileTypeMap
@see javax.activation.FileTypeMap#setDefaultFileTypeMap

<!-- END DATA -->
