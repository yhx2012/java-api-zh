<!-- BEGIN KEY -->
public interface javax.activation.DataSource
<!-- END KEY -->
<!-- BEGIN DATA -->
DataSource 接口为 JavaBeans Activation Framework 提供任意数据集合的抽象。它提供该数据的类型，并在适当的时候以 <code>InputStream</code> 和 <code>OutputStream</code> 的形式提供对该数据的访问。

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream javax.activation.DataSource.getInputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法返回一个表示数据的 <code>InputStream</code>；如果无法提供，则抛出适当的异常。注意，每次调用此方法时都必须返回一个新的 <code>InputStream</code> 对象，并且流必须位于数据的开始位置。

@return 一个 InputStream

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.OutputStream javax.activation.DataSource.getOutputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法返回一个可以写入数据的 <code>OutputStream</code>，如果无法返回，则抛出适当的异常。注意，每次调用此方法时都必须返回一个新的 <code>OutputStream</code> 对象，并且流必须位于要写入数据的位置。

@return 一个 OutputStream

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.activation.DataSource.getContentType()
<!-- END KEY -->
<!-- BEGIN DATA -->
此方法以字符串形式返回数据的 MIME 类型。应该始终返回有效类型。如果 DataSource 实现不能确定数据类型，则建议 getContentType 返回 &quot;application/octet-stream&quot;。

@return MIME 类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.activation.DataSource.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象的<i>名称</i>，其中对象的名称依赖于底层对象的特性。封装文件的 DataSources 可以选择返回对象的文件名。(通常，这是文件名的最后部分，并不是完整路径名。)

@return 对象的名称。

<!-- END DATA -->
