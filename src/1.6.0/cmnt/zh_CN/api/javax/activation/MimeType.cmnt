<!-- BEGIN KEY -->
public class javax.activation.MimeType extends java.lang.Object implements java.io.Externalizable
<!-- END KEY -->
<!-- BEGIN DATA -->
RFC 2045 和 2046 中定义的多用途 Internet 邮件扩展（Multipurpose Internet Mail Extension，MIME）类型。

@since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.MimeType()
<!-- END KEY -->
<!-- BEGIN DATA -->
默认的构造方法。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.MimeType(String rawdata) throws javax.activation.MimeTypeParseException
<!-- END KEY -->
<!-- BEGIN DATA -->
根据 String 构建 MimeType 的构造方法。

@param rawdata	MIME 类型字符串

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.MimeType(String primary, String sub) throws javax.activation.MimeTypeParseException
<!-- END KEY -->
<!-- BEGIN DATA -->
用给定的基本类型和子类型构建 MimeType 的构造方法，它的参数列表为空。

@param primary	基本 MIME 类型
@param sub	MIME 子类型
@exception	MimeTypeParseException	如果基本类型或子类型不是有效的标记

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.activation.MimeType.getPrimaryType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的基本类型。

@return	基本 MIME 类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.setPrimaryType(String primary) throws javax.activation.MimeTypeParseException
<!-- END KEY -->
<!-- BEGIN DATA -->
将此对象的基本类型设置为给定的 String。

@param primary	基本 MIME 类型
@exception	MimeTypeParseException	如果基本类型不是有效的标记

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.activation.MimeType.getSubType()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的子类型。

@return	MIME 子类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.setSubType(String sub) throws javax.activation.MimeTypeParseException
<!-- END KEY -->
<!-- BEGIN DATA -->
将此对象的子类型设置为给定的 String。

@param sub	MIME 子类型
@exception	MimeTypeParseException	如果子类型不是有效的标记

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.activation.MimeTypeParameterList javax.activation.MimeType.getParameters()
<!-- END KEY -->
<!-- BEGIN DATA -->
获取此对象的参数列表。

@return	表示参数的 MimeTypeParameterList 对象

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.activation.MimeType.getParameter(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
获取与给定名称关联的值；如果没有当前关联，则返回 null。

@param name	参数名
@return		参数的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.setParameter(String name, String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
将值设置为与给定的名称关联，替换以前的任何关联。

@param name	参数名
@param value	参数的值

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.removeParameter(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
移除与给定名称关联的所有值。

@param name	参数名

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.activation.MimeType.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象的 String 表示形式。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.activation.MimeType.getBaseType()
<!-- END KEY -->
<!-- BEGIN DATA -->
返回此对象的 String 表示形式，不带参数列表。

@return	MIME 类型和子类型

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.activation.MimeType.match(MimeType type)
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此对象的基本类型和子类型与给定类型中的类型是否相同。

@param type	要与之比较的 MimeType 对象
@return		如果匹配，则返回 true

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.activation.MimeType.match(String rawdata) throws javax.activation.MimeTypeParseException
<!-- END KEY -->
<!-- BEGIN DATA -->
确定此对象的基本类型和子类型与 rawdata 中描述的内容类型是否相同。

@param rawdata	要与之比较的 MIME 类型字符串
@return		如果匹配，则返回 true

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.writeExternal(ObjectOutput out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
对象可实现 writeExternal 方法来保存其内容：对于其基本值，调用 DataOutput 的方法；对于对象、字符串和数组，调用 ObjectOutput 的 writeObject 方法。

@param out	要写入的 ObjectOutput 对象
@exception IOException 包括可能发生的所有 I/O 异常

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.readExternal(ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
对象可实现 readExternal 方法来恢复其内容：对于基本类型，调用 DataOutput 的方法；对于对象、字符串和数组，调用 readObject。readExternal 方法必须按照与 writeExternal 写入值时使用的相同顺序和类型来读取这些值。

@param in	要从中读取的 ObjectInput 对象
@exception ClassNotFoundException 如果找不到要恢复的对象的类。

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.readExternal(ObjectInput in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
对象可实现 readExternal 方法来恢复其内容：对于基本类型，调用 DataInput 的方法；对于对象、字符串和数组，调用 readObject。readExternal 方法必须按照与 writeExternal 写入值时使用的相同顺序和类型来读取这些值。

@param in	要从中读取的 ObjectInput 对象
@exception ClassNotFoundException 如果找不到要恢复的对象的类。I

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.activation.MimeType.writeExternal(ObjectOutput out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
对象可实现 writeExternal 方法来保存其内容：对于其基本值，调用 DataOutput 的方法；对于对象、字符串和数组，调用 ObjectOutput 的 writeObject 方法。

@param out	要写入的 ObjectOutput 对象
@exception IOException 包括可能发生的所有 I/O 异常

<!-- END DATA -->
