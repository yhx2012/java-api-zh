<!-- BEGIN KEY -->
public abstract class javax.crypto.SecretKeyFactorySpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->

此类定义 <code>SecretKeyFactory</code> 类的<i>服务提供者接口</i> (<b>SPI</b>)。此类中的所有抽象方法必须由希望为特定算法提供秘密密钥工厂实现的各个加密服务提供者来实现。

<P> 提供者应当对其秘密密钥工厂支持的所有密钥规范加以注释。例如，&quot;SunJCE&quot; 提供者提供的 DES 秘密密钥工厂支持 <code>DESKeySpec</code> 作为 DES 密钥的透明表示形式，并且该提供者的 Triple DES 密钥的秘密密钥工厂支持 <code>DESedeKeySpec</code> 作为 Triple DES 密钥的透明表示形式。

@author Jan Luehe

@version 1.4, 12/19/03

@see SecretKey
@see javax.crypto.spec.DESKeySpec
@see javax.crypto.spec.DESedeKeySpec
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.crypto.SecretKey javax.crypto.SecretKeyFactorySpi.engineGenerateSecret(KeySpec keySpec) throws java.security.spec.InvalidKeySpecException
<!-- END KEY -->
<!-- BEGIN DATA -->

根据提供的密钥规范（密钥材料）生成 <code>SecretKey</code> 对象。

@param  keySpec  秘密密钥的规范（密钥材料）

@return  秘密密钥

@exception InvalidKeySpecException  如果给定密钥规范不适合生成秘密密钥的秘密密钥工厂。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract java.security.spec.KeySpec javax.crypto.SecretKeyFactorySpi.engineGetKeySpec(SecretKey key, java.lang.Class keySpec) throws java.security.spec.InvalidKeySpecException
<!-- END KEY -->
<!-- BEGIN DATA -->

以所需格式返回给定密钥对象的规范（密钥材料）。

@param key 密钥

@param  keySpec  返回密钥材料的所需格式

@return  以所需格式返回底层密钥规范（密钥材料）

@exception InvalidKeySpecException 如果所需密钥规范不适合给定的密钥（例如，与 <code>key</code> 和 <code>keySpec</code> 相关的算法不匹配，或者 <code>key</code> 在加密硬件设备上引用一个密钥而 <code>keySpec</code> 是基于软件的密钥规范），或者无法处理给定的密钥（例如，给定的密钥具有此秘密密钥工厂不支持的算法或格式）。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.crypto.SecretKey javax.crypto.SecretKeyFactorySpi.engineTranslateKey(SecretKey key) throws java.security.InvalidKeyException
<!-- END KEY -->
<!-- BEGIN DATA -->

将一个密钥对象（其提供者未知或可能不受信任）转换为此密钥工厂的相应密钥对象。

@param  key  其提供者未知或不受信任的密钥

@return  已转换的密钥

@exception InvalidKeyException  如果此秘密密钥工厂无法处理给定的密钥。

<!-- END DATA -->
