<!-- BEGIN KEY -->
public abstract class javax.crypto.MacSpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->

 此类为 <code>Mac</code> 类定义<i>服务提供者接口 </i> (<b>SPI</b>)。 此类中的所有抽象方法都必须由每个希望提供实现特定 MAC 算法的加密服务提供者实现。

 <p> 该实现可以随意实现 Cloneable 接口。

@author Jan Luehe

@version 1.9, 04/30/03
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract int javax.crypto.MacSpi.engineGetMacLength()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回以字节为单位的 MAC 的长度。

@return  以字节为单位的 MAC 长度。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineInit(Key key, AlgorithmParameterSpec params) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
<!-- END KEY -->
<!-- BEGIN DATA -->

用给定的（秘密）密钥和算法参数初始化 MAC。

@param  key （秘密）密钥。
@param  params  算法参数。


@exception InvalidKeyException  如果给定密钥不适合初始化此 MAC。
@exception InvalidAlgorithmParameterException  如果给定算法参数不适合此 MAC。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineUpdate(byte input)
<!-- END KEY -->
<!-- BEGIN DATA -->

处理给定的字节。    
 
@param  input  要处理的输入字节。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineUpdate(byte[] input, int offset, int len)
<!-- END KEY -->
<!-- BEGIN DATA -->

从 <code>offset</code> 开始处（包含），处理 <code>input</code> 中的前<code>len</code> 个字节。
 
@param  input  输入缓冲区。
@param  offset  <code>input</code> 中输入开始处的偏移量。
@param  len  要处理的字节数。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.crypto.MacSpi.engineUpdate(ByteBuffer input)
<!-- END KEY -->
<!-- BEGIN DATA -->

从 <code>input.position()</code> 开始处，处理 ByteBuffer <code>input</code> 中的 <code>input.remaining()</code> 字节。 返回时，缓冲区的位置将等于其限制；其限制并未改变。

 <p>如果能够比byte数组更有效地处理 ByteBuffer，子类应考虑重写此方法。

@param  input   ByteBuffer
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract byte[] javax.crypto.MacSpi.engineDoFinal()
<!-- END KEY -->
<!-- BEGIN DATA -->

完成 MAC 计算并且重新设置 MAC 以便进一步使用，维护 MAC 初始化所用的秘密密钥。


@return   MAC 的结果。

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineReset()
<!-- END KEY -->
<!-- BEGIN DATA -->

 为了进一步使用而重新设置 MAC，维护 MAC 初始化所用的秘密密钥。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.crypto.MacSpi.clone() throws java.lang.CloneNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->

 如果此实现可以复制，则返回一个副本。
 
@return  如果此实现可以复制，则返回一个副本。

@exception CloneNotSupportedException 如果调用一个不支持 <code>Cloneable</code> 的实现。

<!-- END DATA -->
