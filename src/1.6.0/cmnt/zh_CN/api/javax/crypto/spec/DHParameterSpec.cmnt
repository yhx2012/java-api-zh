<!-- BEGIN KEY -->
public class javax.crypto.spec.DHParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
<!-- END KEY -->
<!-- BEGIN DATA -->

此类指定随同 Diffie-Hellman 算法使用的参数集合，该算法在 PKCS #3：<i>Diffie-Hellman Key-Agreement Standard</i> 中指定。

<p>一个中央机构生成参数并且把其发送给寻求生成密钥的两个实体。这些参数是：一个主参数 <code>p</code>，一个基参数 <code>g</code>，以及以位为单位的私有值的任意长度 <code>l</code>。

<p>给定的中央机构有可能生成多个参数实例，并且有可能不止一个中央机构。实际上，每一个个体都可能是其自己的中央机构，其具有不同参数的不同实体。
 
<p>注意，此类不在任何指定的参数上执行任何验证。因此，即使给定的值为 null 也会被直接返回。


@author Jan Luehe

@version 1.14, 10/29/03

@see javax.crypto.KeyAgreement
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.DHParameterSpec(BigInteger p, BigInteger g)
<!-- END KEY -->
<!-- BEGIN DATA -->

使用质数模数 <code>p</code> 和基生成器 <code>g</code> 为 Diffie-Hellman 构造一个参数集。

@param p 质数模数
@param g 基生成器

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.DHParameterSpec(BigInteger p, BigInteger g, int l)
<!-- END KEY -->
<!-- BEGIN DATA -->

使用质数模数 <code>p</code>、基生成器 <code>g</code> 以及以位为单位的随机指数大小 <code>l</code>（私有值）为 Diffie-Hellman 构造一个参数集。

@param p 质数模数
@param g 基生成器
@param l 以位为单位的随机指数的大小（私有值）

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger javax.crypto.spec.DHParameterSpec.getP()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回质数模数 <code>p</code>。

@return 质数模数 <code>p</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger javax.crypto.spec.DHParameterSpec.getG()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回基生成器 <code>g</code>。

@return 基生成器 <code>g</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.crypto.spec.DHParameterSpec.getL()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回以位为单位的随机指数的大小 <code>l</code>（私有值）。

@return 以位为单位的随机指数的大小 <code>l</code>（私有值），如果尚未设置此大小则返回 0。

<!-- END DATA -->
