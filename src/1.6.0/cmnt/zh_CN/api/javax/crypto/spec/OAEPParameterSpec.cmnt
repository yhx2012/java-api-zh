<!-- BEGIN KEY -->
public class javax.crypto.spec.OAEPParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
<!-- END KEY -->
<!-- BEGIN DATA -->

此类指定随同 OAEP 冗余使用的参数集合，OAEP 冗余在 <a href="http://www.ietf.org/rfc/rfc3447.txt">PKCS #1</a> 标准中定义。

PKCS#1 标准的 ASN.1 定义描述如下：
 <pre>
 RSAES-OAEP-params ::= SEQUENCE {
   hashAlgorithm      [0] OAEP-PSSDigestAlgorithms     DEFAULT sha1,
   maskGenAlgorithm   [1] PKCS1MGFAlgorithms  DEFAULT mgf1SHA1,
   pSourceAlgorithm   [2] PKCS1PSourceAlgorithms  DEFAULT pSpecifiedEmpty
 }
 </pre>
其中
 <pre>
 OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {
   { OID id-sha1 PARAMETERS NULL   }|
   { OID id-sha256 PARAMETERS NULL }|
   { OID id-sha384 PARAMETERS NULL }|
   { OID id-sha512 PARAMETERS NULL },
   ...  -- Allows for future expansion --
 }
 PKCS1MGFAlgorithms    ALGORITHM-IDENTIFIER ::= {
   { OID id-mgf1 PARAMETERS OAEP-PSSDigestAlgorithms },
   ...  -- Allows for future expansion --
 }
 PKCS1PSourceAlgorithms    ALGORITHM-IDENTIFIER ::= {
   { OID id-pSpecified PARAMETERS OCTET STRING },
   ...  -- Allows for future expansion --
 }
 </pre>
<p>注：OAEPParameterSpec.DEFAULT 所使用的如下所示：信息摘要 -- &quot;SHA-1&quot; 掩码生成函数 (mgf) -- &quot;MGF1&quot; mgf 的参数-- MGF1ParameterSpec.SHA1 编码输入源 -- PSource.PSpecified.DEFAULT

@see java.security.spec.MGF1ParameterSpec
@see PSource

@author Valerie Peng

@version 1.5, 06/03/04
@since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.crypto.spec.OAEPParameterSpec javax.crypto.spec.OAEPParameterSpec.DEFAULT
<!-- END KEY -->
<!-- BEGIN DATA -->

使用所有默认值的 OAEP 参数设置。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.OAEPParameterSpec(String mdName, String mgfName, AlgorithmParameterSpec mgfSpec, PSource pSrc)
<!-- END KEY -->
<!-- BEGIN DATA -->

使用指定的信息摘要算法 <code>mdName</code>、掩码生成函数算法 <code>mgfName</code>、掩码生成函数参数 <code>mgfSpec</code> 以及编码输入 P 源 <code>pSrc</code> 来为 PKCS #1 标准中定义的 OAEP 冗余构造一个参数集合。
 
@param mdName 信息摘要的算法名称。
@param mgfName 掩码生成函数的算法名称。
@param mgfSpec 掩码生成函数的参数。如果指定为 null，则 getMGFParameters() 将返回 null。
@param pSrc 编码输入 P 的源。
@exception NullPointerException 如果 <code>mdName</code>、<code>mgfName</code> 或 <code>pSrc</code> 为 null。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.crypto.spec.OAEPParameterSpec.getDigestAlgorithm()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回信息摘要算法名称。 

@return 信息摘要算法名称。 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.crypto.spec.OAEPParameterSpec.getMGFAlgorithm()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回掩码生成函数算法名称。

@return 掩码生成函数算法名称。

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.AlgorithmParameterSpec javax.crypto.spec.OAEPParameterSpec.getMGFParameters()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回掩码生成函数的参数。

@return 掩码生成函数的参数。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.PSource javax.crypto.spec.OAEPParameterSpec.getPSource()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回编码输入 P 的源。

@return 编码输入 P 的源。

<!-- END DATA -->
