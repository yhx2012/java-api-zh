<!-- BEGIN KEY -->
public class javax.crypto.spec.RC5ParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
<!-- END KEY -->
<!-- BEGIN DATA -->

此类指定随同 <a href="http://www.ietf.org/rfc/rfc2040.txt"><i>RC5</i></a> 算法使用的参数。

<p> 参数由一个版本号、一个 round 计数、一个 word 大小以及一个任意初始化向量 (IV)（仅用于反馈模式）组成。

<p> 可以使用此类来初始化一个实现了 <a href="http://www.rsasecurity.com">RSA Security Inc.</a> 或 RSA Security 授权的任何参与方所提供的 <i>RC5</i> 算法的 <code>Cipher</code> 对象。

@author Jan Luehe

@version 1.16, 06/03/04
@since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.RC5ParameterSpec(int version, int rounds, int wordSize)
<!-- END KEY -->
<!-- BEGIN DATA -->

根据给定的版本、round 的数量以及 word 大小（以位为单位）为 RC5 构造一个参数集合。

@param version 版本。
@param rounds rounds 的数量。
@param wordSize 以位为单位的 word 大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.RC5ParameterSpec(int version, int rounds, int wordSize, byte[] iv)
<!-- END KEY -->
<!-- BEGIN DATA -->

根据给定的版本、round 的数量、word 大小（以位为单位）以及 IV 为 RC5 构造一个参数集合。

<p> 注意，IV 的大小（块大小）必须是 word 大小的两倍。组成 IV 的字节在 <code>iv[0]</code> 和 <code>iv[2*(wordSize/8)-1]]</code> 范围内（包含两者）。

@param version 版本。
@param rounds rounds 的数量。
@param wordSize 以位为单位的 word 大小。
@param iv 具有 IV 的缓冲区。复制该缓冲区的前 <code>2*(wordSize/8)</code> 个字节来防止后续修改。
@exception IllegalArgumentException 如果 <code>iv</code> 为 <code>null</code> 或者 <code>(iv.length &lt; 2 * (wordSize / 8))</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.RC5ParameterSpec(int version, int rounds, int wordSize, byte[] iv, int offset)
<!-- END KEY -->
<!-- BEGIN DATA -->

根据给定的版本、round 的数量、word 大小（以位为单位）以及 IV 为 RC5 构造一个参数集合。

<p> 此 IV 取自 <code>iv</code>，始于且包含 <code>offset</code>。注意，始于且包含 <code>offset</code> 的 IV 的大小（块大小）必须是 word 大小的两倍。组成 IV 的字节在 <code>iv[offset]</code> 和 <code>iv[offset+2*(wordSize/8)-1]</code> 范围内（包含两者）。

@param version 版本。
@param rounds rounds 的数量。
@param wordSize 以位为单位的 word 大小。
@param iv 具有 IV 的缓冲区。复制该缓冲区的始于且包含 <code>offset</code> 的前 <code>2*(wordSize/8)</code> 个字节来防止后续修改。
@param offset <code>iv</code> 中的偏移量，IV 从此处开始。
@exception IllegalArgumentException 如果 <code>iv</code> 为 <code>null</code> 或者 <code>(iv.length - offset &lt; 2 * (wordSize / 8))</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.crypto.spec.RC5ParameterSpec.getVersion()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回版本。

@return 版本。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.crypto.spec.RC5ParameterSpec.getRounds()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回 rounds 的数量。

@return rounds 的数量。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.crypto.spec.RC5ParameterSpec.getWordSize()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回以位为单位的 word 大小。

@return 以位为单位的 word 大小。

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] javax.crypto.spec.RC5ParameterSpec.getIV()
<!-- END KEY -->
<!-- BEGIN DATA -->

返回 IV，如果此参数集没有包含 IV 则返回 null。

@return IV，如果此参数集没有包含 IV 则返回 null。每次调用此方法都返回一个新数组。

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.crypto.spec.RC5ParameterSpec.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->

测试给定对象与此对象的相等性。如果两个 RC5ParameterSpec 对象的版本号、round 的数量、word 大小以及 IV 相等，则认为这两者相等。（都为 <tt>null</tt> 的两个 IV 引用视为相等。）
 
@param obj 要与此对象进行相等性测试的对象。
 
@return 如果认为对象相等则返回 true；如果 <code>obj</code> 为 null 或其他情况则返回 false。

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.crypto.spec.RC5ParameterSpec.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->

计算此对象的哈希码值。相等的对象也将具有相同的哈希码。

<!-- END DATA -->
