<!-- BEGIN KEY -->
public interface org.w3c.dom.html.HTMLInputElement extends org.w3c.dom.html.HTMLElement
<!-- END KEY -->
<!-- BEGIN DATA -->
  Form control.  Note. Depending upon the environment in which the page is 
 being viewed, the value property may be read-only for the file upload 
 input type. For the "password" input type, the actual value returned may 
 be masked to prevent unauthorized use. See the  INPUT element definition 
 in HTML 4.0.
 <p>See also the <a href='http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510'>Document Object Model (DOM) Level 2 Specification</a>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getDefaultValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
  When the <code>type</code> attribute of the element has the value 
 "Text", "File" or "Password", this represents the HTML value attribute 
 of the element. The value of this attribute does not change if the 
 contents of the corresponding form control, in an interactive user 
 agent, changes. Changing this attribute, however, resets the contents 
 of the form control. See the  value attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.w3c.dom.html.HTMLInputElement.getDefaultChecked()
<!-- END KEY -->
<!-- BEGIN DATA -->
  When <code>type</code> has the value "Radio" or "Checkbox", this 
 represents the HTML checked attribute of the element. The value of 
 this attribute does not change if the state of the corresponding form 
 control, in an interactive user agent, changes. Changes to this 
 attribute, however, resets the state of the form control. See the  
 checked attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLFormElement org.w3c.dom.html.HTMLInputElement.getForm()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Returns the <code>FORM</code> element containing this control. Returns 
 <code>null</code> if this control is not within the context of a form. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getAccept()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A comma-separated list of content types that a server processing this 
 form will handle correctly. See the  accept attribute definition in 
 HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getAccessKey()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A single character access key to give access to the form control. See 
 the  accesskey attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getAlign()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Aligns this object (vertically or horizontally)  with respect to its 
 surrounding text. See the  align attribute definition in HTML 4.0. 
 This attribute is deprecated in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getAlt()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Alternate text for user agents not rendering the normal content of 
 this element. See the  alt attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.w3c.dom.html.HTMLInputElement.getChecked()
<!-- END KEY -->
<!-- BEGIN DATA -->
  When the <code>type</code> attribute of the element has the value 
 "Radio" or "Checkbox", this represents the current state of the form 
 control, in an interactive user agent. Changes to this attribute 
 change the state of the form control, but do not change the value of 
 the HTML value attribute of the element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.w3c.dom.html.HTMLInputElement.getDisabled()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The control is unavailable in this context. See the  disabled 
 attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.html.HTMLInputElement.getMaxLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Maximum number of characters for text fields, when <code>type</code> 
 has the value "Text" or "Password". See the  maxlength attribute 
 definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Form control or object name when submitted with a form. See the  name 
 attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.w3c.dom.html.HTMLInputElement.getReadOnly()
<!-- END KEY -->
<!-- BEGIN DATA -->
  This control is read-only. Relevant only when <code>type</code> has 
 the value "Text" or "Password". See the  readonly attribute definition 
 in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Size information. The precise meaning is specific to each type of 
 field.  See the  size attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getSrc()
<!-- END KEY -->
<!-- BEGIN DATA -->
  When the <code>type</code> attribute has the value "Image", this 
 attribute specifies the location of the image to be used to decorate 
 the graphical submit button. See the  src attribute definition in HTML 
 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.html.HTMLInputElement.getTabIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Index that represents the element's position in the tabbing order. See 
 the  tabindex attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The type of control created. See the  type attribute definition in 
 HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getUseMap()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Use client-side image map. See the  usemap attribute definition in 
 HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLInputElement.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
  When the <code>type</code> attribute of the element has the value 
 "Text", "File" or "Password", this represents the current contents of 
 the corresponding form control, in an interactive user agent. Changing 
 this attribute changes the contents of the form control, but does not 
 change the value of the HTML value attribute of the element. When the 
 <code>type</code> attribute of the element has the value "Button", 
 "Hidden", "Submit", "Reset", "Image", "Checkbox" or "Radio", this 
 represents the HTML value attribute of the element. See the  value 
 attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLInputElement.blur()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Removes keyboard focus from this element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLInputElement.focus()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Gives keyboard focus to this element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLInputElement.select()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Select the contents of the text area. For <code>INPUT</code> elements 
 whose <code>type</code> attribute has one of the following values: 
 "Text", "File", or "Password".

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLInputElement.click()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Simulate a mouse-click. For <code>INPUT</code> elements whose
 <code>type</code> attribute has one of the following values: "Button", 
 "Checkbox", "Radio", "Reset", or "Submit".

<!-- END DATA -->
