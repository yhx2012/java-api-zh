<!-- BEGIN KEY -->
public interface org.w3c.dom.html.HTMLDocument extends org.w3c.dom.Document
<!-- END KEY -->
<!-- BEGIN DATA -->
  An <code>HTMLDocument</code> is the root of the HTML hierarchy and holds 
 the entire content. Besides providing access to the hierarchy, it also 
 provides some convenience methods for accessing certain sets of 
 information from the document.
 <p> The following properties have been deprecated in favor of the 
 corresponding ones for the <code>BODY</code> element: alinkColor background
  bgColor fgColor linkColor vlinkColor In DOM Level 2, the method 
 <code>getElementById</code> is inherited from the <code>Document</code> 
 interface where it was moved.
 <p>See also the <a href='http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510'>Document Object Model (DOM) Level 2 Specification</a>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLDocument.getTitle()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The title of a document as specified by the <code>TITLE</code> element 
 in the head of the document. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLDocument.getReferrer()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Returns the URI  of the page that linked to this page. The value is an 
 empty string if the user navigated to the page directly (not through a 
 link, but, for example, via a bookmark). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLDocument.getDomain()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The domain name of the server that served the document, or 
 <code>null</code> if the server cannot be identified by a domain name. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLDocument.getURL()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The complete URI  of the document. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLElement org.w3c.dom.html.HTMLDocument.getBody()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The element that contains the content for the document. In documents 
 with <code>BODY</code> contents, returns the <code>BODY</code> 
 element. In frameset documents, this returns the outermost
 <code>FRAMESET</code> element. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLCollection org.w3c.dom.html.HTMLDocument.getImages()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A collection of all the <code>IMG</code> elements in a document. The 
 behavior is limited to <code>IMG</code> elements for backwards 
 compatibility. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLCollection org.w3c.dom.html.HTMLDocument.getApplets()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A collection of all the <code>OBJECT</code> elements that include 
 applets and <code>APPLET</code> ( deprecated ) elements in a document. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLCollection org.w3c.dom.html.HTMLDocument.getLinks()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A collection of all <code>AREA</code> elements and anchor (
 <code>A</code> ) elements in a document with a value for the 
 <code>href</code> attribute. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLCollection org.w3c.dom.html.HTMLDocument.getForms()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A collection of all the forms of a document. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLCollection org.w3c.dom.html.HTMLDocument.getAnchors()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A collection of all the anchor (<code>A</code> ) elements in a document
  with a value for the <code>name</code> attribute. Note. For reasons 
 of backwards compatibility, the returned set of anchors only contains 
 those anchors created with the <code>name</code>  attribute, not those 
 created with the <code>id</code> attribute. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLDocument.getCookie()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The cookies associated with this document. If there are none, the 
 value is an empty string. Otherwise, the value is a string: a 
 semicolon-delimited list of "name, value" pairs for all the cookies 
 associated with the page. For example, 
 <code>name=value;expires=date</code> . 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLDocument.open()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Note. This method and the ones following  allow a user to add to or 
 replace the structure model of a document using strings of unparsed 
 HTML. At the time of  writing alternate methods for providing similar 
 functionality for  both HTML and XML documents were being considered. 
 The following methods may be deprecated at some point in the future in 
 favor of a more general-purpose mechanism.
 <br> Open a document stream for writing. If a document exists in the 
 target, this method clears it.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLDocument.close()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Closes a document stream opened by <code>open()</code> and forces 
 rendering.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLDocument.write(String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
  Write a string of text to a document stream opened by
 <code>open()</code> . The text is parsed into the document's structure 
 model.
 @param text  The string to be parsed into some structure in the 
   document structure model.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLDocument.writeln(String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
  Write a string of text followed by a newline character to a document 
 stream opened by <code>open()</code> . The text is parsed into the 
 document's structure model.
 @param text  The string to be parsed into some structure in the 
   document structure model.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.NodeList org.w3c.dom.html.HTMLDocument.getElementsByName(String elementName)
<!-- END KEY -->
<!-- BEGIN DATA -->
  Returns the (possibly empty) collection of elements whose
 <code>name</code> value is given by <code>elementName</code> .
 @param elementName  The <code>name</code> attribute value for an 
   element.
 @return  The matching elements.

<!-- END DATA -->
