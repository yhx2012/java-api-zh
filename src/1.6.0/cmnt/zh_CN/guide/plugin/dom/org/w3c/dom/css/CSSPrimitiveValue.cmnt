<!-- BEGIN KEY -->
public interface org.w3c.dom.css.CSSPrimitiveValue extends org.w3c.dom.css.CSSValue
<!-- END KEY -->
<!-- BEGIN DATA -->
  The <code>CSSPrimitiveValue</code> interface represents a single CSS value
 . This interface may be used to determine the value of a specific style 
 property currently set in a block or to set a specific style property 
 explicitly within the block. An instance of this interface might be 
 obtained from the <code>getPropertyCSSValue</code> method of the 
 <code>CSSStyleDeclaration</code> interface. A 
 <code>CSSPrimitiveValue</code> object only occurs in a context of a CSS 
 property. 
 <p> Conversions are allowed between absolute values (from millimeters to 
 centimeters, from degrees to radians, and so on) but not between relative 
 values. (For example, a pixel value cannot be converted to a centimeter 
 value.) Percentage values can't be converted since they are relative to 
 the parent value (or another property value). There is one exception for 
 color percentage values: since a color percentage value is relative to 
 the range 0-255, a color percentage value can be converted to a number; 
 (see also the <code>RGBColor</code> interface). 
 <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113'>Document Object Model (DOM) Level 2 Style Specification</a>.
 @since DOM Level 2

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_UNKNOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is not a recognized CSS2 value. The value can only be 
 obtained by using the <code>cssText</code> attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_NUMBER
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a simple number. The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_PERCENTAGE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a percentage. The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_EMS
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (ems). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_EXS
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (exs). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_PX
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (px). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_CM
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (cm). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_MM
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (mm). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_IN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (in). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_PT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (pt). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_PC
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a length (pc). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_DEG
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is an angle (deg). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_RAD
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is an angle (rad). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_GRAD
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is an angle (grad). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_MS
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a time (ms). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_S
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a time (s). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_HZ
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a frequency (Hz). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_KHZ
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a frequency (kHz). The value can be obtained by using the 
 <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_DIMENSION
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a number with an unknown dimension. The value can be 
 obtained by using the <code>getFloatValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_STRING
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a STRING. The value can be obtained by using the 
 <code>getStringValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_URI
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a URI. The value can be obtained by using the 
 <code>getStringValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_IDENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is an identifier. The value can be obtained by using the 
 <code>getStringValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_ATTR
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a attribute function. The value can be obtained by using 
 the <code>getStringValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_COUNTER
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a counter or counters function. The value can be obtained 
 by using the <code>getCounterValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_RECT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a rect function. The value can be obtained by using the 
 <code>getRectValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.css.CSSPrimitiveValue.CSS_RGBCOLOR
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value is a RGB color. The value can be obtained by using the 
 <code>getRGBColorValue</code> method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public short org.w3c.dom.css.CSSPrimitiveValue.getPrimitiveType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The type of the value as defined by the constants specified above.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.css.CSSPrimitiveValue.setFloatValue(short unitType, float floatValue) throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  A method to set the float value with a specified unit. If the property 
 attached with this value can not accept the specified unit or the 
 float value, the value will be unchanged and a 
 <code>DOMException</code> will be raised. 
 @param unitType  A unit code as defined above. The unit code can only 
   be a float unit type (i.e. <code>CSS_NUMBER</code>, 
   <code>CSS_PERCENTAGE</code>, <code>CSS_EMS</code>, 
   <code>CSS_EXS</code>, <code>CSS_PX</code>, <code>CSS_CM</code>, 
   <code>CSS_MM</code>, <code>CSS_IN</code>, <code>CSS_PT</code>, 
   <code>CSS_PC</code>, <code>CSS_DEG</code>, <code>CSS_RAD</code>, 
   <code>CSS_GRAD</code>, <code>CSS_MS</code>, <code>CSS_S</code>, 
   <code>CSS_HZ</code>, <code>CSS_KHZ</code>, 
   <code>CSS_DIMENSION</code>). 
 @param floatValue  The new float value. 
 @exception DOMException
    INVALID_ACCESS_ERR: Raised if the attached property doesn't support 
   the float value or the unit type.
   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

<!-- END DATA -->
<!-- BEGIN KEY -->
public float org.w3c.dom.css.CSSPrimitiveValue.getFloatValue(short unitType) throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  This method is used to get a float value in a specified unit. If this 
 CSS value doesn't contain a float value or can't be converted into 
 the specified unit, a <code>DOMException</code> is raised. 
 @param unitType  A unit code to get the float value. The unit code can 
   only be a float unit type (i.e. <code>CSS_NUMBER</code>, 
   <code>CSS_PERCENTAGE</code>, <code>CSS_EMS</code>, 
   <code>CSS_EXS</code>, <code>CSS_PX</code>, <code>CSS_CM</code>, 
   <code>CSS_MM</code>, <code>CSS_IN</code>, <code>CSS_PT</code>, 
   <code>CSS_PC</code>, <code>CSS_DEG</code>, <code>CSS_RAD</code>, 
   <code>CSS_GRAD</code>, <code>CSS_MS</code>, <code>CSS_S</code>, 
   <code>CSS_HZ</code>, <code>CSS_KHZ</code>, 
   <code>CSS_DIMENSION</code>). 
 @return  The float value in the specified unit. 
 @exception DOMException
    INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float 
   value or if the float value can't be converted into the specified 
   unit. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.css.CSSPrimitiveValue.setStringValue(short stringType, String stringValue) throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  A method to set the string value with the specified unit. If the 
 property attached to this value can't accept the specified unit or 
 the string value, the value will be unchanged and a 
 <code>DOMException</code> will be raised. 
 @param stringType  A string code as defined above. The string code can 
   only be a string unit type (i.e. <code>CSS_STRING</code>, 
   <code>CSS_URI</code>, <code>CSS_IDENT</code>, and 
   <code>CSS_ATTR</code>). 
 @param stringValue  The new string value. 
 @exception DOMException
    INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string 
   value or if the string value can't be converted into the specified 
   unit.
   <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.css.CSSPrimitiveValue.getStringValue() throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  This method is used to get the string value. If the CSS value doesn't 
 contain a string value, a <code>DOMException</code> is raised.  Some 
 properties (like 'font-family' or 'voice-family') convert a 
 whitespace separated list of idents to a string. 
 @return  The string value in the current unit. The current 
   <code>primitiveType</code> can only be a string unit type (i.e. 
   <code>CSS_STRING</code>, <code>CSS_URI</code>, 
   <code>CSS_IDENT</code> and <code>CSS_ATTR</code>). 
 @exception DOMException
    INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string 
   value. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.css.Counter org.w3c.dom.css.CSSPrimitiveValue.getCounterValue() throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  This method is used to get the Counter value. If this CSS value 
 doesn't contain a counter value, a <code>DOMException</code> is 
 raised. Modification to the corresponding style property can be 
 achieved using the <code>Counter</code> interface. 
 @return The Counter value.
 @exception DOMException
    INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a 
   Counter value (e.g. this is not <code>CSS_COUNTER</code>). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.css.Rect org.w3c.dom.css.CSSPrimitiveValue.getRectValue() throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  This method is used to get the Rect value. If this CSS value doesn't 
 contain a rect value, a <code>DOMException</code> is raised. 
 Modification to the corresponding style property can be achieved 
 using the <code>Rect</code> interface. 
 @return The Rect value.
 @exception DOMException
    INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Rect 
   value. (e.g. this is not <code>CSS_RECT</code>). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.css.RGBColor org.w3c.dom.css.CSSPrimitiveValue.getRGBColorValue() throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  This method is used to get the RGB color. If this CSS value doesn't 
 contain a RGB color value, a <code>DOMException</code> is raised. 
 Modification to the corresponding style property can be achieved 
 using the <code>RGBColor</code> interface. 
 @return the RGB color value.
 @exception DOMException
    INVALID_ACCESS_ERR: Raised if the attached property can't return a 
   RGB color value (e.g. this is not <code>CSS_RGBCOLOR</code>). 

<!-- END DATA -->
