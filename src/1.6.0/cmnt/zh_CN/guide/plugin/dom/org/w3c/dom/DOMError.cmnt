<!-- BEGIN KEY -->
public interface org.w3c.dom.DOMError
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>DOMError</code> is an interface that describes an error.
 <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.
 @since DOM Level 3

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.DOMError.SEVERITY_WARNING
<!-- END KEY -->
<!-- BEGIN DATA -->
 The severity of the error described by the <code>DOMError</code> is 
 warning. A <code>SEVERITY_WARNING</code> will not cause the 
 processing to stop, unless <code>DOMErrorHandler.handleError()</code> 
 returns <code>false</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.DOMError.SEVERITY_ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
 The severity of the error described by the <code>DOMError</code> is 
 error. A <code>SEVERITY_ERROR</code> may not cause the processing to 
 stop if the error can be recovered, unless 
 <code>DOMErrorHandler.handleError()</code> returns <code>false</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.DOMError.SEVERITY_FATAL_ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
 The severity of the error described by the <code>DOMError</code> is 
 fatal error. A <code>SEVERITY_FATAL_ERROR</code> will cause the 
 normal processing to stop. The return value of 
 <code>DOMErrorHandler.handleError()</code> is ignored unless the 
 implementation chooses to continue, in which case the behavior 
 becomes undefined.

<!-- END DATA -->
<!-- BEGIN KEY -->
public short org.w3c.dom.DOMError.getSeverity()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The severity of the error, either <code>SEVERITY_WARNING</code>, 
 <code>SEVERITY_ERROR</code>, or <code>SEVERITY_FATAL_ERROR</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.DOMError.getMessage()
<!-- END KEY -->
<!-- BEGIN DATA -->
 An implementation specific string describing the error that occurred.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.DOMError.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
  A <code>DOMString</code> indicating which related data is expected in 
 <code>relatedData</code>. Users should refer to the specification of 
 the error in order to find its <code>DOMString</code> type and 
 <code>relatedData</code> definitions if any. 
 <p ><b>Note:</b>  As an example, 
 <code>Document.normalizeDocument()</code> does generate warnings when 
 the "split-cdata-sections" parameter is in use. Therefore, the method 
 generates a <code>SEVERITY_WARNING</code> with <code>type</code> 
 <code>"cdata-sections-splitted"</code> and the first 
 <code>CDATASection</code> node in document order resulting from the 
 split is returned by the <code>relatedData</code> attribute. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object org.w3c.dom.DOMError.getRelatedException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The related platform dependent exception if any.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object org.w3c.dom.DOMError.getRelatedData()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The related <code>DOMError.type</code> dependent data if any. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.DOMLocator org.w3c.dom.DOMError.getLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The location of the error.

<!-- END DATA -->
