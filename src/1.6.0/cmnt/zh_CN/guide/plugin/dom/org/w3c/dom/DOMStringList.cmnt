<!-- BEGIN KEY -->
public interface org.w3c.dom.DOMStringList
<!-- END KEY -->
<!-- BEGIN DATA -->
  The <code>DOMStringList</code> interface provides the abstraction of an 
 ordered collection of <code>DOMString</code> values, without defining or 
 constraining how this collection is implemented. The items in the 
 <code>DOMStringList</code> are accessible via an integral index, starting 
 from 0. 
 <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.
 @since DOM Level 3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.DOMStringList.item(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
  Returns the <code>index</code>th item in the collection. If 
 <code>index</code> is greater than or equal to the number of 
 <code>DOMString</code>s in the list, this returns <code>null</code>. 
 @param index Index into the collection.
 @return  The <code>DOMString</code> at the <code>index</code>th 
   position in the <code>DOMStringList</code>, or <code>null</code> if 
   that is not a valid index. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.DOMStringList.getLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The number of <code>DOMString</code>s in the list. The range of valid 
 child node indices is 0 to <code>length-1</code> inclusive.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.w3c.dom.DOMStringList.contains(String str)
<!-- END KEY -->
<!-- BEGIN DATA -->
  Test if a string is part of this <code>DOMStringList</code>. 
 @param str  The string to look for. 
 @return  <code>true</code> if the string has been found, 
   <code>false</code> otherwise. 

<!-- END DATA -->
