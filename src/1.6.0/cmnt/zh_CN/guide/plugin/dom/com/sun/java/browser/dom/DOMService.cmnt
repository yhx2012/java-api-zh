<!-- BEGIN KEY -->
public com.sun.java.browser.dom.DOMService()
<!-- END KEY -->
<!-- BEGIN DATA -->
 An empty constructor is provided. Implementations of this
 abstract class must provide a public no-argument constructor
 in order for the static getService() method to work correctly.        
 Application programmers should not be able to directly
 construct implementation subclasses of this abstract subclass.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static com.sun.java.browser.dom.DOMService com.sun.java.browser.dom.DOMService.getService(Object obj) throws com.sun.java.browser.dom.DOMUnsupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns new instance of a DOMService. The implementation
 of the DOMService returns depends on the setting of the
 com.sun.java.browser.dom.DOMServiceProvider property or, 
 if the property is not set, a platform specific default.
 
 Throws DOMUnsupportedException if the DOMService is not 
 available to the obj.

 @param obj Object to leverage the DOMService

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.Object com.sun.java.browser.dom.DOMService.invokeAndWait(DOMAction action) throws com.sun.java.browser.dom.DOMAccessException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Causes action.run() to be executed synchronously on the 
 DOM action dispatching thread. This call will block until all 
 pending DOM actions have been processed and (then) 
 action.run() returns. This method should be used when an 
 application thread needs to access the browser's DOM. 
 It should not be called from the DOMActionDispatchThread. 
 
 Note that if the DOMAction.run() method throws an uncaught 
 exception (on the DOM action dispatching thread),  it's caught 
 and re-thrown, as an DOMAccessException, on the caller's thread.

 If the DOMAction.run() method throws any DOM security related
 exception (on the DOM action dispatching thread), it's caught
 and re-thrown, as an DOMSecurityException, on the caller's thread.
 
 @param action DOMAction.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void com.sun.java.browser.dom.DOMService.invokeLater(DOMAction action)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Causes action.run() to be executed asynchronously on the 
 DOM action dispatching thread. This method should be used 
 when an application thread needs to access the browser's 
 DOM. It should not be called from the DOMActionDispatchThread. 

 Note that if the DOMAction.run() method throws an uncaught 
 exception (on the DOM action dispatching thread),  it will not be
 caught and re-thrown on the caller's thread.
 
 @param action DOMAction.

<!-- END DATA -->
