<!-- BEGIN KEY -->
public interface com.sun.jdi.request.StepRequest extends com.sun.jdi.request.EventRequest
<!-- END KEY -->
<!-- BEGIN DATA -->
 Request for notification when a step occurs in the target VM.
 When an enabled StepRequest is satisfied, an
 {@link com.sun.jdi.event.EventSet event set} containing a
 {@link com.sun.jdi.event.StepEvent StepEvent} will be placed on the
 {@link com.sun.jdi.event.EventQueue EventQueue}.
 The collection of existing StepRequests is 
 managed by the {@link EventRequestManager}

 @see com.sun.jdi.event.StepEvent
 @see com.sun.jdi.event.EventQueue
 @see EventRequestManager

 @author Robert Field
 @since  1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int com.sun.jdi.request.StepRequest.STEP_INTO
<!-- END KEY -->
<!-- BEGIN DATA -->
Step into any newly pushed frames 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int com.sun.jdi.request.StepRequest.STEP_OVER
<!-- END KEY -->
<!-- BEGIN DATA -->
Step over any newly pushed frames 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int com.sun.jdi.request.StepRequest.STEP_OUT
<!-- END KEY -->
<!-- BEGIN DATA -->
Step out of the current frame 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int com.sun.jdi.request.StepRequest.STEP_MIN
<!-- END KEY -->
<!-- BEGIN DATA -->
Step to the next available location 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int com.sun.jdi.request.StepRequest.STEP_LINE
<!-- END KEY -->
<!-- BEGIN DATA -->
Step to the next location on a different line 
<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.jdi.ThreadReference com.sun.jdi.request.StepRequest.thread()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the thread on which the step event is being requested.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int com.sun.jdi.request.StepRequest.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the step size

<!-- END DATA -->
<!-- BEGIN KEY -->
public int com.sun.jdi.request.StepRequest.depth()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the step depth

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.jdi.request.StepRequest.addClassFilter(ReferenceType refType)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Restricts the events generated by this request to those whose
 location is in the given reference type or any of its subtypes.
 An event will be generated for any location in a reference type 
 that can be safely cast to the given reference type. 

 @param refType the reference type to filter on.
 @throws InvalidRequestStateException if this request is currently
 enabled or has been deleted. 
 Filters may be added only to disabled requests.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.jdi.request.StepRequest.addClassFilter(String classPattern)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Restricts the events generated by this request to those 
 whose location is in a class whose name matches a restricted
 regular expression. Regular expressions are limited 
 to exact matches and patterns that begin with '*' or end with '*'; 
 for example, "*.Foo" or "java.*".

 @param classPattern the pattern String to filter for.
 @throws InvalidRequestStateException if this request is currently
 enabled or has been deleted. 
 Filters may be added only to disabled requests.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.jdi.request.StepRequest.addClassExclusionFilter(String classPattern)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Restricts the events generated by this request to those 
 whose location is in a class whose name does <b>not</b> match a 
 restricted regular expression. Regular expressions are limited 
 to exact matches and patterns that begin with '*' or end with '*'; 
 for example, "*.Foo" or "java.*".

 @param classPattern the pattern String to filter against.
 @throws InvalidRequestStateException if this request is currently
 enabled or has been deleted. 
 Filters may be added only to disabled requests.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.jdi.request.StepRequest.addInstanceFilter(ObjectReference instance)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Restricts the events generated by this request to those in
 which the currently executing instance ("this") is the object
 specified.
 <P>
 Not all targets support this operation. 
 Use {@link VirtualMachine#canUseInstanceFilters()}
 to determine if the operation is supported.
 @since 1.4
 @param instance the object which must be the current instance
 in order to pass this filter.
 @throws java.lang.UnsupportedOperationException if 
 the target virtual machine does not support this 
 operation.
 @throws InvalidRequestStateException if this request is currently
 enabled or has been deleted. 
 Filters may be added only to disabled requests.

<!-- END DATA -->
