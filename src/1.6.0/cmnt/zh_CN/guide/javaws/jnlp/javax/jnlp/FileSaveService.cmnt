<!-- BEGIN KEY -->
public interface javax.jnlp.FileSaveService
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>FileSaveService</code> service allows the user to save a file
 to the local file system, even for applications that
 are running in the untrusted execution environment. The JNLP Client is the mediator
 and is therefore responsible for providing the specific implementation
 of this, if any.
 <p>
 This service provides similar functionatlity as the <i>Save as...</i>
 functionality provided by most browsers.

 @since 1.0

 @see FileOpenService
 @see FileContents

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.jnlp.FileContents javax.jnlp.FileSaveService.saveFileDialog(String pathHint, java.lang.String[] extensions, InputStream stream, String name) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
Asks the users to save a file.

  @param  pathHint  A hint from the application to the default directory to be
                    used. This might be ignored by the JNLP Client.

  @param extensions A list of default extensions to show in the file chooser.
                    For example, <code>String[] { "txt", "java" }</code>.
                    These might be ignored by the JNLP Client.

  @param stream     The content of the file to save along represented as an
                    <code>InputStream</code>

  @param name       The suggested filename, which might be ignored by the JNLP client

  @return A <code>FileContents</code> object for the saved file if the save was successfully, or
          <code>null</code> if the user canceled the request.

  @exception <code>IOException</code> if the requested failed in any way other than the user chose
  not to save the file

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.jnlp.FileContents javax.jnlp.FileSaveService.saveAsFileDialog(String pathHint, java.lang.String[] extensions, FileContents contents) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
Asks the users to save a file.

  @param  pathHint  A hint from the application to the default directory to be
                    used. This might be ignored by the JNLP Client.

  @param extensions A list of default extensions to show in the file chooser.
                    For example, <code>String[] { "txt", "java" }</code>.
                    These might be ignored by the JNLP Client.

  @param contents The content of the file to save along with the suggested filename.
                     The suggested filename might be ignored by the JNLP Client.



  @return A <code>FileContents</code> object for the saved file if the save was successfully, or
          <code>null</code> if the user canceled the request.

  @exception <code>IOException</code> if the requested failed in any way other than the user chose
  not to save the file

<!-- END DATA -->
