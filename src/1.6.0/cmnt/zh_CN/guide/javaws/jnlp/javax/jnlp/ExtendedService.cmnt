<!-- BEGIN KEY -->
public interface javax.jnlp.ExtendedService
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>ExtendedService</code> provides additional support to the current 
 JNLP API, which allow applications to open a specific file in the client's file system. 


 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.jnlp.FileContents javax.jnlp.ExtendedService.openFile(File file) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

  Asks the user the permission to open the specified file if the file
  has not been opened before.
 
  The contents of the file is returned as a FileContents object.
  The returned FileContents object contains the contents
  the file.

  @param  file  the file object

  @return A FileContent object with information about the
          opened file

  @exception IOException - if there is any I/O error

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.jnlp.FileContents[] javax.jnlp.ExtendedService.openFiles(java.io.File[] files) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

  Asks the user the permission to open the specified list of files if
  any of the files has not been opened before.

  The contents of each file is returned as a FileContents object in the FileContents array.
  The returned FileContents object contains the contents
  the file.

  @param  files  the array of files 

  @return A FileContent[] object with information about each
          opened file

  @exception IOException - if there is any I/O error

<!-- END DATA -->
