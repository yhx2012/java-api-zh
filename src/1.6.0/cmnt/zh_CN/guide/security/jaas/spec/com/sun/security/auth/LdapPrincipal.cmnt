<!-- BEGIN KEY -->
public final class com.sun.security.auth.LdapPrincipal extends java.lang.Object implements java.security.Principal, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 A principal identified by a distinguished name as specified by
 <a href="http://ietf.org//rfc/rfc2253.txt">RFC 2253</a>.

 <p> 
 After successful authentication, a user {@link java.security.Principal}
 can be associated with a particular {@link javax.security.auth.Subject} 
 to augment that <code>Subject</code> with an additional identity.  
 Authorization decisions can then be based upon the 
 <code>Principal</code>s that are associated with a <code>Subject</code>.

 <p>
 This class is immutable.

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
private final java.lang.String com.sun.security.auth.LdapPrincipal.nameString
<!-- END KEY -->
<!-- BEGIN DATA -->
 The principal's string name 

 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private final javax.naming.ldap.LdapName com.sun.security.auth.LdapPrincipal.name
<!-- END KEY -->
<!-- BEGIN DATA -->
 The principal's name 

 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.security.auth.LdapPrincipal(String name) throws javax.naming.InvalidNameException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an LDAP principal.

 @param name The principal's string distinguished name.
 @throws InvalidNameException If a syntax violation is detected.
 @exception NullPointerException If the <code>name</code> is 
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.security.auth.LdapPrincipal.equals(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares this principal to the specified object.

 @param object The object to compare this principal against.
 @return true if they are equal; false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int com.sun.security.auth.LdapPrincipal.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Computes the hash code for this principal.

 @return The principal's hash code.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.security.auth.LdapPrincipal.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name originally used to create this principal.

 @return The principal's string name.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.security.auth.LdapPrincipal.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a string representation of this principal's name in the format
 defined by <a href="http://ietf.org/rfc/rfc2253.txt">RFC 2253</a>.
 If the name has zero components an empty string is returned.

 @return The principal's string name.

<!-- END DATA -->
