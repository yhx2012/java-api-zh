<!-- BEGIN KEY -->
public class com.sun.management.VMOption extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Information about a VM option including its value and
 where the value came from which is referred as its
 {@link VMOption.Origin <i>origin</i>}.
 <p>
 Each VM option has a default value.  A VM option can
 be set at VM creation time typically as a command line
 argument to the launcher or an argument passed to the
 VM created using the JNI invocation interface.
 In addition, a VM option may be set via an environment
 variable or a configuration file. A VM option can also
 be set dynamically via a management interface after
 the VM was started.

 A <tt>VMOption</tt> contains the value of a VM option
 and the origin of that value at the time this <tt>VMOption</tt>
 object was constructed.  The value of the VM option
 may be changed after the <tt>VMOption</tt> object was constructed,

 @see <a href="{@docRoot}/../../../../technotes/guides/vm/index.html">
         Java Virtual Machine</a>
 @author Mandy Chung
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.management.VMOption(String name, String value, boolean writeable, VMOption.Origin origin)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <tt>VMOption</tt>.

 @param name Name of a VM option.
 @param value Value of a VM option.
 @param writeable <tt>true</tt> if a VM option can be set dynamically,
                  or <tt>false</tt> otherwise.
 @param origin where the value of a VM option came from.

 @throws NullPointerException if the name or value is <tt>null</tt>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.management.VMOption.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of this VM option.

 @return the name of this VM option.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.management.VMOption.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of this VM option at the time when
 this <tt>VMOption</tt> was created. The value could have been changed.

 @return the value of the VM option at the time when
         this <tt>VMOption</tt> was created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.management.VMOption.Origin com.sun.management.VMOption.getOrigin()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the origin of the value of this VM option. That is,
 where the value of this VM option came from.

 @return where the value of this VM option came from.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.management.VMOption.isWriteable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Tests if this VM option is writeable.  If this VM option is writeable,
 it can be set by the {@link HotSpotDiagnosticMXBean#setVMOption
 HotSpotDiagnosticMXBean.setVMOption} method.

 @return <tt>true</tt> if this VM option is writeable; <tt>false</tt>
 otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static com.sun.management.VMOption com.sun.management.VMOption.from(CompositeData cd)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a <tt>VMOption</tt> object represented by the
 given <tt>CompositeData</tt>. The given <tt>CompositeData</tt>
 must contain the following attributes:
 <p>
 <blockquote>
 <table border>
 <tr>
   <th align=left>Attribute Name</th>
   <th align=left>Type</th>
 </tr>
 <tr>
   <td>name</td>
   <td><tt>java.lang.String</tt></td>
 </tr>
 <tr>
   <td>value</td>
   <td><tt>java.lang.String</tt></td>
 </tr>
 <tr>
   <td>origin</td>
   <td><tt>java.lang.String</tt></td>
 </tr>
 <tr>
   <td>writeable</td>
   <td><tt>java.lang.Boolean</tt></td>
 </tr>
 </table>
 </blockquote>

 @param cd <tt>CompositeData</tt> representing a <tt>VMOption</tt>

 @throws IllegalArgumentException if <tt>cd</tt> does not
   represent a <tt>VMOption</tt> with the attributes described
   above.

 @return a <tt>VMOption</tt> object represented by <tt>cd</tt>
         if <tt>cd</tt> is not <tt>null</tt>;
         <tt>null</tt> otherwise.

<!-- END DATA -->
