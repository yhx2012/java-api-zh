<!-- BEGIN KEY -->
public class com.sun.mirror.util.SimpleDeclarationVisitor extends java.lang.Object implements com.sun.mirror.util.DeclarationVisitor
<!-- END KEY -->
<!-- BEGIN DATA -->
 A simple visitor for declarations.

 <p> The implementations of the methods of this class do nothing but
 delegate up the declaration hierarchy.  A subclass should override the
 methods that correspond to the kinds of declarations on which it
 will operate.

 @author Joseph D. Darcy
 @author Scott Seligman
 @version 1.4 05/11/17
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.mirror.util.SimpleDeclarationVisitor()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new <tt>SimpleDeclarationVisitor</tt>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitDeclaration(Declaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a declaration.
 The implementation does nothing.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitPackageDeclaration(PackageDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a package declaration.
 The implementation simply invokes
 {@link #visitDeclaration visitDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitMemberDeclaration(MemberDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a member or constructor declaration.
 The implementation simply invokes
 {@link #visitDeclaration visitDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitTypeDeclaration(TypeDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a type declaration.
 The implementation simply invokes
 {@link #visitMemberDeclaration visitMemberDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitClassDeclaration(ClassDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a class declaration.
 The implementation simply invokes
 {@link #visitTypeDeclaration visitTypeDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitEnumDeclaration(EnumDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an enum declaration.
 The implementation simply invokes
 {@link #visitClassDeclaration visitClassDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitInterfaceDeclaration(InterfaceDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an interface declaration.
 The implementation simply invokes
 {@link #visitTypeDeclaration visitTypeDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitAnnotationTypeDeclaration(AnnotationTypeDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an annotation type declaration.
 The implementation simply invokes
 {@link #visitInterfaceDeclaration visitInterfaceDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitFieldDeclaration(FieldDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a field declaration.
 The implementation simply invokes
 {@link #visitMemberDeclaration visitMemberDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitEnumConstantDeclaration(EnumConstantDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an enum constant declaration.
 The implementation simply invokes
 {@link #visitFieldDeclaration visitFieldDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitExecutableDeclaration(ExecutableDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a method or constructor declaration.
 The implementation simply invokes
 {@link #visitMemberDeclaration visitMemberDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitConstructorDeclaration(ConstructorDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a constructor declaration.
 The implementation simply invokes
 {@link #visitExecutableDeclaration visitExecutableDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitMethodDeclaration(MethodDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a method declaration.
 The implementation simply invokes
 {@link #visitExecutableDeclaration visitExecutableDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitAnnotationTypeElementDeclaration(AnnotationTypeElementDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an annotation type element declaration.
 The implementation simply invokes
 {@link #visitMethodDeclaration visitMethodDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitParameterDeclaration(ParameterDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a parameter declaration.
 The implementation simply invokes
 {@link #visitDeclaration visitDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.SimpleDeclarationVisitor.visitTypeParameterDeclaration(TypeParameterDeclaration d)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a type parameter declaration.
 The implementation simply invokes
 {@link #visitDeclaration visitDeclaration}.
 @param d the declaration to visit

<!-- END DATA -->
