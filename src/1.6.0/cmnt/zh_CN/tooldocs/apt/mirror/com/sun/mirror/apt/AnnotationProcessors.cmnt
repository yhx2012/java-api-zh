<!-- BEGIN KEY -->
public class com.sun.mirror.apt.AnnotationProcessors extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Utilities to create specialized annotation processors.

 @since 1.5
 @author Joseph D. Darcy
 @author Scott Seligman

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final com.sun.mirror.apt.AnnotationProcessor com.sun.mirror.apt.AnnotationProcessors.NO_OP
<!-- END KEY -->
<!-- BEGIN DATA -->
  An annotation processor that does nothing and has no state.
  May be used multiple times.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static com.sun.mirror.apt.AnnotationProcessor com.sun.mirror.apt.AnnotationProcessors.getCompositeAnnotationProcessor(com.sun.mirror.apt.AnnotationProcessor[] aps)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new composite annotation processor.  A composite
 annotation processor combines multiple annotation processors
 into one and functions by invoking each of its component
 processors' process methods in sequence.

 @param aps The processors to create a composite of
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static com.sun.mirror.apt.AnnotationProcessor com.sun.mirror.apt.AnnotationProcessors.getCompositeAnnotationProcessor(java.util.Collection<com.sun.mirror.apt.AnnotationProcessor> aps)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new composite annotation processor.  A composite
 annotation processor combines multiple annotation processors
 into one and functions by invoking each of its component
 processors' process methods in the sequence the processors are
 returned by the collection's iterator.

 @param aps A collection of processors to create a composite of
 @since 1.5

<!-- END DATA -->
