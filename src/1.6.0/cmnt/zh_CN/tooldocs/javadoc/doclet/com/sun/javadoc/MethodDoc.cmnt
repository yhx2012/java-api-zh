<!-- BEGIN KEY -->
public interface com.sun.javadoc.MethodDoc extends com.sun.javadoc.ExecutableMemberDoc
<!-- END KEY -->
<!-- BEGIN DATA -->
 Represents a method of a java class.

 @since 1.2
 @author Robert Field

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.javadoc.MethodDoc.isAbstract()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return true if this method is abstract

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.Type com.sun.javadoc.MethodDoc.returnType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get return type.

 @return the return type of this method, null if it
 is a constructor.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.ClassDoc com.sun.javadoc.MethodDoc.overriddenClass()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the class containing the method that this method overrides.

 <p> <i>The <code>overriddenClass</code> method cannot
 accommodate certain generic type constructs.  The
 <code>overriddenType</code> method should be used instead.</i>

 @return a ClassDoc representing the superclass
         defining a method that this method overrides, or null if
         this method does not override.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.Type com.sun.javadoc.MethodDoc.overriddenType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the type containing the method that this method overrides.
 It may be a <code>ClassDoc</code> or a <code>ParameterizedType</code>.

 @return the supertype whose method is overridden, or null if this
         method does not override another in a superclass
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.MethodDoc com.sun.javadoc.MethodDoc.overriddenMethod()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the method that this method overrides.

 @return a MethodDoc representing a method definition
 in a superclass this method overrides, null if
 this method does not override.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.javadoc.MethodDoc.overrides(MethodDoc meth)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Tests whether this method overrides another.
 The overridden method may be one declared in a superclass or
 a superinterface (unlike {@link #overriddenMethod()}).

 <p> When a non-abstract method overrides an abstract one, it is
 also said to <i>implement</i> the other.

 @param meth  the other method to examine
 @return <tt>true</tt> if this method overrides the other
 @since 1.5

<!-- END DATA -->
