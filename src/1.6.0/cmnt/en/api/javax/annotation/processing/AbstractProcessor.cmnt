<!-- BEGIN KEY -->
public abstract class javax.annotation.processing.AbstractProcessor extends java.lang.Object implements javax.annotation.processing.Processor
<!-- END KEY -->
<!-- BEGIN DATA -->
 An abstract annotation processor designed to be a convenient
 superclass for most concrete annotation processors.  This class
 examines annotation values to compute the {@linkplain
 #getSupportedOptions options}, {@linkplain
 #getSupportedAnnotationTypes annotations}, and {@linkplain
 #getSupportedSourceVersion source version} supported by its
 subtypes.

 <p>The getter methods may {@linkplain Messager#printMessage issue
 warnings} about noteworthy conditions using the facilities available
 after the processor has been {@linkplain #isInitialized
 initialized}.
 
 <p>Subclasses are free to override the implementation and
 specification of any of the methods in this class as long as the
 general {@link javax.annotation.processing.Processor Processor}
 contract for that method is obeyed.

 @author Joseph D. Darcy
 @author Scott Seligman
 @author Peter von der Ah&eacute;
 @version 1.8 06/07/17
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.annotation.processing.ProcessingEnvironment javax.annotation.processing.AbstractProcessor.processingEnv
<!-- END KEY -->
<!-- BEGIN DATA -->
 Processing environment providing by the tool framework.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.annotation.processing.AbstractProcessor()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructor for subclasses to call.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.lang.String> javax.annotation.processing.AbstractProcessor.getSupportedOptions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 If the processor class is annotated with {@link
 SupportedOptions}, return an unmodifiable set with the same set
 of strings as the annotation.  If the class is not so
 annotated, an empty set is returned.

 @return the options recognized by this processor, or an empty
 set if none

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.lang.String> javax.annotation.processing.AbstractProcessor.getSupportedAnnotationTypes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 If the processor class is annotated with {@link
 SupportedAnnotationTypes}, return an unmodifiable set with the
 same set of strings as the annotation.  If the class is not so
 annotated, an empty set is returned.

 @return the names of the annotation types supported by this
 processor, or an empty set if none

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.lang.model.SourceVersion javax.annotation.processing.AbstractProcessor.getSupportedSourceVersion()
<!-- END KEY -->
<!-- BEGIN DATA -->
 If the processor class is annotated with {@link
 SupportedSourceVersion}, return the source version in the
 annotation.  If the class is not so annotated, {@link
 SourceVersion#RELEASE_6} is returned.

 @return the latest source version supported by this processor

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void javax.annotation.processing.AbstractProcessor.init(ProcessingEnvironment processingEnv)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Initializes the processor with the processing environment by
 setting the {@code processingEnv} field to the value of the
 {@code processingEnv} argument.  An {@code
 IllegalStateException} will be thrown if this method is called
 more than once on the same object.
 
 @param processingEnv environment to access facilities the tool framework
 provides to the processor
 @throws IllegalStateException if this method is called more than once.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract boolean javax.annotation.processing.AbstractProcessor.process(java.util.Set<? extends javax.lang.model.element.TypeElement> annotations, RoundEnvironment roundEnv)
<!-- END KEY -->
<!-- BEGIN DATA -->
 {@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Iterable<? extends javax.annotation.processing.Completion> javax.annotation.processing.AbstractProcessor.getCompletions(Element element, AnnotationMirror annotation, ExecutableElement member, String userText)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an empty iterable of completions.

 @param element {@inheritDoc}
 @param annotation {@inheritDoc}
 @param member {@inheritDoc}
 @param userText {@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
protected synchronized boolean javax.annotation.processing.AbstractProcessor.isInitialized()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns {@code true} if this object has been {@linkplain #init
 initialized}, {@code false} otherwise.

 @return {@code true} if this object has been initialized,
 {@code false} otherwise.

<!-- END DATA -->
