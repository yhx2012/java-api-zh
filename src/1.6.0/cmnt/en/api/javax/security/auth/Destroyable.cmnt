<!-- BEGIN KEY -->
public interface javax.security.auth.Destroyable
<!-- END KEY -->
<!-- BEGIN DATA -->
 Objects such as credentials may optionally implement this interface
 to provide the capability to destroy its contents.
 
 @version 1.12, 11/17/05
 @see javax.security.auth.Subject

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.Destroyable.destroy() throws javax.security.auth.DestroyFailedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Destroy this <code>Object</code>.

 <p> Sensitive information associated with this <code>Object</code>
 is destroyed or cleared.  Subsequent calls to certain methods
 on this <code>Object</code> will result in an
 <code>IllegalStateException</code> being thrown.

 <p>

 @exception DestroyFailedException if the destroy operation fails. <p>

 @exception SecurityException if the caller does not have permission
		to destroy this <code>Object</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.security.auth.Destroyable.isDestroyed()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determine if this <code>Object</code> has been destroyed.

 <p>

 @return true if this <code>Object</code> has been destroyed,
		false otherwise.

<!-- END DATA -->
