<!-- BEGIN KEY -->
public class javax.security.auth.callback.ChoiceCallback extends java.lang.Object implements javax.security.auth.callback.Callback, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p> Underlying security services instantiate and pass a
 <code>ChoiceCallback</code> to the <code>handle</code>
 method of a <code>CallbackHandler</code> to display a list of choices
 and to retrieve the selected choice(s).

 @version 1.18, 11/17/05
 @see javax.security.auth.callback.CallbackHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.security.auth.callback.ChoiceCallback.prompt
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String[] javax.security.auth.callback.ChoiceCallback.choices
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial the list of choices
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private int javax.security.auth.callback.ChoiceCallback.defaultChoice
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial the choice to be used as the default choice
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean javax.security.auth.callback.ChoiceCallback.multipleSelectionsAllowed
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial whether multiple selections are allowed from the list of 
 choices 
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private int[] javax.security.auth.callback.ChoiceCallback.selections
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial the selected choices, represented as indexes into the
		<code>choices</code> list.
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.auth.callback.ChoiceCallback(String prompt, java.lang.String[] choices, int defaultChoice, boolean multipleSelectionsAllowed)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a <code>ChoiceCallback</code> with a prompt,
 a list of choices, a default choice, and a boolean specifying
 whether or not multiple selections from the list of choices are allowed.

 <p>

 @param prompt the prompt used to describe the list of choices. <p>

 @param choices the list of choices. <p>

 @param defaultChoice the choice to be used as the default choice
			when the list of choices are displayed.  This value
			is represented as an index into the
			<code>choices</code> array. <p>

 @param multipleSelectionsAllowed boolean specifying whether or
			not multiple selections can be made from the
			list of choices.

 @exception IllegalArgumentException if <code>prompt</code> is null,
			if <code>prompt</code> has a length of 0,
			if <code>choices</code> is null,
			if <code>choices</code> has a length of 0,
			if any element from <code>choices</code> is null,
			if any element from <code>choices</code>
			has a length of 0 or if <code>defaultChoice</code>
			does not fall within the array boundaries of
			<code>choices</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.auth.callback.ChoiceCallback.getPrompt()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the prompt.

 <p>

 @return the prompt.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] javax.security.auth.callback.ChoiceCallback.getChoices()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the list of choices.

 <p>

 @return the list of choices.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.security.auth.callback.ChoiceCallback.getDefaultChoice()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the defaultChoice.

 <p>

 @return the defaultChoice, represented as an index into
		the <code>choices</code> list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.security.auth.callback.ChoiceCallback.allowMultipleSelections()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the boolean determining whether multiple selections from
 the <code>choices</code> list are allowed.

 <p>

 @return whether multiple selections are allowed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.callback.ChoiceCallback.setSelectedIndex(int selection)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the selected choice.

 <p>

 @param selection the selection represented as an index into the
		<code>choices</code> list.

 @see #getSelectedIndexes

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.auth.callback.ChoiceCallback.setSelectedIndexes(int[] selections)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the selected choices.

 <p>

 @param selections the selections represented as indexes into the
		<code>choices</code> list.

 @exception UnsupportedOperationException if multiple selections are
		not allowed, as determined by
		<code>allowMultipleSelections</code>.

 @see #getSelectedIndexes

<!-- END DATA -->
<!-- BEGIN KEY -->
public int[] javax.security.auth.callback.ChoiceCallback.getSelectedIndexes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the selected choices.

 <p>

 @return the selected choices, represented as indexes into the
		<code>choices</code> list.

 @see #setSelectedIndexes

<!-- END DATA -->
