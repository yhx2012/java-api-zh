<!-- BEGIN KEY -->
public class javax.security.sasl.SaslException extends java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class represents an error that has occurred when using SASL.

 @since 1.5

 @author Rosanna Lee
 @author Rob Weltman

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Throwable javax.security.sasl.SaslException._exception
<!-- END KEY -->
<!-- BEGIN DATA -->
 The possibly null root cause exception.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.sasl.SaslException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of <tt>SaslException</tt>.
 The root exception and the detailed message are null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.sasl.SaslException(String detail)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of <tt>SaslException</tt> with a detailed message.
 The root exception is null.
 @param detail A possibly null string containing details of the exception.

 @see java.lang.Throwable#getMessage

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.sasl.SaslException(String detail, Throwable ex)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of <tt>SaslException</tt> with a detailed message
 and a root exception.
 For example, a SaslException might result from a problem with
 the callback handler, which might throw a NoSuchCallbackException if
 it does not support the requested callback, or throw an IOException
 if it had problems obtaining data for the callback. The
 SaslException's root exception would be then be the exception thrown
 by the callback handler.

 @param detail A possibly null string containing details of the exception.
 @param ex A possibly null root exception that caused this exception.

 @see java.lang.Throwable#getMessage
 @see #getCause

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.sasl.SaslException.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string representation of this exception.
 The string representation contains
 this exception's class name, its detailed messsage, and if
 it has a root exception, the string representation of the root
 exception. This string representation
 is meant for debugging and not meant to be interpreted
 programmatically.
 @return The non-null string representation of this exception.
 @see java.lang.Throwable#getMessage

<!-- END DATA -->
