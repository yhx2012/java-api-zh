<!-- BEGIN KEY -->
public class javax.security.sasl.AuthorizeCallback extends java.lang.Object implements javax.security.auth.callback.Callback, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 This callback is used by <tt>SaslServer</tt> to determine whether
 one entity (identified by an authenticated authentication id) 
 can act on
 behalf of another entity (identified by an authorization id).

 @since 1.5

 @author Rosanna Lee
 @author Rob Weltman

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.security.sasl.AuthorizeCallback.authenticationID
<!-- END KEY -->
<!-- BEGIN DATA -->
 The (authenticated) authentication id to check.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.security.sasl.AuthorizeCallback.authorizationID
<!-- END KEY -->
<!-- BEGIN DATA -->
 The authorization id to check.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.security.sasl.AuthorizeCallback.authorizedID
<!-- END KEY -->
<!-- BEGIN DATA -->
 The id of the authorized entity. If null, the id of
 the authorized entity is authorizationID.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean javax.security.sasl.AuthorizeCallback.authorized
<!-- END KEY -->
<!-- BEGIN DATA -->
 A flag indicating whether the authentication id is allowed to
 act on behalf of the authorization id. 
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.security.sasl.AuthorizeCallback(String authnID, String authzID)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an instance of <tt>AuthorizeCallback</tt>.

 @param authnID	The (authenticated) authentication id.
 @param authzID   The authorization id.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.sasl.AuthorizeCallback.getAuthenticationID()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the authentication id to check.
 @return The authentication id to check.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.sasl.AuthorizeCallback.getAuthorizationID()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the authorization id to check.
 @return The authentication id to check.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.security.sasl.AuthorizeCallback.isAuthorized()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines whether the authentication id is allowed to
 act on behalf of the authorization id.

 @return <tt>true</tt> if authorization is allowed; <tt>false</tt> otherwise
 @see #setAuthorized(boolean)
 @see #getAuthorizedID()

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.sasl.AuthorizeCallback.setAuthorized(boolean ok)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets whether the authorization is allowed.
 @param ok <tt>true</tt> if authorization is allowed; <tt>false</tt> otherwise
 @see #isAuthorized
 @see #setAuthorizedID(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.security.sasl.AuthorizeCallback.getAuthorizedID()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the id of the authorized user.
 @return The id of the authorized user. <tt>null</tt> means the
 authorization failed.
 @see #setAuthorized(boolean)
 @see #setAuthorizedID(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.security.sasl.AuthorizeCallback.setAuthorizedID(String id)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the id of the authorized entity. Called by handler only when the id
 is different from getAuthorizationID(). For example, the id
 might need to be canonicalized for the environment in which it
 will be used.
 @param id The id of the authorized user.
 @see #setAuthorized(boolean)
 @see #getAuthorizedID

<!-- END DATA -->
