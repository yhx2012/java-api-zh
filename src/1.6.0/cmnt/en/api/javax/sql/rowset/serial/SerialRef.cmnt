<!-- BEGIN KEY -->
public class javax.sql.rowset.serial.SerialRef extends java.lang.Object implements java.sql.Ref, java.io.Serializable, java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
 A serialized mapping of a <code>Ref</code> object, which is the mapping in the
 Java programming language of an SQL <code>REF</code> value.
 <p>
 The <code>SerialRef</code> class provides a constructor  for
 creating a <code>SerialRef</code> instance from a <code>Ref</code>
 object and provides methods for getting and setting the <code>Ref</code> object.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.sql.rowset.serial.SerialRef.baseTypeName
<!-- END KEY -->
<!-- BEGIN DATA -->
 String containing the base type name.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Object javax.sql.rowset.serial.SerialRef.object
<!-- END KEY -->
<!-- BEGIN DATA -->
 This will store the type <code>Ref</code> as an <code>Object</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.sql.Ref javax.sql.rowset.serial.SerialRef.reference
<!-- END KEY -->
<!-- BEGIN DATA -->
 Private copy of the Ref reference.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.sql.rowset.serial.SerialRef(Ref ref) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>SerialRef</code> object from the given <code>Ref</code>
 object.

 @param ref a Ref object; cannot be <code>null</code>
 @throws SQLException if a database access occurs; if <code>ref</code>
     is <code>null</code>; or if the <code>Ref</code> object returns a
     <code>null</code> value base type name.
 @throws SerialException if an error occurs serializing the <code>Ref</code>
     object

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sql.rowset.serial.SerialRef.getBaseTypeName() throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string describing the base type name of the <code>Ref</code>.
 
 @return a string of the base type name of the Ref
 @throws SerialException in no Ref object has been set

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.sql.rowset.serial.SerialRef.getObject(java.util.Map<java.lang.String, java.lang.Class<?>> map) throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an <code>Object</code> representing the SQL structured type 
 to which this <code>SerialRef</code> object refers.  The attributes
 of the structured type are mapped according to the given type map.

 @param map a <code>java.util.Map</code> object containing zero or
        more entries, with each entry consisting of 1) a <code>String</code>
        giving the fully qualified name of a UDT and 2) the
        <code>Class</code> object for the <code>SQLData</code> implementation
        that defines how the UDT is to be mapped
 @return an object instance resolved from the Ref reference and mapped
        according to the supplied type map
 @throws SerialException if an error is encountered in the reference
        resolution

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.sql.rowset.serial.SerialRef.getObject() throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an <code>Object</code> representing the SQL structured type 
 to which this <code>SerialRef</code> object refers.  

 @return an object instance resolved from the Ref reference
 @throws SerialException if an error is encountered in the reference
         resolution

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sql.rowset.serial.SerialRef.setObject(Object obj) throws javax.sql.rowset.serial.SerialException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the SQL structured type that this <code>SerialRef</code> object
 references to the given <code>Object</code> object.

 @param obj an <code>Object</code> representing the SQL structured type
        to be referenced
 @throws SerialException if an error is encountered generating the
 the structured type referenced by this <code>SerialRef</code> object

<!-- END DATA -->
