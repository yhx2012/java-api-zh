<!-- BEGIN KEY -->
public class javax.print.attribute.standard.PrinterStateReason extends javax.print.attribute.EnumSyntax implements javax.print.attribute.Attribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Class PrinterStateReason is a printing attribute class, an enumeration,
 that provides additional information about the printer's current state,
 i.e., information that augments the value of the printer's
 {@link PrinterState PrinterState} attribute.
 Class PrinterStateReason defines standard printer 
 state reason values. A Print Service implementation only needs to report 
 those printer state reasons which are appropriate for the particular 
 implementation; it does not have to report every defined printer state 
 reason. 
 <P>
 Instances of PrinterStateReason do not appear in a Print Service's
 attribute set directly.
 Rather, a {@link PrinterStateReasons PrinterStateReasons} 
 attribute appears in the Print Service's attribute set. The {@link 
 PrinterStateReasons PrinterStateReasons} attribute contains zero, one, or 
 more than one PrinterStateReason objects which pertain to the
 Print Service's status, and each PrinterStateReason object is
 associated with a {@link Severity Severity} level of REPORT (least severe),
 WARNING, or ERROR (most severe). The printer adds a PrinterStateReason
 object to the Print Service's 
 {@link PrinterStateReasons PrinterStateReasons} attribute when the 
 corresponding condition becomes true of the printer, and the printer  
 removesthe PrinterStateReason object again when the corresponding   
 condition becomes false, regardless of whether the Print Service's overall
 {@link PrinterState PrinterState} also changed. 
 <P>
 <B>IPP Compatibility:</B> 
 The string values returned by each individual {@link PrinterStateReason} and 
 associated {@link Severity} object's <CODE>toString()</CODE>
 methods, concatenated together with a hyphen (<CODE>"-"</CODE>) in
 between, gives the IPP keyword value for a {@link PrinterStateReasons}.
 The category name returned by <CODE>getName()</CODE> gives the IPP
 attribute name.
 <P>

 @author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.OTHER
<!-- END KEY -->
<!-- BEGIN DATA -->
 The printer has detected an error other than ones listed below.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MEDIA_NEEDED
<!-- END KEY -->
<!-- BEGIN DATA -->
 A tray has run out of media.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MEDIA_JAM
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device has a media jam.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MOVING_TO_PAUSED
<!-- END KEY -->
<!-- BEGIN DATA -->
 Someone has paused the printer, but the device(s) are taking an 
 appreciable time to stop. Later, when all output has stopped,
 the {@link  PrinterState PrinterState} becomes STOPPED,
 and the PAUSED value replaces 
 the MOVING_TO_PAUSED value in the {@link PrinterStateReasons 
 PrinterStateReasons} attribute. This value must be supported if the 
 printer can be paused and the implementation takes significant time to 
 pause a device in certain circumstances. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.PAUSED
<!-- END KEY -->
<!-- BEGIN DATA -->
 Someone has paused the printer and the printer's {@link PrinterState 
 PrinterState} is STOPPED. In this state, a printer must not produce 
 printed output, but it must perform other operations requested by a 
 client. If a printer had been printing a job when the printer was
 paused, 
 the Printer must resume printing that job when the printer is no longer 
 paused and leave no evidence in the printed output of such a pause.
 This value must be supported if the printer can be paused. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.SHUTDOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
 Someone has removed a printer from service, and the device may be
 powered down or physically removed. 
 In this state, a printer must not produce 
 printed output, and unless the printer is realized by a print server
 that is still active, the printer must perform no other operations
 requested by a client.
 If a printer had been printing a job when it was shut down, 
 the printer need not resume printing that job when the printer is no 
 longer shut down. If the printer resumes printing such a job, it may 
 leave evidence in the printed output of such a shutdown, e.g. the part 
 printed before the shutdown may be printed a second time after the 
 shutdown. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.CONNECTING_TO_DEVICE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The printer has scheduled a job on the output device and is in the 
 process of connecting to a shared network output device (and might not
 be able to actually start printing the job for an arbitrarily long time 
 depending on the usage of the output device by other servers on the 
 network). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.TIMED_OUT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The server was able to connect to the output device (or is always 
 connected), but was unable to get a response from the output device. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.STOPPING
<!-- END KEY -->
<!-- BEGIN DATA -->
 The printer is in the process of stopping the device and will be
 stopped in a while.
 When the device is stopped, the printer will change the 
 {@link PrinterState PrinterState} to STOPPED. The STOPPING reason is 
 never an error, even for a printer with a single output device. When an 
 output device ceases accepting jobs, the printer's {@link 
 PrinterStateReasons PrinterStateReasons} will have this reason while
 the output device completes printing. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.STOPPED_PARTLY
<!-- END KEY -->
<!-- BEGIN DATA -->
 When a printer controls more than one output device, this reason 
 indicates that one or more output devices are stopped. If the reason's 
 severity is a report, fewer than half of the output devices are
 stopped. 
 If the reason's severity is a warning, half or more but fewer than
 all of the output devices are stopped. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.TONER_LOW
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device is low on toner.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.TONER_EMPTY
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device is out of toner.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.SPOOL_AREA_FULL
<!-- END KEY -->
<!-- BEGIN DATA -->
 The limit of persistent storage allocated for spooling has been
 reached. 
 The printer is temporarily unable to accept more jobs. The printer will 
 remove this reason when it is able to accept more jobs.
 This value should  be used by a non-spooling printer that only
 accepts one or a small number 
 jobs at a time or a spooling printer that has filled the spool space. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.COVER_OPEN
<!-- END KEY -->
<!-- BEGIN DATA -->
 One or more covers on the device are open.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.INTERLOCK_OPEN
<!-- END KEY -->
<!-- BEGIN DATA -->
 One or more interlock devices on the printer are unlocked. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.DOOR_OPEN
<!-- END KEY -->
<!-- BEGIN DATA -->
 One or more doors on the device are open. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.INPUT_TRAY_MISSING
<!-- END KEY -->
<!-- BEGIN DATA -->
 One or more input trays are not in the device.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MEDIA_LOW
<!-- END KEY -->
<!-- BEGIN DATA -->
 At least one input tray is low on media.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MEDIA_EMPTY
<!-- END KEY -->
<!-- BEGIN DATA -->
 At least one input tray is empty.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.OUTPUT_TRAY_MISSING
<!-- END KEY -->
<!-- BEGIN DATA -->
 One or more output trays are not in the device.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.OUTPUT_AREA_ALMOST_FULL
<!-- END KEY -->
<!-- BEGIN DATA -->
 One or more output areas are almost full
 (e.g. tray, stacker, collator). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.OUTPUT_AREA_FULL
<!-- END KEY -->
<!-- BEGIN DATA -->
 One or more output areas are full (e.g. tray, stacker, collator). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MARKER_SUPPLY_LOW
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device is low on at least one marker supply (e.g. toner, ink, 
 ribbon). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MARKER_SUPPLY_EMPTY
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device is out of at least one marker supply (e.g. toner, ink, 
 ribbon). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MARKER_WASTE_ALMOST_FULL
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device marker supply waste receptacle is almost full. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.MARKER_WASTE_FULL
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device marker supply waste receptacle is full. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.FUSER_OVER_TEMP
<!-- END KEY -->
<!-- BEGIN DATA -->
 The fuser temperature is above normal.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.FUSER_UNDER_TEMP
<!-- END KEY -->
<!-- BEGIN DATA -->
 The fuser temperature is below normal.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.OPC_NEAR_EOL
<!-- END KEY -->
<!-- BEGIN DATA -->
 The optical photo conductor is near end of life.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.OPC_LIFE_OVER
<!-- END KEY -->
<!-- BEGIN DATA -->
 The optical photo conductor is no longer functioning. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.DEVELOPER_LOW
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device is low on developer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.DEVELOPER_EMPTY
<!-- END KEY -->
<!-- BEGIN DATA -->
 The device is out of developer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.PrinterStateReason javax.print.attribute.standard.PrinterStateReason.INTERPRETER_RESOURCE_UNAVAILABLE
<!-- END KEY -->
<!-- BEGIN DATA -->
 An interpreter resource is unavailable (e.g., font, form). 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.print.attribute.standard.PrinterStateReason(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new printer state reason enumeration value with
 the given integer value. 

 @param  value  Integer value.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.print.attribute.standard.PrinterStateReason.getStringTable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string table for class PrinterStateReason.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.print.attribute.EnumSyntax[] javax.print.attribute.standard.PrinterStateReason.getEnumValueTable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the enumeration value table for class PrinterStateReason.

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<? extends javax.print.attribute.Attribute> javax.print.attribute.standard.PrinterStateReason.getCategory()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the printing attribute class which is to be used as the "category" 
 for this printing attribute value.
 <P>
 For class PrinterStateReason and any vendor-defined subclasses, the 
 category is class PrinterStateReason itself. 

 @return  Printing attribute class (category), an instance of class
          {@link java.lang.Class java.lang.Class}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String javax.print.attribute.standard.PrinterStateReason.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the name of the category of which this attribute value is an 
 instance. 
 <P>
 For class PrinterStateReason and any vendor-defined subclasses, the 
 category name is <CODE>"printer-state-reason"</CODE>. 

 @return  Attribute category name.

<!-- END DATA -->
