<!-- BEGIN KEY -->
public final class javax.print.attribute.standard.Chromaticity extends javax.print.attribute.EnumSyntax implements javax.print.attribute.DocAttribute, javax.print.attribute.PrintRequestAttribute, javax.print.attribute.PrintJobAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Class Chromaticity is a printing attribute class, an enumeration, that 
 specifies monochrome or color printing. This is used by a print client 
 to specify how the print data should be generated or processed. It is not 
 descriptive of the color capabilities of the device. Query the service's
 {@link ColorSupported ColorSupported} attribute to determine if the device
 can be verified to support color printing.
 <P>
 The table below shows the effects of specifying a Chromaticity attribute of 
 {@link #MONOCHROME <CODE>MONOCHROME</CODE>} or {@link #COLOR 
 <CODE>COLOR</CODE>} for a monochrome or color document. 
 <P>
 <TABLE BORDER=1 CELLPADDING=2 CELLSPACING=1 SUMMARY="Shows effects of specifying MONOCHROME or COLOR Chromaticity attributes">
 <TR BGCOLOR="#E5E5E5">
 <TH>
 Chromaticity<BR>Attribute
 </TH>
 <TH>
 Effect on<BR>Monochrome Document
 </TH>
 <TH>
 Effect on<BR>Color Document
 </TH>
 </TR>
 <TR>
 <TD>
 {@link #MONOCHROME <CODE>MONOCHROME</CODE>}
 </TD>
 <TD>
 Printed as is, in monochrome
 </TD>
 <TD>
 Printed in monochrome, with colors converted to shades of gray
 </TD>
 </TR>
 <TR>
 <TD>
 {@link #COLOR <CODE>COLOR</CODE>}
 </TD>
 <TD>
 Printed as is, in monochrome
 </TD>
 <TD>
 Printed as is, in color
 </TD>
 </TR>
 </TABLE>
 <P>
 <P>
 <B>IPP Compatibility:</B> Chromaticity is not an IPP attribute at present.
 <P>

 @author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.Chromaticity javax.print.attribute.standard.Chromaticity.MONOCHROME
<!-- END KEY -->
<!-- BEGIN DATA -->
 Monochrome printing.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.attribute.standard.Chromaticity javax.print.attribute.standard.Chromaticity.COLOR
<!-- END KEY -->
<!-- BEGIN DATA -->
 Color printing.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.print.attribute.standard.Chromaticity(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new chromaticity enumeration value with the given integer 
 value. 

 @param  value  Integer value.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String[] javax.print.attribute.standard.Chromaticity.getStringTable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string table for class Chromaticity.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.print.attribute.EnumSyntax[] javax.print.attribute.standard.Chromaticity.getEnumValueTable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the enumeration value table for class Chromaticity.

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.Class<? extends javax.print.attribute.Attribute> javax.print.attribute.standard.Chromaticity.getCategory()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the printing attribute class which is to be used as the "category" 
 for this printing attribute value.
 <P>
 For class Chromaticity, the category is the class Chromaticity itself. 

 @return  Printing attribute class (category), an instance of class
          {@link java.lang.Class java.lang.Class}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String javax.print.attribute.standard.Chromaticity.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the name of the category of which this attribute value is an 
 instance. 
 <P>
 For class Chromaticity, the category name is <CODE>"chromaticity"</CODE>.

 @return  Attribute category name.

<!-- END DATA -->
