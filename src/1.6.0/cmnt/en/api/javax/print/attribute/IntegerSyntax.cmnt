<!-- BEGIN KEY -->
public abstract class javax.print.attribute.IntegerSyntax extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
 Class IntegerSyntax is an abstract base class providing the common 
 implementation of all attributes with integer values. 
 <P>
 Under the hood, an integer attribute is just an integer. You can get an 
 integer attribute's integer value by calling {@link #getValue() 
 <CODE>getValue()</CODE>}. An integer attribute's integer value is
 established when it is constructed (see {@link #IntegerSyntax(int) 
 <CODE>IntegerSyntax(int)</CODE>}). Once constructed, an integer attribute's 
 value is immutable. 
 <P>

 @author  David Mendenhall
 @author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
private int javax.print.attribute.IntegerSyntax.value
<!-- END KEY -->
<!-- BEGIN DATA -->
 This integer attribute's integer value.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.print.attribute.IntegerSyntax(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new integer attribute with the given integer value.

 @param  value  Integer value.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.print.attribute.IntegerSyntax(int value, int lowerBound, int upperBound)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new integer attribute with the given integer value, which 
 must lie within the given range. 

 @param  value       Integer value.
 @param  lowerBound  Lower bound.
 @param  upperBound  Upper bound.

 @exception  IllegalArgumentException
     (Unchecked exception) Thrown if <CODE>value</CODE> is less than 
     <CODE>lowerBound</CODE> or greater than 
     <CODE>upperBound</CODE>. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.print.attribute.IntegerSyntax.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns this integer attribute's integer value.
 @return the integer value

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.print.attribute.IntegerSyntax.equals(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether this integer attribute is equivalent to the passed in 
 object. To be equivalent, all of the following conditions must be true: 
 <OL TYPE=1>
 <LI>
 <CODE>object</CODE> is not null.
 <LI>
 <CODE>object</CODE> is an instance of class IntegerSyntax.
 <LI>
 This integer attribute's value and <CODE>object</CODE>'s value are 
 equal. 
 </OL>

 @param  object  Object to compare to.

 @return  True if <CODE>object</CODE> is equivalent to this integer
          attribute, false otherwise. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.print.attribute.IntegerSyntax.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a hash code value for this integer attribute. The hash code is 
 just this integer attribute's integer value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.print.attribute.IntegerSyntax.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string value corresponding to this integer attribute. The 
 string value is just this integer attribute's integer value converted to 
 a string. 

<!-- END DATA -->
