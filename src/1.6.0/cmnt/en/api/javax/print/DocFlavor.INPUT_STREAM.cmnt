<!-- BEGIN KEY -->
public static class javax.print.DocFlavor.INPUT_STREAM extends javax.print.DocFlavor
<!-- END KEY -->
<!-- BEGIN DATA -->
 Class DocFlavor.INPUT_STREAM provides predefined static constant 
 DocFlavor objects for example doc flavors using a byte stream ({@link 
 java.io.InputStream <CODE>java.io.InputStream</CODE>}) as the print  
 data representation class. 
 <P>

 @author  Alan Kaminsky

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_HOST
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"text/plain"</CODE>,
 encoded in the host platform encoding.
 See {@link DocFlavor#hostEncoding <CODE>hostEncoding</CODE>}
 Print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_8
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/plain; charset=utf-8"</CODE>, 
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_16
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/plain; charset=utf-16"</CODE>,
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_16BE
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/plain; charset=utf-16be"</CODE>
 (big-endian byte ordering), 
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_16LE
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/plain; charset=utf-16le"</CODE>
 (little-endian byte ordering), 
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_US_ASCII
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/plain; charset=us-ascii"</CODE>,
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_HOST
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"text/html"</CODE>,
 encoded in the host platform encoding.
 See {@link DocFlavor#hostEncoding <CODE>hostEncoding</CODE>}
 Print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_8
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/html; charset=utf-8"</CODE>, 
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_16
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/html; charset=utf-16"</CODE>,
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_16BE
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/html; charset=utf-16be"</CODE>
 (big-endian byte ordering), 
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_16LE
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/html; charset=utf-16le"</CODE>
 (little-endian byte ordering), 
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_US_ASCII
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"text/html; charset=us-ascii"</CODE>,
 print data representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.PDF
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"application/pdf"</CODE>, print 
 data representation class name = <CODE>"java.io.InputStream"</CODE> 
 (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.POSTSCRIPT
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"application/postscript"</CODE>, 
 print data representation class name = 
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.PCL
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"application/vnd.hp-PCL"</CODE>, 
 print data representation class name = 
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.GIF
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"image/gif"</CODE>, print data 
 representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.JPEG
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"image/jpeg"</CODE>, print data 
 representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.PNG
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type = <CODE>"image/png"</CODE>, print data 
 representation class name =
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.print.DocFlavor.INPUT_STREAM javax.print.DocFlavor.INPUT_STREAM.AUTOSENSE
<!-- END KEY -->
<!-- BEGIN DATA -->
 Doc flavor with MIME type =
 <CODE>"application/octet-stream"</CODE>, 
 print data representation class name = 
 <CODE>"java.io.InputStream"</CODE> (byte stream).
 The client must determine that data described  
 using this DocFlavor is valid for the printer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.DocFlavor.INPUT_STREAM(String mimeType)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new doc flavor with the given MIME type and a print  
 data representation class name of
 <CODE>"java.io.InputStream"</CODE> (byte stream). 

 @param  mimeType   MIME media type string.

 @exception  NullPointerException
     (unchecked exception) Thrown if <CODE>mimeType</CODE> is null. 
 @exception  IllegalArgumentException
     (unchecked exception) Thrown if <CODE>mimeType</CODE> does not 
     obey the syntax for a MIME media type string. 

<!-- END DATA -->
