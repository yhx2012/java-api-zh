<!-- BEGIN KEY -->
public class javax.print.event.PrintJobEvent extends javax.print.event.PrintEvent
<!-- END KEY -->
<!-- BEGIN DATA -->

 Class <code>PrintJobEvent</code> encapsulates common events a print job
 reports to let a listener know of progress in the processing of the
 {@link DocPrintJob}.


<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.event.PrintJobEvent.JOB_CANCELED
<!-- END KEY -->
<!-- BEGIN DATA -->

 The job was canceled by the {@link javax.print.PrintService PrintService}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.event.PrintJobEvent.JOB_COMPLETE
<!-- END KEY -->
<!-- BEGIN DATA -->

 The document cis completely printed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.event.PrintJobEvent.JOB_FAILED
<!-- END KEY -->
<!-- BEGIN DATA -->

 The print service reports that the job cannot be completed.
 The application must resubmit the job.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.event.PrintJobEvent.REQUIRES_ATTENTION
<!-- END KEY -->
<!-- BEGIN DATA -->

 The print service indicates that a - possibly transient - problem
 may require external intervention before the print service can
 continue.  One example of an event that can
 generate this message is when the printer runs out of paper.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.event.PrintJobEvent.NO_MORE_EVENTS
<!-- END KEY -->
<!-- BEGIN DATA -->

 Not all print services may be capable of delivering interesting
 events, or even telling when a job is complete. This message indicates
 the print job has no further information or communication
 with the print service. This message should always be delivered
 if a terminal event (completed/failed/canceled) is not delivered.
 For example, if messages such as JOB_COMPLETE have NOT been received 
 before receiving this message, the only inference that should be drawn
 is that the print service does not support delivering such an event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.print.event.PrintJobEvent.DATA_TRANSFER_COMPLETE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The job is not necessarily printed yet, but the data has been transferred
 successfully from the client to the print service. The client may
 free data resources.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.event.PrintJobEvent(DocPrintJob source, int reason)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>PrintJobEvent</code> object.

 @param source  a <code>DocPrintJob</code> object
 @param reason  an int specifying the reason.
 @throws IllegalArgumentException if <code>source</code> is
         <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.print.event.PrintJobEvent.getPrintEventType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the reason for this event.
 @return  reason int.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.print.DocPrintJob javax.print.event.PrintJobEvent.getPrintJob()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines the <code>DocPrintJob</code> to which this print job 
 event pertains.

 @return  the <code>DocPrintJob</code> object that represents the
          print job that reports the events encapsulated by this
          <code>PrintJobEvent</code>.


<!-- END DATA -->
