<!-- BEGIN KEY -->
protected abstract static class javax.swing.DefaultRowSorter.ModelWrapper extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>DefaultRowSorter.ModelWrapper</code> is responsible for providing
 the data that gets sorted by <code>DefaultRowSorter</code>.  You
 normally do not interact directly with <code>ModelWrapper</code>. 
 Subclasses of <code>DefaultRowSorter</code> provide an
 implementation of <code>ModelWrapper</code> wrapping another model.
 For example,
 <code>TableRowSorter</code> provides a <code>ModelWrapper</code> that
 wraps a <code>TableModel</code>.
 <p>
 <code>ModelWrapper</code> makes a distinction between values as
 <code>Object</code>s and <code>String</code>s.  This allows
 implementations to provide a custom string
 converter to be used instead of invoking <code>toString</code> on the
 object.

 @param <M> the type of the underlying model
 @param <I> the identifier supplied to the filter
 @since 1.6
 @see RowFilter
 @see RowFilter.Entry

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.DefaultRowSorter.ModelWrapper()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new <code>ModelWrapper</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract M javax.swing.DefaultRowSorter.ModelWrapper.getModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the underlying model that this <code>Model</code> is
 wrapping.

 @return the underlying model

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int javax.swing.DefaultRowSorter.ModelWrapper.getColumnCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of columns in the model.

 @return the number of columns in the model

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int javax.swing.DefaultRowSorter.ModelWrapper.getRowCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of rows in the model.

 @return the number of rows in the model

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.Object javax.swing.DefaultRowSorter.ModelWrapper.getValueAt(int row, int column)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value at the specified index.

 @param row the row index
 @param column the column index
 @return the value at the specified index
 @throws IndexOutOfBoundsException if the indices are outside
         the range of the model

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.DefaultRowSorter.ModelWrapper.getStringValueAt(int row, int column)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value as a <code>String</code> at the specified
 index.  This implementation uses <code>toString</code> on
 the result from <code>getValueAt</code> (making sure
 to return an empty string for null values).  Subclasses that
 override this method should never return null.

 @param row the row index
 @param column the column index
 @return the value at the specified index as a <code>String</code>
 @throws IndexOutOfBoundsException if the indices are outside
         the range of the model

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract I javax.swing.DefaultRowSorter.ModelWrapper.getIdentifier(int row)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the identifier for the specified row.  The return value
 of this is used as the identifier for the
 <code>RowFilter.Entry</code> that is passed to the
 <code>RowFilter</code>.

 @param row the row to return the identifier for, in terms of
            the underlying model
 @return the identifier
 @see RowFilter.Entry#getIdentifier

<!-- END DATA -->
