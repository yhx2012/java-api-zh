<!-- BEGIN KEY -->
public class javax.swing.event.ListDataEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
 Defines an event that encapsulates changes to a list.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @version 1.19 11/17/05
 @author Hans Muller

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.ListDataEvent.CONTENTS_CHANGED
<!-- END KEY -->
<!-- BEGIN DATA -->
Identifies one or more changes in the lists contents. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.ListDataEvent.INTERVAL_ADDED
<!-- END KEY -->
<!-- BEGIN DATA -->
Identifies the addition of one or more contiguous items to the list 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.ListDataEvent.INTERVAL_REMOVED
<!-- END KEY -->
<!-- BEGIN DATA -->
Identifies the removal of one or more contiguous items from the list 
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.ListDataEvent(Object source, int type, int index0, int index1)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a ListDataEvent object. If index0 is >
 index1, index0 and index1 will be swapped such that
 index0 will always be <= index1.

 @param source  the source Object (typically <code>this</code>)
 @param type    an int specifying {@link #CONTENTS_CHANGED},
                {@link #INTERVAL_ADDED}, or {@link #INTERVAL_REMOVED}
 @param index0  one end of the new interval
 @param index1  the other end of the new interval

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.event.ListDataEvent.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the event type. The possible values are:
 <ul>
 <li> {@link #CONTENTS_CHANGED}
 <li> {@link #INTERVAL_ADDED}
 <li> {@link #INTERVAL_REMOVED}
 </ul>

 @return an int representing the type value

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.event.ListDataEvent.getIndex0()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the lower index of the range. For a single
 element, this value is the same as that returned by {@link #getIndex1}.


 @return an int representing the lower index value

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.event.ListDataEvent.getIndex1()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the upper index of the range. For a single
 element, this value is the same as that returned by {@link #getIndex0}.

 @return an int representing the upper index value

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.event.ListDataEvent.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string representation of this ListDataEvent. This method 
 is intended to be used only for debugging purposes, and the 
 content and format of the returned string may vary between      
 implementations. The returned string may be empty but may not 
 be <code>null</code>.
 
 @since 1.4
 @return  a string representation of this ListDataEvent.

<!-- END DATA -->
