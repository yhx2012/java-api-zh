<!-- BEGIN KEY -->
public class javax.swing.event.InternalFrameEvent extends java.awt.AWTEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
 An <code>AWTEvent</code> that adds support for
 <code>JInternalFrame</code> objects as the event source.  This class has the
 same event types as <code>WindowEvent</code>,
 although different IDs are used.
 Help on handling internal frame events
 is in 
 <a href="http://java.sun.com/docs/books/tutorial/uiswing/events/internalframelistener.html" target="_top">How to Write an Internal Frame Listener</a>,
 a section in <em>The Java Tutorial</em>.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @see java.awt.event.WindowEvent
 @see java.awt.event.WindowListener
 @see JInternalFrame
 @see InternalFrameListener

 @version 1.17 11/17/05
 @author Thomas Ball

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_FIRST
<!-- END KEY -->
<!-- BEGIN DATA -->
 The first number in the range of IDs used for internal frame events.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_LAST
<!-- END KEY -->
<!-- BEGIN DATA -->
 The last number in the range of IDs used for internal frame events.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_OPENED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "window opened" event.  This event is delivered only
 the first time the internal frame is made visible.

 @see JInternalFrame#show

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_CLOSING
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "window is closing" event. This event is delivered when
 the user attempts to close the internal frame, such as by
 clicking the internal frame's close button,
 or when a program attempts to close the internal frame 
 by invoking the <code>setClosed</code> method.

 @see JInternalFrame#setDefaultCloseOperation
 @see JInternalFrame#doDefaultCloseAction
 @see JInternalFrame#setClosed

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_CLOSED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "window closed" event. This event is delivered after
 the internal frame has been closed as the result of a call to 
 the <code>setClosed</code> or
 <code>dispose</code> method.

 @see JInternalFrame#setClosed
 @see JInternalFrame#dispose

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_ICONIFIED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "window iconified" event.
 This event indicates that the internal frame
 was shrunk down to a small icon.
 
 @see JInternalFrame#setIcon

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_DEICONIFIED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "window deiconified" event type. This event indicates that the
 internal frame has been restored to its normal size.

 @see JInternalFrame#setIcon

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_ACTIVATED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "window activated" event type. This event indicates that keystrokes
 and mouse clicks are directed towards this internal frame.

 @see JInternalFrame#show
 @see JInternalFrame#setSelected

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_DEACTIVATED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "window deactivated" event type. This event indicates that keystrokes
 and mouse clicks are no longer directed to the internal frame.

 @see JInternalFrame#setSelected

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.InternalFrameEvent(JInternalFrame source, int id)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>InternalFrameEvent</code> object.
 @param source the <code>JInternalFrame</code> object that originated the event
 @param id     an integer indicating the type of event

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.event.InternalFrameEvent.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a parameter string identifying this event.
 This method is useful for event logging and for debugging.

 @return a string identifying the event and its attributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JInternalFrame javax.swing.event.InternalFrameEvent.getInternalFrame()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the originator of the event.

 @return the <code>JInternalFrame</code> object that originated the event
 @since 1.3

<!-- END DATA -->
