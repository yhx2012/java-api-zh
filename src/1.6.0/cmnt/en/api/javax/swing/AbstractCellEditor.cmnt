<!-- BEGIN KEY -->
public abstract class javax.swing.AbstractCellEditor extends java.lang.Object implements javax.swing.CellEditor, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 @version 1.13 04/07/06 
 
 A base class for <code>CellEditors</code>, providing default
 implementations for the methods in the <code>CellEditor</code>
 interface except <code>getCellEditorValue()</code>. 
 Like the other abstract implementations in Swing, also manages a list 
 of listeners. 

 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.
 
 @author Philip Milne
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.AbstractCellEditor.isCellEditable(EventObject e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true.
 @param e  an event object
 @return true

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.AbstractCellEditor.shouldSelectCell(EventObject anEvent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true.
 @param anEvent  an event object
 @return true

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.AbstractCellEditor.stopCellEditing()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Calls <code>fireEditingStopped</code> and returns true.
 @return true

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.AbstractCellEditor.cancelCellEditing()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Calls <code>fireEditingCanceled</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.AbstractCellEditor.addCellEditorListener(CellEditorListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds a <code>CellEditorListener</code> to the listener list.
 @param l  the new listener to be added

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.AbstractCellEditor.removeCellEditorListener(CellEditorListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes a <code>CellEditorListener</code> from the listener list.
 @param l  the listener to be removed

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.CellEditorListener[] javax.swing.AbstractCellEditor.getCellEditorListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an array of all the <code>CellEditorListener</code>s added
 to this AbstractCellEditor with addCellEditorListener().

 @return all of the <code>CellEditorListener</code>s added or an empty
         array if no listeners have been added
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.AbstractCellEditor.fireEditingStopped()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Notifies all listeners that have registered interest for
 notification on this event type.  The event instance 
 is created lazily.

 @see EventListenerList

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.AbstractCellEditor.fireEditingCanceled()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Notifies all listeners that have registered interest for
 notification on this event type.  The event instance 
 is created lazily.

 @see EventListenerList

<!-- END DATA -->
