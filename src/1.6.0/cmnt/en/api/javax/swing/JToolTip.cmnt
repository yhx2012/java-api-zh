<!-- BEGIN KEY -->
public class javax.swing.JToolTip extends javax.swing.JComponent implements javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
 Used to display a "Tip" for a Component. Typically components provide api
 to automate the process of using <code>ToolTip</code>s.
 For example, any Swing component can use the <code>JComponent</code>
 <code>setToolTipText</code> method to specify the text
 for a standard tooltip. A component that wants to create a custom
 <code>ToolTip</code>
 display can override <code>JComponent</code>'s <code>createToolTip</code>
 method and use a subclass of this class.
 <p>
 See <a href="http://java.sun.com/docs/books/tutorial/uiswing/components/tooltip.html">How to Use Tool Tips</a>
 in <em>The Java Tutorial</em>
 for further documentation.
 <p>
 <strong>Warning:</strong> Swing is not thread safe. For more
 information see <a
 href="package-summary.html#threading">Swing's Threading
 Policy</a>.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @see JComponent#setToolTipText
 @see JComponent#createToolTip
 @version 1.51 08/08/06
 @author Dave Moore
 @author Rich Shiavi

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JToolTip()
<!-- END KEY -->
<!-- BEGIN DATA -->
Creates a tool tip. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.ToolTipUI javax.swing.JToolTip.getUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the L&F object that renders this component.

 @return the <code>ToolTipUI</code> object that renders this component

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JToolTip.updateUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Resets the UI property to a value from the current look and feel.

 @see JComponent#updateUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JToolTip.getUIClassID()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of the L&F class that renders this component.

 @return the string "ToolTipUI"
 @see JComponent#getUIClassID
 @see UIDefaults#getUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JToolTip.setTipText(String tipText)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the text to show when the tool tip is displayed.
 The string <code>tipText</code> may be <code>null</code>.

 @param tipText the <code>String</code> to display
 @beaninfo
    preferred: true
        bound: true
  description: Sets the text of the tooltip

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JToolTip.getTipText()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the text that is shown when the tool tip is displayed.
 The returned value may be <code>null</code>.

 @return the <code>String</code> that is displayed

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JToolTip.setComponent(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Specifies the component that the tooltip describes.
 The component <code>c</code> may be <code>null</code>
 and will have no effect.
 <p>
 This is a bound property.

 @param c the <code>JComponent</code> being described
 @see JComponent#createToolTip
 @beaninfo
       bound: true
 description: Sets the component that the tooltip describes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JComponent javax.swing.JToolTip.getComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the component the tooltip applies to.
 The returned value may be <code>null</code>.

 @return the component that the tooltip describes

 @see JComponent#createToolTip

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.JToolTip.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string representation of this <code>JToolTip</code>.
 This method 
 is intended to be used only for debugging purposes, and the 
 content and format of the returned string may vary between      
 implementations. The returned string may be empty but may not 
 be <code>null</code>.
 
 @return  a string representation of this <code>JToolTip</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JToolTip.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the AccessibleContext associated with this JToolTip. 
 For tool tips, the AccessibleContext takes the form of an 
 AccessibleJToolTip. 
 A new AccessibleJToolTip instance is created if necessary.

 @return an AccessibleJToolTip that serves as the 
         AccessibleContext of this JToolTip

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.swing.JToolTip.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

 See <code>readObject</code> and <code>writeObject</code>
 in <code>JComponent</code> for more 
 information about serialization in Swing.

<!-- END DATA -->
