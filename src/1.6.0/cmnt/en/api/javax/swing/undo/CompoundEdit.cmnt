<!-- BEGIN KEY -->
public class javax.swing.undo.CompoundEdit extends javax.swing.undo.AbstractUndoableEdit
<!-- END KEY -->
<!-- BEGIN DATA -->
 A concrete subclass of AbstractUndoableEdit, used to assemble little
 UndoableEdits into great big ones.

 @version 1.26 11/17/05
 @author Ray Ryan

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.Vector<javax.swing.undo.UndoableEdit> javax.swing.undo.CompoundEdit.edits
<!-- END KEY -->
<!-- BEGIN DATA -->
 The collection of <code>UndoableEdit</code>s
 undone/redone en masse by this <code>CompoundEdit</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
 boolean javax.swing.undo.CompoundEdit.inProgress
<!-- END KEY -->
<!-- BEGIN DATA -->
 True if this edit has never received <code>end</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.undo.CompoundEdit.undo() throws javax.swing.undo.CannotUndoException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sends <code>undo</code> to all contained
 <code>UndoableEdits</code> in the reverse of
 the order in which they were added.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.undo.CompoundEdit.redo() throws javax.swing.undo.CannotRedoException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sends <code>redo</code> to all contained
 <code>UndoableEdit</code>s in the order in
 which they were added.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.undo.UndoableEdit javax.swing.undo.CompoundEdit.lastEdit()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the last <code>UndoableEdit</code> in 
 <code>edits</code>, or <code>null</code>
 if <code>edits</code> is empty.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.undo.CompoundEdit.die()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sends <code>die</code> to each subedit,
 in the reverse of the order that they were added.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.undo.CompoundEdit.addEdit(UndoableEdit anEdit)
<!-- END KEY -->
<!-- BEGIN DATA -->
 If this edit is <code>inProgress</code>,
 accepts <code>anEdit</code> and returns true.
 
 <p>The last edit added to this <code>CompoundEdit</code>
 is given a chance to <code>addEdit(anEdit)</code>.
 If it refuses (returns false), <code>anEdit</code> is
 given a chance to <code>replaceEdit</code> the last edit.
 If <code>anEdit</code> returns false here,
 it is added to <code>edits</code>.

 @param anEdit the edit to be added
 @return true if the edit is <code>inProgress</code>;
	otherwise returns false

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.undo.CompoundEdit.end()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets <code>inProgress</code> to false.
 
 @see #canUndo
 @see #canRedo

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.undo.CompoundEdit.canUndo()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns false if <code>isInProgress</code> or if super
 returns false.
 
 @see	#isInProgress

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.undo.CompoundEdit.canRedo()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns false if <code>isInProgress</code> or if super 
 returns false.
 
 @see	#isInProgress

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.undo.CompoundEdit.isInProgress()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if this edit is in progress--that is, it has not
 received end. This generally means that edits are still being
 added to it.

 @see	#end

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.undo.CompoundEdit.isSignificant()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if any of the <code>UndoableEdit</code>s
 in <code>edits</code> do.
 Returns false if they all return false.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.undo.CompoundEdit.getPresentationName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>getPresentationName</code> from the
 last <code>UndoableEdit</code> added to
 <code>edits</code>. If <code>edits</code> is empty,
 calls super.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.undo.CompoundEdit.getUndoPresentationName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>getUndoPresentationName</code>
 from the last <code>UndoableEdit</code>
 added to <code>edits</code>.
 If <code>edits</code> is empty, calls super.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.undo.CompoundEdit.getRedoPresentationName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>getRedoPresentationName</code>
 from the last <code>UndoableEdit</code>
 added to <code>edits</code>.
 If <code>edits</code> is empty, calls super.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.undo.CompoundEdit.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string that displays and identifies this
 object's properties.

 @return a String representation of this object

<!-- END DATA -->
