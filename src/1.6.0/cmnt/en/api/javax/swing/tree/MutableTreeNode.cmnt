<!-- BEGIN KEY -->
public interface javax.swing.tree.MutableTreeNode extends javax.swing.tree.TreeNode
<!-- END KEY -->
<!-- BEGIN DATA -->
 Defines the requirements for a tree node object that can change --
 by adding or removing child nodes, or by changing the contents
 of a user object stored in the node.

 @see DefaultMutableTreeNode
 @see javax.swing.JTree

 @version 1.12 11/17/05
 @author Rob Davis
 @author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.insert(MutableTreeNode child, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds <code>child</code> to the receiver at <code>index</code>.
 <code>child</code> will be messaged with <code>setParent</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.remove(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the child at <code>index</code> from the receiver.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.remove(MutableTreeNode node)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes <code>node</code> from the receiver. <code>setParent</code>
 will be messaged on <code>node</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.setUserObject(Object object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Resets the user object of the receiver to <code>object</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.removeFromParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the receiver from its parent.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.MutableTreeNode.setParent(MutableTreeNode newParent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the parent of the receiver to <code>newParent</code>.

<!-- END DATA -->
