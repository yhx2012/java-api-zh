<!-- BEGIN KEY -->
public class javax.swing.tree.DefaultTreeCellEditor.DefaultTextField extends javax.swing.JTextField
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>TextField</code> used when no editor is supplied.
 This textfield locks into the border it is constructed with.
 It also prefers its parents font over its font. And if the
 renderer is not <code>null</code> and no font
 has been specified the preferred height is that of the renderer.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.border.Border javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.border
<!-- END KEY -->
<!-- BEGIN DATA -->
Border to use. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.tree.DefaultTreeCellEditor.DefaultTextField(Border border)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a
 <code>DefaultTreeCellEditor.DefaultTextField</code> object.

 @param border  a <code>Border</code> object
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.setBorder(Border border)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the border of this component.<p>
 This is a bound property.

 @param border the border to be rendered for this component
 @see Border
 @see CompoundBorder
 @beaninfo
        bound: true
    preferred: true
    attribute: visualUpdate true
  description: The component's border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.Border javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.getBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Overrides <code>JComponent.getBorder</code> to
 returns the current border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.getPreferredSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Overrides <code>JTextField.getPreferredSize</code> to
 return the preferred size based on current font, if set,
 or else use renderer's font.
 @return a <code>Dimension</code> object containing
   the preferred size

<!-- END DATA -->
