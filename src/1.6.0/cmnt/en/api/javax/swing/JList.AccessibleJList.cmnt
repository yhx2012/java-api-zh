<!-- BEGIN KEY -->
protected class javax.swing.JList.AccessibleJList extends javax.swing.JComponent.AccessibleJComponent implements javax.accessibility.AccessibleSelection, java.beans.PropertyChangeListener, javax.swing.event.ListSelectionListener, javax.swing.event.ListDataListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class implements accessibility support for the 
 {@code JList} class. It provides an implementation of the 
 Java Accessibility API appropriate to list user-interface 
 elements.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.propertyChange(PropertyChangeEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Property Change Listener change method. Used to track changes
 to the DataModel and ListSelectionModel, in order to re-set
 listeners to those for reporting changes there via the Accessibility
 PropertyChange mechanism.

 @param e PropertyChangeEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.valueChanged(ListSelectionEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 List Selection Listener value change method. Used to fire 
 the property change

 @param e ListSelectionEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.intervalAdded(ListDataEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 List Data Listener interval added method. Used to fire the visible data property change

 @param e ListDataEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.intervalRemoved(ListDataEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 List Data Listener interval removed method. Used to fire the visible data property change

 @param e ListDataEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.contentsChanged(ListDataEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 List Data Listener contents changed method. Used to fire the visible data property change

 @param e ListDataEvent


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet javax.swing.JList.AccessibleJList.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the state set of this object.

 @return an instance of AccessibleState containing the current state
 of the object
 @see AccessibleState

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.JList.AccessibleJList.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the role of this object.

 @return an instance of AccessibleRole describing the role of the
 object
 @see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JList.AccessibleJList.getAccessibleAt(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>Accessible</code> child contained at
 the local coordinate <code>Point</code>, if one exists.
 Otherwise returns <code>null</code>.

 @return the <code>Accessible</code> at the specified 
    location, if it exists

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JList.AccessibleJList.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of accessible children in the object.  If all
 of the children of this object implement Accessible, than this
 method should return the number of children of this object.

 @return the number of accessible children in the object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JList.AccessibleJList.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the nth Accessible child of the object.

 @param i zero-based index of child
 @return the nth Accessible child of the object

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleSelection javax.swing.JList.AccessibleJList.getAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleSelection associated with this object.  In the
 implementation of the Java Accessibility API for this class, 
 return this object, which is responsible for implementing the
 AccessibleSelection interface on behalf of itself.
 
 @return this object

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JList.AccessibleJList.getAccessibleSelectionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of items currently selected.
 If no items are selected, the return value will be 0.

 @return the number of items currently selected.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JList.AccessibleJList.getAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an Accessible representing the specified selected item
 in the object.  If there isn't a selection, or there are
 fewer items selected than the integer passed in, the return
 value will be <code>null</code>.

 @param i the zero-based index of selected items
 @return an Accessible containing the selected item

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JList.AccessibleJList.isAccessibleChildSelected(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if the current child of this object is selected.

 @param i the zero-based index of the child in this Accessible
 object.
 @see AccessibleContext#getAccessibleChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.addAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds the specified selected item in the object to the object's
 selection.  If the object supports multiple selections,
 the specified item is added to any existing selection, otherwise
 it replaces any existing selection in the object.  If the
 specified item is already selected, this method has no effect.

 @param i the zero-based index of selectable items

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.removeAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the specified selected item in the object from the object's
 selection.  If the specified item isn't currently selected, this
 method has no effect.

 @param i the zero-based index of selectable items

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.clearAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clears the selection in the object, so that nothing in the
 object is selected.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JList.AccessibleJList.selectAllAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Causes every selected item in the object to be selected
 if the object supports multiple selections.

<!-- END DATA -->
