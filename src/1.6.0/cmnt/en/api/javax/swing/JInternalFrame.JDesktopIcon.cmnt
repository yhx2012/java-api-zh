<!-- BEGIN KEY -->
public static class javax.swing.JInternalFrame.JDesktopIcon extends javax.swing.JComponent implements javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
 This component represents an iconified version of a
 <code>JInternalFrame</code>.
 This API should NOT BE USED by Swing applications, as it will go
 away in future versions of Swing as its functionality is moved into
 <code>JInternalFrame</code>.  This class is public only so that
 UI objects can display a desktop icon.  If an application
 wants to display a desktop icon, it should create a
 <code>JInternalFrame</code> instance and iconify it.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @author David Kloba

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JInternalFrame.JDesktopIcon(JInternalFrame f)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an icon for an internal frame.

 @param f  the <code>JInternalFrame</code>
		for which the icon is created

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.DesktopIconUI javax.swing.JInternalFrame.JDesktopIcon.getUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the look-and-feel object that renders this component.

 @return the <code>DesktopIconUI</code> object that renders
		this component

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JInternalFrame.JDesktopIcon.setUI(DesktopIconUI ui)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the look-and-feel object that renders this component.

 @param ui  the <code>DesktopIconUI</code> look-and-feel object
 @see UIDefaults#getUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JInternalFrame javax.swing.JInternalFrame.JDesktopIcon.getInternalFrame()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the <code>JInternalFrame</code> that this
 <code>DesktopIcon</code> is associated with. 

 @return the <code>JInternalFrame</code> with which this icon
		is associated

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JInternalFrame.JDesktopIcon.setInternalFrame(JInternalFrame f)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Sets the <code>JInternalFrame</code> with which this
 <code>DesktopIcon</code> is associated.

 @param f  the <code>JInternalFrame</code> with which this icon
		is associated

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JDesktopPane javax.swing.JInternalFrame.JDesktopIcon.getDesktopPane()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method to ask the icon for the <code>Desktop</code>
 object it belongs to.

 @return the <code>JDesktopPane</code> that contains this
	     icon's internal frame, or <code>null</code> if none found

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JInternalFrame.JDesktopIcon.updateUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Notification from the <code>UIManager</code> that the look and feel
 has changed. 
 Replaces the current UI object with the latest version from the 
 <code>UIManager</code>.

 @see JComponent#updateUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JInternalFrame.JDesktopIcon.getUIClassID()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of the look-and-feel
 class that renders this component.

 @return the string "DesktopIconUI"
 @see JComponent#getUIClassID
 @see UIDefaults#getUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JInternalFrame.JDesktopIcon.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the AccessibleContext associated with this JDesktopIcon. 
 For desktop icons, the AccessibleContext takes the form of an 
 AccessibleJDesktopIcon. 
 A new AccessibleJDesktopIcon instance is created if necessary.

 @return an AccessibleJDesktopIcon that serves as the 
         AccessibleContext of this JDesktopIcon

<!-- END DATA -->
