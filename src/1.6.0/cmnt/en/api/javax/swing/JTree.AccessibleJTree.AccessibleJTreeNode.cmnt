<!-- BEGIN KEY -->
protected class javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode extends javax.accessibility.AccessibleContext implements javax.accessibility.Accessible, javax.accessibility.AccessibleComponent, javax.accessibility.AccessibleSelection, javax.accessibility.AccessibleAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class implements accessibility support for the 
 <code>JTree</code> child.  It provides an implementation of the 
 Java Accessibility API appropriate to tree nodes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode(JTree t, TreePath p, Accessible ap)
<!-- END KEY -->
<!-- BEGIN DATA -->
  Constructs an AccessibleJTreeNode
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleContext associated with this tree node. 
 In the implementation of the Java Accessibility API for 
 this class, return this object, which is its own 
 AccessibleContext.

 @return this object

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the accessible name of this object.

 @return the localized name of the object; null if this 
 object does not have a name

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.setAccessibleName(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the localized accessible name of this object.

 @param s the new localized name of the object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleDescription()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the accessible description of this object.

 @return the localized description of the object; null if 
 this object does not have a description

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.setAccessibleDescription(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the accessible description of this object.

 @param s the new localized description of the object

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the role of this object.

 @return an instance of AccessibleRole describing the role of the object
 @see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the state set of this object.

 @return an instance of AccessibleStateSet containing the 
 current state set of the object
 @see AccessibleState

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the Accessible parent of this object.

 @return the Accessible parent of this object; null if this
 object does not have an Accessible parent

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleIndexInParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the index of this object in its accessible parent. 

 @return the index of this object in its parent; -1 if this 
 object does not have an accessible parent.
 @see #getAccessibleParent

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleChildrenCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of accessible children in the object.

 @return the number of accessible children in the object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleChild(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the specified Accessible child of the object.

 @param i zero-based index of child
 @return the Accessible child of the object

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Locale javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getLocale()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Gets the locale of the component. If the component does not have
 a locale, then the locale of its parent is returned.  

 @return This component's locale. If this component does not have 
 a locale, the locale of its parent is returned.
 @exception IllegalComponentStateException 
 If the Component does not have its own locale and has not yet 
 been added to a containment hierarchy such that the locale can be
 determined from the containing parent. 
 @see #setLocale

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.addPropertyChangeListener(PropertyChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Add a PropertyChangeListener to the listener list.
 The listener is registered for all properties.

 @param l  The PropertyChangeListener to be added

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.removePropertyChangeListener(PropertyChangeListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Remove a PropertyChangeListener from the listener list.
 This removes a PropertyChangeListener that was registered
 for all properties.

 @param l  The PropertyChangeListener to be removed

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleAction javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleAction()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleAction associated with this object.  In the
 implementation of the Java Accessibility API for this class, 
 return this object, which is responsible for implementing the
 AccessibleAction interface on behalf of itself.
 
 @return this object

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleComponent javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleComponent associated with this object.  In the
 implementation of the Java Accessibility API for this class, 
 return this object, which is responsible for implementing the
 AccessibleComponent interface on behalf of itself.
 
 @return this object

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleSelection javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleSelection associated with this object if one
 exists.  Otherwise return null.

 @return the AccessibleSelection, or null

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleText javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleText()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleText associated with this object if one
 exists.  Otherwise return null.

 @return the AccessibleText, or null

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleValue javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleValue associated with this object if one
 exists.  Otherwise return null.

 @return the AccessibleValue, or null

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getBackground()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the background color of this object.

 @return the background color, if supported, of the object; 
 otherwise, null

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.setBackground(Color c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the background color of this object.

 @param c the new Color for the background

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getForeground()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the foreground color of this object.

 @return the foreground color, if supported, of the object; 
 otherwise, null

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleAt(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>Accessible</code> child, if one exists,
 contained at the local coordinate <code>Point</code>.
 Otherwise returns <code>null</code>.

 @param p point in local coordinates of this
    <code>Accessible</code>
 @return the <code>Accessible</code>, if it exists,
    at the specified location; else <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleSelectionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of items currently selected.
 If no items are selected, the return value will be 0.

 @return the number of items currently selected.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an Accessible representing the specified selected item
 in the object.  If there isn't a selection, or there are 
 fewer items selected than the integer passed in, the return
 value will be null.

 @param i the zero-based index of selected items
 @return an Accessible containing the selected item

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.isAccessibleChildSelected(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if the current child of this object is selected.

 @param i the zero-based index of the child in this Accessible 
 object.
 @see AccessibleContext#getAccessibleChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.addAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds the specified selected item in the object to the object's
 selection.  If the object supports multiple selections,
 the specified item is added to any existing selection, otherwise
 it replaces any existing selection in the object.  If the
 specified item is already selected, this method has no effect.

 @param i the zero-based index of selectable items

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.removeAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the specified selected item in the object from the 
 object's
 selection.  If the specified item isn't currently selected, this
 method has no effect.

 @param i the zero-based index of selectable items

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.clearAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clears the selection in the object, so that nothing in the
 object is selected.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.selectAllAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Causes every selected item in the object to be selected
 if the object supports multiple selections.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleActionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of accessible actions available in this 
 tree node.  If this node is not a leaf, there is at least 
 one action (toggle expand), in addition to any available
 on the object behind the TreeCellRenderer.

 @return the number of Actions in this object

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.getAccessibleActionDescription(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return a description of the specified action of the tree node.
 If this node is not a leaf, there is at least one action
 description (toggle expand), in addition to any available
 on the object behind the TreeCellRenderer.

 @param i zero-based index of the actions
 @return a description of the action

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode.doAccessibleAction(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Perform the specified Action on the tree node.  If this node
 is not a leaf, there is at least one action which can be
 done (toggle expand), in addition to any available on the 
 object behind the TreeCellRenderer.

 @param i zero-based index of actions
 @return true if the the action was performed; else false.

<!-- END DATA -->
