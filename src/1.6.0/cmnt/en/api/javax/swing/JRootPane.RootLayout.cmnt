<!-- BEGIN KEY -->
protected class javax.swing.JRootPane.RootLayout extends java.lang.Object implements java.awt.LayoutManager2, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->

 A custom layout manager that is responsible for the layout of 
 layeredPane, glassPane, and menuBar.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.JRootPane.RootLayout.preferredLayoutSize(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the amount of space the layout would like to have.

 @param parent the Container for which this layout manager
 is being used
 @return a Dimension object containing the layout's preferred size

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.JRootPane.RootLayout.minimumLayoutSize(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the minimum amount of space the layout needs.

 @param parent the Container for which this layout manager
 is being used
 @return a Dimension object containing the layout's minimum size

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.JRootPane.RootLayout.maximumLayoutSize(Container target)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the maximum amount of space the layout can use.

 @param target the Container for which this layout manager
 is being used
 @return a Dimension object containing the layout's maximum size

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JRootPane.RootLayout.layoutContainer(Container parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Instructs the layout manager to perform the layout for the specified
 container.

 @param parent the Container for which this layout manager
 is being used

<!-- END DATA -->
