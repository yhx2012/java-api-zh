<!-- BEGIN KEY -->
public abstract static class javax.swing.RowFilter.Entry extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 An <code>Entry</code> object is passed to instances of
 <code>RowFilter</code>, allowing the filter to get the value of the
 entry's data, and thus to determine whether the entry should be shown.
 An <code>Entry</code> object contains information about the model
 as well as methods for getting the underlying values from the model.

 @param <M> the type of the model; for example <code>PersonModel</code>
 @param <I> the type of the identifier; when using
            <code>TableRowSorter</code> this will be <code>Integer</code>
 @see javax.swing.RowFilter
 @see javax.swing.DefaultRowSorter#setRowFilter(javax.swing.RowFilter)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.RowFilter.Entry()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an <code>Entry</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract M javax.swing.RowFilter.Entry.getModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the underlying model.

 @return the model containing the data that this entry represents

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int javax.swing.RowFilter.Entry.getValueCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of values in the entry.  For
 example, when used with a table this corresponds to the
 number of columns.

 @return number of values in the object being filtered

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.Object javax.swing.RowFilter.Entry.getValue(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value at the specified index.  This may return
 <code>null</code>.  When used with a table, index
 corresponds to the column number in the model.

 @param index the index of the value to get
 @return value at the specified index
 @throws <code>IndexOutOfBoundsException</code> if index &lt; 0 or
         &gt;= getValueCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.RowFilter.Entry.getStringValue(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string value at the specified index.  If
 filtering is being done based on <code>String</code> values
 this method is preferred to that of <code>getValue</code>
 as <code>getValue(index).toString()</code> may return a
 different result than <code>getStringValue(index)</code>.
 <p>
 This implementation calls <code>getValue(index).toString()</code>
 after checking for <code>null</code>.  Subclasses that provide
 different string conversion should override this method if
 necessary.

 @param index the index of the value to get
 @return {@code non-null} string at the specified index
 @throws <code>IndexOutOfBoundsException</code> if index &lt; 0 ||
         &gt;= getValueCount

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract I javax.swing.RowFilter.Entry.getIdentifier()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the identifer (in the model) of the entry.
 For a table this corresponds to the index of the row in the model,
 expressed as an <code>Integer</code>.

 @return a model-based (not view-based) identifier for
         this entry

<!-- END DATA -->
