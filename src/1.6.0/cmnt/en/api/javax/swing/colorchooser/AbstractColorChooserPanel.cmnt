<!-- BEGIN KEY -->
public abstract class javax.swing.colorchooser.AbstractColorChooserPanel extends javax.swing.JPanel
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is the abstract superclass for color choosers.  If you want to add
 a new color chooser panel into a <code>JColorChooser</code>, subclass
 this class.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @version 1.21 11/17/05
 @author Tom Santos
 @author Steve Wilson

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.JColorChooser javax.swing.colorchooser.AbstractColorChooserPanel.chooser
<!-- END KEY -->
<!-- BEGIN DATA -->
 

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.event.ChangeListener javax.swing.colorchooser.AbstractColorChooserPanel.colorListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean javax.swing.colorchooser.AbstractColorChooserPanel.dirty
<!-- END KEY -->
<!-- BEGIN DATA -->
 

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void javax.swing.colorchooser.AbstractColorChooserPanel.updateChooser()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked automatically when the model's state changes.
 It is also called by <code>installChooserPanel</code> to allow
 you to set up the initial state of your chooser.
 Override this method to update your <code>ChooserPanel</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.swing.colorchooser.AbstractColorChooserPanel.buildChooser()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Builds a new chooser panel.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String javax.swing.colorchooser.AbstractColorChooserPanel.getDisplayName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string containing the display name of the panel.
 @return the name of the display panel

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.colorchooser.AbstractColorChooserPanel.getMnemonic()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides a hint to the look and feel as to the
 <code>KeyEvent.VK</code> constant that can be used as a mnemonic to
 access the panel. A return value <= 0 indicates there is no mnemonic.
 <p>
 The return value here is a hint, it is ultimately up to the look
 and feel to honor the return value in some meaningful way.
 <p>
 This implementation returns 0, indicating the
 <code>AbstractColorChooserPanel</code> does not support a mnemonic,
 subclasses wishing a mnemonic will need to override this.

 @return KeyEvent.VK constant identifying the mnemonic; <= 0 for no
         mnemonic
 @see #getDisplayedMnemonicIndex
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.colorchooser.AbstractColorChooserPanel.getDisplayedMnemonicIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides a hint to the look and feel as to the index of the character in
 <code>getDisplayName</code> that should be visually identified as the
 mnemonic. The look and feel should only use this if
 <code>getMnemonic</code> returns a value > 0.
 <p>
 The return value here is a hint, it is ultimately up to the look
 and feel to honor the return value in some meaningful way. For example,
 a look and feel may wish to render each
 <code>AbstractColorChooserPanel</code> in a <code>JTabbedPane</code>,
 and further use this return value to underline a character in
 the <code>getDisplayName</code>.
 <p>
 This implementation returns -1, indicating the
 <code>AbstractColorChooserPanel</code> does not support a mnemonic,
 subclasses wishing a mnemonic will need to override this.

 @return Character index to render mnemonic for; -1 to provide no
                   visual identifier for this panel.
 @see #getMnemonic
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.Icon javax.swing.colorchooser.AbstractColorChooserPanel.getSmallDisplayIcon()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the small display icon for the panel.
 @return the small display icon

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.swing.Icon javax.swing.colorchooser.AbstractColorChooserPanel.getLargeDisplayIcon()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the large display icon for the panel.
 @return the large display icon

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.colorchooser.AbstractColorChooserPanel.installChooserPanel(JColorChooser enclosingChooser)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the panel is added to the chooser.
 If you override this, be sure to call <code>super</code>.
 @param enclosingChooser  the panel to be added
 @exception RuntimeException  if the chooser panel has already been
				installed

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.colorchooser.AbstractColorChooserPanel.uninstallChooserPanel(JColorChooser enclosingChooser)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the panel is removed from the chooser.
 If override this, be sure to call <code>super</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.colorchooser.ColorSelectionModel javax.swing.colorchooser.AbstractColorChooserPanel.getColorSelectionModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the model that the chooser panel is editing.
 @return the <code>ColorSelectionModel</code> model this panel
		is editing

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Color javax.swing.colorchooser.AbstractColorChooserPanel.getColorFromModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the color that is currently selected.
 @return the <code>Color</code> that is selected

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.colorchooser.AbstractColorChooserPanel.paint(Graphics g)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Draws the panel. 
 @param g  the <code>Graphics</code> object

<!-- END DATA -->
