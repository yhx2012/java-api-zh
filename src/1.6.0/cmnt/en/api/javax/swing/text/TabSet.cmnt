<!-- BEGIN KEY -->
public class javax.swing.text.TabSet extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 A TabSet is comprised of many TabStops. It offers methods for locating the
 closest TabStop to a given position and finding all the potential TabStops.
 It is also immutable.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @author  Scott Violet
 @version 1.16 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.text.TabStop[] javax.swing.text.TabSet.tabs
<!-- END KEY -->
<!-- BEGIN DATA -->
TabStops this TabSet contains. 
<!-- END DATA -->
<!-- BEGIN KEY -->
private int javax.swing.text.TabSet.hashCode
<!-- END KEY -->
<!-- BEGIN DATA -->
 Since this class is immutable the hash code could be
 calculated once. MAX_VALUE means that it was not initialized
 yet. Hash code shouldn't has MAX_VALUE value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.TabSet(javax.swing.text.TabStop[] tabs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates and returns an instance of TabSet. The array of Tabs
 passed in must be sorted in ascending order.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.TabSet.getTabCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of Tab instances the receiver contains.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.TabStop javax.swing.text.TabSet.getTab(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the TabStop at index <code>index</code>. This will throw an
 IllegalArgumentException if <code>index</code> is outside the range
 of tabs.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.TabStop javax.swing.text.TabSet.getTabAfter(float location)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the Tab instance after <code>location</code>. This will
 return null if there are no tabs after <code>location</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.TabSet.getTabIndex(TabStop tab)
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the index of the TabStop <code>tab</code>, or -1 if
 <code>tab</code> is not contained in the receiver.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.TabSet.getTabIndexAfter(float location)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the index of the Tab to be used after <code>location</code>.
 This will return -1 if there are no tabs after <code>location</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.TabSet.equals(Object o)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates whether this <code>TabSet</code> is equal to another one.
 @param o the <code>TabSet</code> instance which this instance
  should be compared to.
 @return <code>true</code> if <code>o</code> is the instance of
 <code>TabSet</code>, has the same number of <code>TabStop</code>s
 and they are all equal, <code>false</code> otherwise.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.TabSet.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a hashcode for this set of TabStops.
 @return  a hashcode value for this set of TabStops.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.TabSet.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string representation of the set of tabs.

<!-- END DATA -->
