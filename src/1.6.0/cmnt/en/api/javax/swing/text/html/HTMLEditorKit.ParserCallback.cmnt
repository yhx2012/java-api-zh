<!-- BEGIN KEY -->
public static class javax.swing.text.html.HTMLEditorKit.ParserCallback extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 The result of parsing drives these callback methods.
 The open and close actions should be balanced.  The
 <code>flush</code> method will be the last method
 called, to give the receiver a chance to flush any
 pending data into the document.
 <p>Refer to DocumentParser, the default parser used, for further
 information on the contents of the AttributeSets, the positions, and
 other info.

 @see javax.swing.text.html.parser.DocumentParser

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.html.HTMLEditorKit.ParserCallback.IMPLIED
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is passed as an attribute in the attributeset to indicate
 the element is implied eg, the string '&lt;&gt;foo&lt;\t&gt;' 
 contains an implied html element and an implied body element.

 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.html.HTMLEditorKit.ParserCallback.handleEndOfLineString(String eol)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is invoked after the stream has been parsed, but before
 <code>flush</code>. <code>eol</code> will be one of \n, \r
 or \r\n, which ever is encountered the most in parsing the
 stream.

 @since 1.3

<!-- END DATA -->
