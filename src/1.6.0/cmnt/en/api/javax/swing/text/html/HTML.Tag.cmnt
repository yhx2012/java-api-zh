<!-- BEGIN KEY -->
public static class javax.swing.text.html.HTML.Tag extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Typesafe enumeration for an HTML tag.  Although the
 set of HTML tags is a closed set, we have left the
 set open so that people can add their own tag types
 to their custom parser and still communicate to the
 reader.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.text.html.HTML.Tag javax.swing.text.html.HTML.Tag.IMPLIED
<!-- END KEY -->
<!-- BEGIN DATA -->
 All text content must be in a paragraph element.
 If a paragraph didn't exist when content was
 encountered, a paragraph is manufactured.
 <p>
 This is a tag synthesized by the HTML reader.
 Since elements are identified by their tag type,
 we create a some fake tag types to mark the elements
 that were manufactured.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.text.html.HTML.Tag javax.swing.text.html.HTML.Tag.CONTENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 All text content is labeled with this tag.
 <p>
 This is a tag synthesized by the HTML reader.
 Since elements are identified by their tag type,
 we create a some fake tag types to mark the elements
 that were manufactured.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.text.html.HTML.Tag javax.swing.text.html.HTML.Tag.COMMENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 All comments are labeled with this tag.
 <p>
 This is a tag synthesized by the HTML reader.
 Since elements are identified by their tag type,
 we create a some fake tag types to mark the elements
 that were manufactured.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.html.HTML.Tag()
<!-- END KEY -->
<!-- BEGIN DATA -->
@since 1.3 
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag(String id)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new <code>Tag</code> with the specified <code>id</code>,
 and with <code>causesBreak</code> and <code>isBlock</code>
 set to <code>false</code>.

 @param id  the id of the new tag

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.text.html.HTML.Tag(String id, boolean causesBreak, boolean isBlock)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new <code>Tag</code> with the specified <code>id</code>;
 <code>causesBreak</code> and <code>isBlock</code> are defined
 by the user.

 @param id the id of the new tag
 @param causesBreak  <code>true</code> if this tag
    causes a break to the flow of data
 @param isBlock <code>true</code> if the tag is used
    to add structure to a document

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.HTML.Tag.isBlock()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> if this tag is a block
 tag, which is a tag used to add structure to a
 document.
 
 @return <code>true</code> if this tag is a block
   tag, otherwise returns <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.HTML.Tag.breaksFlow()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> if this tag causes a
 line break to the flow of data, otherwise returns
 <code>false</code>.
 
 @return <code>true</code> if this tag causes a
   line break to the flow of data, otherwise returns
   <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.html.HTML.Tag.isPreformatted()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> if this tag is pre-formatted,
 which is true if the tag is either <code>PRE</code> or
 <code>TEXTAREA</code>.

 @return <code>true</code> if this tag is pre-formatted,
   otherwise returns <code>false</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.html.HTML.Tag.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string representation of the
 tag.

 @return the <code>String</code> representation of the tag

<!-- END DATA -->
