<!-- BEGIN KEY -->
public class javax.swing.text.DefaultStyledDocument.ElementBuffer extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 Class to manage changes to the element
 hierarchy.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementBuffer(Element root)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new ElementBuffer.

 @param root the root element
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.DefaultStyledDocument.ElementBuffer.getRootElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the root element.

 @return the root element

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementBuffer.insert(int offset, int length, javax.swing.text.DefaultStyledDocument.ElementSpec[] data, AbstractDocument.DefaultDocumentEvent de)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Inserts new content.

 @param offset the starting offset >= 0
 @param length the length >= 0
 @param data the data to insert
 @param de the event capturing this edit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementBuffer.remove(int offset, int length, AbstractDocument.DefaultDocumentEvent de)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes content.

 @param offset the starting offset >= 0
 @param length the length >= 0
 @param de the event capturing this edit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementBuffer.change(int offset, int length, AbstractDocument.DefaultDocumentEvent de)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Changes content.

 @param offset the starting offset >= 0
 @param length the length >= 0
 @param de the event capturing this edit

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.DefaultStyledDocument.ElementBuffer.insertUpdate(javax.swing.text.DefaultStyledDocument.ElementSpec[] data)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Inserts an update into the document.

 @param data the elements to insert

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.DefaultStyledDocument.ElementBuffer.removeUpdate()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Updates the element structure in response to a removal from the
 associated sequence in the document.  Any elements consumed by the
 span of the removal are removed.  

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.DefaultStyledDocument.ElementBuffer.changeUpdate()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Updates the element structure in response to a change in the
 document.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.DefaultStyledDocument.ElementBuffer.clone(Element parent, Element clonee)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a copy of this element, with a different 
 parent.

 @param parent the parent element
 @param clonee the element to be cloned
 @return the copy

<!-- END DATA -->
