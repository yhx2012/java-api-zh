<!-- BEGIN KEY -->
public class javax.swing.text.PasswordView extends javax.swing.text.FieldView
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implements a View suitable for use in JPasswordField
 UI implementations.  This is basically a field ui that
 renders its contents as the echo character specified
 in the associated component (if it can narrow the
 component to a JPasswordField).

 @author  Timothy Prinzing
 @version 1.22 11/30/05
 @see     View

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.PasswordView(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new view wrapped on an element.

 @param elem the element

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.text.PasswordView.drawUnselectedText(Graphics g, int x, int y, int p0, int p1) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Renders the given range in the model as normal unselected
 text.  This sets the foreground color and echos the characters
 using the value returned by getEchoChar().

 @param g the graphics context
 @param x the starting X coordinate >= 0
 @param y the starting Y coordinate >= 0
 @param p0 the starting offset in the model >= 0
 @param p1 the ending offset in the model >= p0
 @return the X location of the end of the range >= 0
 @exception BadLocationException if p0 or p1 are out of range

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.text.PasswordView.drawSelectedText(Graphics g, int x, int y, int p0, int p1) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Renders the given range in the model as selected text.  This
 is implemented to render the text in the color specified in
 the hosting component.  It assumes the highlighter will render
 the selected background.  Uses the result of getEchoChar() to
 display the characters.

 @param g the graphics context
 @param x the starting X coordinate >= 0
 @param y the starting Y coordinate >= 0
 @param p0 the starting offset in the model >= 0
 @param p1 the ending offset in the model >= p0
 @return the X location of the end of the range >= 0
 @exception BadLocationException if p0 or p1 are out of range

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.text.PasswordView.drawEchoCharacter(Graphics g, int x, int y, char c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Renders the echo character, or whatever graphic should be used
 to display the password characters.  The color in the Graphics
 object is set to the appropriate foreground color for selected
 or unselected text.

 @param g the graphics context
 @param x the starting X coordinate >= 0
 @param y the starting Y coordinate >= 0
 @param c the echo character
 @return the updated X position >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Shape javax.swing.text.PasswordView.modelToView(int pos, Shape a, Position.Bias b) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.

 @param pos the position to convert >= 0
 @param a the allocated region to render into
 @return the bounding box of the given position
 @exception BadLocationException  if the given position does not
   represent a valid location in the associated document
 @see View#modelToView

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.PasswordView.viewToModel(float fx, float fy, Shape a, javax.swing.text.Position.Bias[] bias)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.

 @param fx the X coordinate >= 0.0f
 @param fy the Y coordinate >= 0.0f
 @param a the allocated region to render into
 @return the location within the model that best represents the
  given point in the view
 @see View#viewToModel

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.PasswordView.getPreferredSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines the preferred span for this view along an
 axis.

 @param axis may be either View.X_AXIS or View.Y_AXIS
 @return   the span the view would like to be rendered into >= 0.
           Typically the view is told to render into the span
           that is returned, although there is no guarantee.  
           The parent may choose to resize or break the view.

<!-- END DATA -->
