<!-- BEGIN KEY -->
public class javax.swing.text.html.HTML extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constants used in the <code>HTMLDocument</code>.  These
 are basically tag and attribute definitions.

 @author  Timothy Prinzing
 @author  Sunita Mani

 @version 1.43 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.html.HTML.Tag[] javax.swing.text.html.HTML.getAllTags()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the set of actual HTML tags that
 are recognized by the default HTML reader.
 This set does not include tags that are
 manufactured by the reader.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.html.HTML.Tag javax.swing.text.html.HTML.getTag(String tagName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches a tag constant for a well-known tag name (i.e. one of
 the tags in the set {A, ADDRESS, APPLET, AREA, B,
 BASE, BASEFONT, BIG,
 BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, CODE,
 DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME,
 FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML,
 I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU,
 META, NOBR, NOFRAMES, OBJECT, OL, OPTION, P, PARAM,
 PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S,
 STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA,
 TH, TITLE, TR, TT, U, UL, VAR}.  If the given
 name does not represent one of the well-known tags, then
 <code>null</code> will be returned.

 @param tagName the <code>String</code> name requested
 @return a tag constant corresponding to the <code>tagName</code>,
    or <code>null</code> if not found

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.text.html.HTML.getIntegerAttributeValue(AttributeSet attr, HTML.Attribute key, int def)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches an integer attribute value.  Attribute values
 are stored as a string, and this is a convenience method
 to convert to an actual integer.

 @param attr the set of attributes to use to try to fetch a value
 @param key the key to use to fetch the value
 @param def the default value to use if the attribute isn't
  defined or there is an error converting to an integer

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.html.HTML.Attribute[] javax.swing.text.html.HTML.getAllAttributeKeys()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the set of HTML attributes recognized.
 @return the set of HTML attributes recognized

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.html.HTML.Attribute javax.swing.text.html.HTML.getAttributeKey(String attName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches an attribute constant for a well-known attribute name
 (i.e. one of the attributes in the set {FACE, COMMENT, SIZE,
 COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK,
 WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET,
 SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE,
 USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE,
 TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE,
 STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD,
 ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS,
 DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN,
 COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N,
 FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE,
 MEDIA, ENDTAG}).
 If the given name does not represent one of the well-known attributes,
 then <code>null</code> will be returned.

 @param attName the <code>String</code> requested
 @return the <code>Attribute</code> corresponding to <code>attName</code>

<!-- END DATA -->
