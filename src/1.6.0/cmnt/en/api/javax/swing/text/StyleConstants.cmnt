<!-- BEGIN KEY -->
public class javax.swing.text.StyleConstants extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>
 A collection of <em>well known</em> or common attribute keys
 and methods to apply to an AttributeSet or MutableAttributeSet
 to get/set the properties in a typesafe manner.  
 <p>
 The paragraph attributes form the definition of a paragraph to be rendered.
 All sizes are specified in points (such as found in postscript), a
 device independent measure.
 </p>
 <p align=center><img src="doc-files/paragraph.gif"
 alt="Diagram shows SpaceAbove, FirstLineIndent, LeftIndent, RightIndent, 
      and SpaceBelow a paragraph."></p>
 <p>
 
 @author  Timothy Prinzing
 @version 1.37 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.StyleConstants.ComponentElementName
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of elements used to represent components.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.StyleConstants.IconElementName
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of elements used to represent icons.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.NameAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Attribute name used to name the collection of
 attributes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ResolveAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Attribute name used to identifiy the resolving parent
 set of attributes, if one is defined.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ModelAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Attribute used to identify the model for embedded
 objects that have a model view separation.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.BidiLevel
<!-- END KEY -->
<!-- BEGIN DATA -->
 Bidirectional level of a character as assigned by the Unicode bidi
 algorithm.  

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.FontFamily
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the font family.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Family
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the font family.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.FontSize
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the font size.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Size
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the font size.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Bold
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the bold attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Italic
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the italic attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Underline
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the underline attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.StrikeThrough
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Strikethrough attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Superscript
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Superscript attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Subscript
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Subscript attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Foreground
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the foreground color attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Background
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the background color attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ComponentAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the component attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.IconAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the icon attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.ComposedTextAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the input method composed text attribute. The value of
 this attribute is an instance of AttributedString which represents
 the composed text.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.FirstLineIndent
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount of space to indent the first
 line of the paragraph.  This value may be negative
 to offset in the reverse direction.  The type
 is Float and specifies the size of the space
 in points.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.LeftIndent
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount to indent the left side
 of the paragraph.
 Type is float and specifies the size in points.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.RightIndent
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount to indent the right side
 of the paragraph.
 Type is float and specifies the size in points.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.LineSpacing
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount of space between lines
 of the paragraph.
 Type is float and specifies the size as a factor of the line height

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.SpaceAbove
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount of space above the paragraph.
 Type is float and specifies the size in points.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.SpaceBelow
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount of space below the paragraph.
 Type is float and specifies the size in points.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Alignment
<!-- END KEY -->
<!-- BEGIN DATA -->
 Alignment for the paragraph.  The type is
 Integer.  Valid values are:
 <ul>
 <li>ALIGN_LEFT
 <li>ALIGN_RIGHT
 <li>ALIGN_CENTER
 <li>ALIGN_JUSTIFED
 </ul>


<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.TabSet
<!-- END KEY -->
<!-- BEGIN DATA -->
 TabSet for the paragraph, type is a TabSet containing
 TabStops.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object javax.swing.text.StyleConstants.Orientation
<!-- END KEY -->
<!-- BEGIN DATA -->
 Orientation for a paragraph.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_LEFT
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for paragraph alignment.  This
 specifies that the text is aligned to the left 
 indent and extra whitespace should be placed on
 the right.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_CENTER
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for paragraph alignment.  This
 specifies that the text is aligned to the center
 and extra whitespace should be placed equally on
 the left and right.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_RIGHT
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for paragraph alignment.  This
 specifies that the text is aligned to the right
 indent and extra whitespace should be placed on
 the left.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.StyleConstants.ALIGN_JUSTIFIED
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for paragraph alignment.  This
 specifies that extra whitespace should be spread
 out through the rows of the paragraph with the
 text lined up with the left and right indent
 except on the last line which should be aligned
 to the left.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.StyleConstants.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string representation.

 @return the string

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.text.StyleConstants.getBidiLevel(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the BidiLevel setting.

 @param a the attribute set
 @return the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setBidiLevel(MutableAttributeSet a, int o)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the BidiLevel.

 @param a the attribute set
 @param o the bidi level value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.Component javax.swing.text.StyleConstants.getComponent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the component setting from the attribute list.

 @param a the attribute set
 @return the component, null if none

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setComponent(MutableAttributeSet a, Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the component attribute.

 @param a the attribute set
 @param c the component

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.Icon javax.swing.text.StyleConstants.getIcon(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the icon setting from the attribute list.

 @param a the attribute set
 @return the icon, null if none

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setIcon(MutableAttributeSet a, Icon c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the icon attribute.

 @param a the attribute set
 @param c the icon

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.lang.String javax.swing.text.StyleConstants.getFontFamily(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the font family setting from the attribute list.

 @param a the attribute set
 @return the font family, "Monospaced" as the default

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setFontFamily(MutableAttributeSet a, String fam)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the font attribute.

 @param a the attribute set
 @param fam the font

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.text.StyleConstants.getFontSize(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the font size setting from the attribute list.

 @param a the attribute set
 @return the font size, 12 as the default

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setFontSize(MutableAttributeSet a, int s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the font size attribute.

 @param a the attribute set
 @param s the font size 

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isBold(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the bold attribute is set.

 @param a the attribute set
 @return true if set else false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setBold(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the bold attribute.

 @param a the attribute set
 @param b specifies true/false for setting the attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isItalic(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the italic attribute is set.

 @param a the attribute set
 @return true if set else false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setItalic(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the italic attribute.

 @param a the attribute set
 @param b specifies true/false for setting the attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isUnderline(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the underline attribute is set.

 @param a the attribute set
 @return true if set else false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isStrikeThrough(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the strikethrough attribute is set.

 @param a the attribute set
 @return true if set else false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isSuperscript(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the superscript attribute is set.

 @param a the attribute set
 @return true if set else false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.text.StyleConstants.isSubscript(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the subscript attribute is set.

 @param a the attribute set
 @return true if set else false

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setUnderline(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the underline attribute.

 @param a the attribute set
 @param b specifies true/false for setting the attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setStrikeThrough(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the strikethrough attribute.

 @param a the attribute set
 @param b specifies true/false for setting the attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSuperscript(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the superscript attribute.

 @param a the attribute set
 @param b specifies true/false for setting the attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSubscript(MutableAttributeSet a, boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the subscript attribute.

 @param a the attribute set
 @param b specifies true/false for setting the attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.Color javax.swing.text.StyleConstants.getForeground(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the foreground color setting from the attribute list.

 @param a the attribute set
 @return the color, Color.black as the default

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setForeground(MutableAttributeSet a, Color fg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the foreground color.

 @param a the attribute set
 @param fg the color

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.Color javax.swing.text.StyleConstants.getBackground(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the background color setting from the attribute list.

 @param a the attribute set
 @return the color, Color.black as the default

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setBackground(MutableAttributeSet a, Color fg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the background color.

 @param a the attribute set
 @param fg the color

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getFirstLineIndent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the first line indent setting.

 @param a the attribute set
 @return the value, 0 if not set

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setFirstLineIndent(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the first line indent.

 @param a the attribute set
 @param i the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getRightIndent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the right indent setting.

 @param a the attribute set
 @return the value, 0 if not set

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setRightIndent(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets right indent.

 @param a the attribute set
 @param i the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getLeftIndent(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the left indent setting.

 @param a the attribute set
 @return the value, 0 if not set

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setLeftIndent(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets left indent.

 @param a the attribute set
 @param i the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getLineSpacing(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the line spacing setting.

 @param a the attribute set
 @return the value, 0 if not set

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setLineSpacing(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets line spacing.

 @param a the attribute set
 @param i the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getSpaceAbove(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the space above setting.

 @param a the attribute set
 @return the value, 0 if not set

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSpaceAbove(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets space above.

 @param a the attribute set
 @param i the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static float javax.swing.text.StyleConstants.getSpaceBelow(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the space below setting.

 @param a the attribute set
 @return the value, 0 if not set

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setSpaceBelow(MutableAttributeSet a, float i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets space below.

 @param a the attribute set
 @param i the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.text.StyleConstants.getAlignment(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the alignment setting.

 @param a the attribute set
 @return the value <code>StyleConstants.ALIGN_LEFT</code> if not set

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setAlignment(MutableAttributeSet a, int align)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets alignment.

 @param a the attribute set
 @param align the alignment value

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.TabSet javax.swing.text.StyleConstants.getTabSet(AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the TabSet.

 @param a the attribute set
 @return the <code>TabSet</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.text.StyleConstants.setTabSet(MutableAttributeSet a, TabSet tabs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the TabSet.

 @param a the attribute set.
 @param tabs the TabSet

<!-- END DATA -->
