<!-- BEGIN KEY -->
public class javax.swing.text.AbstractDocument.BranchElement extends javax.swing.text.AbstractDocument.AbstractElement
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implements a composite element that contains other elements.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AbstractDocument.BranchElement(Element parent, AttributeSet a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a composite element that initially contains
 no children.

 @param parent  The parent element
 @param a the attributes for the element
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.AbstractDocument.BranchElement.positionToElement(int pos)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the child element that contains
 the given model position.

 @param pos the position >= 0
 @return the element, null if none

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.AbstractDocument.BranchElement.replace(int offset, int length, javax.swing.text.Element[] elems)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Replaces content with a new set of elements.

 @param offset the starting offset >= 0
 @param length the length to replace >= 0
 @param elems the new elements

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.AbstractDocument.BranchElement.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts the element to a string.

 @return the string

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.AbstractDocument.BranchElement.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the element name.

 @return the element name

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.BranchElement.getStartOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the starting offset in the model for the element.

 @return the offset >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.BranchElement.getEndOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the ending offset in the model for the element.
 @throws NullPointerException if this element has no children

 @return the offset >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.AbstractDocument.BranchElement.getElement(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets a child element.

 @param index the child index, >= 0 && < getElementCount()
 @return the child element, null if none

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.BranchElement.getElementCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the number of children for the element.

 @return the number of children >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.AbstractDocument.BranchElement.getElementIndex(int offset)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the child element index closest to the given model offset.

 @param offset the offset >= 0
 @return the element index >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.AbstractDocument.BranchElement.isLeaf()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the element is a leaf.

 @return true if a leaf

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.AbstractDocument.BranchElement.getAllowsChildren()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if the receiver allows children.
 @return true if the receiver allows children, otherwise false

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration javax.swing.text.AbstractDocument.BranchElement.children()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the children of the receiver as an
 <code>Enumeration</code>.
 @return the children of the receiver

<!-- END DATA -->
