<!-- BEGIN KEY -->
public class javax.swing.text.IconView extends javax.swing.text.View
<!-- END KEY -->
<!-- BEGIN DATA -->
 Icon decorator that implements the view interface.  The
 entire element is used to represent the icon.  This acts
 as a gateway from the display-only View implementations to
 interactive lightweight icons (that is, it allows icons
 to be embedded into the View hierarchy.  The parent of the icon
 is the container that is handed out by the associated view
 factory.

 @author Timothy Prinzing
 @version 1.29 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.IconView(Element elem)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new icon view that represents an element.

 @param elem the element to create a view for

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.IconView.paint(Graphics g, Shape a)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the icon.
 The real paint behavior occurs naturally from the association
 that the icon has with its parent container (the same
 container hosting this view), so this simply allows us to
 position the icon properly relative to the view.  Since
 the coordinate system for the view is simply the parent
 containers, positioning the child icon is easy.

 @param g the rendering surface to use
 @param a the allocated region to render into
 @see View#paint

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.IconView.getPreferredSpan(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines the preferred span for this view along an
 axis.

 @param axis may be either View.X_AXIS or View.Y_AXIS
 @return  the span the view would like to be rendered into
           Typically the view is told to render into the span
           that is returned, although there is no guarantee.
           The parent may choose to resize or break the view.
 @exception IllegalArgumentException for an invalid axis

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.IconView.getAlignment(int axis)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines the desired alignment for this view along an
 axis.  This is implemented to give the alignment to the
 bottom of the icon along the y axis, and the default
 along the x axis.

 @param axis may be either View.X_AXIS or View.Y_AXIS
 @return the desired alignment >= 0.0f && <= 1.0f.  This should be
   a value between 0.0 and 1.0 where 0 indicates alignment at the
   origin and 1.0 indicates alignment to the full span
   away from the origin.  An alignment of 0.5 would be the
   center of the view.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Shape javax.swing.text.IconView.modelToView(int pos, Shape a, Position.Bias b) throws javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides a mapping from the document model coordinate space
 to the coordinate space of the view mapped to it.

 @param pos the position to convert >= 0
 @param a the allocated region to render into
 @return the bounding box of the given position
 @exception BadLocationException  if the given position does not
   represent a valid location in the associated document
 @see View#modelToView

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.IconView.viewToModel(float x, float y, Shape a, javax.swing.text.Position.Bias[] bias)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides a mapping from the view coordinate space to the logical
 coordinate space of the model.

 @param x the X coordinate >= 0
 @param y the Y coordinate >= 0
 @param a the allocated region to render into
 @return the location within the model that best represents the
  given point of view >= 0
 @see View#viewToModel

<!-- END DATA -->
