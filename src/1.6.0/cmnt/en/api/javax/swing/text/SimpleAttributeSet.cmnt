<!-- BEGIN KEY -->
public class javax.swing.text.SimpleAttributeSet extends java.lang.Object implements javax.swing.text.MutableAttributeSet, java.io.Serializable, java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
 A straightforward implementation of MutableAttributeSet using a 
 hash table.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @version 1.42 11/17/05
 @author Tim Prinzing

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.text.AttributeSet javax.swing.text.SimpleAttributeSet.EMPTY
<!-- END KEY -->
<!-- BEGIN DATA -->
 An empty attribute set.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.SimpleAttributeSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new attribute set.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.SimpleAttributeSet(AttributeSet source)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new attribute set based on a supplied set of attributes.

 @param source the set of attributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.SimpleAttributeSet.isEmpty()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the set of attributes is empty.

 @return true if the set is empty else false

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.SimpleAttributeSet.getAttributeCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets a count of the number of attributes.

 @return the count

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.SimpleAttributeSet.isDefined(Object attrName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Tells whether a given attribute is defined.

 @param attrName the attribute name
 @return true if the attribute is defined

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.SimpleAttributeSet.isEqual(AttributeSet attr)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares two attribute sets.

 @param attr the second attribute set
 @return true if the sets are equal, false otherwise

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.SimpleAttributeSet.copyAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Makes a copy of the attributes.

 @return the copy

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration<?> javax.swing.text.SimpleAttributeSet.getAttributeNames()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the names of the attributes in the set.

 @return the names as an <code>Enumeration</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.text.SimpleAttributeSet.getAttribute(Object name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the value of an attribute.

 @param name the attribute name
 @return the value

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.SimpleAttributeSet.containsAttribute(Object name, Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the attribute list contains a
 specified attribute name/value pair.

 @param name the name
 @param value the value
 @return true if the name/value pair is in the list

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.SimpleAttributeSet.containsAttributes(AttributeSet attributes)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks whether the attribute list contains all the
 specified name/value pairs.

 @param attributes the attribute list
 @return true if the list contains all the name/value pairs

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.SimpleAttributeSet.addAttribute(Object name, Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds an attribute to the list.

 @param name the attribute name
 @param value the attribute value

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.SimpleAttributeSet.addAttributes(AttributeSet attributes)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds a set of attributes to the list.

 @param attributes the set of attributes to add

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.SimpleAttributeSet.removeAttribute(Object name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes an attribute from the list.

 @param name the attribute name

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.SimpleAttributeSet.removeAttributes(java.util.Enumeration<?> names)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes a set of attributes from the list.

 @param names the set of names to remove

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.SimpleAttributeSet.removeAttributes(AttributeSet attributes)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes a set of attributes from the list.

 @param attributes the set of attributes to remove

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.SimpleAttributeSet.getResolveParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the resolving parent.  This is the set
 of attributes to resolve through if an attribute
 isn't defined locally.  This is null if there 
 are no other sets of attributes to resolve 
 through.

 @return the parent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.SimpleAttributeSet.setResolveParent(AttributeSet parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the resolving parent.

 @param parent the parent

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.text.SimpleAttributeSet.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clones a set of attributes.

 @return the new set of attributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.SimpleAttributeSet.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a hashcode for this set of attributes.
 @return     a hashcode value for this set of attributes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.SimpleAttributeSet.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares this object to the specified object.
 The result is <code>true</code> if the object is an equivalent
 set of attributes.
 @param     obj   the object to compare this attribute set with
 @return    <code>true</code> if the objects are equal; 
            <code>false</code> otherwise

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.SimpleAttributeSet.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts the attribute set to a String.

 @return the string

<!-- END DATA -->
