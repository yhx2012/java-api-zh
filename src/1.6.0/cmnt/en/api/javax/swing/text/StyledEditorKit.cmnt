<!-- BEGIN KEY -->
public class javax.swing.text.StyledEditorKit extends javax.swing.text.DefaultEditorKit
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is the set of things needed by a text component
 to be a reasonably functioning editor for some <em>type</em>
 of text document.  This implementation provides a default
 implementation which treats text as styled text and 
 provides a minimal set of actions for editing styled text.

 @author  Timothy Prinzing
 @version 1.46 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
 javax.swing.text.MutableAttributeSet javax.swing.text.StyledEditorKit.inputAttributes
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is the set of attributes used to store the
 input attributes.  

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.text.StyledEditorKit.AttributeTracker javax.swing.text.StyledEditorKit.inputAttributeUpdater
<!-- END KEY -->
<!-- BEGIN DATA -->
 This listener will be attached to the caret of 
 the text component that the EditorKit gets installed
 into.  This should keep the input attributes updated
 for use by the styled actions.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.StyledEditorKit()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new EditorKit used for styled documents.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.MutableAttributeSet javax.swing.text.StyledEditorKit.getInputAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the input attributes for the pane.  When
 the caret moves and there is no selection, the
 input attributes are automatically mutated to 
 reflect the character attributes of the current
 caret location.  The styled editing actions 
 use the input attributes to carry out their 
 actions.

 @return the attribute set

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Element javax.swing.text.StyledEditorKit.getCharacterAttributeRun()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches the element representing the current
 run of character attributes for the caret.

 @return the element

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Action[] javax.swing.text.StyledEditorKit.getActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches the command list for the editor.  This is
 the list of commands supported by the superclass
 augmented by the collection of commands defined
 locally for style operations.

 @return the command list

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Document javax.swing.text.StyledEditorKit.createDefaultDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an uninitialized text storage model
 that is appropriate for this type of editor.

 @return the model

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.StyledEditorKit.install(JEditorPane c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Called when the kit is being installed into
 a JEditorPane. 

 @param c the JEditorPane

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.StyledEditorKit.deinstall(JEditorPane c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Called when the kit is being removed from the
 JEditorPane.  This is used to unregister any 
 listeners that were attached.

 @param c the JEditorPane

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.ViewFactory javax.swing.text.StyledEditorKit.getViewFactory()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches a factory that is suitable for producing 
 views of any models that are produced by this
 kit.  This is implemented to return View implementations
 for the following kinds of elements:
 <ul>
 <li>AbstractDocument.ContentElementName
 <li>AbstractDocument.ParagraphElementName
 <li>AbstractDocument.SectionElementName
 <li>StyleConstants.ComponentElementName
 <li>StyleConstants.IconElementName
 </ul>

 @return the factory

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.text.StyledEditorKit.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a copy of the editor kit.

 @return the copy

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.text.StyledEditorKit.createInputAttributes(Element element, MutableAttributeSet set)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Copies the key/values in <code>element</code>s AttributeSet into
 <code>set</code>. This does not copy component, icon, or element
 names attributes. Subclasses may wish to refine what is and what
 isn't copied here. But be sure to first remove all the attributes that
 are in <code>set</code>.<p>
 This is called anytime the caret moves over a different location.


<!-- END DATA -->
