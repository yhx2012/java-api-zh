<!-- BEGIN KEY -->
public class javax.swing.text.TabStop extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class encapsulates a single tab stop (basically as tab stops  
 are thought of by RTF). A tab stop is at a specified distance from the
 left margin, aligns text in a specified way, and has a specified leader.
 TabStops are immutable, and usually contained in TabSets.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @version 1.21 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.TabStop.ALIGN_LEFT
<!-- END KEY -->
<!-- BEGIN DATA -->
Character following tab is positioned at location. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.TabStop.ALIGN_RIGHT
<!-- END KEY -->
<!-- BEGIN DATA -->
Characters following tab are positioned such that all following
 characters up to next tab/newline end at location. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.TabStop.ALIGN_CENTER
<!-- END KEY -->
<!-- BEGIN DATA -->
Characters following tab are positioned such that all following
 characters up to next tab/newline are centered around the tabs
 location. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.text.TabStop.ALIGN_DECIMAL
<!-- END KEY -->
<!-- BEGIN DATA -->
Characters following tab are aligned such that next
 decimal/tab/newline is at the tab location, very similar to
 RIGHT_TAB, just includes decimal as additional character to look for.

<!-- END DATA -->
<!-- BEGIN KEY -->
private int javax.swing.text.TabStop.alignment
<!-- END KEY -->
<!-- BEGIN DATA -->
Tab type. 
<!-- END DATA -->
<!-- BEGIN KEY -->
private float javax.swing.text.TabStop.position
<!-- END KEY -->
<!-- BEGIN DATA -->
Location, from the left margin, that tab is at. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.TabStop(float pos)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a tab at position <code>pos</code> with a default alignment
 and default leader.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.TabStop(float pos, int align, int leader)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a tab with the specified position <code>pos</code>,
 alignment <code>align</code> and leader <code>leader</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public float javax.swing.text.TabStop.getPosition()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the position, as a float, of the tab.
 @return the position of the tab

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.TabStop.getAlignment()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the alignment, as an integer, of the tab.
 @return the alignment of the tab

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.TabStop.getLeader()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the leader of the tab.
 @return the leader of the tab

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.text.TabStop.equals(Object other)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if the tabs are equal.
 @return true if the tabs are equal, otherwise false

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.TabStop.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the hashCode for the object.  This must be defined
 here to ensure 100% pure.

 @return the hashCode for the object

<!-- END DATA -->
