<!-- BEGIN KEY -->
public static class javax.swing.text.DefaultStyledDocument.ElementSpec extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Specification for building elements.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.StartTagType
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for getType.  This specifies
 that this record type is a start tag and
 represents markup that specifies the start
 of an element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.EndTagType
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for getType.  This specifies
 that this record type is a end tag and
 represents markup that specifies the end
 of an element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.ContentType
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for getType.  This specifies
 that this record type represents content.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.JoinPreviousDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for getDirection.  This specifies
 that the data associated with this record should
 be joined to what precedes it.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.JoinNextDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for getDirection.  This specifies
 that the data associated with this record should
 be joined to what follows it.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.OriginateDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for getDirection.  This specifies
 that the data associated with this record should
 be used to originate a new element.  This would be
 the normal value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short javax.swing.text.DefaultStyledDocument.ElementSpec.JoinFractureDirection
<!-- END KEY -->
<!-- BEGIN DATA -->
 A possible value for getDirection.  This specifies
 that the data associated with this record should
 be joined to the fractured element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet a, short type)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructor useful for markup when the markup will not
 be stored in the document.

 @param a the attributes for the element
 @param type the type of the element (StartTagType, EndTagType,
  ContentType)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet a, short type, int len)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructor for parsing inside the document when
 the data has already been added, but len information
 is needed.

 @param a the attributes for the element
 @param type the type of the element (StartTagType, EndTagType,
  ContentType)
 @param len the length >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet a, short type, char[] txt, int offs, int len)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructor for creating a spec externally for batch
 input of content and markup into the document.

 @param a the attributes for the element
 @param type the type of the element (StartTagType, EndTagType,
  ContentType)
 @param txt the text for the element
 @param offs the offset into the text >= 0
 @param len the length of the text >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementSpec.setType(short type)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the element type.

 @param type the type of the element (StartTagType, EndTagType,
  ContentType)

<!-- END DATA -->
<!-- BEGIN KEY -->
public short javax.swing.text.DefaultStyledDocument.ElementSpec.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the element type.

 @return  the type of the element (StartTagType, EndTagType,
  ContentType)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultStyledDocument.ElementSpec.setDirection(short direction)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the direction.

 @param direction the direction (JoinPreviousDirection,
   JoinNextDirection)

<!-- END DATA -->
<!-- BEGIN KEY -->
public short javax.swing.text.DefaultStyledDocument.ElementSpec.getDirection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the direction.

 @return the direction (JoinPreviousDirection, JoinNextDirection)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet javax.swing.text.DefaultStyledDocument.ElementSpec.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the element attributes.

 @return the attribute set

<!-- END DATA -->
<!-- BEGIN KEY -->
public char[] javax.swing.text.DefaultStyledDocument.ElementSpec.getArray()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the array of characters.

 @return the array

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.DefaultStyledDocument.ElementSpec.getOffset()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the starting offset.

 @return the offset >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.text.DefaultStyledDocument.ElementSpec.getLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the length.

 @return the length >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.DefaultStyledDocument.ElementSpec.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts the element to a string.

 @return the string

<!-- END DATA -->
