<!-- BEGIN KEY -->
public class javax.swing.text.DefaultEditorKit extends javax.swing.text.EditorKit
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is the set of things needed by a text component
 to be a reasonably functioning editor for some <em>type</em>
 of text document.  This implementation provides a default
 implementation which treats text as plain text and 
 provides a minimal set of actions for a simple editor.
 <p>
 <dl>
 <dt><b><font size=+1>Newlines</font></b>
 <dd>
 There are two properties which deal with newlines.  The
 system property, <code>line.separator</code>, is defined to be
 platform-dependent, either "\n", "\r", or "\r\n".  There is also
 a property defined in <code>DefaultEditorKit</code>, called
 <a href=#EndOfLineStringProperty><code>EndOfLineStringProperty</code></a>,
 which is defined automatically when a document is loaded, to be
 the first occurrence of any of the newline characters.
 When a document is loaded, <code>EndOfLineStringProperty</code>
 is set appropriately, and when the document is written back out, the
 <code>EndOfLineStringProperty</code> is used.  But while the document
 is in memory, the "\n" character is used to define a
 newline, regardless of how the newline is defined when
 the document is on disk.  Therefore, for searching purposes,
 "\n" should always be used.  When a new document is created,
 and the <code>EndOfLineStringProperty</code> has not been defined,
 it will use the System property when writing out the
 document.
 <p>Note that <code>EndOfLineStringProperty</code> is set
 on the <code>Document</code> using the <code>get/setProperty</code>
 methods.  Subclasses may override this behavior.

 </dl>

 @author  Timothy Prinzing
 @version 1.72 08/17/06

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.EndOfLineStringProperty
<!-- END KEY -->
<!-- BEGIN DATA -->
 When reading a document if a CRLF is encountered a property
 with this name is added and the value will be "\r\n".

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.insertContentAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to place content into the associated
 document.  If there is a selection, it is removed before
 the new content is added.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.insertBreakAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to place a line/paragraph break into
 the document.  If there is a selection, it is removed before
 the break is added.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.insertTabAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to place a tab character into
 the document.  If there is a selection, it is removed before
 the tab is added.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.deletePrevCharAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to delete the character of content that
 precedes the current caret position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.deleteNextCharAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to delete the character of content that
 follows the current caret position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.deleteNextWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to delete the word that
 follows the beginning of the selection.
 @see #getActions
 @see JTextComponent#getSelectionStart
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.deletePrevWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to delete the word that
 precedes the beginning of the selection.
 @see #getActions
 @see JTextComponent#getSelectionStart
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.readOnlyAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to set the editor into read-only
 mode.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.writableAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to set the editor into writeable
 mode.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.cutAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to cut the selected region
 and place the contents into the system clipboard.
 @see JTextComponent#cut
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.copyAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to copy the selected region
 and place the contents into the system clipboard.
 @see JTextComponent#copy
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.pasteAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to paste the contents of the
 system clipboard into the selected region, or before the
 caret if nothing is selected.
 @see JTextComponent#paste
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.beepAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to create a beep.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.pageUpAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to page up vertically.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.pageDownAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action to page down vertically.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.forwardAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 logically forward one position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.backwardAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 logically backward one position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionForwardAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for extending the selection
 by moving the caret logically forward one position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionBackwardAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for extending the selection
 by moving the caret logically backward one position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.upAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 logically upward one position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.downAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 logically downward one position.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionUpAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 logically upward one position, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionDownAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 logically downward one position, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.beginWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of a word.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.endWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 to the end of a word.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionBeginWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of a word, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionEndWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 to the end of a word, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.previousWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret to the
 beginning of the previous word.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.nextWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret to the
 beginning of the next word.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionPreviousWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the selection to the
 beginning of the previous word, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionNextWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the selection to the
 beginning of the next word, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.beginLineAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of a line.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.endLineAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the end of a line.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionBeginLineAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of a line, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionEndLineAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the end of a line, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.beginParagraphAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of a paragraph.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.endParagraphAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the end of a paragraph.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionBeginParagraphAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of a paragraph, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionEndParagraphAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the end of a paragraph, extending the selection.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.beginAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of the document.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.endAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the end of the document.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionBeginAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the <code>Action</code> for moving the caret 
 to the beginning of the document.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectionEndAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for moving the caret 
 to the end of the document.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectWordAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for selecting a word around the caret.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectLineAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for selecting a line around the caret.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectParagraphAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for selecting a paragraph around the caret.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.selectAllAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the Action for selecting the entire document
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.text.DefaultEditorKit.defaultKeyTypedAction
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the action that is executed by default if 
 a <em>key typed event</em> is received and there
 is no keymap entry.
 @see #getActions

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.DefaultEditorKit()
<!-- END KEY -->
<!-- BEGIN DATA -->
 default constructor for DefaultEditorKit

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.text.DefaultEditorKit.getContentType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the MIME type of the data that this
 kit represents support for.  The default
 is <code>text/plain</code>.

 @return the type

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.ViewFactory javax.swing.text.DefaultEditorKit.getViewFactory()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches a factory that is suitable for producing 
 views of any models that are produced by this
 kit.  The default is to have the UI produce the
 factory, so this method has no implementation.

 @return the view factory

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Action[] javax.swing.text.DefaultEditorKit.getActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches the set of commands that can be used
 on a text component that is using a model and
 view produced by this kit.

 @return the command list

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Caret javax.swing.text.DefaultEditorKit.createCaret()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetches a caret that can navigate through views
 produced by the associated ViewFactory.

 @return the caret

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.Document javax.swing.text.DefaultEditorKit.createDefaultDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an uninitialized text storage model (PlainDocument)
 that is appropriate for this type of editor.

 @return the model

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultEditorKit.read(InputStream in, Document doc, int pos) throws java.io.IOException, javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Inserts content from the given stream which is expected 
 to be in a format appropriate for this kind of content
 handler.
 
 @param in  The stream to read from
 @param doc The destination for the insertion.
 @param pos The location in the document to place the
   content >= 0.
 @exception IOException on any I/O error
 @exception BadLocationException if pos represents an invalid
   location within the document.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultEditorKit.write(OutputStream out, Document doc, int pos, int len) throws java.io.IOException, javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes content from a document to the given stream
 in a format appropriate for this kind of content handler.
 
 @param out The stream to write to
 @param doc The source for the write.
 @param pos The location in the document to fetch the
   content >= 0.
 @param len The amount to write out >= 0.
 @exception IOException on any I/O error
 @exception BadLocationException if pos represents an invalid
   location within the document.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultEditorKit.read(Reader in, Document doc, int pos) throws java.io.IOException, javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Inserts content from the given stream, which will be 
 treated as plain text.
 
 @param in  The stream to read from
 @param doc The destination for the insertion.
 @param pos The location in the document to place the
   content >= 0.
 @exception IOException on any I/O error
 @exception BadLocationException if pos represents an invalid
   location within the document.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.text.DefaultEditorKit.write(Writer out, Document doc, int pos, int len) throws java.io.IOException, javax.swing.text.BadLocationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes content from a document to the given stream
 as plain text.
 
 @param out  The stream to write to
 @param doc The source for the write.
 @param pos The location in the document to fetch the
   content from >= 0.
 @param len The amount to write out >= 0.
 @exception IOException on any I/O error
 @exception BadLocationException if pos is not within 0 and
   the length of the document.

<!-- END DATA -->
