<!-- BEGIN KEY -->
public class javax.swing.border.MatteBorder extends javax.swing.border.EmptyBorder
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class which provides a matte-like border of either a solid color 
 or a tiled icon.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @version 1.24 04/07/06
 @author Amy Fowler

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(int top, int left, int bottom, int right, Color matteColor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a matte border with the specified insets and color.
 @param top the top inset of the border
 @param left the left inset of the border
 @param bottom the bottom inset of the border
 @param right the right inset of the border
 @param matteColor the color rendered for the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(Insets borderInsets, Color matteColor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a matte border with the specified insets and color.
 @param borderInsets the insets of the border
 @param matteColor the color rendered for the border
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(int top, int left, int bottom, int right, Icon tileIcon)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a matte border with the specified insets and tile icon.
 @param top the top inset of the border
 @param left the left inset of the border
 @param bottom the bottom inset of the border
 @param right the right inset of the border
 @param tileIcon the icon to be used for tiling the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(Insets borderInsets, Icon tileIcon)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a matte border with the specified insets and tile icon.
 @param borderInsets the insets of the border
 @param tileIcon the icon to be used for tiling the border
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.MatteBorder(Icon tileIcon)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a matte border with the specified tile icon.  The
 insets will be calculated dynamically based on the size of
 the tile icon, where the top and bottom will be equal to the
 tile icon's height, and the left and right will be equal to
 the tile icon's width.
 @param tileIcon the icon to be used for tiling the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.MatteBorder.paintBorder(Component c, Graphics g, int x, int y, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the matte border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.MatteBorder.getBorderInsets(Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the insets of the border.
 @param c the component for which this border insets value applies
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.MatteBorder.getBorderInsets(Component c, Insets insets)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Reinitialize the insets parameter with this Border's current Insets. 
 @param c the component for which this border insets value applies
 @param insets the object to be reinitialized
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.MatteBorder.getBorderInsets()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the insets of the border.
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.border.MatteBorder.getMatteColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the color used for tiling the border or null
 if a tile icon is being used.
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.Icon javax.swing.border.MatteBorder.getTileIcon()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the icon used for tiling the border or null
 if a solid color is being used.
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.border.MatteBorder.isBorderOpaque()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether or not the border is opaque.

<!-- END DATA -->
