<!-- BEGIN KEY -->
public class javax.swing.border.TitledBorder extends javax.swing.border.AbstractBorder
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class which implements an arbitrary border
 with the addition of a String title in a
 specified position and justification.
 <p>
 If the border, font, or color property values are not 
 specified in the constuctor or by invoking the appropriate
 set methods, the property values will be defined by the current
 look and feel, using the following property names in the
 Defaults Table:
 <ul>
 <li>&quot;TitledBorder.border&quot;
 <li>&quot;TitledBorder.font&quot;
 <li>&quot;TitledBorder.titleColor&quot;
 </ul>
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @version 1.44 11/30/05 
 @author David Kloba
 @author Amy Fowler

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.DEFAULT_POSITION
<!-- END KEY -->
<!-- BEGIN DATA -->
 Use the default vertical orientation for the title text.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.ABOVE_TOP
<!-- END KEY -->
<!-- BEGIN DATA -->
Position the title above the border's top line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.TOP
<!-- END KEY -->
<!-- BEGIN DATA -->
Position the title in the middle of the border's top line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.BELOW_TOP
<!-- END KEY -->
<!-- BEGIN DATA -->
Position the title below the border's top line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.ABOVE_BOTTOM
<!-- END KEY -->
<!-- BEGIN DATA -->
Position the title above the border's bottom line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.BOTTOM
<!-- END KEY -->
<!-- BEGIN DATA -->
Position the title in the middle of the border's bottom line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.BELOW_BOTTOM
<!-- END KEY -->
<!-- BEGIN DATA -->
Position the title below the border's bottom line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION
<!-- END KEY -->
<!-- BEGIN DATA -->
 Use the default justification for the title text.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.LEFT
<!-- END KEY -->
<!-- BEGIN DATA -->
Position title text at the left side of the border line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.CENTER
<!-- END KEY -->
<!-- BEGIN DATA -->
Position title text in the center of the border line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.RIGHT
<!-- END KEY -->
<!-- BEGIN DATA -->
Position title text at the right side of the border line. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.LEADING
<!-- END KEY -->
<!-- BEGIN DATA -->
Position title text at the left side of the border line
  for left to right orientation, at the right side of the 
  border line for right to left orientation.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.border.TitledBorder.TRAILING
<!-- END KEY -->
<!-- BEGIN DATA -->
Position title text at the right side of the border line
  for left to right orientation, at the left side of the 
  border line for right to left orientation.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.TitledBorder(String title)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a TitledBorder instance.
 
 @param title  the title the border should display

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.TitledBorder(Border border)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a TitledBorder instance with the specified border
 and an empty title.
 
 @param border  the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.TitledBorder(Border border, String title)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a TitledBorder instance with the specified border
 and title.
 
 @param border  the border
 @param title  the title the border should display

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.TitledBorder(Border border, String title, int titleJustification, int titlePosition)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a TitledBorder instance with the specified border,
 title, title-justification, and title-position.
 
 @param border  the border
 @param title  the title the border should display
 @param titleJustification the justification for the title
 @param titlePosition the position for the title

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.TitledBorder(Border border, String title, int titleJustification, int titlePosition, Font titleFont)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a TitledBorder instance with the specified border,
 title, title-justification, title-position, and title-font.
 
 @param border  the border
 @param title  the title the border should display
 @param titleJustification the justification for the title
 @param titlePosition the position for the title
 @param titleFont the font for rendering the title

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.TitledBorder(Border border, String title, int titleJustification, int titlePosition, Font titleFont, Color titleColor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a TitledBorder instance with the specified border,
 title, title-justification, title-position, title-font, and
 title-color.
 
 @param border  the border
 @param title  the title the border should display
 @param titleJustification the justification for the title
 @param titlePosition the position for the title
 @param titleFont the font of the title
 @param titleColor the color of the title

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.TitledBorder.paintBorder(Component c, Graphics g, int x, int y, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border for the specified component with the 
 specified position and size.
 @param c the component for which this border is being painted
 @param g the paint graphics
 @param x the x position of the painted border
 @param y the y position of the painted border
 @param width the width of the painted border
 @param height the height of the painted border

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.TitledBorder.getBorderInsets(Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the insets of the border.
 @param c the component for which this border insets value applies

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.border.TitledBorder.getBorderInsets(Component c, Insets insets)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Reinitialize the insets parameter with this Border's current Insets. 
 @param c the component for which this border insets value applies
 @param insets the object to be reinitialized

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.border.TitledBorder.isBorderOpaque()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether or not the border is opaque.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.border.TitledBorder.getTitle()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the title of the titled border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.border.Border javax.swing.border.TitledBorder.getBorder()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the border of the titled border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.border.TitledBorder.getTitlePosition()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the title-position of the titled border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.border.TitledBorder.getTitleJustification()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the title-justification of the titled border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Font javax.swing.border.TitledBorder.getTitleFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the title-font of the titled border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Color javax.swing.border.TitledBorder.getTitleColor()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the title-color of the titled border.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.TitledBorder.setTitle(String title)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the title of the titled border.
 param title the title for the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.TitledBorder.setBorder(Border border)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the border of the titled border.
 @param border the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.TitledBorder.setTitlePosition(int titlePosition)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the title-position of the titled border.
 @param titlePosition the position for the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.TitledBorder.setTitleJustification(int titleJustification)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the title-justification of the titled border.
 @param titleJustification the justification for the border

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.TitledBorder.setTitleFont(Font titleFont)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the title-font of the titled border.
 @param titleFont the font for the border title

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.border.TitledBorder.setTitleColor(Color titleColor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the title-color of the titled border.
 @param titleColor the color for the border title

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.border.TitledBorder.getMinimumSize(Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the minimum dimensions this border requires
 in order to fully display the border and title.
 @param c the component where this border will be drawn

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.border.TitledBorder.getBaseline(Component c, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the baseline.

 @throws NullPointerException {@inheritDoc}
 @throws IllegalArgumentException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component.BaselineResizeBehavior javax.swing.border.TitledBorder.getBaselineResizeBehavior(Component c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an enum indicating how the baseline of the border
 changes as the size changes.

 @throws NullPointerException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
