<!-- BEGIN KEY -->
public class javax.swing.InputMap extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>InputMap</code> provides a binding between an input event
 (currently only <code>KeyStroke</code>s are used)
 and an <code>Object</code>. <code>InputMap</code>s
 are usually used with an <code>ActionMap</code>,
 to determine an <code>Action</code> to perform
 when a key is pressed.
 An <code>InputMap</code> can have a parent
 that is searched for bindings not defined in the <code>InputMap</code>.
 <p>As with <code>ActionMap</code> if you create a cycle, eg:
 <pre>
   InputMap am = new InputMap();
   InputMap bm = new InputMap():
   am.setParent(bm);
   bm.setParent(am);
 </pre>
 some of the methods will cause a StackOverflowError to be thrown.

 @version 1.15 11/17/05
 @author Scott Violet
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.InputMap javax.swing.InputMap.parent
<!-- END KEY -->
<!-- BEGIN DATA -->
Parent that handles any bindings we don't contain. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.InputMap()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates an <code>InputMap</code> with no parent and no mappings.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.InputMap.setParent(InputMap map)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets this <code>InputMap</code>'s parent.

 @param map  the <code>InputMap</code> that is the parent of this one

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.InputMap javax.swing.InputMap.getParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets this <code>InputMap</code>'s parent.

 @return map  the <code>InputMap</code> that is the parent of this one,
              or null if this <code>InputMap</code> has no parent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.InputMap.put(KeyStroke keyStroke, Object actionMapKey)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds a binding for <code>keyStroke</code> to <code>actionMapKey</code>.
 If <code>actionMapKey</code> is null, this removes the current binding
 for <code>keyStroke</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.swing.InputMap.get(KeyStroke keyStroke)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the binding for <code>keyStroke</code>, messaging the 
 parent <code>InputMap</code> if the binding is not locally defined.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.InputMap.remove(KeyStroke key)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the binding for <code>key</code> from this
 <code>InputMap</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.InputMap.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes all the mappings from this <code>InputMap</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.KeyStroke[] javax.swing.InputMap.keys()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>KeyStroke</code>s that are bound in this <code>InputMap</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.InputMap.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of <code>KeyStroke</code> bindings.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.KeyStroke[] javax.swing.InputMap.allKeys()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an array of the <code>KeyStroke</code>s defined in this 
 <code>InputMap</code> and its parent. This differs from <code>keys()</code> in that
 this method includes the keys defined in the parent.

<!-- END DATA -->
