<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicComboPopup extends javax.swing.JPopupMenu implements javax.swing.plaf.basic.ComboPopup
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is a basic implementation of the <code>ComboPopup</code> interface.
 
 This class represents the ui for the popup portion of the combo box.
 <p>
 All event handling is handled by listener classes created with the 
 <code>createxxxListener()</code> methods and internal classes.
 You can change the behavior of this class by overriding the
 <code>createxxxListener()</code> methods and supplying your own
 event listeners or subclassing from the ones supplied in this class.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @version 1.84 08/03/06
 @author Tom Santos
 @author Mark Davidson

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JList javax.swing.plaf.basic.BasicComboPopup.list
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the accessor methods instead.

 @see #getList
 @see #createList

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JScrollPane javax.swing.plaf.basic.BasicComboPopup.scroller
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the create method instead

 @see #createScroller

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.plaf.basic.BasicComboPopup.valueIsAdjusting
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.4 this previously undocumented field is no
 longer used.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.mouseMotionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the accessor or create methods instead.

 @see #getMouseMotionListener
 @see #createMouseMotionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.mouseListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the accessor or create methods instead.

 @see #getMouseListener
 @see #createMouseListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.KeyListener javax.swing.plaf.basic.BasicComboPopup.keyListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the accessor or create methods instead.

 @see #getKeyListener
 @see #createKeyListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListSelectionListener javax.swing.plaf.basic.BasicComboPopup.listSelectionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the create method instead.

 @see #createListSelectionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.listMouseListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the create method instead.

 @see #createListMouseListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.listMouseMotionListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the create method instead

 @see #createListMouseMotionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicComboPopup.propertyChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the create method instead

 @see #createPropertyChangeListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListDataListener javax.swing.plaf.basic.BasicComboPopup.listDataListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the create method instead

 @see #createListDataListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ItemListener javax.swing.plaf.basic.BasicComboPopup.itemListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. Use the create method instead

 @see #createItemListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.Timer javax.swing.plaf.basic.BasicComboPopup.autoscrollTimer
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implementation specific. Do not access directly
 or override. 

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.swing.plaf.basic.BasicComboPopup.Handler javax.swing.plaf.basic.BasicComboPopup.handler
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implementation of all the listener classes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicComboPopup.show()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implementation of ComboPopup.show().

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicComboPopup.hide()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implementation of ComboPopup.hide().

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JList javax.swing.plaf.basic.BasicComboPopup.getList()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implementation of ComboPopup.getList().

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.getMouseListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implementation of ComboPopup.getMouseListener().
 
 @return a <code>MouseListener</code> or null
 @see ComboPopup#getMouseListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.getMouseMotionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implementation of ComboPopup.getMouseMotionListener().

 @return a <code>MouseMotionListener</code> or null
 @see ComboPopup#getMouseMotionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.KeyListener javax.swing.plaf.basic.BasicComboPopup.getKeyListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Implementation of ComboPopup.getKeyListener().

 @return a <code>KeyListener</code> or null
 @see ComboPopup#getKeyListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicComboPopup.uninstallingUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Called when the UI is uninstalling.  Since this popup isn't in the component
 tree, it won't get it's uninstallUI() called.  It removes the listeners that
 were added in addComboBoxListeners().

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.uninstallComboBoxModelListeners(ComboBoxModel model)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Removes the listeners from the combo box model

 @param model The combo box model to install listeners
 @see #installComboBoxModelListeners

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.createMouseListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a listener 
 that will watch for mouse-press and release events on the combo box.
 
 <strong>Warning:</strong>
 When overriding this method, make sure to maintain the existing
 behavior.

 @return a <code>MouseListener</code> which will be added to 
 the combo box or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.createMouseMotionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates the mouse motion listener which will be added to the combo
 box.

 <strong>Warning:</strong>
 When overriding this method, make sure to maintain the existing
 behavior.

 @return a <code>MouseMotionListener</code> which will be added to
         the combo box or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.KeyListener javax.swing.plaf.basic.BasicComboPopup.createKeyListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates the key listener that will be added to the combo box. If 
 this method returns null then it will not be added to the combo box.

 @return a <code>KeyListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListSelectionListener javax.swing.plaf.basic.BasicComboPopup.createListSelectionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a list selection listener that watches for selection changes in
 the popup's list.  If this method returns null then it will not
 be added to the popup list.

 @return an instance of a <code>ListSelectionListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.ListDataListener javax.swing.plaf.basic.BasicComboPopup.createListDataListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a list data listener which will be added to the
 <code>ComboBoxModel</code>. If this method returns null then
 it will not be added to the combo box model.

 @return an instance of a <code>ListDataListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseListener javax.swing.plaf.basic.BasicComboPopup.createListMouseListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a mouse listener that watches for mouse events in
 the popup's list. If this method returns null then it will
 not be added to the combo box.

 @return an instance of a <code>MouseListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.MouseMotionListener javax.swing.plaf.basic.BasicComboPopup.createListMouseMotionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a mouse motion listener that watches for mouse motion 
 events in the popup's list. If this method returns null then it will
 not be added to the combo box.

 @return an instance of a <code>MouseMotionListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicComboPopup.createPropertyChangeListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a <code>PropertyChangeListener</code> which will be added to
 the combo box. If this method returns null then it will not
 be added to the combo box.
 
 @return an instance of a <code>PropertyChangeListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ItemListener javax.swing.plaf.basic.BasicComboPopup.createItemListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an <code>ItemListener</code> which will be added to the 
 combo box. If this method returns null then it will not 
 be added to the combo box.
 <p>
 Subclasses may override this method to return instances of their own
 ItemEvent handlers.

 @return an instance of an <code>ItemListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JList javax.swing.plaf.basic.BasicComboPopup.createList()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates the JList used in the popup to display 
 the items in the combo box model. This method is called when the UI class
 is created.

 @return a <code>JList</code> used to display the combo box items

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.configureList()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Configures the list which is used to hold the combo box items in the
 popup. This method is called when the UI class
 is created.

 @see #createList

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.installListListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds the listeners to the list control.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JScrollPane javax.swing.plaf.basic.BasicComboPopup.createScroller()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates the scroll pane which houses the scrollable list.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.configureScroller()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Configures the scrollable portion which holds the list within 
 the combo box popup. This method is called when the UI class
 is created.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.configurePopup()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Configures the popup portion of the combo box. This method is called
 when the UI class is created.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.installComboBoxListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method adds the necessary listeners to the JComboBox.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.installComboBoxModelListeners(ComboBoxModel model)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Installs the listeners on the combo box model. Any listeners installed
 on the combo box model should be removed in 
 <code>uninstallComboBoxModelListeners</code>.

 @param model The combo box model to install listeners
 @see #uninstallComboBoxModelListeners

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.plaf.basic.BasicComboPopup.isFocusTraversable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Overridden to unconditionally return false.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.startAutoScrolling(int direction)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected method is implementation specific and should be private.
 do not call or override.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.stopAutoScrolling()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected method is implementation specific and should be private.
 do not call or override.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.autoScrollUp()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected method is implementation specific and should be private.
 do not call or override.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.autoScrollDown()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected method is implementation specific and should be private.
 do not call or override.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.plaf.basic.BasicComboPopup.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the AccessibleContext associated with this BasicComboPopup.
 The AccessibleContext will have its parent set to the ComboBox.

 @return an AccessibleContext for the BasicComboPopup
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.delegateFocus(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is is a utility method that helps event handlers figure out where to
 send the focus when the popup is brought up.  The standard implementation
 delegates the focus to the editor (if the combo box is editable) or to
 the JComboBox if it is not editable.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.togglePopup()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Makes the popup visible if it is hidden and makes it hidden if it is 
 visible.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicComboPopup.getPopupHeightForRowCount(int maxRowCount)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the height of the popup based on the current
 ListCellRenderer and the maximum row count.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Rectangle javax.swing.plaf.basic.BasicComboPopup.computePopupBounds(int px, int py, int pw, int ph)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Calculate the placement and size of the popup portion of the combo box based
 on the combo box location and the enclosing screen bounds. If
 no transformations are required, then the returned rectangle will
 have the same values as the parameters.
 
 @param px starting x location
 @param py starting y location
 @param pw starting width
 @param ph starting height
 @return a rectangle which represents the placement and size of the popup

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicComboPopup.updateListBoxSelectionForEvent(MouseEvent anEvent, boolean shouldScroll)
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility method used by the event listeners.  Given a mouse event, it changes
 the list selection to the list item below the mouse.

<!-- END DATA -->
