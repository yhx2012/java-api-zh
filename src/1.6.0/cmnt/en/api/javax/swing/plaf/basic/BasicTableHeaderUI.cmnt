<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicTableHeaderUI extends javax.swing.plaf.TableHeaderUI
<!-- END KEY -->
<!-- BEGIN DATA -->
 BasicTableHeaderUI implementation

 @version 1.77 07/28/06
 @author Alan Chung
 @author Philip Milne

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.table.JTableHeader javax.swing.plaf.basic.BasicTableHeaderUI.header
<!-- END KEY -->
<!-- BEGIN DATA -->
The JTableHeader that is delegating the painting to this UI. 
<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.event.MouseInputListener javax.swing.plaf.basic.BasicTableHeaderUI.createMouseInputListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates the mouse listener for the JTableHeader.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicTableHeaderUI.installDefaults()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Initialize JTableHeader properties, e.g. font, foreground, and background.
 The font, foreground, and background properties are only set if their
 current value is either null or a UIResource, other properties are set
 if the current value is null.

 @see #installUI

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicTableHeaderUI.installListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Attaches listeners to the JTableHeader.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicTableHeaderUI.installKeyboardActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Register all keyboard actions on the JTableHeader.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicTableHeaderUI.uninstallKeyboardActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Unregisters default key actions.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicTableHeaderUI.getRolloverColumn()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the index of the column header over which the mouse
 currently is. When the mouse is not over the table header,
 -1 is returned.

 @see #rolloverColumnUpdated(int, int)
 @return the index of the current rollover column
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicTableHeaderUI.rolloverColumnUpdated(int oldColumn, int newColumn)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method gets called every time the rollover column in the table
 header is updated. Every look and feel supporting rollover effect
 in table header should override this method and repaint the header.

 @param oldColumn the index of the previous rollover column or -1 if the
 mouse was not over a column
 @param newColumn the index of the new rollover column or -1 if the mouse
 is not over a column
 @see #getRolloverColumn()
 @see JTableHeader#getHeaderRect(int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicTableHeaderUI.getBaseline(JComponent c, int width, int height)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the baseline.

 @throws NullPointerException {@inheritDoc}
 @throws IllegalArgumentException {@inheritDoc}
 @see javax.swing.JComponent#getBaseline(int, int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicTableHeaderUI.getMinimumSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the minimum size of the header. The minimum width is the sum 
 of the minimum widths of each column (plus inter-cell spacing).

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicTableHeaderUI.getPreferredSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the preferred size of the header. The preferred height is the 
 maximum of the preferred heights of all of the components provided 
 by the header renderers. The preferred width is the sum of the 
 preferred widths of each column (plus inter-cell spacing).

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicTableHeaderUI.getMaximumSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the maximum size of the header. The maximum width is the sum 
 of the maximum widths of each column (plus inter-cell spacing).

<!-- END DATA -->
