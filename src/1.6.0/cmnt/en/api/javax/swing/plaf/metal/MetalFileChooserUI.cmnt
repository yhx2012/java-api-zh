<!-- BEGIN KEY -->
public class javax.swing.plaf.metal.MetalFileChooserUI extends javax.swing.plaf.basic.BasicFileChooserUI
<!-- END KEY -->
<!-- BEGIN DATA -->
 Metal L&F implementation of a FileChooser.

 @version 1.93 05/24/06
 @author Jeff Dinkins

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.event.ListSelectionListener javax.swing.plaf.metal.MetalFileChooserUI.createListSelectionListener(JFileChooser fc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a selection listener for the list of files and directories.

 @param fc a <code>JFileChooser</code>
 @return a <code>ListSelectionListener</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.metal.MetalFileChooserUI.getPreferredSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the preferred size of the specified
 <code>JFileChooser</code>.
 The preferred size is at least as large,
 in both height and width,
 as the preferred size recommended
 by the file chooser's layout manager.

 @param c  a <code>JFileChooser</code>
 @return   a <code>Dimension</code> specifying the preferred
           width and height of the file chooser

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.metal.MetalFileChooserUI.getMinimumSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the minimum size of the <code>JFileChooser</code>.

 @param c  a <code>JFileChooser</code>
 @return   a <code>Dimension</code> specifying the minimum
           width and height of the file chooser

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.metal.MetalFileChooserUI.getMaximumSize(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the maximum size of the <code>JFileChooser</code>.

 @param c  a <code>JFileChooser</code>
 @return   a <code>Dimension</code> specifying the maximum 
           width and height of the file chooser

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.metal.MetalFileChooserUI.setDirectorySelected(boolean directorySelected)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Property to remember whether a directory is currently selected in the UI.
 This is normally called by the UI on a selection event.

 @param directorySelected if a directory is currently selected.
 @since 1.4

<!-- END DATA -->
