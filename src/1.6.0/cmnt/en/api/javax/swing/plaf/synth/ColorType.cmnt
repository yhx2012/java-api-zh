<!-- BEGIN KEY -->
public class javax.swing.plaf.synth.ColorType extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 A typesafe enumeration of colors that can be fetched from a style.
 <p>
 Each <code>SynthStyle</code> has a set of <code>ColorType</code>s that
 are accessed by way of the
 {@link SynthStyle#getColor(SynthContext, ColorType)} method. 
 <code>SynthStyle</code>'s <code>installDefaults</code> will install
 the <code>FOREGROUND</code> color
 as the foreground of
 the Component, and the <code>BACKGROUND</code> color to the background of
 the component (assuming that you have not explicitly specified a
 foreground and background color). Some components
 support more color based properties, for
 example <code>JList</code> has the property
 <code>selectionForeground</code> which will be mapped to 
 <code>FOREGROUND</code> with a component state of
 <code>SynthConstants.SELECTED</code>.
 <p>
 The following example shows a custom <code>SynthStyle</code> that returns
 a red Color for the <code>DISABLED</code> state, otherwise a black color.
 <pre>
 class MyStyle extends SynthStyle {
     private Color disabledColor = new ColorUIResource(Color.RED);
     private Color color = new ColorUIResource(Color.BLACK);
     protected Color getColorForState(SynthContext context, ColorType type){
         if (context.getComponentState() == SynthConstants.DISABLED) {
             return disabledColor;
         }
         return color;
     }
 }
 </pre>

 @version 1.13, 11/17/05
 @since 1.5
 @author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.plaf.synth.ColorType javax.swing.plaf.synth.ColorType.FOREGROUND
<!-- END KEY -->
<!-- BEGIN DATA -->
 ColorType for the foreground of a region.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.plaf.synth.ColorType javax.swing.plaf.synth.ColorType.BACKGROUND
<!-- END KEY -->
<!-- BEGIN DATA -->
 ColorType for the background of a region.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.plaf.synth.ColorType javax.swing.plaf.synth.ColorType.TEXT_FOREGROUND
<!-- END KEY -->
<!-- BEGIN DATA -->
 ColorType for the foreground of a region.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.plaf.synth.ColorType javax.swing.plaf.synth.ColorType.TEXT_BACKGROUND
<!-- END KEY -->
<!-- BEGIN DATA -->
 ColorType for the background of a region.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.swing.plaf.synth.ColorType javax.swing.plaf.synth.ColorType.FOCUS
<!-- END KEY -->
<!-- BEGIN DATA -->
 ColorType for the focus.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.swing.plaf.synth.ColorType.MAX_COUNT
<!-- END KEY -->
<!-- BEGIN DATA -->
 Maximum number of <code>ColorType</code>s.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.synth.ColorType(String description)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new ColorType with the specified description.

 @param description String description of the ColorType.

<!-- END DATA -->
<!-- BEGIN KEY -->
public final int javax.swing.plaf.synth.ColorType.getID()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a unique id, as an integer, for this ColorType.

 @return a unique id, as an integer, for this ColorType.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.plaf.synth.ColorType.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the textual description of this <code>ColorType</code>.
 This is the same value that the <code>ColorType</code> was created
 with.

 @return the description of the string

<!-- END DATA -->
