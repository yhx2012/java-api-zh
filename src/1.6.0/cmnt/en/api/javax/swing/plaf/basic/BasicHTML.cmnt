<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicHTML extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Support for providing html views for the swing components.
 This translates a simple html string to a javax.swing.text.View
 implementation that can render the html and provide the necessary
 layout semantics.

 @author  Timothy Prinzing
 @version 1.27 04/07/06
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.plaf.basic.BasicHTML.propertyKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 Key to use for the html renderer when stored as a 
 client property of a JComponent.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.swing.plaf.basic.BasicHTML.documentBaseKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 Key stored as a client property to indicate the base that relative
 references are resolved against. For example, lets say you keep
 your images in the directory resources relative to the code path,
 you would use the following the set the base:
 <pre>
   jComponent.putClientProperty(documentBaseKey,
                                xxx.class.getResource("resources/"));
 </pre>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.text.View javax.swing.plaf.basic.BasicHTML.createHTMLView(JComponent c, String html)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create an html renderer for the given component and
 string of html.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static int javax.swing.plaf.basic.BasicHTML.getHTMLBaseline(View view, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the baseline for the html renderer.

 @param view the View to get the baseline for
 @param w the width to get the baseline for
 @param h the height to get the baseline for
 @throws IllegalArgumentException if width or height is &lt; 0
 @return baseline or a value &lt; 0 indicating there is no reasonable
                  baseline
 @see java.awt.FontMetrics
 @see javax.swing.JComponent#getBaseline(int,int)
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.swing.plaf.basic.BasicHTML.isHTMLString(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Check the given string to see if it should trigger the
 html rendering logic in a non-text component that supports 
 html rendering.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static void javax.swing.plaf.basic.BasicHTML.updateRenderer(JComponent c, String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Stash the HTML render for the given text into the client
 properties of the given JComponent. If the given text is 
 <em>NOT HTML</em> the property will be cleared of any
 renderer.
 <p>
 This method is useful for ComponentUI implementations
 that are static (i.e. shared) and get their state
 entirely from the JComponent.

<!-- END DATA -->
