<!-- BEGIN KEY -->
public class javax.swing.plaf.metal.DefaultMetalTheme extends javax.swing.plaf.metal.MetalTheme
<!-- END KEY -->
<!-- BEGIN DATA -->
 A concrete implementation of {@code MetalTheme} providing
 the original look of the Java Look and Feel, code-named "Steel". Refer
 to {@link MetalLookAndFeel#setCurrentTheme} for details on changing
 the default theme.
 <p>
 All colors returned by {@code DefaultMetalTheme} are completely
 opaque.

 <h3><a name="fontStyle"></a>Font Style</h3>

 {@code DefaultMetalTheme} uses bold fonts for many controls.  To make all
 controls (with the exception of the internal frame title bars and
 client decorated frame title bars) use plain fonts you can do either of
 the following:
 <ul>
 <li>Set the system property <code>swing.boldMetal</code> to
     <code>false</code>.  For example,
     <code>java&nbsp;-Dswing.boldMetal=false&nbsp;MyApp</code>.
 <li>Set the defaults property <code>swing.boldMetal</code> to
     <code>Boolean.FALSE</code>.  For example:
     <code>UIManager.put("swing.boldMetal",&nbsp;Boolean.FALSE);</code>
 </ul>
 The defaults property <code>swing.boldMetal</code>, if set,
 takes precendence over the system property of the same name. After
 setting this defaults property you need to re-install
 <code>MetalLookAndFeel</code>, as well as update the UI
 of any previously created widgets. Otherwise the results are undefined.
 The following illustrates how to do this:
 <pre>
   // turn off bold fonts
   UIManager.put("swing.boldMetal", Boolean.FALSE);

   // re-install the Metal Look and Feel
   UIManager.setLookAndFeel(new MetalLookAndFeel());

   // Update the ComponentUIs for all Components. This
   // needs to be invoked for all windows.
   SwingUtilities.updateComponentTreeUI(rootComponent);
 </pre>
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @see MetalLookAndFeel
 @see MetalLookAndFeel#setCurrentTheme

 @version 1.31 07/12/06
 @author Steve Wilson

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.metal.DefaultMetalTheme()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates and returns an instance of {@code DefaultMetalTheme}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.plaf.metal.DefaultMetalTheme.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of this theme. This returns {@code "Steel"}.

 @return the name of this theme.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getPrimary1()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the primary 1 color. This returns a color with rgb values
 of 102, 102, and 153, respectively.

 @return the primary 1 color

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getPrimary2()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the primary 2 color. This returns a color with rgb values
 of 153, 153, 204, respectively.

 @return the primary 2 color

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getPrimary3()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the primary 3 color. This returns a color with rgb values
 204, 204, 255, respectively.

 @return the primary 3 color

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSecondary1()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the secondary 1 color. This returns a color with rgb values
 102, 102, and 102, respectively.

 @return the secondary 1 color

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSecondary2()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the secondary 2 color. This returns a color with rgb values
 153, 153, and 153, respectively.

 @return the secondary 2 color

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.ColorUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSecondary3()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the secondary 3 color. This returns a color with rgb values
 204, 204, and 204, respectively.

 @return the secondary 3 color

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getControlTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the control text font. This returns Dialog, 12pt. If
 plain fonts have been enabled as described in <a href="#fontStyle">
 font style</a>, the font style is plain. Otherwise the font style is
 bold.

 @return the control text font

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSystemTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the system text font. This returns Dialog, 12pt, plain.

 @return the sytem text font

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getUserTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the user text font. This returns Dialog, 12pt, plain.

 @return the user text font

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getMenuTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the menu text font. This returns Dialog, 12pt. If
 plain fonts have been enabled as described in <a href="#fontStyle">
 font style</a>, the font style is plain. Otherwise the font style is
 bold.

 @return the menu text font

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getWindowTitleFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the window title font. This returns Dialog, 12pt, bold.

 @return the window title font

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.FontUIResource javax.swing.plaf.metal.DefaultMetalTheme.getSubTextFont()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the sub-text font. This returns Dialog, 10pt, plain.

 @return the sub-text font

<!-- END DATA -->
