<!-- BEGIN KEY -->
protected class javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler extends java.lang.Object implements javax.swing.event.MouseInputListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 Instantiated and used by a menu item to handle the current menu selection
 from mouse events. A MouseInputHandler processes and forwards all mouse events
 to a shared instance of the MenuSelectionManager. 
 <p>
 This class is protected so that it can be subclassed by other look and
 feels to implement their own mouse handling behavior. All overridden
 methods should call the parent methods so that the menu selection
 is correct.

 @see javax.swing.MenuSelectionManager
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler.mousePressed(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the mouse has been clicked on the menu. This
 method clears or sets the selection path of the
 MenuSelectionManager.
 
 @param e the mouse event

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler.mouseReleased(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the mouse has been released on the menu. Delegates the 
 mouse event to the MenuSelectionManager.

 @param e the mouse event

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler.mouseEntered(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the cursor enters the menu. This method sets the selected
 path for the MenuSelectionManager and handles the case
 in which a menu item is used to pop up an additional menu, as in a 
 hierarchical menu system.
 
 @param e the mouse event; not used

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler.mouseDragged(MouseEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a mouse button is pressed on the menu and then dragged.
 Delegates the mouse event to the MenuSelectionManager.

 @param e the mouse event
 @see java.awt.event.MouseMotionListener#mouseDragged

<!-- END DATA -->
