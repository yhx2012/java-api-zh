<!-- BEGIN KEY -->
public class javax.swing.plaf.basic.BasicSplitPaneUI extends javax.swing.plaf.SplitPaneUI
<!-- END KEY -->
<!-- BEGIN DATA -->
 A Basic L&F implementation of the SplitPaneUI.

 @version 1.83 06/07/06
 @author Scott Violet
 @author Steve Wilson
 @author Ralph Kar

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static final java.lang.String javax.swing.plaf.basic.BasicSplitPaneUI.NON_CONTINUOUS_DIVIDER
<!-- END KEY -->
<!-- BEGIN DATA -->
 The divider used for non-continuous layout is added to the split pane
 with this object.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static int javax.swing.plaf.basic.BasicSplitPaneUI.KEYBOARD_DIVIDER_MOVE_OFFSET
<!-- END KEY -->
<!-- BEGIN DATA -->
 How far (relative) the divider does move when it is moved around by
 the cursor keys on the keyboard.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.JSplitPane javax.swing.plaf.basic.BasicSplitPaneUI.splitPane
<!-- END KEY -->
<!-- BEGIN DATA -->
 JSplitPane instance this instance is providing
 the look and feel for.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager javax.swing.plaf.basic.BasicSplitPaneUI.layoutManager
<!-- END KEY -->
<!-- BEGIN DATA -->
 LayoutManager that is created and placed into the split pane.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneUI.divider
<!-- END KEY -->
<!-- BEGIN DATA -->
 Instance of the divider for this JSplitPane.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicSplitPaneUI.propertyChangeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 Instance of the PropertyChangeListener for this JSplitPane.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.FocusListener javax.swing.plaf.basic.BasicSplitPaneUI.focusListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 Instance of the FocusListener for this JSplitPane.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneUI.dividerSize
<!-- END KEY -->
<!-- BEGIN DATA -->
 The size of the divider while the dragging session is valid.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.plaf.basic.BasicSplitPaneUI.nonContinuousLayoutDivider
<!-- END KEY -->
<!-- BEGIN DATA -->
 Instance for the shadow of the divider when non continuous layout
 is being used.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.swing.plaf.basic.BasicSplitPaneUI.draggingHW
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set to true in startDragging if any of the children
 (not including the nonContinuousLayoutDivider) are heavy weights.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneUI.beginDragDividerLocation
<!-- END KEY -->
<!-- BEGIN DATA -->
 Location of the divider when the dragging session began.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.upKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.downKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.leftKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.rightKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.homeKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.endKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicSplitPaneUI.dividerResizeToggleKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardUpLeftListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardDownRightListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardHomeListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardEndListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.keyboardResizeToggleListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this previously undocumented field is no
 longer used.
 Key bindings are now defined by the LookAndFeel, please refer to
 the key bindings specification for further details.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.swing.plaf.ComponentUI javax.swing.plaf.basic.BasicSplitPaneUI.createUI(JComponent x)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new BasicSplitPaneUI instance

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.installUI(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Installs the UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Installs the UI defaults.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.installListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Installs the event listeners for the UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Installs the keyboard actions for the UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallUI(JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Uninstalls the UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Uninstalls the UI defaults.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Uninstalls the event listeners for the UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Uninstalls the keyboard actions for the UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a PropertyChangeListener for the JSplitPane UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.FocusListener javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a FocusListener for the JSplitPane UI.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this method is no
 longer used. Subclassers previously using this method should
 instead create an Action wrapping the ActionListener, and register
 that Action by overriding <code>installKeyboardActions</code> and
 placing the Action in the SplitPane's ActionMap. Please refer to
 the key bindings specification for further details.
 <p>
 Creates a ActionListener for the JSplitPane UI that listens for
 specific key presses.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this method is no
 longer used. Subclassers previously using this method should
 instead create an Action wrapping the ActionListener, and register
 that Action by overriding <code>installKeyboardActions</code> and
 placing the Action in the SplitPane's ActionMap. Please refer to
 the key bindings specification for further details.
 <p>
 Creates a ActionListener for the JSplitPane UI that listens for
 specific key presses.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this method is no
 longer used. Subclassers previously using this method should
 instead create an Action wrapping the ActionListener, and register
 that Action by overriding <code>installKeyboardActions</code> and
 placing the Action in the SplitPane's ActionMap. Please refer to
 the key bindings specification for further details.
 <p>
 Creates a ActionListener for the JSplitPane UI that listens for
 specific key presses.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this method is no
 longer used. Subclassers previously using this method should
 instead create an Action wrapping the ActionListener, and register
 that Action by overriding <code>installKeyboardActions</code> and
 placing the Action in the SplitPane's ActionMap. Please refer to
 the key bindings specification for further details.
 <p>
 Creates a ActionListener for the JSplitPane UI that listens for
 specific key presses.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ActionListener javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this method is no
 longer used. Subclassers previously using this method should
 instead create an Action wrapping the ActionListener, and register
 that Action by overriding <code>installKeyboardActions</code> and
 placing the Action in the SplitPane's ActionMap. Please refer to
 the key bindings specification for further details.
 <p>
 Creates a ActionListener for the JSplitPane UI that listens for
 specific key presses.

 @deprecated As of Java 2 platform v1.3.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the orientation for the JSplitPane.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation(int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the orientation for the JSplitPane.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines wether the JSplitPane is set to use a continuous layout.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Turn continuous layout on/off.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the last drag location of the JSplitPane.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation(int l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the last drag location of the JSplitPane.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneUI.getDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the divider between the top Components.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the default non continuous layout divider, which is an
 instanceof Canvas that fills the background in dark gray.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component newDivider)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the divider to use when the splitPane is configured to
 not continuously layout. This divider will only be used during a
 dragging session. It is recommended that the passed in component
 be a heavy weight.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component newDivider, boolean rememberSizes)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the divider to use.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the divider to use when the splitPane is configured to
 not continuously layout. This divider will only be used during a
 dragging session.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JSplitPane javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the splitpane this instance is currently contained
 in.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates the default divider.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Messaged to reset the preferred sizes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.setDividerLocation(JSplitPane jc, int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the location of the divider to location.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the location of the divider, which may differ from what
 the splitpane thinks the location of the divider is.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the minimum location of the divider.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation(JSplitPane jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the maximum location of the divider.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren(JSplitPane jc, Graphics g)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Messaged after the JSplitPane the receiver is providing the look
 and feel for paints its children.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.basic.BasicSplitPaneUI.paint(Graphics g, JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Messaged to paint the look and feel.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the preferred size for the passed in component,
 This is passed off to the current layoutmanager.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the minimum size for the passed in component,
 This is passed off to the current layoutmanager.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Dimension javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the maximum size for the passed in component,
 This is passed off to the current layoutmanager.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets javax.swing.plaf.basic.BasicSplitPaneUI.getInsets(JComponent jc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the insets. The insets are returned from the border insets
 of the current border.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Resets the layout manager based on orientation and messages it
 with invalidateLayout to pull in appropriate Components.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.startDragging()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Should be messaged before the dragging session starts, resets
 lastDragLocation and dividerSize.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo(int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Messaged during a dragging session to move the divider to the
 passed in location. If continuousLayout is true the location is
 reset and the splitPane validated.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo(int location)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Messaged to finish the dragging session. If not continuous display
 the dividers location will be reset.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
 As of Java 2 platform v1.3 this method is no longer used. Instead
 you should set the border on the divider.
 <p>
 Returns the width of one side of the divider border.

 @deprecated As of Java 2 platform v1.3, instead set the border on the
 divider.

<!-- END DATA -->
