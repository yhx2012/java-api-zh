<!-- BEGIN KEY -->
public class javax.swing.plaf.synth.SynthContext extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 An immutable transient object containing contextual information about
 a <code>Region</code>. A <code>SynthContext</code> should only be
 considered valid for the duration
 of the method it is passed to. In other words you should not cache
 a <code>SynthContext</code> that is passed to you and expect it to
 remain valid.

 @version 1.10, 11/17/05
 @since 1.5
 @author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.synth.SynthContext(JComponent component, Region region, SynthStyle style, int state)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a SynthContext with the specified values. This is meant
 for subclasses and custom UI implementors. You very rarely need to
 construct a SynthContext, though some methods will take one.

 @param component JComponent
 @param region Identifies the portion of the JComponent
 @param style Style associated with the component
 @param state State of the component as defined in SynthConstants.
 @throws NullPointerException if component, region of style is null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JComponent javax.swing.plaf.synth.SynthContext.getComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the hosting component containing the region.

 @return Hosting Component 

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.synth.Region javax.swing.plaf.synth.SynthContext.getRegion()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the Region identifying this state.

 @return Region of the hosting component

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.synth.SynthStyle javax.swing.plaf.synth.SynthContext.getStyle()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the style associated with this Region.

 @return SynthStyle associated with the region.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.plaf.synth.SynthContext.getComponentState()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the state of the widget, which is a bitmask of the
 values defined in <code>SynthConstants</code>. A region will at least
 be in one of
 <code>ENABLED</code>, <code>MOUSE_OVER</code>, <code>PRESSED</code>
 or <code>DISABLED</code>.

 @see SynthConstants
 @return State of Component

<!-- END DATA -->
