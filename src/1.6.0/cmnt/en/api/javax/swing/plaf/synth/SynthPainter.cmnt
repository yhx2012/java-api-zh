<!-- BEGIN KEY -->
public abstract class javax.swing.plaf.synth.SynthPainter extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>SynthPainter</code> is used for painting portions of
 <code>JComponent</code>s. At a minimum each <code>JComponent</code>
 has two paint methods: one for the border and one for the background. Some
 <code>JComponent</code>s have more than one <code>Region</code>, and as
 a consequence more paint methods.
 <p>
 Instances of <code>SynthPainter</code> are obtained from the
 {@link javax.swing.plaf.synth.SynthStyle#getPainter} method. 
 <p>
 You typically supply a <code>SynthPainter</code> by way of Synth's
 <a href="doc-files/synthFileFormat.html">file</a> format. The following
 example registers a painter for all <code>JButton</code>s that will
 render the image <code>myImage.png</code>:
 <pre>
  &lt;style id="buttonStyle">
    &lt;imagePainter path="myImage.png" sourceInsets="2 2 2 2"
                  paintCenter="true" stretch="true"/>
    &lt;insets top="2" bottom="2" left="2" right="2"/>
  &lt;/style>
  &lt;bind style="buttonStyle" type="REGION" key="button"/>
</pre>
 <p>
 <code>SynthPainter</code> is abstract in so far as it does no painting,
 all the methods
 are empty. While none of these methods are typed to throw an exception,
 subclasses can assume that valid arguments are passed in, and if not
 they can throw a <code>NullPointerException</code> or
 <code>IllegalArgumentException</code> in response to invalid arguments.

 @version 1.13, 11/17/05
 @since 1.5
 @author Scott Violet

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintArrowButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of an arrow button. Arrow buttons are created by
 some components, such as <code>JScrollBar</code>.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintArrowButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of an arrow button. Arrow buttons are created by
 some components, such as <code>JScrollBar</code>.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintArrowButtonForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int direction)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the foreground of an arrow button. This method is responsible
 for drawing a graphical representation of a direction, typically
 an arrow. Arrow buttons are created by
 some components, such as <code>JScrollBar</code>

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param direction One of SwingConstants.NORTH, SwingConstants.SOUTH
                  SwingConstants.EAST or SwingConstants.WEST

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a button.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a button.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintCheckBoxMenuItemBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a check box menu item.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintCheckBoxMenuItemBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a check box menu item.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintCheckBoxBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a check box.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintCheckBoxBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a check box.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintColorChooserBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a color chooser.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintColorChooserBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a color chooser.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintComboBoxBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a combo box.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintComboBoxBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a combo box.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintDesktopIconBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a desktop icon.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintDesktopIconBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a desktop icon.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintDesktopPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a desktop pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintDesktopPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a desktop pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintEditorPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of an editor pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintEditorPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of an editor pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintFileChooserBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a file chooser.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintFileChooserBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a file chooser.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintFormattedTextFieldBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a formatted text field.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintFormattedTextFieldBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a formatted text field.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintInternalFrameTitlePaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of an internal frame title pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintInternalFrameTitlePaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of an internal frame title pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintInternalFrameBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of an internal frame.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintInternalFrameBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of an internal frame.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintLabelBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a label.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintLabelBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a label.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintListBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a list.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintListBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a list.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintMenuBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a menu bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintMenuBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a menu bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintMenuItemBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a menu item.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintMenuItemBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a menu item.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintMenuBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a menu.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintMenuBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a menu.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintOptionPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of an option pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintOptionPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of an option pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintPanelBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a panel.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintPanelBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a panel.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintPasswordFieldBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a password field.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintPasswordFieldBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a password field.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintPopupMenuBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a popup menu.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintPopupMenuBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a popup menu.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintProgressBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a progress bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintProgressBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a progress bar. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation one of <code>JProgressBar.HORIZONTAL</code> or
                    <code>JProgressBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintProgressBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a progress bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintProgressBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a progress bar. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation one of <code>JProgressBar.HORIZONTAL</code> or
                    <code>JProgressBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintProgressBarForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the foreground of a progress bar. is responsible for
 providing an indication of the progress of the progress bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation one of <code>JProgressBar.HORIZONTAL</code> or
                    <code>JProgressBar.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintRadioButtonMenuItemBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a radio button menu item.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintRadioButtonMenuItemBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a radio button menu item.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintRadioButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a radio button.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintRadioButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a radio button.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintRootPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a root pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintRootPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a root pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a scrollbar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a scrollbar. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation Orientation of the JScrollBar, one of
                    <code>JScrollBar.HORIZONTAL</code> or
                    <code>JScrollBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a scrollbar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a scrollbar. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation Orientation of the JScrollBar, one of
                    <code>JScrollBar.HORIZONTAL</code> or
                    <code>JScrollBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarThumbBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the thumb of a scrollbar. The thumb provides
 a graphical indication as to how much of the Component is visible in a
 <code>JScrollPane</code>.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation Orientation of the JScrollBar, one of
                    <code>JScrollBar.HORIZONTAL</code> or
                    <code>JScrollBar.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarThumbBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the thumb of a scrollbar. The thumb provides
 a graphical indication as to how much of the Component is visible in a
 <code>JScrollPane</code>.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation Orientation of the JScrollBar, one of
                    <code>JScrollBar.HORIZONTAL</code> or
                    <code>JScrollBar.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the track of a scrollbar. The track contains
 the thumb.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the track of a scrollbar. The track contains
 the thumb. This implementation invokes the method of the same name without
 the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation Orientation of the JScrollBar, one of
                    <code>JScrollBar.HORIZONTAL</code> or
                    <code>JScrollBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the track of a scrollbar. The track contains
 the thumb.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the track of a scrollbar. The track contains
 the thumb. This implementation invokes the method of the same name without
 the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation Orientation of the JScrollBar, one of
                    <code>JScrollBar.HORIZONTAL</code> or
                    <code>JScrollBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a scroll pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintScrollPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a scroll pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSeparatorBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a separator.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSeparatorBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a separator. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSeparator.HORIZONTAL</code> or
                           <code>JSeparator.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSeparatorBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a separator.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSeparatorBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a separator. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSeparator.HORIZONTAL</code> or
                           <code>JSeparator.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSeparatorForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the foreground of a separator.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSeparator.HORIZONTAL</code> or
                           <code>JSeparator.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a slider.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a slider. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSlider.HORIZONTAL</code> or
                           <code>JSlider.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a slider.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a slider. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSlider.HORIZONTAL</code> or
                           <code>JSlider.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderThumbBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the thumb of a slider.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSlider.HORIZONTAL</code> or
                           <code>JSlider.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderThumbBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the thumb of a slider.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSlider.HORIZONTAL</code> or
                           <code>JSlider.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the track of a slider.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderTrackBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the track of a slider. This implementation invokes
 the method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSlider.HORIZONTAL</code> or
                           <code>JSlider.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the track of a slider.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSliderTrackBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the track of a slider. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSlider.HORIZONTAL</code> or
                           <code>JSlider.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSpinnerBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a spinner.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSpinnerBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a spinner.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the divider of a split pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the divider of a split pane. This implementation
 invokes the method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSplitPane.HORIZONTAL_SPLIT</code> or
                           <code>JSplitPane.VERTICAL_SPLIT</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerForeground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the foreground of the divider of a split pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSplitPane.HORIZONTAL_SPLIT</code> or
                           <code>JSplitPane.VERTICAL_SPLIT</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSplitPaneDragDivider(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the divider, when the user is dragging the divider, of a
 split pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JSplitPane.HORIZONTAL_SPLIT</code> or
                           <code>JSplitPane.VERTICAL_SPLIT</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSplitPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a split pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintSplitPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a split pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the area behind the tabs of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the area behind the tabs of a tabbed pane.
 This implementation invokes the method of the same name without the
 orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JTabbedPane.TOP</code>,
                    <code>JTabbedPane.LEFT</code>,
                    <code>JTabbedPane.BOTTOM</code>, or
                    <code>JTabbedPane.RIGHT</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the area behind the tabs of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the area behind the tabs of a tabbed pane. This
 implementation invokes the method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JTabbedPane.TOP</code>,
                    <code>JTabbedPane.LEFT</code>,
                    <code>JTabbedPane.BOTTOM</code>, or
                    <code>JTabbedPane.RIGHT</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a tab of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param tabIndex Index of tab being painted.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a tab of a tabbed pane. This implementation
 invokes the method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param tabIndex Index of tab being painted.
 @param orientation One of <code>JTabbedPane.TOP</code>,
                    <code>JTabbedPane.LEFT</code>,
                    <code>JTabbedPane.BOTTOM</code>, or
                    <code>JTabbedPane.RIGHT</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a tab of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param tabIndex Index of tab being painted.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int tabIndex, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a tab of a tabbed pane. This implementation invokes
 the method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param tabIndex Index of tab being painted.
 @param orientation One of <code>JTabbedPane.TOP</code>,
                    <code>JTabbedPane.LEFT</code>,
                    <code>JTabbedPane.BOTTOM</code>, or
                    <code>JTabbedPane.RIGHT</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneContentBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the area that contains the content of the
 selected tab of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTabbedPaneContentBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the area that contains the content of the
 selected tab of a tabbed pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTableHeaderBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the header of a table.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTableHeaderBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the header of a table.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTableBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a table.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTableBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a table.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTextAreaBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a text area.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTextAreaBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a text area.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTextPaneBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a text pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTextPaneBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a text pane.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTextFieldBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a text field.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTextFieldBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a text field.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToggleButtonBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a toggle button.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToggleButtonBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a toggle button.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a tool bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a tool bar. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JToolBar.HORIZONTAL</code> or
                           <code>JToolBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a tool bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a tool bar. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JToolBar.HORIZONTAL</code> or
                           <code>JToolBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarContentBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the tool bar's content area.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarContentBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the tool bar's content area. This implementation
 invokes the method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JToolBar.HORIZONTAL</code> or
                           <code>JToolBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarContentBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the content area of a tool bar.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarContentBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the content area of a tool bar. This implementation
 invokes the method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JToolBar.HORIZONTAL</code> or
                           <code>JToolBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the window containing the tool bar when it
 has been detached from its primary frame.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBackground(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the window containing the tool bar when it
 has been detached from its primary frame. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JToolBar.HORIZONTAL</code> or
                           <code>JToolBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the window containing the tool bar when it
 has been detached from it's primary frame.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBorder(SynthContext context, Graphics g, int x, int y, int w, int h, int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the window containing the tool bar when it
 has been detached from it's primary frame. This implementation invokes the
 method of the same name without the orientation.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to
 @param orientation One of <code>JToolBar.HORIZONTAL</code> or
                           <code>JToolBar.VERTICAL</code>
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolTipBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a tool tip.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintToolTipBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a tool tip.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTreeBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of a tree.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTreeBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a tree.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTreeCellBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the row containing a cell in a tree.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTreeCellBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of the row containing a cell in a tree.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintTreeCellFocus(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the focus indicator for a cell in a tree when it has focus.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintViewportBackground(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the background of the viewport.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.synth.SynthPainter.paintViewportBorder(SynthContext context, Graphics g, int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Paints the border of a viewport.

 @param context SynthContext identifying the <code>JComponent</code> and
        <code>Region</code> to paint to
 @param g <code>Graphics</code> to paint to
 @param x X coordinate of the area to paint to
 @param y Y coordinate of the area to paint to
 @param w Width of the area to paint to
 @param h Height of the area to paint to

<!-- END DATA -->
