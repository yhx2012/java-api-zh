<!-- BEGIN KEY -->
public class javax.swing.plaf.metal.MetalToolBarUI extends javax.swing.plaf.basic.BasicToolBarUI
<!-- END KEY -->
<!-- BEGIN DATA -->
 A Metal Look and Feel implementation of ToolBarUI.  This implementation 
 is a "combined" view/controller.
 <p>

 @version 1.42 11/30/05
 @author Jeff Shapiro

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ContainerListener javax.swing.plaf.metal.MetalToolBarUI.contListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implemenation specific. Do not access directly
 or override. Use the create method instead.

 @see #createContainerListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.metal.MetalToolBarUI.rolloverListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This protected field is implemenation specific. Do not access directly
 or override. Use the create method instead.

 @see #createRolloverListener

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.event.ContainerListener javax.swing.plaf.metal.MetalToolBarUI.createContainerListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a container listener that will be added to the JToolBar.
 If this method returns null then it will not be added to the 
 toolbar.

 @return an instance of a <code>ContainerListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.beans.PropertyChangeListener javax.swing.plaf.metal.MetalToolBarUI.createRolloverListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a property change listener that will be added to the JToolBar.
 If this method returns null then it will not be added to the 
 toolbar.

 @return an instance of a <code>PropertyChangeListener</code> or null

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.plaf.metal.MetalToolBarUI.update(Graphics g, JComponent c)
<!-- END KEY -->
<!-- BEGIN DATA -->
 If necessary paints the background of the component, then invokes
 <code>paint</code>.

 @param g Graphics to paint to
 @param c JComponent painting on
 @throws NullPointerException if <code>g</code> or <code>c</code> is
         null
 @see javax.swing.plaf.ComponentUI#update
 @see javax.swing.plaf.ComponentUI#paint
 @since 1.5

<!-- END DATA -->
