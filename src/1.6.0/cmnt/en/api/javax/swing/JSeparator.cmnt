<!-- BEGIN KEY -->
public class javax.swing.JSeparator extends javax.swing.JComponent implements javax.swing.SwingConstants, javax.accessibility.Accessible
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>JSeparator</code> provides a general purpose component for
 implementing divider lines - most commonly used as a divider
 between menu items that breaks them up into logical groupings.
 Instead of using <code>JSeparator</code> directly,
 you can use the <code>JMenu</code> or <code>JPopupMenu</code>
 <code>addSeparator</code> method to create and add a separator.
 <code>JSeparator</code>s may also be used elsewhere in a GUI
 wherever a visual divider is useful.

 <p>

 For more information and examples see
 <a
 href="http://java.sun.com/docs/books/tutorial/uiswing/components/menu.html">How to Use Menus</a>,
 a section in <em>The Java Tutorial.</em>
 <p>
 <strong>Warning:</strong> Swing is not thread safe. For more
 information see <a
 href="package-summary.html#threading">Swing's Threading
 Policy</a>.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

 @beaninfo
      attribute: isContainer false
    description: A divider between menu items.

 @version 1.52 08/08/06
 @author Georges Saab
 @author Jeff Shapiro

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JSeparator()
<!-- END KEY -->
<!-- BEGIN DATA -->
Creates a new horizontal separator. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.JSeparator(int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new separator with the specified horizontal or
 vertical orientation. 

 @param orientation an integer specifying
		<code>SwingConstants.HORIZONTAL</code> or
          <code>SwingConstants.VERTICAL</code>
 @exception IllegalArgumentException if <code>orientation</code>
		is neither <code>SwingConstants.HORIZONTAL</code> nor
		<code>SwingConstants.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.plaf.SeparatorUI javax.swing.JSeparator.getUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the L&F object that renders this component.

 @return the SeparatorUI object that renders this component

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSeparator.setUI(SeparatorUI ui)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the L&F object that renders this component.

 @param ui  the SeparatorUI L&F object
 @see UIDefaults#getUI
 @beaninfo
        bound: true
       hidden: true
    attribute: visualUpdate true
  description: The UI object that implements the Component's LookAndFeel. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSeparator.updateUI()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Resets the UI property to a value from the current look and feel.

 @see JComponent#updateUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.swing.JSeparator.getUIClassID()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of the L&F class that renders this component.

 @return the string "SeparatorUI"
 @see JComponent#getUIClassID
 @see UIDefaults#getUI

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JSeparator.getOrientation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the orientation of this separator.

 @return   The value of the orientation property, one of the 
           following constants defined in <code>SwingConstants</code>:
           <code>VERTICAL</code>, or
           <code>HORIZONTAL</code>.

 @see SwingConstants
 @see #setOrientation

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JSeparator.setOrientation(int orientation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the orientation of the separator.
 The default value of this property is HORIZONTAL.
 @param orientation  either <code>SwingConstants.HORIZONTAL</code>
			or <code>SwingConstants.VERTICAL</code>
 @exception IllegalArgumentException  if <code>orientation</code>
		is neither <code>SwingConstants.HORIZONTAL</code>
		nor <code>SwingConstants.VERTICAL</code>
 
 @see SwingConstants
 @see #getOrientation
 @beaninfo
        bound: true
    preferred: true
         enum: HORIZONTAL SwingConstants.HORIZONTAL
               VERTICAL   SwingConstants.VERTICAL
    attribute: visualUpdate true
  description: The orientation of the separator.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.swing.JSeparator.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string representation of this <code>JSeparator</code>.
 This method 
 is intended to be used only for debugging purposes, and the 
 content and format of the returned string may vary between      
 implementations. The returned string may be empty but may not 
 be <code>null</code>.
 
 @return  a string representation of this <code>JSeparator</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleContext javax.swing.JSeparator.getAccessibleContext()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the AccessibleContext associated with this JSeparator. 
 For separators, the AccessibleContext takes the form of an 
 AccessibleJSeparator. 
 A new AccessibleJSeparator instance is created if necessary.

 @return an AccessibleJSeparator that serves as the 
         AccessibleContext of this JSeparator

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.swing.JSeparator.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->

 See <code>readObject</code> and <code>writeObject</code> in
 <code>JComponent</code> for more 
 information about serialization in Swing.

<!-- END DATA -->
