<!-- BEGIN KEY -->
protected class javax.swing.JMenuBar.AccessibleJMenuBar extends javax.swing.JComponent.AccessibleJComponent implements javax.accessibility.AccessibleSelection
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class implements accessibility support for the 
 <code>JMenuBar</code> class.  It provides an implementation of the 
 Java Accessibility API appropriate to menu bar user-interface 
 elements.
 <p>
 <strong>Warning:</strong>
 Serialized objects of this class will not be compatible with
 future Swing releases. The current serialization support is
 appropriate for short term storage or RMI between applications running
 the same version of Swing.  As of 1.4, support for long term storage
 of all JavaBeans<sup><font size="-2">TM</font></sup>
 has been added to the <code>java.beans</code> package.
 Please see {@link java.beans.XMLEncoder}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the accessible state set of this object.

 @return an instance of AccessibleState containing the current state 
         of the object

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the role of this object.

 @return an instance of AccessibleRole describing the role of the 
 object

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleSelection javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleSelection associated with this object.  In the
 implementation of the Java Accessibility API for this class, 
 return this object, which is responsible for implementing the
 AccessibleSelection interface on behalf of itself.
 
 @return this object

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelectionCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns 1 if a menu is currently selected in this menu bar.

 @return 1 if a menu is currently selected, else 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.Accessible javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the currently selected menu if one is selected, 
 otherwise null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.swing.JMenuBar.AccessibleJMenuBar.isAccessibleChildSelected(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if the current child of this object is selected.

 @param i the zero-based index of the child in this Accessible 
 object.
 @see AccessibleContext#getAccessibleChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenuBar.AccessibleJMenuBar.addAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Selects the nth menu in the menu bar, forcing it to
 pop up.  If another menu is popped up, this will force
 it to close.  If the nth menu is already selected, this 
 method has no effect.

 @param i the zero-based index of selectable items
 @see #getAccessibleStateSet

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenuBar.AccessibleJMenuBar.removeAccessibleSelection(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the nth selected item in the object from the object's
 selection.  If the nth item isn't currently selected, this
 method has no effect.  Otherwise, it closes the popup menu.

 @param i the zero-based index of selectable items

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenuBar.AccessibleJMenuBar.clearAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clears the selection in the object, so that nothing in the
 object is selected.  This will close any open menu.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.swing.JMenuBar.AccessibleJMenuBar.selectAllAccessibleSelection()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Normally causes every selected item in the object to be selected
 if the object supports multiple selections.  This method
 makes no sense in a menu bar, and so does nothing.

<!-- END DATA -->
