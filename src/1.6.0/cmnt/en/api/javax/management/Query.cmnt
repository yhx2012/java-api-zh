<!-- BEGIN KEY -->
public class javax.management.Query extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Constructs query object constraints. The static methods provided
 return query expressions that may be used in listing and
 enumerating MBeans. Individual constraint construction methods
 allow only appropriate types as arguments. Composition of calls can
 construct arbitrary nestings of constraints, as the following
 example illustrates:</p>

 <pre>
 QueryExp exp = Query.and(Query.gt(Query.attr("age"),Query.value(5)),
                          Query.match(Query.attr("name"),
                                      Query.value("Smith")));
 </pre>

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.GT
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#gt} query.  This is chiefly
 of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.LT
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#lt} query.  This is chiefly
 of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.GE
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#geq} query.  This is chiefly
 of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.LE
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#leq} query.  This is chiefly
 of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.EQ
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#eq} query.  This is chiefly
 of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.PLUS
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#plus} expression.  This
 is chiefly of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.MINUS
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#minus} expression.  This
 is chiefly of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.TIMES
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#times} expression.  This
 is chiefly of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.management.Query.DIV
<!-- END KEY -->
<!-- BEGIN DATA -->
 A code representing the {@link Query#div} expression.  This is
 chiefly of interest for the serialized form of queries.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.Query()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Basic constructor.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.and(QueryExp q1, QueryExp q2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that is the conjunction of two other query
 expressions.

 @param q1 A query expression.
 @param q2 Another query expression.

 @return  The conjunction of the two arguments.  The returned object
 will be serialized as an instance of the non-public class {@link
 <a href="../../serialized-form.html#javax.management.AndQueryExp">
 javax.management.AndQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.or(QueryExp q1, QueryExp q2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that is the disjunction of two other query
 expressions.

 @param q1 A query expression.
 @param q2 Another query expression.

 @return  The disjunction of the two arguments.  The returned object
 will be serialized as an instance of the non-public class {@link
 <a href="../../serialized-form.html#javax.management.OrQueryExp">
 javax.management.OrQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.gt(ValueExp v1, ValueExp v2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a "greater than" constraint on
 two values.

 @param v1 A value expression.
 @param v2 Another value expression.

 @return A "greater than" constraint on the arguments.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryRelQueryExp">
 javax.management.BinaryRelQueryExp</a>} with a {@code relOp} equal
 to {@link #GT}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.geq(ValueExp v1, ValueExp v2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a "greater than or equal
 to" constraint on two values.

 @param v1 A value expression.
 @param v2 Another value expression.

 @return A "greater than or equal to" constraint on the
 arguments.  The returned object will be serialized as an
 instance of the non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryRelQueryExp">
 javax.management.BinaryRelQueryExp</a>} with a {@code relOp} equal
 to {@link #GE}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.leq(ValueExp v1, ValueExp v2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a "less than or equal to"
 constraint on two values.

 @param v1 A value expression.
 @param v2 Another value expression.

 @return A "less than or equal to" constraint on the arguments.
 The returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryRelQueryExp">
 javax.management.BinaryRelQueryExp</a>} with a {@code relOp} equal
 to {@link #LE}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.lt(ValueExp v1, ValueExp v2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a "less than" constraint on
 two values.

 @param v1 A value expression.
 @param v2 Another value expression.

 @return A "less than" constraint on the arguments.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryRelQueryExp">
 javax.management.BinaryRelQueryExp</a>} with a {@code relOp} equal
 to {@link #LT}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.eq(ValueExp v1, ValueExp v2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents an equality constraint on
 two values.

 @param v1 A value expression.
 @param v2 Another value expression.

 @return A "equal to" constraint on the arguments.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryRelQueryExp">
 javax.management.BinaryRelQueryExp</a>} with a {@code relOp} equal
 to {@link #EQ}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.between(ValueExp v1, ValueExp v2, ValueExp v3)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents the constraint that one
 value is between two other values.

 @param v1 A value expression that is "between" v2 and v3.
 @param v2 Value expression that represents a boundary of the constraint.     
 @param v3 Value expression that represents a boundary of the constraint.

 @return The constraint that v1 lies between v2 and v3.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.BetweenQueryExp">
 javax.management.BetweenQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.match(AttributeValueExp a, StringValueExp s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a matching constraint on
 a string argument. The matching syntax is consistent with file globbing:
 supports "<code>?</code>", "<code>*</code>", "<code>[</code>",
 each of which may be escaped with "<code>\</code>";
 character classes may use "<code>!</code>" for negation and
 "<code>-</code>" for range.
 (<code>*</code> for any character sequence,
 <code>?</code> for a single arbitrary character,
 <code>[...]</code> for a character sequence).
 For example: <code>a*b?c</code> would match a string starting
 with the character <code>a</code>, followed
 by any number of characters, followed by a <code>b</code>,
 any single character, and a <code>c</code>.

 @param a An attribute expression
 @param s A string value expression representing a matching constraint

 @return A query expression that represents the matching
 constraint on the string argument.  The returned object will
 be serialized as an instance of the non-public class {@link <a
 href="../../serialized-form.html#javax.management.MatchQueryExp">
 javax.management.MatchQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.AttributeValueExp javax.management.Query.attr(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Returns a new attribute expression.</p>

 <p>Evaluating this expression for a given
 <code>objectName</code> includes performing {@link
 MBeanServer#getAttribute MBeanServer.getAttribute(objectName,
 name)}.</p>

 @param name The name of the attribute.

 @return  An attribute expression for the attribute named name.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.AttributeValueExp javax.management.Query.attr(String className, String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Returns a new qualified attribute expression.</p>

 <p>Evaluating this expression for a given
 <code>objectName</code> includes performing {@link
 MBeanServer#getObjectInstance
 MBeanServer.getObjectInstance(objectName)} and {@link
 MBeanServer#getAttribute MBeanServer.getAttribute(objectName,
 name)}.</p>

 @param className The name of the class possessing the attribute.
 @param name The name of the attribute.

 @return An attribute expression for the attribute named name.
 The returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.QualifiedAttributeValueExp">
 javax.management.QualifiedAttributeValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.AttributeValueExp javax.management.Query.classattr()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Returns a new class attribute expression which can be used in any
 Query call that expects a ValueExp.</p>

 <p>Evaluating this expression for a given
 <code>objectName</code> includes performing {@link
 MBeanServer#getObjectInstance
 MBeanServer.getObjectInstance(objectName)}.</p>

 @return A class attribute expression.  The returned object
 will be serialized as an instance of the non-public class
 {@link <a
 href="../../serialized-form.html#javax.management.ClassAttributeValueExp">
 javax.management.ClassAttributeValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.not(QueryExp queryExp)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a constraint that is the negation of its argument.

 @param queryExp The constraint to negate.

 @return A negated constraint.  The returned object will be
 serialized as an instance of the non-public class {@link <a
 href="../../serialized-form.html#javax.management.NotQueryExp">
 javax.management.NotQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.in(ValueExp val, javax.management.ValueExp[] valueList)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an expression constraining a value to be one of an explicit list.
      
 @param val A value to be constrained.
 @param valueList An array of ValueExps.

 @return A QueryExp that represents the constraint.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.InQueryExp">
 javax.management.InQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.StringValueExp javax.management.Query.value(String val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a new string expression.

 @param val The string value.

 @return  A ValueExp object containing the string argument.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.value(Number val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.

 @param val An instance of Number.

 @return A ValueExp object containing the argument.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.NumericValueExp">
 javax.management.NumericValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.value(int val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.

 @param val An int value.

 @return A ValueExp object containing the argument.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.NumericValueExp">
 javax.management.NumericValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.value(long val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.

 @param val A long value.

 @return A ValueExp object containing the argument.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.NumericValueExp">
 javax.management.NumericValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.value(float val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.

 @param val A float value.

 @return A ValueExp object containing the argument.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.NumericValueExp">
 javax.management.NumericValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.value(double val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a numeric value expression that can be used in any Query call
 that expects a ValueExp.

 @param val A double value.

 @return  A ValueExp object containing the argument.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.NumericValueExp">
 javax.management.NumericValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.value(boolean val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a boolean value expression that can be used in any Query call
 that expects a ValueExp.

 @param val A boolean value.

 @return A ValueExp object containing the argument.  The
 returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.BooleanValueExp">
 javax.management.BooleanValueExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.plus(ValueExp value1, ValueExp value2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a binary expression representing the sum of two numeric values,
 or the concatenation of two string values.

 @param value1 The first '+' operand.
 @param value2 The second '+' operand.

 @return A ValueExp representing the sum or concatenation of
 the two arguments.  The returned object will be serialized as
 an instance of the non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryOpValueExp">
 javax.management.BinaryOpValueExp</a>} with an {@code op} equal to
 {@link #PLUS}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.times(ValueExp value1, ValueExp value2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a binary expression representing the product of two numeric values.


 @param value1 The first '*' operand.      
 @param value2 The second '*' operand.

 @return A ValueExp representing the product.  The returned
 object will be serialized as an instance of the non-public
 class {@link <a
 href="../../serialized-form.html#javax.management.BinaryOpValueExp">
 javax.management.BinaryOpValueExp</a>} with an {@code op} equal to
 {@link #TIMES}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.minus(ValueExp value1, ValueExp value2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a binary expression representing the difference between two numeric
 values.

 @param value1 The first '-' operand.      
 @param value2 The second '-' operand.

 @return A ValueExp representing the difference between two
 arguments.  The returned object will be serialized as an
 instance of the non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryOpValueExp">
 javax.management.BinaryOpValueExp</a>} with an {@code op} equal to
 {@link #MINUS}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.ValueExp javax.management.Query.div(ValueExp value1, ValueExp value2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a binary expression representing the quotient of two numeric
 values.

 @param value1 The first '/' operand.
 @param value2 The second '/' operand.

 @return A ValueExp representing the quotient of two arguments.
 The returned object will be serialized as an instance of the
 non-public class {@link <a
 href="../../serialized-form.html#javax.management.BinaryOpValueExp">
 javax.management.BinaryOpValueExp</a>} with an {@code op} equal to
 {@link #DIV}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.initialSubString(AttributeValueExp a, StringValueExp s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a matching constraint on
 a string argument. The value must start with the given literal string
 value.

 @param a An attribute expression.
 @param s A string value expression representing the beginning of the
 string value.

 @return The constraint that a matches s.  The returned object
 will be serialized as an instance of the non-public class
 {@link <a
 href="../../serialized-form.html#javax.management.MatchQueryExp">
 javax.management.MatchQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.anySubString(AttributeValueExp a, StringValueExp s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a matching constraint on
 a string argument. The value must contain the given literal string
 value.

 @param a An attribute expression.
 @param s A string value expression representing the substring.

 @return The constraint that a matches s.  The returned object
 will be serialized as an instance of the non-public class
 {@link <a
 href="../../serialized-form.html#javax.management.MatchQueryExp">
 javax.management.MatchQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.finalSubString(AttributeValueExp a, StringValueExp s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents a matching constraint on
 a string argument. The value must end with the given literal string
 value.

 @param a An attribute expression.
 @param s A string value expression representing the end of the string
 value.

 @return The constraint that a matches s.  The returned object
 will be serialized as an instance of the non-public class
 {@link <a
 href="../../serialized-form.html#javax.management.MatchQueryExp">
 javax.management.MatchQueryExp</a>}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static javax.management.QueryExp javax.management.Query.isInstanceOf(StringValueExp classNameValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a query expression that represents an inheritance constraint 
 on an MBean class.
 <p>Example: to find MBeans that are instances of 
 {@link NotificationBroadcaster}, use 
 {@code Query.isInstanceOf(Query.value(NotificationBroadcaster.class.getName()))}.
 </p>
 <p>Evaluating this expression for a given
 <code>objectName</code> includes performing {@link
 MBeanServer#isInstanceOf MBeanServer.isInstanceOf(objectName,
 ((StringValueExp)classNameValue.apply(objectName)).getValue()}.</p>

 @param classNameValue The {@link StringValueExp} returning the name
        of the class of which selected MBeans should be instances.
 @return a query expression that represents an inheritance
 constraint on an MBean class.  The returned object will be
 serialized as an instance of the non-public class {@link <a
 href="../../serialized-form.html#javax.management.InstanceOfQueryExp">
 javax.management.InstanceOfQueryExp</a>}.
 @since 1.6

<!-- END DATA -->
