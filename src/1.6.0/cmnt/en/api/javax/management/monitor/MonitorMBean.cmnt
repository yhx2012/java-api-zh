<!-- BEGIN KEY -->
public interface javax.management.monitor.MonitorMBean
<!-- END KEY -->
<!-- BEGIN DATA -->
 Exposes the remote management interface of monitor MBeans.

 @version     4.24     11/17/05
 @author      Sun Microsystems, Inc

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.start()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Starts the monitor.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.stop()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Stops the monitor.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.addObservedObject(ObjectName object) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds the specified object in the set of observed MBeans.

 @param object The object to observe.
 @exception java.lang.IllegalArgumentException the specified object is null.

 @since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.removeObservedObject(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the specified object from the set of observed MBeans.

 @param object The object to remove.

 @since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.MonitorMBean.containsObservedObject(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Tests whether the specified object is in the set of observed MBeans.

 @param object The object to check.
 @return <CODE>true</CODE> if the specified object is in the set, <CODE>false</CODE> otherwise.

 @since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.ObjectName[] javax.management.monitor.MonitorMBean.getObservedObjects()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an array containing the objects being observed.

 @return The objects being observed.

 @since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.ObjectName javax.management.monitor.MonitorMBean.getObservedObject()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the object name of the object being observed.

 @return The object being observed.

 @see #setObservedObject

 @deprecated As of JMX 1.2, replaced by {@link #getObservedObjects}

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.setObservedObject(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the object to observe identified by its object name.

 @param object The object to observe.

 @see #getObservedObject

 @deprecated As of JMX 1.2, replaced by {@link #addObservedObject}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.monitor.MonitorMBean.getObservedAttribute()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the attribute being observed.

 @return The attribute being observed.

 @see #setObservedAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.setObservedAttribute(String attribute)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the attribute to observe.

 @param attribute The attribute to observe.

 @see #getObservedAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.MonitorMBean.getGranularityPeriod()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the granularity period (in milliseconds).

 @return The granularity period.

 @see #setGranularityPeriod

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.MonitorMBean.setGranularityPeriod(long period) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the granularity period (in milliseconds).

 @param period The granularity period.
 @exception java.lang.IllegalArgumentException The granularity
 period is less than or equal to zero.

 @see #getGranularityPeriod

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.MonitorMBean.isActive()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Tests if the monitor MBean is active.
 A monitor MBean is marked active when the {@link #start start} method is called.
 It becomes inactive when the {@link #stop stop} method is called.

 @return <CODE>true</CODE> if the monitor MBean is active, <CODE>false</CODE> otherwise.

<!-- END DATA -->
