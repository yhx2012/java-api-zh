<!-- BEGIN KEY -->
public interface javax.management.monitor.GaugeMonitorMBean extends javax.management.monitor.MonitorMBean
<!-- END KEY -->
<!-- BEGIN DATA -->
 Exposes the remote management interface of the gauge monitor MBean.

 @version     4.26     11/17/05
 @author      Sun Microsystems, Inc

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getDerivedGauge()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the derived gauge.

 @return The derived gauge.
 @deprecated As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.GaugeMonitorMBean.getDerivedGaugeTimeStamp()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the derived gauge timestamp.

 @return The derived gauge timestamp.
 @deprecated As of JMX 1.2, replaced by {@link #getDerivedGaugeTimeStamp(ObjectName)}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getDerivedGauge(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the derived gauge for the specified MBean.

 @param object the MBean for which the derived gauge is to be returned
 @return The derived gauge for the specified MBean if this MBean is in the
         set of observed MBeans, or <code>null</code> otherwise.

 @since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.monitor.GaugeMonitorMBean.getDerivedGaugeTimeStamp(ObjectName object)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the derived gauge timestamp for the specified MBean.

 @param object the MBean for which the derived gauge timestamp is to be returned
 @return The derived gauge timestamp for the specified MBean if this MBean
         is in the set of observed MBeans, or <code>null</code> otherwise.

 @since.unbundled JMX 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getHighThreshold()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the high threshold value.

 @return The high threshold value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.management.monitor.GaugeMonitorMBean.getLowThreshold()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the low threshold value.

 @return The low threshold value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setThresholds(Number highValue, Number lowValue) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the high and the low threshold values.

 @param highValue The high threshold value.
 @param lowValue The low threshold value.
 @exception java.lang.IllegalArgumentException The specified high/low threshold is null
 or the low threshold is greater than the high threshold
 or the high threshold and the low threshold are not of the same type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.GaugeMonitorMBean.getNotifyHigh()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the high notification's on/off switch value.

 @return <CODE>true</CODE> if the gauge monitor notifies when
 exceeding the high threshold, <CODE>false</CODE> otherwise.

 @see #setNotifyHigh

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setNotifyHigh(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the high notification's on/off switch value.

 @param value The high notification's on/off switch value.

 @see #getNotifyHigh

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.GaugeMonitorMBean.getNotifyLow()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the low notification's on/off switch value.

 @return <CODE>true</CODE> if the gauge monitor notifies when
 exceeding the low threshold, <CODE>false</CODE> otherwise.

 @see #setNotifyLow

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setNotifyLow(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the low notification's on/off switch value.

 @param value The low notification's on/off switch value.

 @see #getNotifyLow

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.monitor.GaugeMonitorMBean.getDifferenceMode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the difference mode flag value.

 @return <CODE>true</CODE> if the difference mode is used,
 <CODE>false</CODE> otherwise.

 @see #setDifferenceMode

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.monitor.GaugeMonitorMBean.setDifferenceMode(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the difference mode flag value.

 @param value The difference mode flag value.

 @see #getDifferenceMode

<!-- END DATA -->
