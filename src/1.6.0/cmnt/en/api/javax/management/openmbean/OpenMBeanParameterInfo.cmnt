<!-- BEGIN KEY -->
public interface javax.management.openmbean.OpenMBeanParameterInfo
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Describes a parameter used in one or more operations or
 constructors of an open MBean.</p>

 <p>This interface declares the same methods as the class {@link
 javax.management.MBeanParameterInfo}.  A class implementing this
 interface (typically {@link OpenMBeanParameterInfoSupport}) should
 extend {@link javax.management.MBeanParameterInfo}.</p>

 @version     3.25  05/11/17
 @author      Sun Microsystems, Inc.

 @since 1.5
 @since.unbundled JMX 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.openmbean.OpenMBeanParameterInfo.getDescription()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a human readable description of the parameter 
 described by this <tt>OpenMBeanParameterInfo</tt> instance.

 @return the description.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.openmbean.OpenMBeanParameterInfo.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of the parameter
 described by this <tt>OpenMBeanParameterInfo</tt> instance.

 @return the name.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.OpenType<?> javax.management.openmbean.OpenMBeanParameterInfo.getOpenType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <i>open type</i> of the values of the parameter
 described by this <tt>OpenMBeanParameterInfo</tt> instance.

 @return the open type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.openmbean.OpenMBeanParameterInfo.getDefaultValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the default value for this parameter, if it has one, or
 <tt>null</tt> otherwise.

 @return the default value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<?> javax.management.openmbean.OpenMBeanParameterInfo.getLegalValues()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the set of legal values for this parameter, if it has
 one, or <tt>null</tt> otherwise.

 @return the set of legal values.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Comparable<?> javax.management.openmbean.OpenMBeanParameterInfo.getMinValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the minimal value for this parameter, if it has one, or
 <tt>null</tt> otherwise.

 @return the minimum value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Comparable<?> javax.management.openmbean.OpenMBeanParameterInfo.getMaxValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the maximal value for this parameter, if it has one, or
 <tt>null</tt> otherwise.

 @return the maximum value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanParameterInfo.hasDefaultValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <tt>true</tt> if this parameter has a specified default
 value, or <tt>false</tt> otherwise.

 @return true if there is a default value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanParameterInfo.hasLegalValues()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <tt>true</tt> if this parameter has a specified set of
 legal values, or <tt>false</tt> otherwise.

 @return true if there is a set of legal values.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanParameterInfo.hasMinValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <tt>true</tt> if this parameter has a specified minimal
 value, or <tt>false</tt> otherwise.

 @return true if there is a minimum value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanParameterInfo.hasMaxValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <tt>true</tt> if this parameter has a specified maximal
 value, or <tt>false</tt> otherwise.

 @return true if there is a maximum value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanParameterInfo.isValue(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Tests whether <var>obj</var> is a valid value for the parameter
 described by this <code>OpenMBeanParameterInfo</code> instance.

 @param obj the object to be tested.

 @return <code>true</code> if <var>obj</var> is a valid value
 for the parameter described by this
 <code>OpenMBeanParameterInfo</code> instance,
 <code>false</code> otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.openmbean.OpenMBeanParameterInfo.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares the specified <var>obj</var> parameter with this <code>OpenMBeanParameterInfo</code> instance for equality. 
 <p>
 Returns <tt>true</tt> if and only if all of the following statements are true:
 <ul>
 <li><var>obj</var> is non null,</li>
 <li><var>obj</var> also implements the <code>OpenMBeanParameterInfo</code> interface,</li>
 <li>their names are equal</li>
 <li>their open types are equal</li>
 <li>their default, min, max and legal values are equal.</li>
 </ul>
 This ensures that this <tt>equals</tt> method works properly for <var>obj</var> parameters which are
 different implementations of the <code>OpenMBeanParameterInfo</code> interface.
 <br>&nbsp;
 @param  obj  the object to be compared for equality with this <code>OpenMBeanParameterInfo</code> instance;
 
 @return  <code>true</code> if the specified object is equal to this <code>OpenMBeanParameterInfo</code> instance.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.management.openmbean.OpenMBeanParameterInfo.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the hash code value for this <code>OpenMBeanParameterInfo</code> instance. 
 <p>
 The hash code of an <code>OpenMBeanParameterInfo</code> instance is the sum of the hash codes
 of all elements of information used in <code>equals</code> comparisons 
 (ie: its name, its <i>open type</i>, and its default, min, max and legal values). 
 <p>
 This ensures that <code> t1.equals(t2) </code> implies that <code> t1.hashCode()==t2.hashCode() </code> 
 for any two <code>OpenMBeanParameterInfo</code> instances <code>t1</code> and <code>t2</code>, 
 as required by the general contract of the method
 {@link Object#hashCode() Object.hashCode()}.
 <p>

 @return  the hash code value for this <code>OpenMBeanParameterInfo</code> instance

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.openmbean.OpenMBeanParameterInfo.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string representation of this <code>OpenMBeanParameterInfo</code> instance. 
 <p>
 The string representation consists of the name of this class (ie <code>javax.management.openmbean.OpenMBeanParameterInfo</code>), 
 the string representation of the name and open type of the described parameter, 
 and the string representation of its default, min, max and legal values.
 
 @return  a string representation of this <code>OpenMBeanParameterInfo</code> instance

<!-- END DATA -->
