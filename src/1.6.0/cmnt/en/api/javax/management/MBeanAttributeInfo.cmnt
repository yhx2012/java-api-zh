<!-- BEGIN KEY -->
public class javax.management.MBeanAttributeInfo extends javax.management.MBeanFeatureInfo implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
 Describes an MBean attribute exposed for management.  Instances of
 this class are immutable.  Subclasses may be mutable but this is
 not recommended.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private final java.lang.String javax.management.MBeanAttributeInfo.attributeType
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The actual attribute type.

<!-- END DATA -->
<!-- BEGIN KEY -->
private final boolean javax.management.MBeanAttributeInfo.isWrite
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The attribute write right.

<!-- END DATA -->
<!-- BEGIN KEY -->
private final boolean javax.management.MBeanAttributeInfo.isRead
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The attribute read right.

<!-- END DATA -->
<!-- BEGIN KEY -->
private final boolean javax.management.MBeanAttributeInfo.is
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial Indicates if this method is a "is"

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanAttributeInfo(String name, String type, String description, boolean isReadable, boolean isWritable, boolean isIs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <CODE>MBeanAttributeInfo</CODE> object.

 @param name The name of the attribute.
 @param type The type or class name of the attribute.
 @param description A human readable description of the attribute.
 @param isReadable True if the attribute has a getter method, false otherwise.
 @param isWritable True if the attribute has a setter method, false otherwise.
 @param isIs True if this attribute has an "is" getter, false otherwise.

 @throws IllegalArgumentException if {@code isIs} is true but
 {@code isReadable} is not, or if {@code isIs} is true and
 {@code type} is not {@code boolean} or {@code java.lang.Boolean}.
 (New code should always use {@code boolean} rather than
 {@code java.lang.Boolean}.)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanAttributeInfo(String name, String type, String description, boolean isReadable, boolean isWritable, boolean isIs, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <CODE>MBeanAttributeInfo</CODE> object.

 @param name The name of the attribute.
 @param type The type or class name of the attribute.
 @param description A human readable description of the attribute.
 @param isReadable True if the attribute has a getter method, false otherwise.
 @param isWritable True if the attribute has a setter method, false otherwise.
 @param isIs True if this attribute has an "is" getter, false otherwise.
 @param descriptor The descriptor for the attribute.  This may be null
 which is equivalent to an empty descriptor.

 @throws IllegalArgumentException if {@code isIs} is true but
 {@code isReadable} is not, or if {@code isIs} is true and
 {@code type} is not {@code boolean} or {@code java.lang.Boolean}.
 (New code should always use {@code boolean} rather than
 {@code java.lang.Boolean}.)

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.MBeanAttributeInfo(String name, String description, Method getter, Method setter) throws javax.management.IntrospectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>This constructor takes the name of a simple attribute, and Method
 objects for reading and writing the attribute.  The {@link Descriptor}
 of the constructed object will include fields contributed by any
 annotations on the {@code Method} objects that contain the
 {@link DescriptorKey} meta-annotation.

 @param name The programmatic name of the attribute.
 @param description A human readable description of the attribute.
 @param getter The method used for reading the attribute value.
          May be null if the property is write-only.
 @param setter The method used for writing the attribute value.
          May be null if the attribute is read-only.
 @exception IntrospectionException There is a consistency
 problem in the definition of this attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.MBeanAttributeInfo.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Returns a shallow clone of this instance.
 The clone is obtained by simply calling <tt>super.clone()</tt>,
 thus calling the default native shallow cloning mechanism
 implemented by <tt>Object.clone()</tt>.
 No deeper cloning of any internal field is made.</p>

 <p>Since this class is immutable, cloning is chiefly of
 interest to subclasses.</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.MBeanAttributeInfo.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the class name of the attribute.

 @return the class name.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.isReadable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Whether the value of the attribute can be read.

 @return True if the attribute can be read, false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.isWritable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Whether new values can be written to the attribute.

 @return True if the attribute can be written to, false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.isIs()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates if this attribute has an "is" getter.

 @return true if this attribute has an "is" getter.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.management.MBeanAttributeInfo.equals(Object o)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compare this MBeanAttributeInfo to another.

 @param o the object to compare to.

 @return true if and only if <code>o</code> is an MBeanAttributeInfo such
 that its {@link #getName()}, {@link #getType()}, {@link
 #getDescription()}, {@link #isReadable()}, {@link
 #isWritable()}, and {@link #isIs()} values are equal (not
 necessarily identical) to those of this MBeanAttributeInfo.

<!-- END DATA -->
