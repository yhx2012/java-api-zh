<!-- BEGIN KEY -->
public class javax.management.modelmbean.ModelMBeanOperationInfo extends javax.management.MBeanOperationInfo implements javax.management.DescriptorAccess
<!-- END KEY -->
<!-- BEGIN DATA -->
 The ModelMBeanOperationInfo object describes a management operation of the ModelMBean.
 It is a subclass of MBeanOperationInfo with the addition of an associated Descriptor
 and an implementation of the DescriptorAccess interface.
 <P>
 <PRE>
 The fields in the descriptor are defined, but not limited to, the following: 
 name           : operation name 
 descriptorType : must be "operation"    
 class          : class where method is defined (fully qualified) 
 role           : must be "operation", "getter", or "setter
 targetObject   : object on which to execute this method          
 targetType     : type of object reference for targetObject. Can be: ObjectReference | Handle | EJBHandle | IOR | RMIReference.
 value          : cached value for operation                   
 currencyTimeLimit : how long cached value is valid               
 lastUpdatedTimeStamp : when cached value was set                
 visibility            : 1-4 where 1: always visible 4: rarely visible 
 presentationString :  xml formatted string to describe how to present operation 
 </PRE>
 The default descriptor will have name, descriptorType, displayName and role fields set.

 <p><b>Note:</b> because of inconsistencies in previous versions of
 this specification, it is recommended not to use negative or zero
 values for <code>currencyTimeLimit</code>.  To indicate that a
 cached value is never valid, omit the
 <code>currencyTimeLimit</code> field.  To indicate that it is
 always valid, use a very large number for this field.</p>

 <p>The <b>serialVersionUID</b> of this class is <code>6532732096650090465L</code>.
 
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private static final java.io.ObjectStreamField[] javax.management.modelmbean.ModelMBeanOperationInfo.serialPersistentFields
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serialField operationDescriptor Descriptor The descriptor containing the appropriate metadata for this instance

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanOperationInfo(String description, Method operationMethod)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a ModelMBeanOperationInfo object with a default
 descriptor. The {@link Descriptor} of the constructed
 object will include fields contributed by any annotations
 on the {@code Method} object that contain the {@link
 DescriptorKey} meta-annotation.

 @param operationMethod The java.lang.reflect.Method object
 describing the MBean operation.
 @param description A human readable description of the operation.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanOperationInfo(String description, Method operationMethod, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a ModelMBeanOperationInfo object. The {@link
 Descriptor} of the constructed object will include fields
 contributed by any annotations on the {@code Method} object
 that contain the {@link DescriptorKey} meta-annotation.

 @param operationMethod The java.lang.reflect.Method object
 describing the MBean operation.
 @param description A human readable description of the
 operation.
 @param descriptor An instance of Descriptor containing the
 appropriate metadata for this instance of the
 ModelMBeanOperationInfo.  If it is null a default
 descriptor will be created. If the descriptor does not
 contain the fields "displayName" or "role" these fields are
 added in the descriptor with their default values.

 @exception RuntimeOperationsException Wraps an
 IllegalArgumentException. The descriptor is invalid; or
 descriptor field "name" is not equal to operation name; or
 descriptor field "DescriptorType" is not equal to
 "operation"; or descriptor optional field "role" is not equal to
 "operation", "getter", or "setter".


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanOperationInfo(String name, String description, javax.management.MBeanParameterInfo[] signature, String type, int impact)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a ModelMBeanOperationInfo object with a default descriptor.

 @param name The name of the method.
 @param description A human readable description of the operation.
 @param signature MBeanParameterInfo objects describing the parameters(arguments) of the method.
 @param type The type of the method's return value.
 @param impact The impact of the method, one of INFO, ACTION, ACTION_INFO, UNKNOWN.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanOperationInfo(String name, String description, javax.management.MBeanParameterInfo[] signature, String type, int impact, Descriptor descriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a ModelMBeanOperationInfo object.

 @param name The name of the method.
 @param description A human readable description of the operation.
 @param signature MBeanParameterInfo objects describing the parameters(arguments) of the method.
 @param type The type of the method's return value.
 @param impact The impact of the method, one of INFO, ACTION, ACTION_INFO, UNKNOWN.
 @param descriptor An instance of Descriptor containing the appropriate metadata.
 for this instance of the MBeanOperationInfo.If it is null then a default descriptor will be created.
 If the descriptor does not contain the fields 
 "displayName" or "role" these fields are added in the descriptor with their default values.

 @exception RuntimeOperationsException Wraps an
 IllegalArgumentException. The descriptor is invalid; or
 descriptor field "name" is not equal to operation name; or
 descriptor field "DescriptorType" is not equal to
 "operation"; or descriptor optional field "role" is not equal to
 "operation", "getter", or "setter".

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.modelmbean.ModelMBeanOperationInfo(ModelMBeanOperationInfo inInfo)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new ModelMBeanOperationInfo object from this ModelMBeanOperation Object.

 @param inInfo the ModelMBeanOperationInfo to be duplicated


<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.modelmbean.ModelMBeanOperationInfo.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates and returns a new ModelMBeanOperationInfo which is a duplicate of this ModelMBeanOperationInfo.


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.Descriptor javax.management.modelmbean.ModelMBeanOperationInfo.getDescriptor()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns a copy of the associated Descriptor of the
 ModelMBeanOperationInfo.

 @return Descriptor associated with the
 ModelMBeanOperationInfo object.

 @see #setDescriptor

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.modelmbean.ModelMBeanOperationInfo.setDescriptor(Descriptor inDescriptor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets associated Descriptor (full replace) for the
 ModelMBeanOperationInfo If the new Descriptor is null, then
 the associated Descriptor reverts to a default descriptor.
 The Descriptor is validated before it is assigned.  If the
 new Descriptor is invalid, then a
 RuntimeOperationsException wrapping an
 IllegalArgumentException is thrown.

 @param inDescriptor replaces the Descriptor associated with the 
 ModelMBeanOperation.	 	 

 @exception RuntimeOperationsException Wraps an
 IllegalArgumentException for invalid Descriptor.

 @see #getDescriptor

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.modelmbean.ModelMBeanOperationInfo.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string containing the entire contents of the ModelMBeanOperationInfo in human readable form.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.modelmbean.ModelMBeanOperationInfo.readObject(ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Deserializes a {@link ModelMBeanOperationInfo} from an {@link ObjectInputStream}.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.modelmbean.ModelMBeanOperationInfo.writeObject(ObjectOutputStream out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Serializes a {@link ModelMBeanOperationInfo} to an {@link ObjectOutputStream}.

<!-- END DATA -->
