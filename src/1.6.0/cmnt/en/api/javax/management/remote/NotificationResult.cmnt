<!-- BEGIN KEY -->
public class javax.management.remote.NotificationResult extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Result of a query for buffered notifications.  Notifications in
 a notification buffer have positive, monotonically increasing
 sequence numbers.  The result of a notification query contains the
 following elements:</p>

 <ul>

 <li>The sequence number of the earliest notification still in
 the buffer.

 <li>The sequence number of the next notification available for
 querying.  This will be the starting sequence number for the next
 notification query.

 <li>An array of (Notification,listenerID) pairs corresponding to
 the returned notifications and the listeners they correspond to.

 </ul>

 <p>It is possible for the <code>nextSequenceNumber</code> to be less
 than the <code>earliestSequenceNumber</code>.  This signifies that
 notifications between the two might have been lost.</p>

 @since 1.5
 @since.unbundled 1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.remote.NotificationResult(long earliestSequenceNumber, long nextSequenceNumber, javax.management.remote.TargetedNotification[] targetedNotifications)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Constructs a notification query result.</p>

 @param earliestSequenceNumber the sequence number of the
 earliest notification still in the buffer.
 @param nextSequenceNumber the sequence number of the next
 notification available for querying.
 @param targetedNotifications the notifications resulting from
 the query, and the listeners they correspond to.  This array
 can be empty.

 @exception IllegalArgumentException if
 <code>targetedNotifications</code> is null or if
 <code>earliestSequenceNumber</code> or
 <code>nextSequenceNumber</code> is negative.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.remote.NotificationResult.getEarliestSequenceNumber()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the sequence number of the earliest notification still
 in the buffer.

 @return the sequence number of the earliest notification still
 in the buffer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.remote.NotificationResult.getNextSequenceNumber()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the sequence number of the next notification available
 for querying.

 @return the sequence number of the next notification available
 for querying.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.remote.TargetedNotification[] javax.management.remote.NotificationResult.getTargetedNotifications()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the notifications resulting from the query, and the
 listeners they correspond to.

 @return the notifications resulting from the query, and the
 listeners they correspond to.  This array can be empty.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.remote.NotificationResult.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string representation of the object.  The result
 should be a concise but informative representation that is easy
 for a person to read.

 @return a string representation of the object.

<!-- END DATA -->
