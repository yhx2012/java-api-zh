<!-- BEGIN KEY -->
public class javax.management.StringValueExp extends java.lang.Object implements javax.management.ValueExp
<!-- END KEY -->
<!-- BEGIN DATA -->
 Represents strings that are arguments to relational constraints.
 A <CODE>StringValueExp</CODE> may be used anywhere a <CODE>ValueExp</CODE> is required.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String javax.management.StringValueExp.val
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The string literal

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.StringValueExp()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Basic constructor.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.StringValueExp(String val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new <CODE>StringValueExp</CODE> representing the
 given string.

 @param val the string that will be the value of this expression

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.StringValueExp.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string represented by the
 <CODE>StringValueExp</CODE> instance.

 @return the string.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.StringValueExp.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the string representing the object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.StringValueExp.setMBeanServer(MBeanServer s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the MBean server on which the query is to be performed.

 @param s The MBean server on which the query is to be performed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.ValueExp javax.management.StringValueExp.apply(ObjectName name) throws javax.management.BadStringOperationException, javax.management.BadBinaryOpValueExpException, javax.management.BadAttributeValueExpException, javax.management.InvalidApplicationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Applies the ValueExp on a MBean.

 @param name The name of the MBean on which the ValueExp will be applied.

 @return  The <CODE>ValueExp</CODE>.

 @exception BadStringOperationException
 @exception BadBinaryOpValueExpException
 @exception BadAttributeValueExpException 
 @exception InvalidApplicationException

<!-- END DATA -->
