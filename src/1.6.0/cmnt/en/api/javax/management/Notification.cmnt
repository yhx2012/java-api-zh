<!-- BEGIN KEY -->
public class javax.management.Notification extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>The Notification class represents a notification emitted by an
 MBean.  It contains a reference to the source MBean: if the
 notification has been forwarded through the MBean server, and the
 original source of the notification was a reference to the emitting
 MBean object, then the MBean server replaces it by the MBean's
 ObjectName.  If the listener has registered directly with the
 MBean, this is either the object name or a direct reference to the
 MBean.</p>

 <p>It is strongly recommended that notification senders use the
 object name rather than a reference to the MBean object as the
 source.</p>

 <p>The <b>serialVersionUID</b> of this class is <code>-7516092053498031989L</code>.
 
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object javax.management.Notification.source
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>This field hides the {@link EventObject#source} field in the
 parent class to make it non-transient and therefore part of the
 serialized form.</p>

 @serial The object on which the notification initially occurred.

<!-- END DATA -->
<!-- BEGIN KEY -->
private static final java.io.ObjectStreamField[] javax.management.Notification.serialPersistentFields
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serialField type String The notification type. 
              A string expressed in a dot notation similar to Java properties.
              An example of a notification type is network.alarm.router
 @serialField sequenceNumber long The notification sequence number. 
              A serial number which identify particular instance
              of notification in the context of the notification source.
 @serialField timeStamp long The notification timestamp. 
              Indicating when the notification was generated
 @serialField userData Object The notification user data.  
              Used for whatever other data the notification
              source wishes to communicate to its consumers
 @serialField message String The notification message.
 @serialField source Object The object on which the notification initially occurred.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.Notification(String type, Object source, long sequenceNumber)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a Notification object.
 The notification timeStamp is set to the current date.

 @param type The notification type.   
 @param source The notification source.    
 @param sequenceNumber The notification sequence number within the source object.


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.Notification(String type, Object source, long sequenceNumber, String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a Notification object.
 The notification timeStamp is set to the current date.

 @param type The notification type.    
 @param source The notification source.    
 @param sequenceNumber The notification sequence number within the source object.    
 @param message The detailed message.


<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.Notification(String type, Object source, long sequenceNumber, long timeStamp)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a Notification object.

 @param type The notification type.    
 @param source The notification source.    
 @param sequenceNumber The notification sequence number within the source object.    
 @param timeStamp The notification emission date.
    

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.Notification(String type, Object source, long sequenceNumber, long timeStamp, String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a Notification object.

 @param type The notification type.    
 @param source The notification source.    
 @param sequenceNumber The notification sequence number within the source object.    
 @param timeStamp The notification emission date.     
 @param message The detailed message.


<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.Notification.setSource(Object source)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the source.

 @param source the new source for this object.

 @see EventObject#getSource

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.Notification.getSequenceNumber()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the notification sequence number.

 @return The notification sequence number within the source object. It's a serial number
 identifying a particular instance of notification in the context of the notification source.
 The notification model does not assume that notifications will be received in the same order
 that they are sent. The sequence number helps listeners to sort received notifications.

 @see #setSequenceNumber

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.Notification.setSequenceNumber(long sequenceNumber)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the notification sequence number.

 @param sequenceNumber The notification sequence number within the source object. It is
 a serial number identifying a particular instance of notification in the
 context of the notification source.

 @see #getSequenceNumber

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.Notification.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the notification type.

 @return The notification type. It's a string expressed in a dot notation similar
 to Java properties. An example of a notification type is network.alarm.router .

<!-- END DATA -->
<!-- BEGIN KEY -->
public long javax.management.Notification.getTimeStamp()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the notification timestamp.

 @return The notification timestamp.

 @see #setTimeStamp

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.Notification.setTimeStamp(long timeStamp)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the notification timestamp.

 @param timeStamp The notification timestamp. It indicates when the notification was generated.

 @see #getTimeStamp

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.Notification.getMessage()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the notification message.

 @return The message string of this notification object. It contains in a string,
 which could be the explanation of the notification for displaying to a user


<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.Notification.getUserData()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the user data.

 @return The user data object. It is used for whatever data
 the notification source wishes to communicate to its consumers.

 @see #setUserData

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.Notification.setUserData(Object userData)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the user data.

 @param userData The user data object. It is used for whatever data
 the notification source wishes to communicate to its consumers.

 @see #getUserData

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.Notification.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a String representation of this notification.

 @return A String representation of this notification.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.Notification.readObject(ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Deserializes a {@link Notification} from an {@link ObjectInputStream}.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.Notification.writeObject(ObjectOutputStream out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Serializes a {@link Notification} to an {@link ObjectOutputStream}.

<!-- END DATA -->
