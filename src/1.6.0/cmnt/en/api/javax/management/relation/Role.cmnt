<!-- BEGIN KEY -->
public class javax.management.relation.Role extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 Represents a role: includes a role name and referenced MBeans (via their
 ObjectNames). The role value is always represented as an ArrayList
 collection (of ObjectNames) to homogenize the access.

 <p>The <b>serialVersionUID</b> of this class is <code>-279985518429862552L</code>.
 
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
private static final java.io.ObjectStreamField[] javax.management.relation.Role.serialPersistentFields
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serialField name String Role name
 @serialField objectNameList List {@link List} of {@link ObjectName}s of referenced MBeans

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.relation.Role(String roleName, java.util.List<javax.management.ObjectName> roleValue) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Make a new Role object.
 No check is made that the ObjectNames in the role value exist in
 an MBean server.  That check will be made when the role is set
 in a relation.

 @param roleName  role name
 @param roleValue  role value (List of ObjectName objects)

 @exception IllegalArgumentException  if null parameter

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.relation.Role.getRoleName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves role name.

 @return the role name.

 @see #setRoleName

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.List<javax.management.ObjectName> javax.management.relation.Role.getRoleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves role value.

 @return ArrayList of ObjectName objects for referenced MBeans.

 @see #setRoleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.relation.Role.setRoleName(String roleName) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets role name.

 @param roleName  role name

 @exception IllegalArgumentException  if null parameter

 @see #getRoleName

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.management.relation.Role.setRoleValue(java.util.List<javax.management.ObjectName> roleValue) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets role value.

 @param roleValue  List of ObjectName objects for referenced
 MBeans.

 @exception IllegalArgumentException  if null parameter

 @see #getRoleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.management.relation.Role.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string describing the role.

 @return the description of the role.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.management.relation.Role.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clone the role object.

 @return a Role that is an independent copy of the current Role object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.lang.String javax.management.relation.Role.roleValueToString(java.util.List<javax.management.ObjectName> roleValue) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string for the given role value.

 @param roleValue  List of ObjectName objects

 @return A String consisting of the ObjectNames separated by
 newlines (\n).

 @exception IllegalArgumentException  if null parameter

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.relation.Role.readObject(ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Deserializes a {@link Role} from an {@link ObjectInputStream}.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void javax.management.relation.Role.writeObject(ObjectOutputStream out) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Serializes a {@link Role} to an {@link ObjectOutputStream}.

<!-- END DATA -->
