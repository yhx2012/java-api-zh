<!-- BEGIN KEY -->
public class javax.naming.LimitExceededException extends javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This exception is thrown when a method
 terminates abnormally due to a user or system specified limit.
 This is different from a InsufficientResourceException in that
 LimitExceededException is due to a user/system specified limit.
 For example, running out of memory to complete the request would
 be an insufficient resource. The client asking for 10 answers and
 getting back 11 is a size limit exception.
<p>
 Examples of these limits include client and server configuration
 limits such as size, time, number of hops, etc.
 <p>
 Synchronization and serialization issues that apply to NamingException
 apply directly here.

 @author Rosanna Lee
 @author Scott Seligman
 @version 1.8 05/11/17
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.LimitExceededException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of LimitExceededException with
 all name resolution fields and explanation initialized to null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.LimitExceededException(String explanation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of LimitExceededException using an
 explanation. All other fields default to null.
 @param explanation Possibly null detail about this exception.
 @see java.lang.Throwable#getMessage

<!-- END DATA -->
