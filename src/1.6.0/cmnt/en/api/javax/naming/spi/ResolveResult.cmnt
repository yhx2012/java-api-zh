<!-- BEGIN KEY -->
public class javax.naming.spi.ResolveResult extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->

 This class represents the result of resolution of a name.
 It contains the object to which name was resolved, and the portion
 of the name that has not been resolved.
<p>
 A ResolveResult instance is not synchronized against concurrent 
 multithreaded access. Multiple threads trying to access and modify
 a single ResolveResult instance should lock the object.

 @author Rosanna Lee
 @author Scott Seligman
 @version 1.10 03/12/19
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object javax.naming.spi.ResolveResult.resolvedObj
<!-- END KEY -->
<!-- BEGIN DATA -->
 Field containing the Object that was resolved to successfully.
 It can be null only when constructed using a subclass.
 Constructors should always initialize this.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.naming.Name javax.naming.spi.ResolveResult.remainingName
<!-- END KEY -->
<!-- BEGIN DATA -->
 Field containing the remaining name yet to be resolved.
 It can be null only when constructed using a subclass.
 Constructors should always initialize this.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.naming.spi.ResolveResult()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an instance of ResolveResult with the
 resolved object and remaining name both initialized to null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.spi.ResolveResult(Object robj, String rcomp)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of ResolveResult consisting of
 the resolved object and the remaining unresolved component.

 @param robj The non-null object resolved to.
 @param rcomp The single remaining name component that has yet to be
			resolved. Cannot be null (but can be empty).

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.spi.ResolveResult(Object robj, Name rname)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of ResolveResult consisting of
 the resolved Object and the remaining name.

 @param robj The non-null Object resolved to.
 @param rname The non-null remaining name that has yet to be resolved.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.Name javax.naming.spi.ResolveResult.getRemainingName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the remaining unresolved portion of the name.
 
 @return The remaining unresolved portion of the name. 
		Cannot be null but empty OK.
 @see #appendRemainingName
 @see #appendRemainingComponent
 @see #setRemainingName

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.naming.spi.ResolveResult.getResolvedObj()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the Object to which resolution was successful.

 @return The Object to which resolution was successful. Cannot be null.
 @see #setResolvedObj

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.setRemainingName(Name name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the remaining name field of this result to name.
 A copy of name is made so that modifying the copy within
 this ResolveResult does not affect <code>name</code> and
 vice versa.

 @param name The name to set remaining name to. Cannot be null.
 @see #getRemainingName
 @see #appendRemainingName
 @see #appendRemainingComponent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.appendRemainingName(Name name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds components to the end of remaining name.

 @param name The components to add. Can be null.
 @see #getRemainingName
 @see #setRemainingName
 @see #appendRemainingComponent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.appendRemainingComponent(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds a single component to the end of remaining name.

 @param name The component to add. Can be null.
 @see #getRemainingName
 @see #appendRemainingName

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.spi.ResolveResult.setResolvedObj(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the resolved Object field of this result to obj.

 @param obj The object to use for setting the resolved obj field.
		   Cannot be null.
 @see #getResolvedObj

<!-- END DATA -->
