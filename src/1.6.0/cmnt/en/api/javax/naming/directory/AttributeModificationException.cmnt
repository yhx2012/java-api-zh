<!-- BEGIN KEY -->
public class javax.naming.directory.AttributeModificationException extends javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This exception is thrown when an attempt is
 made to add, or remove, or modify an attribute, its identifier,
 or its values that conflicts with the attribute's (schema) definition
 or the attribute's state.
 It is thrown in response to DirContext.modifyAttributes().
 It contains a list of modifications that have not been performed, in the
 order that they were supplied to modifyAttributes().
 If the list is null, none of the modifications were performed successfully.
<p>
 An AttributeModificationException instance is not synchronized
 against concurrent multithreaded access. Multiple threads trying
 to access and modify a single AttributeModification instance
 should lock the object.

 @author Rosanna Lee
 @author Scott Seligman
 @version 1.10 05/11/17

 @see DirContext#modifyAttributes
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.naming.directory.ModificationItem[] javax.naming.directory.AttributeModificationException.unexecs
<!-- END KEY -->
<!-- BEGIN DATA -->
 Contains the possibly null list of unexecuted modifications.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.AttributeModificationException(String explanation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of AttributeModificationException using 
 an explanation. All other fields are set to null.

 @param	explanation	Possibly null additional detail about this exception. 
 If null, this exception has no detail message.

 @see java.lang.Throwable#getMessage

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.AttributeModificationException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of AttributeModificationException.
 All fields are set to null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.directory.AttributeModificationException.setUnexecutedModifications(javax.naming.directory.ModificationItem[] e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the unexecuted modification list to be e.
 Items in the list must appear in the same order in which they were 
 originally supplied in DirContext.modifyAttributes().
 The first item in the list is the first one that was not executed.
 If this list is null, none of the operations originally submitted
 to modifyAttributes() were executed.

 @param e	The possibly null list of unexecuted modifications.
 @see #getUnexecutedModifications

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.ModificationItem[] javax.naming.directory.AttributeModificationException.getUnexecutedModifications()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the unexecuted modification list.
 Items in the list appear in the same order in which they were 
 originally supplied in DirContext.modifyAttributes().
 The first item in the list is the first one that was not executed.
 If this list is null, none of the operations originally submitted
 to modifyAttributes() were executed.

 @return The possibly null unexecuted modification list.
 @see #setUnexecutedModifications

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.naming.directory.AttributeModificationException.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The string representation of this exception consists of
 information about where the error occurred, and
 the first unexecuted modification.
 This string is meant for debugging and not mean to be interpreted
 programmatically.
 @return The non-null string representation of this exception.

<!-- END DATA -->
