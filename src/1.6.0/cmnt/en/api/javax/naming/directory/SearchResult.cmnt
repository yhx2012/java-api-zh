<!-- BEGIN KEY -->
public class javax.naming.directory.SearchResult extends javax.naming.Binding
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class represents an item in the NamingEnumeration returned as a
 result of the DirContext.search() methods.
<p>
 A SearchResult instance is not synchronized against concurrent 
 multithreaded access. Multiple threads trying to access and modify
 a single SearchResult instance should lock the object.

 @author Rosanna Lee
 @author Scott Seligman
 @version 1.10 05/11/17

 @see DirContext#search
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private javax.naming.directory.Attributes javax.naming.directory.SearchResult.attrs
<!-- END KEY -->
<!-- BEGIN DATA -->
 Contains the attributes returned with the object.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, Object obj, Attributes attrs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a search result using the result's name, its bound object, and
 its attributes.
<p>
 <tt>getClassName()</tt> will return the class name of <tt>obj</tt> 
 (or null if <tt>obj</tt> is null) unless the class name has been
 explicitly set using <tt>setClassName()</tt>. 

 @param name The non-null name of the search item. It is relative
             to the <em>target context</em> of the search (which is 
 named by the first parameter of the <code>search()</code> method)

 @param obj  The object bound to name. Can be null.
 @param attrs The attributes that were requested to be returned with 
 this search item. Cannot be null.
 @see javax.naming.NameClassPair#setClassName
 @see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, Object obj, Attributes attrs, boolean isRelative)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a search result using the result's name, its bound object, and
 its attributes, and whether the name is relative.
<p>
 <tt>getClassName()</tt> will return the class name of <tt>obj</tt> 
 (or null if <tt>obj</tt> is null) unless the class name has been
 explicitly set using <tt>setClassName()</tt>

 @param name The non-null name of the search item.
 @param obj  The object bound to name. Can be null.
 @param attrs The attributes that were requested to be returned with 
 this search item. Cannot be null.
 @param isRelative true if <code>name</code> is relative
		to the target context of the search (which is named by
         the first parameter of the <code>search()</code> method);
         false if <code>name</code> is a URL string.
 @see javax.naming.NameClassPair#setClassName
 @see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, String className, Object obj, Attributes attrs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a search result using the result's name, its class name, 
 its bound object, and its attributes.

 @param name The non-null name of the search item. It is relative
             to the <em>target context</em> of the search (which is 
 named by the first parameter of the <code>search()</code> method)

 @param	className	The possibly null class name of the object 
 	bound to <tt>name</tt>. If null, the class name of <tt>obj</tt> is
		returned by <tt>getClassName()</tt>. If <tt>obj</tt> is also null,
		<tt>getClassName()</tt> will return null.
 @param obj  The object bound to name. Can be null.
 @param attrs The attributes that were requested to be returned with 
 this search item. Cannot be null.
 @see javax.naming.NameClassPair#setClassName
 @see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.SearchResult(String name, String className, Object obj, Attributes attrs, boolean isRelative)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a search result using the result's name, its class name,
 its bound object, its attributes, and whether the name is relative.

 @param name The non-null name of the search item.
 @param	className	The possibly null class name of the object 
 	bound to <tt>name</tt>. If null, the class name of <tt>obj</tt> is
		returned by <tt>getClassName()</tt>. If <tt>obj</tt> is also null,
		<tt>getClassName()</tt> will return null.
 @param obj  The object bound to name. Can be null.
 @param attrs The attributes that were requested to be returned with 
 this search item. Cannot be null.
 @param isRelative true if <code>name</code> is relative
		to the target context of the search (which is named by
         the first parameter of the <code>search()</code> method);
         false if <code>name</code> is a URL string.
 @see javax.naming.NameClassPair#setClassName
 @see javax.naming.NameClassPair#getClassName

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.directory.Attributes javax.naming.directory.SearchResult.getAttributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the attributes in this search result.

 @return The non-null attributes in this search result. Can be empty.
 @see #setAttributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.naming.directory.SearchResult.setAttributes(Attributes attrs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the attributes of this search result to <code>attrs</code>.
 @param attrs The non-null attributes to use. Can be empty.
 @see #getAttributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.naming.directory.SearchResult.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Generates the string representation of this SearchResult.
 The string representation consists of the string representation
 of the binding and the string representation of
 this search result's attributes, separated by ':'.
 The contents of this string is useful
 for debugging and is not meant to be interpreted programmatically.

 @return The string representation of this SearchResult. Cannot be null.

<!-- END DATA -->
