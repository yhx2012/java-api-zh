<!-- BEGIN KEY -->
public abstract class javax.naming.RefAddr extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class represents the address of a communications end-point.
 It consists of a type that describes the communication mechanism
 and an address contents determined by an RefAddr subclass.
<p>
 For example, an address type could be "BSD Printer Address",
 which specifies that it is an address to be used with the BSD printing
 protocol. Its contents could be the machine name identifying the
 location of the printer server that understands this protocol.
<p>
 A RefAddr is contained within a Reference.
<p>
 RefAddr is an abstract class. Concrete implementations of it
 determine its synchronization properties. 

 @author Rosanna Lee
 @author Scott Seligman
 @version 1.9 05/11/17
 
 @see Reference
 @see LinkRef
 @see StringRefAddr
 @see BinaryRefAddr
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.naming.RefAddr.addrType
<!-- END KEY -->
<!-- BEGIN DATA -->
 Contains the type of this address.
 @serial 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.naming.RefAddr(String addrType)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of RefAddr using its address type.

 @param addrType A non-null string describing the type of the address.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.naming.RefAddr.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the address type of this address.

 @return The non-null address type of this address.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.Object javax.naming.RefAddr.getContent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the contents of this address.

 @return The possibly null address contents.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.naming.RefAddr.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines whether obj is equal to this RefAddr.
<p>
 obj is equal to this RefAddr all of these conditions are true
<ul> non-null
<li> instance of RefAddr 
<li> obj has the same address type as this RefAddr (using String.compareTo())
<li> both obj and this RefAddr's contents are null or they are equal
		(using the equals() test).
</ul>
 @param obj possibly null obj to check.
 @return true if obj is equal to this refaddr; false otherwise.
 @see #getContent
 @see #getType

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.naming.RefAddr.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Computes the hash code of this address using its address type and contents.
 The hash code is the sum of the hash code of the address type and
 the hash code of the address contents.

 @return The hash code of this address as an int.
 @see java.lang.Object#hashCode

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.naming.RefAddr.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Generates the string representation of this address.
 The string consists of the address's type and contents with labels.
 This representation is intended for display only and not to be parsed.
 @return The non-null string representation of this address.

<!-- END DATA -->
