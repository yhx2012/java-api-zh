<!-- BEGIN KEY -->
public class javax.naming.NotContextException extends javax.naming.NamingException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This exception is thrown when a naming operation proceeds to a point
 where a context is required to continue the operation, but the
 resolved object is not a context. For example, Context.destroy() requires
 that the named object be a context. If it is not, NotContextException
 is thrown. Another example is a non-context being encountered during
 the resolution phase of the Context methods.
<p>
 It is also thrown when a particular subtype of context is required,
 such as a DirContext, and the resolved object is a context but not of
 the required subtype.
 <p>
 Synchronization and serialization issues that apply to NamingException
 apply directly here.
 @see Context#destroySubcontext

 @author Rosanna Lee
 @author Scott Seligman
 @version 1.8 05/11/17
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.NotContextException(String explanation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of NotContextException using an
 explanation. All other fields default to null.

 @param	explanation	Possibly null additional detail about this exception.
 @see java.lang.Throwable#getMessage

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.naming.NotContextException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new instance of NotContextException.
 All fields default to null.

<!-- END DATA -->
