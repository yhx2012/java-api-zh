<!-- BEGIN KEY -->
public class javax.tools.ForwardingFileObject extends java.lang.Object implements javax.tools.FileObject
<!-- END KEY -->
<!-- BEGIN DATA -->
 Forwards calls to a given file object.  Subclasses of this class
 might override some of these methods and might also provide
 additional fields and methods.

 @param <F> the kind of file object forwarded to by this object
 @author Peter von der Ah&eacute;
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected final F extends javax.tools.FileObject javax.tools.ForwardingFileObject.fileObject
<!-- END KEY -->
<!-- BEGIN DATA -->
 The file object which all methods are delegated to.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.tools.ForwardingFileObject(F fileObject)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new instance of ForwardingFileObject.
 @param fileObject delegate to this file object

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream javax.tools.ForwardingFileObject.openInputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 @throws IllegalStateException {@inheritDoc}
 @throws UnsupportedOperationException {@inheritDoc}
 @throws IOException {@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.OutputStream javax.tools.ForwardingFileObject.openOutputStream() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 @throws IllegalStateException {@inheritDoc}
 @throws UnsupportedOperationException {@inheritDoc}
 @throws IOException {@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Reader javax.tools.ForwardingFileObject.openReader(boolean ignoreEncodingErrors) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 @throws IllegalStateException {@inheritDoc}
 @throws UnsupportedOperationException {@inheritDoc}
 @throws IOException {@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.CharSequence javax.tools.ForwardingFileObject.getCharContent(boolean ignoreEncodingErrors) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 @throws IllegalStateException {@inheritDoc}
 @throws UnsupportedOperationException {@inheritDoc}
 @throws IOException {@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Writer javax.tools.ForwardingFileObject.openWriter() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 @throws IllegalStateException {@inheritDoc}
 @throws UnsupportedOperationException {@inheritDoc}
 @throws IOException {@inheritDoc}

<!-- END DATA -->
