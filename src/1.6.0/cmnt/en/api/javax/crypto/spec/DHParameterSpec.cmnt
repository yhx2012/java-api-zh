<!-- BEGIN KEY -->
public class javax.crypto.spec.DHParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
<!-- END KEY -->
<!-- BEGIN DATA -->

 This class specifies the set of parameters used with the Diffie-Hellman
 algorithm, as specified in PKCS #3: <i>Diffie-Hellman Key-Agreement
 Standard</i>.

 <p>A central authority generates parameters and gives them to the two
 entities seeking to generate a secret key. The parameters are a prime
 <code>p</code>, a base <code>g</code>, and optionally the length
 in bits of the private value, <code>l</code>.

 <p>It is possible that more than one instance of parameters may be
 generated by a given central authority, and that there may be more than
 one central authority. Indeed, each individual may be its own central
 authority, with different entities having different parameters.
 
 <p>Note that this class does not perform any validation on specified
 parameters. Thus, the specified values are returned directly even
 if they are null.

 @author Jan Luehe

 @version 1.15, 01/06/04

 @see javax.crypto.KeyAgreement
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.DHParameterSpec(BigInteger p, BigInteger g)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Constructs a parameter set for Diffie-Hellman, using a prime modulus
 <code>p</code> and a base generator <code>g</code>.

 @param p the prime modulus
 @param g the base generator

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.DHParameterSpec(BigInteger p, BigInteger g, int l)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Constructs a parameter set for Diffie-Hellman, using a prime modulus
 <code>p</code>, a base generator <code>g</code>,
 and the size in bits, <code>l</code>, of the random exponent
 (private value).

 @param p the prime modulus
 @param g the base generator
 @param l the size in bits of the random exponent (private value)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger javax.crypto.spec.DHParameterSpec.getP()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the prime modulus <code>p</code>.

 @return the prime modulus <code>p</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger javax.crypto.spec.DHParameterSpec.getG()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the base generator <code>g</code>.

 @return the base generator <code>g</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.crypto.spec.DHParameterSpec.getL()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the size in bits, <code>l</code>, of the random exponent
 (private value).

 @return the size in bits, <code>l</code>, of the random exponent
 (private value), or 0 if this size has not been set

<!-- END DATA -->
