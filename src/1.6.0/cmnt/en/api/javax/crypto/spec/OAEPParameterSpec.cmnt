<!-- BEGIN KEY -->
public class javax.crypto.spec.OAEPParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
<!-- END KEY -->
<!-- BEGIN DATA -->

 This class specifies the set of parameters used with OAEP Padding,
 as defined in the
 <a href="http://www.ietf.org/rfc/rfc3447.txt">PKCS #1</a>
 standard.

 Its ASN.1 definition in PKCS#1 standard is described below:
 <pre>
 RSAES-OAEP-params ::= SEQUENCE {
   hashAlgorithm      [0] OAEP-PSSDigestAlgorithms     DEFAULT sha1,
   maskGenAlgorithm   [1] PKCS1MGFAlgorithms  DEFAULT mgf1SHA1,
   pSourceAlgorithm   [2] PKCS1PSourceAlgorithms  DEFAULT pSpecifiedEmpty
 }
 </pre>
 where
 <pre>
 OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {
   { OID id-sha1 PARAMETERS NULL   }|
   { OID id-sha256 PARAMETERS NULL }|
   { OID id-sha384 PARAMETERS NULL }|
   { OID id-sha512 PARAMETERS NULL },
   ...  -- Allows for future expansion --
 }
 PKCS1MGFAlgorithms    ALGORITHM-IDENTIFIER ::= {
   { OID id-mgf1 PARAMETERS OAEP-PSSDigestAlgorithms },
   ...  -- Allows for future expansion --
 }
 PKCS1PSourceAlgorithms    ALGORITHM-IDENTIFIER ::= {
   { OID id-pSpecified PARAMETERS OCTET STRING },
   ...  -- Allows for future expansion --
 }
 </pre>
 <p>Note: the OAEPParameterSpec.DEFAULT uses the following:
     message digest  -- "SHA-1"
     mask generation function (mgf) -- "MGF1"
     parameters for mgf -- MGF1ParameterSpec.SHA1
     source of encoding input -- PSource.PSpecified.DEFAULT

 @see java.security.spec.MGF1ParameterSpec
 @see PSource

 @author Valerie Peng

 @version 1.5, 06/03/04
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.crypto.spec.OAEPParameterSpec javax.crypto.spec.OAEPParameterSpec.DEFAULT
<!-- END KEY -->
<!-- BEGIN DATA -->

 The OAEP parameter set with all default values.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.OAEPParameterSpec(String mdName, String mgfName, AlgorithmParameterSpec mgfSpec, PSource pSrc)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Constructs a parameter set for OAEP padding as defined in
 the PKCS #1 standard using the specified message digest
 algorithm <code>mdName</code>, mask generation function
 algorithm <code>mgfName</code>, parameters for the mask 
 generation function <code>mgfSpec</code>, and source of
 the encoding input P <code>pSrc</code>.
 
 @param mdName the algorithm name for the message digest. 
 @param mgfName the algorithm name for the mask generation 
 function.
 @param mgfSpec the parameters for the mask generation function. 
 If null is specified, null will be returned by getMGFParameters().
 @param pSrc the source of the encoding input P.
 @exception NullPointerException if <code>mdName</code>, 
 <code>mgfName</code>, or <code>pSrc</code> is null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.crypto.spec.OAEPParameterSpec.getDigestAlgorithm()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the message digest algorithm name. 

 @return the message digest algorithm name. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.crypto.spec.OAEPParameterSpec.getMGFAlgorithm()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the mask generation function algorithm name.

 @return the mask generation function algorithm name.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.AlgorithmParameterSpec javax.crypto.spec.OAEPParameterSpec.getMGFParameters()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the parameters for the mask generation function.

 @return the parameters for the mask generation function.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.PSource javax.crypto.spec.OAEPParameterSpec.getPSource()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the source of encoding input P.

 @return the source of encoding input P.

<!-- END DATA -->
