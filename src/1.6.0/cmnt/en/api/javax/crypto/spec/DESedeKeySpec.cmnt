<!-- BEGIN KEY -->
public class javax.crypto.spec.DESedeKeySpec extends java.lang.Object implements java.security.spec.KeySpec
<!-- END KEY -->
<!-- BEGIN DATA -->

 This class specifies a DES-EDE ("triple-DES") key.

 @author Jan Luehe

 @version 1.20, 01/06/04
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int javax.crypto.spec.DESedeKeySpec.DES_EDE_KEY_LEN
<!-- END KEY -->
<!-- BEGIN DATA -->

 The constant which defines the length of a DESede key in bytes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.DESedeKeySpec(byte[] key) throws java.security.InvalidKeyException
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates a DESedeKeySpec object using the first 24 bytes in 
 <code>key</code> as the key material for the DES-EDE key.
 
 <p> The bytes that constitute the DES-EDE key are those between
 <code>key[0]</code> and <code>key[23]</code> inclusive

 @param key the buffer with the DES-EDE key material. The first
 24 bytes of the buffer are copied to protect against subsequent 
 modification.

 @exception NullPointerException if <code>key</code> is null.
 @exception InvalidKeyException if the given key material is shorter
 than 24 bytes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.crypto.spec.DESedeKeySpec(byte[] key, int offset) throws java.security.InvalidKeyException
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates a DESedeKeySpec object using the first 24 bytes in 
 <code>key</code>, beginning at <code>offset</code> inclusive, 
 as the key material for the DES-EDE key.

 <p> The bytes that constitute the DES-EDE key are those between
 <code>key[offset]</code> and <code>key[offset+23]</code> inclusive.

 @param key the buffer with the DES-EDE key material. The first 
 24 bytes of the buffer beginning at <code>offset</code> inclusive 
 are copied to protect against subsequent modification.
 @param offset the offset in <code>key</code>, where the DES-EDE key
 material starts.

 @exception NullPointerException if <code>key</code> is null.
 @exception InvalidKeyException if the given key material, starting at
 <code>offset</code> inclusive, is shorter than 24 bytes

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] javax.crypto.spec.DESedeKeySpec.getKey()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the DES-EDE key.

 @return the DES-EDE key. Returns a new array
 each time this method is called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static boolean javax.crypto.spec.DESedeKeySpec.isParityAdjusted(byte[] key, int offset) throws java.security.InvalidKeyException
<!-- END KEY -->
<!-- BEGIN DATA -->

 Checks if the given DES-EDE key, starting at <code>offset</code>
 inclusive, is parity-adjusted.

 @param key    a byte array which holds the key value
 @param offset the offset into the byte array 
 @return true if the given DES-EDE key is parity-adjusted, false
 otherwise

 @exception NullPointerException if <code>key</code> is null.
 @exception InvalidKeyException if the given key material, starting at
 <code>offset</code> inclusive, is shorter than 24 bytes

<!-- END DATA -->
