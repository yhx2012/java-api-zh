<!-- BEGIN KEY -->
public abstract class javax.crypto.MacSpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->

 This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
 for the <code>Mac</code> class.
 All the abstract methods in this class must be implemented by each 
 cryptographic service provider who wishes to supply the implementation
 of a particular MAC algorithm.

 <p> Implementations are free to implement the Cloneable interface.

 @author Jan Luehe

 @version 1.11, 01/06/04
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract int javax.crypto.MacSpi.engineGetMacLength()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the length of the MAC in bytes.

 @return the MAC length in bytes.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineInit(Key key, AlgorithmParameterSpec params) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
<!-- END KEY -->
<!-- BEGIN DATA -->

 Initializes the MAC with the given (secret) key and algorithm
 parameters.

 @param key the (secret) key.
 @param params the algorithm parameters.

 @exception InvalidKeyException if the given key is inappropriate for
 initializing this MAC.
 @exception InvalidAlgorithmParameterException if the given algorithm
 parameters are inappropriate for this MAC.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineUpdate(byte input)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Processes the given byte.    
 
 @param input the input byte to be processed.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineUpdate(byte[] input, int offset, int len)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Processes the first <code>len</code> bytes in <code>input</code>,
 starting at <code>offset</code> inclusive.
 
 @param input the input buffer.
 @param offset the offset in <code>input</code> where the input starts.
 @param len the number of bytes to process.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.crypto.MacSpi.engineUpdate(ByteBuffer input)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Processes <code>input.remaining()</code> bytes in the ByteBuffer
 <code>input</code>, starting at <code>input.position()</code>.
 Upon return, the buffer's position will be equal to its limit;
 its limit will not have changed.

 <p>Subclasses should consider overriding this method if they can 
 process ByteBuffers more efficiently than byte arrays.

 @param input the ByteBuffer
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract byte[] javax.crypto.MacSpi.engineDoFinal()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Completes the MAC computation and resets the MAC for further use,
 maintaining the secret key that the MAC was initialized with.

 @return the MAC result.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.crypto.MacSpi.engineReset()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Resets the MAC for further use, maintaining the secret key that the
 MAC was initialized with.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.crypto.MacSpi.clone() throws java.lang.CloneNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns a clone if the implementation is cloneable.
 
 @return a clone if the implementation is cloneable.

 @exception CloneNotSupportedException if this is called
 on an implementation that does not support <code>Cloneable</code>.

<!-- END DATA -->
