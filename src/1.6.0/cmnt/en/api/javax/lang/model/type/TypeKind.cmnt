<!-- BEGIN KEY -->
public final class javax.lang.model.type.TypeKind extends java.lang.Enum
<!-- END KEY -->
<!-- BEGIN DATA -->
 The kind of a type mirror.

 <p>Note that it is possible additional type kinds will be added to
 accommodate new, currently unknown, language structures added to
 future versions of the Java&trade; programming language.

 @author Joseph D. Darcy
 @author Scott Seligman
 @author Peter von der Ah&eacute;
 @version 1.5 06/07/11
 @see TypeMirror
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.BOOLEAN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code boolean}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.BYTE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code byte}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.SHORT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code short}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.INT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code int}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.LONG
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code long}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.CHAR
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code char}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.FLOAT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code float}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.DOUBLE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The primitive type {@code double}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.VOID
<!-- END KEY -->
<!-- BEGIN DATA -->
 The pseudo-type corresponding to the keyword {@code void}.
 @see NoType

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.NONE
<!-- END KEY -->
<!-- BEGIN DATA -->
 A pseudo-type used where no actual type is appropriate.
 @see NoType

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.NULL
<!-- END KEY -->
<!-- BEGIN DATA -->
 The null type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.ARRAY
<!-- END KEY -->
<!-- BEGIN DATA -->
 An array type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.DECLARED
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class or interface type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.ERROR
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class or interface type that could not be resolved.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.TYPEVAR
<!-- END KEY -->
<!-- BEGIN DATA -->
 A type variable.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.WILDCARD
<!-- END KEY -->
<!-- BEGIN DATA -->
 A wildcard type argument.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.PACKAGE
<!-- END KEY -->
<!-- BEGIN DATA -->
 A pseudo-type corresponding to a package element.
 @see NoType

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.EXECUTABLE
<!-- END KEY -->
<!-- BEGIN DATA -->
 A method, constructor, or initializer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.lang.model.type.TypeKind javax.lang.model.type.TypeKind.OTHER
<!-- END KEY -->
<!-- BEGIN DATA -->
 An implementation-reserved type.
 This is not the type you are looking for.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.lang.model.type.TypeKind.isPrimitive()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns {@code true} if this kind corresponds to a primitive
 type and {@code false} otherwise.
 @return {@code true} if this kind corresponds to a primitive type

<!-- END DATA -->
