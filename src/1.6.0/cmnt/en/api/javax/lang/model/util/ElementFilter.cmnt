<!-- BEGIN KEY -->
public class javax.lang.model.util.ElementFilter extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Filters for selecting just the elements of interest from a
 collection of elements.  The returned sets and lists are new
 collections and do use the argument as a backing store.  The
 methods in this class do not make any attempts to guard against
 concurrent modifications of the arguments.  The returned sets and
 lists are mutable but unsafe for concurrent access.  A returned set
 has the same iteration order as the argument set to a method.

 <p>If iterables and sets containing {@code null} are passed as
 arguments to methods in this class, a {@code NullPointerException}
 will be thrown.

 <p>Note that a <i>static import</i> statement can make the text of
 calls to the methods in this class more concise; for example:

 <blockquote><pre>
     import static javax.lang.model.util.ElementFilter.*;
     ...
         {@code List<VariableElement>} fs = fieldsIn(someClass.getEnclosedElements());
 </pre></blockquote>

 @author Joseph D. Darcy
 @author Scott Seligman
 @author Peter von der Ah&eacute;
 @author Martin Buchholz
 @version 1.6 06/08/02
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.VariableElement> javax.lang.model.util.ElementFilter.fieldsIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a list of fields in {@code elements}.
 @return a list of fields in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.VariableElement> javax.lang.model.util.ElementFilter.fieldsIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a set of fields in {@code elements}.
 @return a set of fields in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.constructorsIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a list of constructors in {@code elements}.
 @return a list of constructors in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.constructorsIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a set of constructors in {@code elements}.
 @return a set of constructors in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.methodsIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a list of methods in {@code elements}.
 @return a list of methods in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.ExecutableElement> javax.lang.model.util.ElementFilter.methodsIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a set of methods in {@code elements}.
 @return a set of methods in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.TypeElement> javax.lang.model.util.ElementFilter.typesIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a list of types in {@code elements}.
 @return a list of types in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.TypeElement> javax.lang.model.util.ElementFilter.typesIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a set of types in {@code elements}.
 @return a set of types in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.List<javax.lang.model.element.PackageElement> javax.lang.model.util.ElementFilter.packagesIn(java.lang.Iterable<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a list of packages in {@code elements}.
 @return a list of packages in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.util.Set<javax.lang.model.element.PackageElement> javax.lang.model.util.ElementFilter.packagesIn(java.util.Set<? extends javax.lang.model.element.Element> elements)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a set of packages in {@code elements}.
 @return a set of packages in {@code elements}
 @param elements the elements to filter

<!-- END DATA -->
