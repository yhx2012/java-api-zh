<!-- BEGIN KEY -->
public interface javax.lang.model.type.TypeVariable extends javax.lang.model.type.ReferenceType
<!-- END KEY -->
<!-- BEGIN DATA -->
 Represents a type variable.
 A type variable may be explicitly declared by a
 {@linkplain TypeParameterElement type parameter} of a
 type, method, or constructor.
 A type variable may also be declared implicitly, as by
 the capture conversion of a wildcard type argument
 (see chapter 5 of <i>The Java Language Specification, Third
 Edition</i>).

 @author Joseph D. Darcy
 @author Scott Seligman
 @author Peter von der Ah&eacute;
 @version 1.4 06/07/31
 @see TypeParameterElement
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.lang.model.element.Element javax.lang.model.type.TypeVariable.asElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the element corresponding to this type variable.

 @return the element corresponding to this type variable

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.lang.model.type.TypeMirror javax.lang.model.type.TypeVariable.getUpperBound()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the upper bound of this type variable.

 <p> If this type variable was declared with no explicit
 upper bounds, the result is {@code java.lang.Object}.
 If it was declared with multiple upper bounds,
 the result is an intersection type (modeled as a
 {@link DeclaredType}).
 Individual bounds can be found by examining the result's
 {@linkplain Types#directSupertypes(TypeMirror) supertypes}.

 @return the upper bound of this type variable

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.lang.model.type.TypeMirror javax.lang.model.type.TypeVariable.getLowerBound()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the lower bound of this type variable.  While a type
 parameter cannot include an explicit lower bound declaration,
 capture conversion can produce a type variable with a
 non-trivial lower bound.  Type variables otherwise have a
 lower bound of {@link NullType}.

 @return the lower bound of this type variable

<!-- END DATA -->
