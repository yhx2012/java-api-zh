<!-- BEGIN KEY -->
public interface javax.xml.stream.events.XMLEvent extends javax.xml.stream.XMLStreamConstants
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is the base event interface for handling markup events.
 Events are value objects that are used to communicate the
 XML 1.0 InfoSet to the Application.  Events may be cached 
 and referenced after the parse has completed.

 @version 1.0
 @author Copyright (c) 2003 by BEA Systems. All Rights Reserved.
 @see javax.xml.stream.XMLEventReader
 @see Characters
 @see ProcessingInstruction
 @see StartElement
 @see EndElement
 @see StartDocument
 @see EndDocument
 @see EntityReference
 @see EntityDeclaration
 @see NotationDeclaration
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.xml.stream.events.XMLEvent.getEventType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an integer code for this event.
 @see #START_ELEMENT
 @see #END_ELEMENT
 @see #CHARACTERS
 @see #ATTRIBUTE
 @see #NAMESPACE
 @see #PROCESSING_INSTRUCTION
 @see #COMMENT
 @see #START_DOCUMENT
 @see #END_DOCUMENT
 @see #DTD

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.Location javax.xml.stream.events.XMLEvent.getLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the location of this event.  The Location 
 returned from this method is non-volatile and
 will retain its information.
 @see javax.xml.stream.Location

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isStartElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is a StartElement.
 @see StartElement

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isAttribute()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is an Attribute.
 @see Attribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isNamespace()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is a Namespace.
 @see Namespace

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isEndElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is a EndElement.
 @see EndElement

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isEntityReference()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is an EntityReference.
 @see EntityReference

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isProcessingInstruction()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is a ProcessingInstruction.
 @see ProcessingInstruction

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isCharacters()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is Characters.
 @see Characters

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isStartDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is a StartDocument.
 @see StartDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.stream.events.XMLEvent.isEndDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
 A utility function to check if this event is an EndDocument.
 @see EndDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.StartElement javax.xml.stream.events.XMLEvent.asStartElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns this event as a start element event, may result in
 a class cast exception if this event is not a start element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.EndElement javax.xml.stream.events.XMLEvent.asEndElement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns this event as an end  element event, may result in
 a class cast exception if this event is not a end element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.stream.events.Characters javax.xml.stream.events.XMLEvent.asCharacters()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns this event as Characters, may result in
 a class cast exception if this event is not Characters.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.namespace.QName javax.xml.stream.events.XMLEvent.getSchemaType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is provided for implementations to provide
 optional type information about the associated event.
 It is optional and will return null if no information
 is available.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.stream.events.XMLEvent.writeAsEncodedUnicode(Writer writer) throws javax.xml.stream.XMLStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method will write the XMLEvent as per the XML 1.0 specification as Unicode characters.
 No indentation or whitespace should be outputted.

 Any user defined event type SHALL have this method 
 called when being written to on an output stream.
 Built in Event types MUST implement this method, 
 but implementations MAY choose not call these methods 
 for optimizations reasons when writing out built in 
 Events to an output stream. 
 The output generated MUST be equivalent in terms of the 
 infoset expressed.
 
 @param writer The writer that will output the data
 @throws XMLStreamException if there is a fatal error writing the event

<!-- END DATA -->
