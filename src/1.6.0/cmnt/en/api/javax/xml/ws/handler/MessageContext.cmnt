<!-- BEGIN KEY -->
public interface javax.xml.ws.handler.MessageContext extends java.util.Map
<!-- END KEY -->
<!-- BEGIN DATA -->
The interface <code>MessageContext</code> abstracts the message
  context that is processed by a handler in the <code>handle</code>
  method. 

  <p>The <code>MessageContext</code> interface provides methods to 
  manage a property set. <code>MessageContext</code> properties 
  enable handlers in a handler chain to share processing related
  state.
 
  @since JAX-WS 2.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.MESSAGE_OUTBOUND_PROPERTY
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: message direction, <code>true</code> for
  outbound messages, <code>false</code> for inbound.
  <p>Type: boolean

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.INBOUND_MESSAGE_ATTACHMENTS
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: Map of attachments to a message for the inbound 
 message, key is  the MIME Content-ID, value is a DataHandler.
  <p>Type: java.util.Map<String,DataHandler>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.OUTBOUND_MESSAGE_ATTACHMENTS
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: Map of attachments to a message for the outbound 
 message, key is the MIME Content-ID, value is a DataHandler.
  <p>Type: java.util.Map<String,DataHandler>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.WSDL_DESCRIPTION
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: input source for WSDL document.
  <p>Type: org.xml.sax.InputSource

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.WSDL_SERVICE
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: name of WSDL service.
  <p>Type: javax.xml.namespace.QName

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.WSDL_PORT
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: name of WSDL port.
  <p>Type: javax.xml.namespace.QName

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.WSDL_INTERFACE
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: name of wsdl interface (2.0) or port type (1.1).
  <p>Type: javax.xml.namespace.QName

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.WSDL_OPERATION
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: name of WSDL operation.
  <p>Type: javax.xml.namespace.QName

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.HTTP_RESPONSE_CODE
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: HTTP response status code.
  <p>Type: java.lang.Integer

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.HTTP_REQUEST_HEADERS
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: HTTP request headers.
  <p>Type: java.util.Map<java.lang.String, java.util.List<java.lang.String>>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.HTTP_RESPONSE_HEADERS
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: HTTP response headers.
  <p>Type: java.util.Map<java.lang.String, java.util.List<java.lang.String>>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.HTTP_REQUEST_METHOD
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: HTTP request method.
  <p>Type: java.lang.String

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.SERVLET_REQUEST
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: servlet request object.
  <p>Type: javax.servlet.http.HttpServletRequest

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.SERVLET_RESPONSE
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: servlet response object.
  <p>Type: javax.servlet.http.HttpServletResponse

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.SERVLET_CONTEXT
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: servlet context object.
  <p>Type: javax.servlet.ServletContext

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.QUERY_STRING
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: Query string for request.
  <p>Type: String

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.ws.handler.MessageContext.PATH_INFO
<!-- END KEY -->
<!-- BEGIN DATA -->
Standard property: Request Path Info
  <p>Type: String

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.ws.handler.MessageContext.setScope(String name, MessageContext.Scope scope)
<!-- END KEY -->
<!-- BEGIN DATA -->
Sets the scope of a property.

  @param name Name of the property associated with the 
              <code>MessageContext</code>
  @param scope Desired scope of the property
  @throws java.lang.IllegalArgumentException if an illegal
              property name is specified
             

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.handler.MessageContext.Scope javax.xml.ws.handler.MessageContext.getScope(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
Gets the scope of a property.

  @param name Name of the property
  @return Scope of the property
  @throws java.lang.IllegalArgumentException if a non-existant
              property name is specified
             

<!-- END DATA -->
