<!-- BEGIN KEY -->
public interface javax.xml.ws.LogicalMessage
<!-- END KEY -->
<!-- BEGIN DATA -->
The <code>LogicalMessage</code> interface represents a
  protocol agnostic XML message and contains methods that
  provide access to the payload of the message.

  @since JAX-WS 2.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.transform.Source javax.xml.ws.LogicalMessage.getPayload()
<!-- END KEY -->
<!-- BEGIN DATA -->
Gets the message payload as an XML source, may be called
  multiple times on the same LogicalMessage instance, always
  returns a new Source that may be used to retrieve the entire
  message payload.

  <p>If the returned Source is an instance of DOMSource, then
  modifications to the encapsulated DOM tree change the message
  payload in-place, there is no need to susequently call
  <code>setPayload</code>. Other types of Source provide only
  read access to the message payload.

  @return The contained message payload; returns null if no 
          payload is present in this message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.ws.LogicalMessage.setPayload(Source payload)
<!-- END KEY -->
<!-- BEGIN DATA -->
Sets the message payload

  @param  payload message payload
  @throws WebServiceException If any error during the setting
          of the payload in this message
  @throws java.lang.UnsupportedOperationException If this
          operation is not supported

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.xml.ws.LogicalMessage.getPayload(JAXBContext context)
<!-- END KEY -->
<!-- BEGIN DATA -->
Gets the message payload as a JAXB object. Note that there is no
  connection between the returned object and the message payload,
  changes to the payload require calling <code>setPayload</code>.

  @param  context The JAXBContext that should be used to unmarshall
          the message payload
  @return The contained message payload; returns null if no 
          payload is present in this message
  @throws WebServiceException If an error occurs when using a supplied
     JAXBContext to unmarshall the payload. The cause of
     the WebServiceException is the original JAXBException.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.ws.LogicalMessage.setPayload(Object payload, JAXBContext context)
<!-- END KEY -->
<!-- BEGIN DATA -->
Sets the message payload

  @param  payload message payload
  @param  context The JAXBContext that should be used to marshall 
          the payload
  @throws java.lang.UnsupportedOperationException If this
          operation is not supported
  @throws WebServiceException If an error occurs when using the supplied
     JAXBContext to marshall the payload. The cause of
     the WebServiceException is the original JAXBException.

<!-- END DATA -->
