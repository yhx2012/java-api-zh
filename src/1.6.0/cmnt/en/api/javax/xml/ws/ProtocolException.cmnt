<!-- BEGIN KEY -->
public class javax.xml.ws.ProtocolException extends javax.xml.ws.WebServiceException
<!-- END KEY -->
<!-- BEGIN DATA -->
The <code>ProtocolException</code> class is a
  base class for exceptions related to a specific protocol binding. Subclasses
  are used to communicate protocol level fault information to clients and may
  be used on the server to control the protocol specific fault representation.

  @since JAX-WS 2.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new protocol exception with null as its detail message. The
 cause is not initialized, and may subsequently be initialized by a call
 to Throwable.initCause(java.lang.Throwable).

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new protocol exception with the specified detail message.
 The cause is not initialized, and may subsequently be initialized by a
 call to Throwable.initCause(java.lang.Throwable).

 @param message the detail message. The detail message is saved for later
   retrieval by the Throwable.getMessage() method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new runtime exception with the specified detail message and
 cause.

 Note that the detail message associated with  cause is not automatically
 incorporated in  this runtime exception's detail message.

 @param message the detail message (which is saved for later retrieval  by
   the Throwable.getMessage() method).
 @param cause the cause (which is saved for later retrieval by the
 Throwable.getCause() method). (A null value is  permitted, and indicates
 that the cause is nonexistent or  unknown.)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.ws.ProtocolException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new runtime exception with the specified cause and a  detail
 message of (cause==null ? null : cause.toString())  (which typically
 contains the class and detail message of  cause). This constructor is
 useful for runtime exceptions  that are little more than wrappers for
 other throwables.

 @param cause the cause (which is saved for later retrieval by the
 Throwable.getCause() method). (A null value is  permitted, and indicates
 that the cause is nonexistent or  unknown.)

<!-- END DATA -->
