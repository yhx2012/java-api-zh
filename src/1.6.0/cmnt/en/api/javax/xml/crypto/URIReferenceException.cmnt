<!-- BEGIN KEY -->
public class javax.xml.crypto.URIReferenceException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates an exceptional condition thrown while dereferencing a 
 {@link URIReference}.

 <p>A <code>URIReferenceException</code> can contain a cause: another 
 throwable that caused this <code>URIReferenceException</code> to get thrown. 

 @author Sean Mullan
 @author JSR 105 Expert Group
 @since 1.6
 @see URIDereferencer#dereference(URIReference, XMLCryptoContext)
 @see RetrievalMethod#dereference(XMLCryptoContext)

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Throwable javax.xml.crypto.URIReferenceException.cause
<!-- END KEY -->
<!-- BEGIN DATA -->
 The throwable that caused this exception to get thrown, or null if this
 exception was not caused by another throwable or if the causative
 throwable is unknown. 

 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>URIReferenceException</code> with 
 <code>null</code> as its detail message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>URIReferenceException</code> with the specified 
 detail message. 

 @param message the detail message

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>URIReferenceException</code> with the 
 specified detail message and cause.  
 <p>Note that the detail message associated with
 <code>cause</code> is <i>not</i> automatically incorporated in
 this exception's detail message.

 @param message the detail message 
 @param cause the cause (A <tt>null</tt> value is permitted, and 
	      indicates that the cause is nonexistent or unknown.)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(String message, Throwable cause, URIReference uriReference)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>URIReferenceException</code> with the 
 specified detail message, cause and <code>URIReference</code>.
 <p>Note that the detail message associated with
 <code>cause</code> is <i>not</i> automatically incorporated in
 this exception's detail message.

 @param message the detail message 
 @param cause the cause (A <tt>null</tt> value is permitted, and 
	      indicates that the cause is nonexistent or unknown.)
 @param uriReference the <code>URIReference</code> that was being
    dereferenced when the error was encountered
 @throws NullPointerException if <code>uriReference</code> is
    <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReferenceException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>URIReferenceException</code> with the specified 
 cause and a detail message of <code>(cause==null ? null : 
 cause.toString())</code> (which typically contains the class and detail 
 message of <code>cause</code>).

 @param cause the cause (A <tt>null</tt> value is permitted, and 
        indicates that the cause is nonexistent or unknown.)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.URIReference javax.xml.crypto.URIReferenceException.getURIReference()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>URIReference</code> that was being dereferenced
 when the exception was thrown.

 @return the <code>URIReference</code> that was being dereferenced
 when the exception was thrown, or <code>null</code> if not specified

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable javax.xml.crypto.URIReferenceException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the cause of this <code>URIReferenceException</code> or 
 <code>null</code> if the cause is nonexistent or unknown.  (The 
 cause is the throwable that caused this 
 <code>URIReferenceException</code> to get thrown.)

 @return the cause of this <code>URIReferenceException</code> or 
    <code>null</code> if the cause is nonexistent or unknown.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.URIReferenceException.printStackTrace()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Prints this <code>URIReferenceException</code>, its backtrace and
 the cause's backtrace to the standard error stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.URIReferenceException.printStackTrace(PrintStream s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Prints this <code>URIReferenceException</code>, its backtrace and
 the cause's backtrace to the specified print stream.

 @param s <code>PrintStream</code> to use for output

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.URIReferenceException.printStackTrace(PrintWriter s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Prints this <code>URIReferenceException</code>, its backtrace and
 the cause's backtrace to the specified print writer.

 @param s <code>PrintWriter</code> to use for output

<!-- END DATA -->
