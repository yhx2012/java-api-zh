<!-- BEGIN KEY -->
public class javax.xml.crypto.dsig.XMLSignatureException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates an exceptional condition that occured during the XML
 signature generation or validation process.

 <p>An <code>XMLSignatureException</code> can contain a cause: another 
 throwable that caused this <code>XMLSignatureException</code> to get thrown. 

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Throwable javax.xml.crypto.dsig.XMLSignatureException.cause
<!-- END KEY -->
<!-- BEGIN DATA -->
 The throwable that caused this exception to get thrown, or null if this
 exception was not caused by another throwable or if the causative
 throwable is unknown. 

 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.XMLSignatureException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>XMLSignatureException</code> with 
 <code>null</code> as its detail message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.XMLSignatureException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>XMLSignatureException</code> with the specified 
 detail message. 

 @param message the detail message

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.XMLSignatureException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>XMLSignatureException</code> with the 
 specified detail message and cause.  
 <p>Note that the detail message associated with
 <code>cause</code> is <i>not</i> automatically incorporated in
 this exception's detail message.

 @param message the detail message 
 @param cause the cause (A <tt>null</tt> value is permitted, and 
	      indicates that the cause is nonexistent or unknown.)

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.crypto.dsig.XMLSignatureException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>XMLSignatureException</code> with the specified 
 cause and a detail message of 
 <code>(cause==null ? null : cause.toString())</code>
 (which typically contains the class and detail message of 
 <code>cause</code>).

 @param cause the cause (A <tt>null</tt> value is permitted, and 
        indicates that the cause is nonexistent or unknown.)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable javax.xml.crypto.dsig.XMLSignatureException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the cause of this <code>XMLSignatureException</code> or 
 <code>null</code> if the cause is nonexistent or unknown.  (The 
 cause is the throwable that caused this 
 <code>XMLSignatureException</code> to get thrown.)

 @return the cause of this <code>XMLSignatureException</code> or 
         <code>null</code> if the cause is nonexistent or unknown.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.dsig.XMLSignatureException.printStackTrace()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Prints this <code>XMLSignatureException</code>, its backtrace and
 the cause's backtrace to the standard error stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.dsig.XMLSignatureException.printStackTrace(PrintStream s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Prints this <code>XMLSignatureException</code>, its backtrace and
 the cause's backtrace to the specified print stream.

 @param s <code>PrintStream</code> to use for output

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.crypto.dsig.XMLSignatureException.printStackTrace(PrintWriter s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Prints this <code>XMLSignatureException</code>, its backtrace and
 the cause's backtrace to the specified print writer.

 @param s <code>PrintWriter</code> to use for output

<!-- END DATA -->
