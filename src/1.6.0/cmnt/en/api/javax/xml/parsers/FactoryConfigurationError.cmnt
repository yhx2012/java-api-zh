<!-- BEGIN KEY -->
public class javax.xml.parsers.FactoryConfigurationError extends java.lang.Error
<!-- END KEY -->
<!-- BEGIN DATA -->
 Thrown when a problem with configuration with the Parser Factories
 exists. This error will typically be thrown when the class of a
 parser factory specified in the system properties cannot be found
 or instantiated.

 @author <a href="mailto:Jeff.Suttor@Sun.com">Jeff Suttor</a>
 @version $Revision: 1.2 $, $Date: 2007-03-03 08:04:32 $

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Exception javax.xml.parsers.FactoryConfigurationError.exception
<!-- END KEY -->
<!-- BEGIN DATA -->
<code>Exception</code> that represents the error.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.parsers.FactoryConfigurationError()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new <code>FactoryConfigurationError</code> with no
 detail mesage.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.parsers.FactoryConfigurationError(String msg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new <code>FactoryConfigurationError</code> with
 the <code>String </code> specified as an error message.

 @param msg The error message for the exception.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.parsers.FactoryConfigurationError(Exception e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new <code>FactoryConfigurationError</code> with a
 given <code>Exception</code> base cause of the error.

 @param e The exception to be encapsulated in a
 FactoryConfigurationError.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.parsers.FactoryConfigurationError(Exception e, String msg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new <code>FactoryConfigurationError</code> with the
 given <code>Exception</code> base cause and detail message.

 @param e The exception to be encapsulated in a
 FactoryConfigurationError
 @param msg The detail message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.parsers.FactoryConfigurationError.getMessage()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the message (if any) for this error . If there is no
 message for the exception and there is an encapsulated
 exception then the message of that exception, if it exists will be 
 returned. Else the name of the encapsulated exception will be
 returned.

 @return The error message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception javax.xml.parsers.FactoryConfigurationError.getException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the actual exception (if any) that caused this exception to
 be raised.

 @return The encapsulated exception, or null if there is none.

<!-- END DATA -->
