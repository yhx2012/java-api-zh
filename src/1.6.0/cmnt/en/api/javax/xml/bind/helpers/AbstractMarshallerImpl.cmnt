<!-- BEGIN KEY -->
public abstract class javax.xml.bind.helpers.AbstractMarshallerImpl extends java.lang.Object implements javax.xml.bind.Marshaller
<!-- END KEY -->
<!-- BEGIN DATA -->
 Partial default <tt>Marshaller</tt> implementation.
 
 <p>
 This class provides a partial default implementation for the
 {@link javax.xml.bind.Marshaller} interface.
 
 <p>
 The only methods that a JAXB Provider has to implement are
 {@link Marshaller#marshal(Object, javax.xml.transform.Result) marshal(Object, javax.xml.transform.Result)},
 {@link Marshaller#marshal(Object, javax.xml.transform.Result) marshal(Object, javax.xml.stream.XMLStreamWriter)}, and
 {@link Marshaller#marshal(Object, javax.xml.transform.Result) marshal(Object, javax.xml.stream.XMLEventWriter)}.

 @author <ul><li>Kohsuke Kawaguchi, Sun Microsystems, Inc.</li></ul>
 @version $Revision: 1.2 $ $Date: 2007-03-03 08:04:30 $
 @see javax.xml.bind.Marshaller
 @since JAXB1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.xml.bind.helpers.AbstractMarshallerImpl.getNode(Object obj) throws javax.xml.bind.JAXBException
<!-- END KEY -->
<!-- BEGIN DATA -->
 By default, the getNode method is unsupported and throw
 an {@link java.lang.UnsupportedOperationException}.
 
 Implementations that choose to support this method must
 override this method.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.xml.bind.helpers.AbstractMarshallerImpl.getEncoding()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for getting the current output encoding.
 
 @return the current encoding or "UTF-8" if it hasn't been set.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.xml.bind.helpers.AbstractMarshallerImpl.setEncoding(String encoding)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for setting the output encoding.
 
 @param encoding a valid encoding as specified in the Marshaller class 
 documentation

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.xml.bind.helpers.AbstractMarshallerImpl.getSchemaLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for getting the current schemaLocation.
 
 @return the current schemaLocation or null if it hasn't been set

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.xml.bind.helpers.AbstractMarshallerImpl.setSchemaLocation(String location)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for setting the schemaLocation.
 
 @param location the schemaLocation value

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.xml.bind.helpers.AbstractMarshallerImpl.getNoNSSchemaLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for getting the current noNamespaceSchemaLocation.
 
 @return the current noNamespaceSchemaLocation or null if it hasn't
 been set

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.xml.bind.helpers.AbstractMarshallerImpl.setNoNSSchemaLocation(String location)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for setting the noNamespaceSchemaLocation.
 
 @param location the noNamespaceSchemaLocation value

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.xml.bind.helpers.AbstractMarshallerImpl.isFormattedOutput()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for getting the formatted output flag.
 
 @return the current value of the formatted output flag or false if
 it hasn't been set.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.xml.bind.helpers.AbstractMarshallerImpl.setFormattedOutput(boolean v)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for setting the formatted output flag.
 
 @param v value of the formatted output flag.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean javax.xml.bind.helpers.AbstractMarshallerImpl.isFragment()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for getting the fragment flag.

 @return the current value of the fragment flag or false if
 it hasn't been set.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.xml.bind.helpers.AbstractMarshallerImpl.setFragment(boolean v)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method for setting the fragment flag.

 @param v value of the fragment flag.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String javax.xml.bind.helpers.AbstractMarshallerImpl.getJavaEncoding(String encoding) throws java.io.UnsupportedEncodingException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the corresponding Java encoding name from an IANA name.
 
 This method is a helper method for the derived class to convert
 encoding names.
 
 @exception UnsupportedEncodingException
      If this implementation couldn't find the Java encoding name.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.helpers.AbstractMarshallerImpl.setProperty(String name, Object value) throws javax.xml.bind.PropertyException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Default implementation of the setProperty method handles
 the four defined properties in Marshaller. If a provider 
 needs to handle additional properties, it should override 
 this method in a derived class.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.xml.bind.helpers.AbstractMarshallerImpl.getProperty(String name) throws javax.xml.bind.PropertyException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Default implementation of the getProperty method handles
 the four defined properties in Marshaller.  If a provider 
 needs to support additional provider specific properties, 
 it should override this method in a derived class.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.ValidationEventHandler javax.xml.bind.helpers.AbstractMarshallerImpl.getEventHandler() throws javax.xml.bind.JAXBException
<!-- END KEY -->
<!-- BEGIN DATA -->
 @see javax.xml.bind.Marshaller#getEventHandler()

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.helpers.AbstractMarshallerImpl.setEventHandler(ValidationEventHandler handler) throws javax.xml.bind.JAXBException
<!-- END KEY -->
<!-- BEGIN DATA -->
 @see javax.xml.bind.Marshaller#setEventHandler(ValidationEventHandler)

<!-- END DATA -->
