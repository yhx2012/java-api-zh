<!-- BEGIN KEY -->
public class javax.xml.bind.util.ValidationEventCollector extends java.lang.Object implements javax.xml.bind.ValidationEventHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
 {@link javax.xml.bind.ValidationEventHandler ValidationEventHandler} 
 implementation that collects all events.
 
 <p>
 To use this class, create a new instance and pass it to the setEventHandler
 method of the Validator, Unmarshaller, Marshaller class.  After the call to 
 validate or unmarshal completes, call the getEvents method to retrieve all 
 the reported errors and warnings.

 @author <ul><li>Kohsuke Kawaguchi, Sun Microsystems, Inc.</li><li>Ryan Shoemaker, Sun Microsystems, Inc.</li><li>Joe Fialli, Sun Microsystems, Inc.</li></ul> 
 @version $Revision: 1.1 $
 @see javax.xml.bind.Validator
 @see javax.xml.bind.ValidationEventHandler
 @see javax.xml.bind.ValidationEvent
 @see javax.xml.bind.ValidationEventLocator
 @since JAXB1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.ValidationEvent[] javax.xml.bind.util.ValidationEventCollector.getEvents()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return an array of ValidationEvent objects containing a copy of each of 
 the collected errors and warnings.
 
 @return
      a copy of all the collected errors and warnings or an empty array
      if there weren't any

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.xml.bind.util.ValidationEventCollector.reset()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clear all collected errors and warnings.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.xml.bind.util.ValidationEventCollector.hasEvents()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if this event collector contains at least one 
 ValidationEvent.

 @return true if this event collector contains at least one 
         ValidationEvent, false otherwise

<!-- END DATA -->
