<!-- BEGIN KEY -->
public interface class javax.xml.bind.annotation.XmlSchema implements java.lang.annotation.Annotation
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p> Maps a package name to a XML namespace. </p>

 <p><b>Usage</b> </p>
 <p>
 The XmlSchema annotation can be used with the following program
 elements:
 <ul> 
   <li>package</li>
 </ul>
 
 This is a package level annotation and follows the recommendations
 and restrictions contained in JSR 175, section III, "Annotations".
 Thus the usage is subject to the following constraints and
 recommendations.
 <ul>
   <li> There can only be one package declaration as noted in JSR
        175, section III, "Annotations". </li>
   <li> JSR 175 recommends package-info.java for package level
        annotations. JAXB Providers that follow this recommendation
        will allow the package level annotations to be defined in
        package-info.java.
 </ul>
 <p>

 <p><b>Example 1:</b> Customize name of XML namespace to which 
 package is mapped.</p>

 <pre>
    &#64;javax.xml.bind.annotation.XmlSchema (
      namespace = "http://www.example.com/MYPO1"
    )
    
    &lt;!-- XML Schema fragment -->
    &lt;schema
      xmlns=...
      xmlns:po=....
      targetNamespace="http://www.example.com/MYPO1"
    >
    &lt;!-- prefixes generated by default are implementation
            depedenent -->
 </pre>

 <p><b>Example 2:</b> Customize namespace prefix, namespace URI
 mapping</p>

 <pre>
    // Package level annotation
    &#64;javax.xml.bind.annotation.XmlSchema (
      xmlns = { 
        &#64;javax.xml.bind.annotation.XmlNs(prefix = "po", 
                   namespaceURI="http://www.example.com/myPO1"),

        &#64;javax.xml.bind.annotation.XmlNs(prefix="xs",
                   namespaceURI="http://www.w3.org/2001/XMLSchema")
      )
    )
 
    &lt;!-- XML Schema fragment -->
    &lt;schema
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:po="http://www.example.com/PO1"
        targetNamespace="http://www.example.com/PO1">
 
 </pre>

 <p><b>Example 3:</b> Customize elementFormDefault</p>
 <pre>
    &#64;javax.xml.bind.annotation.XmlSchema (
      elementFormDefault=XmlNsForm.UNQUALIFIED
      ...
    )
 
    &lt;!-- XML Schema fragment -->
    &lt;schema
        xmlns="http://www.w3.org/2001/XMLSchema"
        xmlns:po="http://www.example.com/PO1"
        elementFormDefault="unqualified">
 
 </pre>

 @author Sekhar Vajjhala, Sun Microsystems, Inc.
 @since JAXB2.0
 @version $Revision: 1.2 $

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.annotation.XmlNs[] javax.xml.bind.annotation.XmlSchema.xmlns()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Customize the namespace URI, prefix associations. By default,
 the namespace prefixes for a XML namespace are generated by a
 JAXB Provider in an implementation dependent way.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.xml.bind.annotation.XmlSchema.namespace()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Name of the XML namespace.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.annotation.XmlNsForm javax.xml.bind.annotation.XmlSchema.elementFormDefault()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Namespace qualification for elements. By default, element 
 default attribute will be absent from the XML Schema fragment.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.xml.bind.annotation.XmlNsForm javax.xml.bind.annotation.XmlSchema.attributeFormDefault()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Namespace qualification for attributes. By default,
 attributesFormDefault will be absent from the XML Schema fragment.

<!-- END DATA -->
