<!-- BEGIN KEY -->
public abstract class javax.xml.transform.sax.SAXTransformerFactory extends javax.xml.transform.TransformerFactory
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class extends TransformerFactory to provide SAX-specific
 factory methods.  It provides two types of ContentHandlers,
 one for creating Transformers, the other for creating Templates
 objects.

 <p>If an application wants to set the ErrorHandler or EntityResolver
 for an XMLReader used during a transformation, it should use a URIResolver
 to return the SAXSource which provides (with getXMLReader) a reference to
 the XMLReader.</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.sax.SAXTransformerFactory.FEATURE
<!-- END KEY -->
<!-- BEGIN DATA -->
If {@link javax.xml.transform.TransformerFactory#getFeature}
 returns true when passed this value as an argument,
 the TransformerFactory returned from
 {@link javax.xml.transform.TransformerFactory#newInstance} may
 be safely cast to a SAXTransformerFactory.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String javax.xml.transform.sax.SAXTransformerFactory.FEATURE_XMLFILTER
<!-- END KEY -->
<!-- BEGIN DATA -->
If {@link javax.xml.transform.TransformerFactory#getFeature}
 returns true when passed this value as an argument,
 the {@link #newXMLFilter(Source src)}
 and {@link #newXMLFilter(Templates templates)} methods are supported.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.xml.transform.sax.SAXTransformerFactory()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The default constructor is protected on purpose.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TransformerHandler javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Source src) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result, based on the transformation
 instructions specified by the argument.

 @param src The Source of the transformation instructions.

 @return TransformerHandler ready to transform SAX events.

 @throws TransformerConfigurationException If for some reason the
 TransformerHandler can not be created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TransformerHandler javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Templates templates) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result, based on the Templates argument.

 @param templates The compiled transformation instructions.

 @return TransformerHandler ready to transform SAX events.

 @throws TransformerConfigurationException If for some reason the
 TransformerHandler can not be created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TransformerHandler javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler() throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result. The transformation
 is defined as an identity (or copy) transformation, for example
 to copy a series of SAX parse events into a DOM tree.

 @return A non-null reference to a TransformerHandler, that may
 be used as a ContentHandler for SAX parse events.

 @throws TransformerConfigurationException If for some reason the
 TransformerHandler cannot be created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract javax.xml.transform.sax.TemplatesHandler javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler() throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get a TemplatesHandler object that can process SAX
 ContentHandler events into a Templates object.

 @return A non-null reference to a TransformerHandler, that may
 be used as a ContentHandler for SAX parse events.

 @throws TransformerConfigurationException If for some reason the
 TemplatesHandler cannot be created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.xml.sax.XMLFilter javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Source src) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create an XMLFilter that uses the given Source as the
 transformation instructions.

 @param src The Source of the transformation instructions.

 @return An XMLFilter object, or null if this feature is not supported.

 @throws TransformerConfigurationException If for some reason the
 TemplatesHandler cannot be created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.xml.sax.XMLFilter javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Templates templates) throws javax.xml.transform.TransformerConfigurationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create an XMLFilter, based on the Templates argument..

 @param templates The compiled transformation instructions.

 @return An XMLFilter object, or null if this feature is not supported.

 @throws TransformerConfigurationException If for some reason the
 TemplatesHandler cannot be created.

<!-- END DATA -->
