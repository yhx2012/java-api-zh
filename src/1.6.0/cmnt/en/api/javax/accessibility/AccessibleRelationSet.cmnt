<!-- BEGIN KEY -->
public class javax.accessibility.AccessibleRelationSet extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 Class AccessibleRelationSet determines a component's relation set.  The 
 relation set of a component is a set of AccessibleRelation objects that 
 describe the component's relationships with other components.

 @see AccessibleRelation

 @version     1.15 04/07/06
 @author      Lynn Monsanto
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.Vector<javax.accessibility.AccessibleRelation> javax.accessibility.AccessibleRelationSet.relations
<!-- END KEY -->
<!-- BEGIN DATA -->
 Each entry in the Vector represents an AccessibleRelation.
 @see #add
 @see #addAll
 @see #remove
 @see #contains
 @see #get
 @see #size
 @see #toArray
 @see #clear

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelationSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new empty relation set.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelationSet(javax.accessibility.AccessibleRelation[] relations)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new relation with the initial set of relations contained in 
 the array of relations passed in.  Duplicate entries are ignored.

 @param relations an array of AccessibleRelation describing the 
 relation set.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleRelationSet.add(AccessibleRelation relation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds a new relation to the current relation set.  If the relation 
 is already in the relation set, the target(s) of the specified
 relation is merged with the target(s) of the existing relation.  
 Otherwise,  the new relation is added to the relation set.

 @param relation the relation to add to the relation set
 @return true if relation is added to the relation set; false if the 
 relation set is unchanged

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.accessibility.AccessibleRelationSet.addAll(javax.accessibility.AccessibleRelation[] relations)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds all of the relations to the existing relation set.  Duplicate 
 entries are ignored.

 @param relations  AccessibleRelation array describing the relation set.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleRelationSet.remove(AccessibleRelation relation)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes a relation from the current relation set.  If the relation 
 is not in the set, the relation set will be unchanged and the 
 return value will be false.  If the relation is in the relation 
 set, it will be removed from the set and the return value will be 
 true.
	
 @param relation the relation to remove from the relation set
 @return true if the relation is in the relation set; false if the 
 relation set is unchanged

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.accessibility.AccessibleRelationSet.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes all the relations from the current relation set.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int javax.accessibility.AccessibleRelationSet.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of relations in the relation set.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleRelationSet.contains(String key)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether the relation set contains a relation
 that matches the specified key.
 @param key the AccessibleRelation key
 @return true if the relation is in the relation set; otherwise false

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelation javax.accessibility.AccessibleRelationSet.get(String key)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the relation that matches the specified key.  
 @param key the AccessibleRelation key
 @return the relation, if one exists, that matches the specified key.
 Otherwise, null is returned.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRelation[] javax.accessibility.AccessibleRelationSet.toArray()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the current relation set as an array of AccessibleRelation
 @return AccessibleRelation array contacting the current relation.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.accessibility.AccessibleRelationSet.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a localized String representing all the relations in the set 
 using the default locale.

 @return comma separated localized String
 @see AccessibleBundle#toDisplayString

<!-- END DATA -->
