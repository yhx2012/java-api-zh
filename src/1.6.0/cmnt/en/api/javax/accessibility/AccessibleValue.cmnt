<!-- BEGIN KEY -->
public interface javax.accessibility.AccessibleValue
<!-- END KEY -->
<!-- BEGIN DATA -->
 The AccessibleValue interface should be supported by any object 
 that supports a numerical value (e.g., a scroll bar).  This interface 
 provides the standard mechanism for an assistive technology to determine 
 and set the numerical value as well as get the minimum and maximum values.
 Applications can determine
 if an object supports the AccessibleValue interface by first
 obtaining its AccessibleContext (see
 {@link Accessible}) and then calling the
 {@link AccessibleContext#getAccessibleValue} method.
 If the return value is not null, the object supports this interface.

 @see Accessible
 @see Accessible#getAccessibleContext
 @see AccessibleContext
 @see AccessibleContext#getAccessibleValue

 @version     1.9 10/12/99 15:41:54
 @author	Peter Korn
 @author      Hans Muller
 @author      Willie Walker

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.accessibility.AccessibleValue.getCurrentAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the value of this object as a Number.  If the value has not been
 set, the return value will be null.

 @return value of the object
 @see #setCurrentAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.accessibility.AccessibleValue.setCurrentAccessibleValue(Number n)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the value of this object as a Number.

 @return True if the value was set; else False
 @see #getCurrentAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.accessibility.AccessibleValue.getMinimumAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the minimum value of this object as a Number.

 @return Minimum value of the object; null if this object does not 
 have a minimum value
 @see #getMaximumAccessibleValue

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Number javax.accessibility.AccessibleValue.getMaximumAccessibleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the maximum value of this object as a Number.

 @return Maximum value of the object; null if this object does not 
 have a maximum value
 @see #getMinimumAccessibleValue

<!-- END DATA -->
