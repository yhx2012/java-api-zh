<!-- BEGIN KEY -->
public abstract class javax.sound.sampled.BooleanControl extends javax.sound.sampled.Control
<!-- END KEY -->
<!-- BEGIN DATA -->
 A <code>BooleanControl</code> provides the ability to switch between
 two possible settings that affect a line's audio.  The settings are boolean
 values (<code>true</code> and <code>false</code>).  A graphical user interface
 might represent the control by a two-state button, an on/off switch, two
 mutually exclusive buttons, or a checkbox (among other possibilities).
 For example, depressing a button might activate a
 <code>{@link BooleanControl.Type#MUTE MUTE}</code> control to silence
 the line's audio.
 <p>
 As with other <code>{@link Control}</code> subclasses, a method is
 provided that returns string labels for the values, suitable for
 display in the user interface.

 @author Kara Kytle
 @version 1.16, 05/11/17
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.sound.sampled.BooleanControl(BooleanControl.Type type, boolean initialValue, String trueStateLabel, String falseStateLabel)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new boolean control object with the given parameters.

 @param type the type of control represented this float control object
 @param initialValue the initial control value
 @param trueStateLabel the label for the state represented by <code>true</code>,
 such as "true" or "on."
 @param falseStateLabel the label for the state represented by <code>false</code>,
 such as "false" or "off."

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.sound.sampled.BooleanControl(BooleanControl.Type type, boolean initialValue)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new boolean control object with the given parameters.
 The labels for the <code>true</code> and <code>false</code> states
 default to "true" and "false."

 @param type the type of control represented by this float control object
 @param initialValue the initial control value

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.sound.sampled.BooleanControl.setValue(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the current value for the control.  The default
 implementation simply sets the value as indicated.
 Some controls require that their line be open before they can be affected
 by setting a value.
 @param value desired new value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.sound.sampled.BooleanControl.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Obtains this control's current value.
 @return current value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.sampled.BooleanControl.getStateLabel(boolean state)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Obtains the label for the specified state.
 @return the label for the specified state, such as "true" or "on"
 for <code>true</code>, or "false" or "off" for <code>false</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.sound.sampled.BooleanControl.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides a string representation of the control
 @return a string description

<!-- END DATA -->
