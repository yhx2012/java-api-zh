<!-- BEGIN KEY -->
public class javax.imageio.stream.FileImageOutputStream extends javax.imageio.stream.ImageOutputStreamImpl
<!-- END KEY -->
<!-- BEGIN DATA -->
 An implementation of <code>ImageOutputStream</code> that writes its
 output directly to a <code>File</code> or
 <code>RandomAccessFile</code>.

 @version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.stream.FileImageOutputStream(File f) throws java.io.FileNotFoundException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>FileImageOutputStream</code> that will write
 to a given <code>File</code>.

 @param f a <code>File</code> to write to.

 @exception IllegalArgumentException if <code>f</code> is
 <code>null</code>.
 @exception SecurityException if a security manager exists
 and does not allow write access to the file.
 @exception FileNotFoundException if <code>f</code> does not denote
 a regular file or it cannot be opened for reading and writing for any
 other reason.
 @exception IOException if an I/O error occurs.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.stream.FileImageOutputStream(RandomAccessFile raf)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>FileImageOutputStream</code> that will write
 to a given <code>RandomAccessFile</code>.

 @param raf a <code>RandomAccessFile</code> to write to.

 @exception IllegalArgumentException if <code>raf</code> is
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.stream.FileImageOutputStream.seek(long pos) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the current stream position and resets the bit offset to
 0.  It is legal to seeking past the end of the file; an
 <code>EOFException</code> will be thrown only if a read is
 performed.  The file length will not be increased until a write
 is performed.

 @exception IndexOutOfBoundsException if <code>pos</code> is smaller
 than the flushed position.
 @exception IOException if any other I/O error occurs.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.imageio.stream.FileImageOutputStream.finalize() throws java.lang.Throwable
<!-- END KEY -->
<!-- BEGIN DATA -->
 {@inheritDoc}

<!-- END DATA -->
