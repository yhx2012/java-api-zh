<!-- BEGIN KEY -->
public class javax.imageio.stream.FileCacheImageInputStream extends javax.imageio.stream.ImageInputStreamImpl
<!-- END KEY -->
<!-- BEGIN DATA -->
 An implementation of <code>ImageInputStream</code> that gets its
 input from a regular <code>InputStream</code>.  A file is used to
 cache previously read data.

 @version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.stream.FileCacheImageInputStream(InputStream stream, File cacheDir) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>FileCacheImageInputStream</code> that will read
 from a given <code>InputStream</code>.

 <p> A temporary file is used as a cache.  If
 <code>cacheDir</code>is non-<code>null</code> and is a
 directory, the file will be created there.  If it is
 <code>null</code>, the system-dependent default temporary-file
 directory will be used (see the documentation for
 <code>File.createTempFile</code> for details).

 @param stream an <code>InputStream</code> to read from.
 @param cacheDir a <code>File</code> indicating where the 
 cache file should be created, or <code>null</code> to use the
 system directory.

 @exception IllegalArgumentException if <code>stream</code> is
 <code>null</code>.
 @exception IllegalArgumentException if <code>cacheDir</code> is
 non-<code>null</code> but is not a directory.
 @exception IOException if a cache file cannot be created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.stream.FileCacheImageInputStream.isCached()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> since this
 <code>ImageInputStream</code> caches data in order to allow
 seeking backwards.

 @return <code>true</code>.

 @see #isCachedMemory
 @see #isCachedFile

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.stream.FileCacheImageInputStream.isCachedFile()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> since this
 <code>ImageInputStream</code> maintains a file cache.

 @return <code>true</code>.

 @see #isCached
 @see #isCachedMemory

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.stream.FileCacheImageInputStream.isCachedMemory()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>false</code> since this
 <code>ImageInputStream</code> does not maintain a main memory
 cache.

 @return <code>false</code>.

 @see #isCached
 @see #isCachedFile

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.stream.FileCacheImageInputStream.close() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Closes this <code>FileCacheImageInputStream</code>, closing
 and removing the cache file.  The source <code>InputStream</code>
 is not closed.

 @exception IOException if an error occurs.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void javax.imageio.stream.FileCacheImageInputStream.finalize() throws java.lang.Throwable
<!-- END KEY -->
<!-- BEGIN DATA -->
 {@inheritDoc}

<!-- END DATA -->
