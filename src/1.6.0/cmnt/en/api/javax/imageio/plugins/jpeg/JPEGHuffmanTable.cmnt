<!-- BEGIN KEY -->
public class javax.imageio.plugins.jpeg.JPEGHuffmanTable extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class encapsulating a single JPEG Huffman table.  Fields are
 provided for the "standard" tables from taken from Annex K of the
 JPEG specification.  These are the tables used as defaults.
 This class differs from the old unsupported 
 com.sun.image.codec.jpeg.JPEGHuffmanTable in two ways: 
 <ol>
 <li>The lengths arrays for this class do not contain an ignored 0th
 entry.  The lengths array in a JPEG stream does not contain an extra
 entry, and this class is used to represent the contents of a JPEG
 stream.
 </li>
 <li>The old class incorrectly referred to Huffman "symbols", while
 expecting an array of values to be encoded.  This class has a
 <code>getValues</code> method instead of a <code>getSymbols</code>
 method.
 </li>
 </ol>

 <p>
 For more information about the operation of the built-in JPEG plug-ins,
 see the <A HREF="../../metadata/doc-files/jpeg_metadata.html">JPEG
 metadata format specification and usage notes</A>.

 @version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.imageio.plugins.jpeg.JPEGHuffmanTable javax.imageio.plugins.jpeg.JPEGHuffmanTable.StdDCLuminance
<!-- END KEY -->
<!-- BEGIN DATA -->
The standard DC luminance Huffman table. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.imageio.plugins.jpeg.JPEGHuffmanTable javax.imageio.plugins.jpeg.JPEGHuffmanTable.StdDCChrominance
<!-- END KEY -->
<!-- BEGIN DATA -->
The standard DC chrominance Huffman table. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.imageio.plugins.jpeg.JPEGHuffmanTable javax.imageio.plugins.jpeg.JPEGHuffmanTable.StdACLuminance
<!-- END KEY -->
<!-- BEGIN DATA -->
The standard AC luminance Huffman table. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.imageio.plugins.jpeg.JPEGHuffmanTable javax.imageio.plugins.jpeg.JPEGHuffmanTable.StdACChrominance
<!-- END KEY -->
<!-- BEGIN DATA -->
The standard AC chrominance Huffman table. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.plugins.jpeg.JPEGHuffmanTable(short[] lengths, short[] values)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates a Huffman table and initializes it.  The input arrays
 are copied.  The arrays must describe a possible Huffman table.
 For example, 3 codes cannot be expressed with a single bit.

 @param lengths an array of <code>short</code>s where
 <code>lengths[k]</code> is equal to the number of values with
 corresponding codes of length <code>k + 1</code> bits.
 @param values an array of <code>short</code>s containing the
 values in order of increasing code length.

 @exception IllegalArgumentException if <code>lengths</code> or
 <code>values</code> are <code>null</code>, the length of
 <code>lengths</code> is greater than 16, the length of
 <code>values</code> is greater than 256, if any value in
 <code>lengths</code> or <code>values</code> is less than zero,
 or if the arrays do not describe a valid Huffman table.

<!-- END DATA -->
<!-- BEGIN KEY -->
public short[] javax.imageio.plugins.jpeg.JPEGHuffmanTable.getLengths()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Return an array of <code>short</code>s containing the number of
 values for each length in the Huffman table.  The returned
 array is a copy.

 @return a <code>short</code> array where <code>array[k-1]</code>
 is equal to the number of values in the table of length
 <code>k</code>.

 @see #getValues

<!-- END DATA -->
<!-- BEGIN KEY -->
public short[] javax.imageio.plugins.jpeg.JPEGHuffmanTable.getValues()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Return an array of <code>short</code>s containing the
 values arranged by increasing length of their corresponding
 codes.  The interpretation of
 the array is dependent on the values returned from
 <code>getLengths</code>.  The returned array is a copy.

 @return a <code>short</code> array of values.

 @see #getLengths

<!-- END DATA -->
