<!-- BEGIN KEY -->
public class javax.imageio.metadata.IIOMetadataNode extends java.lang.Object implements org.w3c.dom.Element, org.w3c.dom.NodeList
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class representing a node in a meta-data tree, which implements
 the <a
 href="../../../../api/org/w3c/dom/Element.html">
 <code>org.w3c.dom.Element</code></a> interface and additionally allows
 for the storage of non-textual objects via the
 <code>getUserObject</code> and <code>setUserObject</code> methods.

 <p> This class is not intended to be used for general XML
 processing. In particular, <code>Element</code> nodes created
 within the Image I/O API are not compatible with those created by
 Sun's standard implementation of the <code>org.w3.dom</code> API.
 In particular, the implementation is tuned for simple uses and may
 not perform well for intensive processing.

 <p> Namespaces are ignored in this implementation.  The terms "tag
 name" and "node name" are always considered to be synonymous.

 @see IIOMetadata#getAsTree
 @see IIOMetadata#setFromTree
 @see IIOMetadata#mergeTree

 @version 0.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.metadata.IIOMetadataNode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an empty <code>IIOMetadataNode</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.imageio.metadata.IIOMetadataNode(String nodeName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>IIOMetadataNode</code> with a given node
 name.

 @param nodeName the name of the node, as a <code>String</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getNodeName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the node name associated with this node.

 @return the node name, as a <code>String</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public short javax.imageio.metadata.IIOMetadataNode.getNodeType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the node type, which is always
 <code>ELEMENT_NODE</code>.

 @return the <code>short</code> value <code>ELEMENT_NODE</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getParentNode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the parent of this node.  A <code>null</code> value
 indicates that the node is the root of its own tree.  To add a
 node to an existing tree, use one of the
 <code>insertBefore</code>, <code>replaceChild</code>, or
 <code>appendChild</code> methods.
 
 @return the parent, as a <code>Node</code>.

 @see #insertBefore
 @see #replaceChild
 @see #appendChild

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getFirstChild()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the first child of this node, or <code>null</code> if
 the node has no children.

 @return the first child, as a <code>Node</code>, or
 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getLastChild()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the last child of this node, or <code>null</code> if
 the node has no children.

 @return the last child, as a <code>Node</code>, or
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getPreviousSibling()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the previous sibling of this node, or <code>null</code>
 if this node has no previous sibling.

 @return the previous sibling, as a <code>Node</code>, or
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.getNextSibling()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the next sibling of this node, or <code>null</code> if
 the node has no next sibling.

 @return the next sibling, as a <code>Node</code>, or
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Document javax.imageio.metadata.IIOMetadataNode.getOwnerDocument()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>null</code>, since <code>IIOMetadataNode</code>s
 do not belong to any <code>Document</code>.

 @return <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.insertBefore(Node newChild, Node refChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Inserts the node <code>newChild</code> before the existing
 child node <code>refChild</code>. If <code>refChild</code> is
 <code>null</code>, insert <code>newChild</code> at the end of
 the list of children.

 @param newChild the <code>Node</code> to insert.
 @param refChild the reference <code>Node</code>.

 @return the node being inserted.

 @exception IllegalArgumentException if <code>newChild</code> is
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.replaceChild(Node newChild, Node oldChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Replaces the child node <code>oldChild</code> with
 <code>newChild</code> in the list of children, and returns the
 <code>oldChild</code> node.

 @param newChild the <code>Node</code> to insert.
 @param oldChild the <code>Node</code> to be replaced.

 @return the node replaced.

 @exception IllegalArgumentException if <code>newChild</code> is
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.removeChild(Node oldChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the child node indicated by <code>oldChild</code> from
 the list of children, and returns it.

 @param oldChild the <code>Node</code> to be removed.

 @return the node removed.

 @exception IllegalArgumentException if <code>oldChild</code> is
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.appendChild(Node newChild)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds the node <code>newChild</code> to the end of the list of
 children of this node.

 @param newChild the <code>Node</code> to insert.

 @return the node added.

 @exception IllegalArgumentException if <code>newChild</code> is
 <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.metadata.IIOMetadataNode.hasChildNodes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> if this node has child nodes.

 @return <code>true</code> if this node has children.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Node javax.imageio.metadata.IIOMetadataNode.cloneNode(boolean deep)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a duplicate of this node.  The duplicate node has no
 parent (<code>getParentNode</code> returns <code>null</code>).
 If a shallow clone is being performed (<code>deep</code> is
 <code>false</code>), the new node will not have any children or
 siblings.  If a deep clone is being performed, the new node
 will form the root of a complete cloned subtree.

 @param deep if <code>true</code>, recursively clone the subtree
 under the specified node; if <code>false</code>, clone only the
 node itself.

 @return the duplicate node.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.normalize()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Does nothing, since <code>IIOMetadataNode</code>s do not
 contain <code>Text</code> children.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.metadata.IIOMetadataNode.isSupported(String feature, String version)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>false</code> since DOM features are not
 supported.

 @return <code>false</code>.

 @param feature a <code>String</code>, which is ignored.
 @param version a <code>String</code>, which is ignored.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getNamespaceURI() throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>null</code>, since namespaces are not supported.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getPrefix()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>null</code>, since namespaces are not supported.

 @return <code>null</code>.

 @see #setPrefix

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.setPrefix(String prefix)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Does nothing, since namespaces are not supported.

 @param prefix a <code>String</code>, which is ignored.

 @see #getPrefix

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getLocalName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>getNodeName</code>.

 @return the node name, as a <code>String</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String javax.imageio.metadata.IIOMetadataNode.getAttributeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>getAttribute(localName)</code>.

 @see #setAttributeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.setAttributeNS(String namespaceURI, String qualifiedName, String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>setAttribute(qualifiedName, value)</code>.

 @see #getAttributeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.removeAttributeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>removeAttribute(localName)</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Attr javax.imageio.metadata.IIOMetadataNode.getAttributeNodeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>getAttributeNode(localName)</code>.

 @see #setAttributeNodeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.Attr javax.imageio.metadata.IIOMetadataNode.setAttributeNodeNS(Attr newAttr)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>setAttributeNode(newAttr)</code>.

 @see #getAttributeNodeNS

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.NodeList javax.imageio.metadata.IIOMetadataNode.getElementsByTagNameNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>getElementsByTagName(localName)</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean javax.imageio.metadata.IIOMetadataNode.hasAttributeNS(String namespaceURI, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Equivalent to <code>hasAttribute(localName)</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object javax.imageio.metadata.IIOMetadataNode.getUserObject()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>Object</code> value associated with this node.

 @return the user <code>Object</code>.

 @see #setUserObject

<!-- END DATA -->
<!-- BEGIN KEY -->
public void javax.imageio.metadata.IIOMetadataNode.setUserObject(Object userObject)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the value associated with this node.

 @param userObject the user <code>Object</code>.

 @see #getUserObject

<!-- END DATA -->
