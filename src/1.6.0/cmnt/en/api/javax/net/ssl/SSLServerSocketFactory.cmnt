<!-- BEGIN KEY -->
public abstract class javax.net.ssl.SSLServerSocketFactory extends javax.net.ServerSocketFactory
<!-- END KEY -->
<!-- BEGIN DATA -->

 <code>SSLServerSocketFactory</code>s create
 <code>SSLServerSocket</code>s.

 @since 1.4
 @see SSLSocket
 @see SSLServerSocket
 @version 1.24
 @author David Brownell

<!-- END DATA -->
<!-- BEGIN KEY -->
protected javax.net.ssl.SSLServerSocketFactory()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Constructor is used only by subclasses.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static synchronized javax.net.ServerSocketFactory javax.net.ssl.SSLServerSocketFactory.getDefault()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the default SSL server socket factory.

 <p>The first time this method is called, the security property
 "ssl.ServerSocketFactory.provider" is examined. If it is non-null, a 
 class by that name is loaded and instantiated. If that is successful and
 the object is an instance of SSLServerSocketFactory, it is made the 
 default SSL server socket factory.

 <p>Otherwise, this method returns
 <code>SSLContext.getDefault().getServerSocketFactory()</code>. If that
 call fails, an inoperative factory is returned.

 @return the default <code>ServerSocketFactory</code>
 @see SSLContext#getDefault

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String[] javax.net.ssl.SSLServerSocketFactory.getDefaultCipherSuites()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the list of cipher suites which are enabled by default.
 Unless a different list is enabled, handshaking on an SSL connection
 will use one of these cipher suites.  The minimum quality of service
 for these defaults requires confidentiality protection and server
 authentication (that is, no anonymous cipher suites).

 @see #getSupportedCipherSuites()
 @return array of the cipher suites enabled by default

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String[] javax.net.ssl.SSLServerSocketFactory.getSupportedCipherSuites()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the names of the cipher suites which could be enabled for use
 on an SSL connection created by this factory.
 Normally, only a subset of these will actually
 be enabled by default, since this list may include cipher suites which
 do not meet quality of service requirements for those defaults.  Such
 cipher suites are useful in specialized applications.

 @return an array of cipher suite names
 @see #getDefaultCipherSuites()

<!-- END DATA -->
