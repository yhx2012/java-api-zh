<!-- BEGIN KEY -->
public abstract class javax.net.ssl.TrustManagerFactorySpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->

 This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
 for the <code>TrustManagerFactory</code> class.

 <p> All the abstract methods in this class must be implemented by each
 cryptographic service provider who wishes to supply the implementation
 of a particular trust manager factory.

 @since 1.4
 @see TrustManagerFactory
 @see TrustManager
 @version 1.12

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.net.ssl.TrustManagerFactorySpi.engineInit(KeyStore ks) throws java.security.KeyStoreException
<!-- END KEY -->
<!-- BEGIN DATA -->

 Initializes this factory with a source of certificate
 authorities and related trust material.

 @param ks the key store or null
 @throws KeyStoreException if this operation fails
 @see TrustManagerFactory#init(KeyStore)

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void javax.net.ssl.TrustManagerFactorySpi.engineInit(ManagerFactoryParameters spec) throws java.security.InvalidAlgorithmParameterException
<!-- END KEY -->
<!-- BEGIN DATA -->

 Initializes this factory with a source of provider-specific
 key material.
 <P>
 In some cases, initialization parameters other than a keystore
 may be needed by a provider.  Users of that
 particular provider are expected to pass an implementation of
 the appropriate <CODE>ManagerFactoryParameters</CODE> as
 defined by the provider.  The provider can then call the
 specified methods in the <CODE>ManagerFactoryParameters</CODE>
 implementation to obtain the needed information.

 @param spec an implementation of a provider-specific parameter
		specification
 @throws InvalidAlgorithmParameterException if there is problem
		with the parameters
 @see TrustManagerFactory#init(ManagerFactoryParameters spec)

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract javax.net.ssl.TrustManager[] javax.net.ssl.TrustManagerFactorySpi.engineGetTrustManagers()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns one trust manager for each type of trust material.

 @return the trust managers

<!-- END DATA -->
