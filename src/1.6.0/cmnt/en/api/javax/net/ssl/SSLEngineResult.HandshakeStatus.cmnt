<!-- BEGIN KEY -->
public static final class javax.net.ssl.SSLEngineResult.HandshakeStatus extends java.lang.Enum
<!-- END KEY -->
<!-- BEGIN DATA -->

 An <code>SSLEngineResult</code> enum describing the current
 handshaking state of this <code>SSLEngine</code>.

 @author Brad R. Wetmore
 @version 1.5, 04/04/19
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NOT_HANDSHAKING
<!-- END KEY -->
<!-- BEGIN DATA -->

 The <code>SSLEngine</code> is not currently handshaking.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.FINISHED
<!-- END KEY -->
<!-- BEGIN DATA -->

 The <code>SSLEngine</code> has just finished handshaking.
 <P>
 This value is only generated by a call to
 <code>SSLEngine.wrap()/unwrap()</code> when that call
 finishes a handshake.  It is never generated by
 <code>SSLEngine.getHandshakeStatus()</code>.

 @see SSLEngine#wrap(ByteBuffer, ByteBuffer)
 @see SSLEngine#unwrap(ByteBuffer, ByteBuffer)
 @see SSLEngine#getHandshakeStatus()

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NEED_TASK
<!-- END KEY -->
<!-- BEGIN DATA -->

 The <code>SSLEngine</code> needs the results of one (or more)
 delegated tasks before handshaking can continue.

 @see SSLEngine#getDelegatedTask()

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NEED_WRAP
<!-- END KEY -->
<!-- BEGIN DATA -->

 The <code>SSLEngine</code> must send data to the remote side
 before handshaking can continue, so <code>SSLEngine.wrap()</code>
 should be called.

 @see SSLEngine#wrap(ByteBuffer, ByteBuffer)

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus.NEED_UNWRAP
<!-- END KEY -->
<!-- BEGIN DATA -->

 The <code>SSLEngine</code> needs to receive data from the
 remote side before handshaking can continue.

<!-- END DATA -->
