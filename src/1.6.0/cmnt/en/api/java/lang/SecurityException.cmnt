<!-- BEGIN KEY -->
public class java.lang.SecurityException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Thrown by the security manager to indicate a security violation. 

 @author  unascribed
 @version 1.17, 11/17/05
 @see     java.lang.SecurityManager
 @since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>SecurityException</code> with no detail  message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>SecurityException</code> with the specified 
 detail message. 

 @param   s   the detail message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a <code>SecurityException</code> with the specified
 detail message and cause.

 @param message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
 @param cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
        and indicates that the cause is nonexistent or unknown.)
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.SecurityException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a <code>SecurityException</code> with the specified cause
 and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
 (which typically contains the class and detail message of
 <tt>cause</tt>).

 @param cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
        and indicates that the cause is nonexistent or unknown.)
 @since 1.5

<!-- END DATA -->
