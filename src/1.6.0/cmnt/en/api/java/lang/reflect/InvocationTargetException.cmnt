<!-- BEGIN KEY -->
public class java.lang.reflect.InvocationTargetException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
 InvocationTargetException is a checked exception that wraps
 an exception thrown by an invoked method or constructor.

 <p>As of release 1.4, this exception has been retrofitted to conform to
 the general purpose exception-chaining mechanism.  The "target exception"
 that is provided at construction time and accessed via the
 {@link #getTargetException()} method is now known as the <i>cause</i>,
 and may be accessed via the {@link Throwable#getCause()} method,
 as well as the aforementioned "legacy method."

 @see Method
 @see Constructor

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Throwable java.lang.reflect.InvocationTargetException.target
<!-- END KEY -->
<!-- BEGIN DATA -->
 This field holds the target if the 
 InvocationTargetException(Throwable target) constructor was
 used to instantiate the object
 
 @serial 
 

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.reflect.InvocationTargetException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>InvocationTargetException</code> with 
 <code>null</code> as the target exception.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.InvocationTargetException(Throwable target)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a InvocationTargetException with a target exception.
 
 @param target the target exception

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.reflect.InvocationTargetException(Throwable target, String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a InvocationTargetException with a target exception
 and a detail message.

 @param target the target exception
 @param s      the detail message

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable java.lang.reflect.InvocationTargetException.getTargetException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the thrown target exception.

 <p>This method predates the general-purpose exception chaining facility.
 The {@link Throwable#getCause()} method is now the preferred means of
 obtaining this information.

 @return the thrown target exception (cause of this exception).

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Throwable java.lang.reflect.InvocationTargetException.getCause()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the cause of this exception (the thrown target exception,
 which may be <tt>null</tt>).

 @return  the cause of this exception.
 @since   1.4

<!-- END DATA -->
