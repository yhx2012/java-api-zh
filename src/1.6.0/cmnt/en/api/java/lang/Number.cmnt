<!-- BEGIN KEY -->
public abstract class java.lang.Number extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The abstract class <code>Number</code> is the superclass of classes
 <code>BigDecimal</code>, <code>BigInteger</code>,
 <code>Byte</code>, <code>Double</code>, <code>Float</code>,
 <code>Integer</code>, <code>Long</code>, and <code>Short</code>.
 <p>
 Subclasses of <code>Number</code> must provide methods to convert 
 the represented numeric value to <code>byte</code>, <code>double</code>,
 <code>float</code>, <code>int</code>, <code>long</code>, and
 <code>short</code>.

 @author	Lee Boynton
 @author	Arthur van Hoff
 @version 1.30, 11/17/05
 @see     java.lang.Byte
 @see     java.lang.Double
 @see     java.lang.Float
 @see     java.lang.Integer
 @see     java.lang.Long
 @see     java.lang.Short
 @since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract int java.lang.Number.intValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified number as an <code>int</code>.
 This may involve rounding or truncation.

 @return  the numeric value represented by this object after conversion
          to type <code>int</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract long java.lang.Number.longValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified number as a <code>long</code>.
 This may involve rounding or truncation.

 @return  the numeric value represented by this object after conversion
          to type <code>long</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract float java.lang.Number.floatValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified number as a <code>float</code>.
 This may involve rounding.

 @return  the numeric value represented by this object after conversion
          to type <code>float</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract double java.lang.Number.doubleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified number as a <code>double</code>.
 This may involve rounding.

 @return  the numeric value represented by this object after conversion
          to type <code>double</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte java.lang.Number.byteValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified number as a <code>byte</code>.
 This may involve rounding or truncation.

 @return  the numeric value represented by this object after conversion
          to type <code>byte</code>.
 @since   JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public short java.lang.Number.shortValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified number as a <code>short</code>.
 This may involve rounding or truncation.

 @return  the numeric value represented by this object after conversion
          to type <code>short</code>.
 @since   JDK1.1

<!-- END DATA -->
