<!-- BEGIN KEY -->
public class java.util.prefs.NodeChangeEvent extends java.util.EventObject
<!-- END KEY -->
<!-- BEGIN DATA -->
 An event emitted by a <tt>Preferences</tt> node to indicate that
 a child of that node has been added or removed.<p>
  
 Note, that although NodeChangeEvent inherits Serializable interface from
 java.util.EventObject, it is not intended to be Serializable. Appropriate
 serialization methods are implemented to throw NotSerializableException. 

 @author  Josh Bloch
 @version $I$, $G$ 
 @see     Preferences
 @see     NodeChangeListener
 @see     PreferenceChangeEvent
 @since   1.4
 @serial  exclude

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.util.prefs.Preferences java.util.prefs.NodeChangeEvent.child
<!-- END KEY -->
<!-- BEGIN DATA -->
 The node that was added or removed.

 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.prefs.NodeChangeEvent(Preferences parent, Preferences child)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>NodeChangeEvent</code> instance.

 @param parent  The parent of the node that was added or removed.
 @param child   The node that was added or removed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.prefs.Preferences java.util.prefs.NodeChangeEvent.getParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the parent of the node that was added or removed.

 @return  The parent Preferences node whose child was added or removed

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.prefs.Preferences java.util.prefs.NodeChangeEvent.getChild()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the node that was added or removed.

 @return  The node that was added or removed.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.util.prefs.NodeChangeEvent.readObject(ObjectInputStream in) throws java.io.NotSerializableException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Throws NotSerializableException, since NodeChangeEvent objects are not
 intended to be serializable.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.util.prefs.NodeChangeEvent.writeObject(ObjectOutputStream out) throws java.io.NotSerializableException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Throws NotSerializableException, since NodeChangeEvent objects are not
 intended to be serializable.

<!-- END DATA -->
