<!-- BEGIN KEY -->
public class java.util.zip.CheckedOutputStream extends java.io.FilterOutputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
 An output stream that also maintains a checksum of the data being
 written. The checksum can then be used to verify the integrity of
 the output data.

 @see		Checksum
 @version 	1.19, 11/17/05
 @author 	David Connelly

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.CheckedOutputStream(OutputStream out, Checksum cksum)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an output stream with the specified Checksum.
 @param out the output stream
 @param cksum the checksum

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.CheckedOutputStream.write(int b) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes a byte. Will block until the byte is actually written.
 @param b the byte to be written
 @exception IOException if an I/O error has occurred

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.CheckedOutputStream.write(byte[] b, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes an array of bytes. Will block until the bytes are
 actually written.
 @param b the data to be written
 @param off the start offset of the data
 @param len the number of bytes to be written
 @exception IOException if an I/O error has occurred

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.Checksum java.util.zip.CheckedOutputStream.getChecksum()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the Checksum for this output stream.
 @return the Checksum

<!-- END DATA -->
