<!-- BEGIN KEY -->
public class java.util.zip.GZIPInputStream extends java.util.zip.InflaterInputStream
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class implements a stream filter for reading compressed data in
 the GZIP file format.

 @see		InflaterInputStream
 @version 	1.33, 04/07/06
 @author 	David Connelly


<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.zip.CRC32 java.util.zip.GZIPInputStream.crc
<!-- END KEY -->
<!-- BEGIN DATA -->
 CRC-32 for uncompressed data.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean java.util.zip.GZIPInputStream.eos
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates end of input stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.util.zip.GZIPInputStream.GZIP_MAGIC
<!-- END KEY -->
<!-- BEGIN DATA -->
 GZIP header magic number.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.GZIPInputStream(InputStream in, int size) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new input stream with the specified buffer size.
 @param in the input stream
 @param size the input buffer size
 @exception IOException if an I/O error has occurred
 @exception IllegalArgumentException if size is <= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.GZIPInputStream(InputStream in) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new input stream with a default buffer size.
 @param in the input stream
 @exception IOException if an I/O error has occurred

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.zip.GZIPInputStream.read(byte[] buf, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Reads uncompressed data into an array of bytes. If <code>len</code> is not
 zero, the method will block until some input can be decompressed; otherwise,
 no bytes are read and <code>0</code> is returned.
 @param buf the buffer into which the data is read
 @param off the start offset in the destination array <code>b</code>
 @param len the maximum number of bytes read
 @return	the actual number of bytes read, or -1 if the end of the
		compressed input stream is reached
 @exception  NullPointerException If <code>buf</code> is <code>null</code>.
 @exception  IndexOutOfBoundsException If <code>off</code> is negative, 
 <code>len</code> is negative, or <code>len</code> is greater than 
 <code>buf.length - off</code>
 @exception IOException if an I/O error has occurred or the compressed
			      input data is corrupt

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.GZIPInputStream.close() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Closes this input stream and releases any system resources associated
 with the stream.
 @exception IOException if an I/O error has occurred

<!-- END DATA -->
