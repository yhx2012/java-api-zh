<!-- BEGIN KEY -->
public class java.util.zip.Adler32 extends java.lang.Object implements java.util.zip.Checksum
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class that can be used to compute the Adler-32 checksum of a data
 stream. An Adler-32 checksum is almost as reliable as a CRC-32 but
 can be computed much faster.

 @see		Checksum
 @version 	1.29, 11/17/05
 @author 	David Connelly

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.zip.Adler32()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new Adler32 object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.Adler32.update(int b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Updates checksum with specified byte.
 
 @param b an array of bytes

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.Adler32.update(byte[] b, int off, int len)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Updates checksum with specified array of bytes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.Adler32.update(byte[] b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Updates checksum with specified array of bytes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.zip.Adler32.reset()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Resets checksum to initial value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.util.zip.Adler32.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns checksum value.

<!-- END DATA -->
