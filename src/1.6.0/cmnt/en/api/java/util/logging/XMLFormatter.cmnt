<!-- BEGIN KEY -->
public class java.util.logging.XMLFormatter extends java.util.logging.Formatter
<!-- END KEY -->
<!-- BEGIN DATA -->
 Format a LogRecord into a standard XML format.
 <p>
 The DTD specification is provided as Appendix A to the
 Java Logging APIs specification.
 <p>
 The XMLFormatter can be used with arbitrary character encodings,
 but it is recommended that it normally be used with UTF-8.  The
 character encoding can be set on the output Handler.

 @version 1.26, 11/17/05
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.logging.XMLFormatter.format(LogRecord record)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Format the given message to XML.
 @param record the log record to be formatted.
 @return a formatted log record

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.logging.XMLFormatter.getHead(Handler h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the header string for a set of XML formatted records.
 
 @param   h  The target handler (can be null)
 @return  a valid XML string

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.logging.XMLFormatter.getTail(Handler h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the tail string for a set of XML formatted records.
 
 @param   h  The target handler (can be null)
 @return  a valid XML string

<!-- END DATA -->
