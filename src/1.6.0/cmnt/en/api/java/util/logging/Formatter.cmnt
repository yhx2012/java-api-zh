<!-- BEGIN KEY -->
public abstract class java.util.logging.Formatter extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 A Formatter provides support for formatting LogRecords.
 <p>
 Typically each logging Handler will have a Formatter associated
 with it.  The Formatter takes a LogRecord and converts it to
 a string.
 <p>
 Some formatters (such as the XMLFormatter) need to wrap head
 and tail strings around a set of formatted records. The getHeader
 and getTail methods can be used to obtain these strings.

 @version 1.17, 11/17/05
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.logging.Formatter()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new formatter.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String java.util.logging.Formatter.format(LogRecord record)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Format the given log record and return the formatted string. 
 <p>
 The resulting formatted String will normally include a
 localized and formated version of the LogRecord's message field.
 The Formatter.formatMessage convenience method can (optionally)
 be used to localize and format the message field.

 @param record the log record to be formatted.
 @return the formatted log record

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.logging.Formatter.getHead(Handler h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the header string for a set of formatted records.
 <p>  
 This base class returns an empty string, but this may be
 overriden by subclasses.
 
 @param   h  The target handler (can be null)
 @return  header string

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.logging.Formatter.getTail(Handler h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the tail string for a set of formatted records.
 <p>  
 This base class returns an empty string, but this may be
 overriden by subclasses.
 
 @param   h  The target handler (can be null)
 @return  tail string

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.String java.util.logging.Formatter.formatMessage(LogRecord record)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Localize and format the message string from a log record.  This
 method is provided as a convenience for Formatter subclasses to
 use when they are performing formatting.
 <p>
 The message string is first localized to a format string using
 the record's ResourceBundle.  (If there is no ResourceBundle,
 or if the message key is not found, then the key is used as the
 format string.)  The format String uses java.text style
 formatting.
 <ul>
 <li>If there are no parameters, no formatter is used.
 <li>Otherwise, if the string contains "{0" then
     java.text.MessageFormat  is used to format the string.
 <li>Otherwise no formatting is performed. 
 </ul> 
 <p>

 @param  record  the log record containing the raw message
 @return   a localized and formatted message

<!-- END DATA -->
