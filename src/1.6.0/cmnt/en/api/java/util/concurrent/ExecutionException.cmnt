<!-- BEGIN KEY -->
public class java.util.concurrent.ExecutionException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
 Exception thrown when attempting to retrieve the result of a task
 that aborted by throwing an exception. This exception can be
 inspected using the {@link #getCause()} method.

 @see Future
 @since 1.5
 @author Doug Lea

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.concurrent.ExecutionException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <tt>ExecutionException</tt> with no detail message.
 The cause is not initialized, and may subsequently be
 initialized by a call to {@link #initCause(Throwable) initCause}.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.concurrent.ExecutionException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <tt>ExecutionException</tt> with the specified detail
 message. The cause is not initialized, and may subsequently be
 initialized by a call to {@link #initCause(Throwable) initCause}.

 @param message the detail message

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.ExecutionException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <tt>ExecutionException</tt> with the specified detail
 message and cause.

 @param  message the detail message
 @param  cause the cause (which is saved for later retrieval by the
         {@link #getCause()} method)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.ExecutionException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <tt>ExecutionException</tt> with the specified cause.
 The detail message is set to:
 <pre>
  (cause == null ? null : cause.toString())</pre>
 (which typically contains the class and detail message of
 <tt>cause</tt>).

 @param  cause the cause (which is saved for later retrieval by the
         {@link #getCause()} method)

<!-- END DATA -->
