<!-- BEGIN KEY -->
public class java.util.concurrent.RejectedExecutionException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Exception thrown by an {@link Executor} when a task cannot be
 accepted for execution.

 @since 1.5
 @author Doug Lea

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <tt>RejectedExecutionException</tt> with no detail message.
 The cause is not initialized, and may subsequently be
 initialized by a call to {@link #initCause(Throwable) initCause}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <tt>RejectedExecutionException</tt> with the
 specified detail message. The cause is not initialized, and may
 subsequently be initialized by a call to {@link
 #initCause(Throwable) initCause}.

 @param message the detail message

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <tt>RejectedExecutionException</tt> with the
 specified detail message and cause.

 @param  message the detail message
 @param  cause the cause (which is saved for later retrieval by the
         {@link #getCause()} method)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.concurrent.RejectedExecutionException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <tt>RejectedExecutionException</tt> with the
 specified cause.  The detail message is set to: <pre> (cause ==
 null ? null : cause.toString())</pre> (which typically contains
 the class and detail message of <tt>cause</tt>).

 @param  cause the cause (which is saved for later retrieval by the
         {@link #getCause()} method)

<!-- END DATA -->
