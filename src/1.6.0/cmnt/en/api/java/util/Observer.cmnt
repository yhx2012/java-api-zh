<!-- BEGIN KEY -->
public interface java.util.Observer
<!-- END KEY -->
<!-- BEGIN DATA -->
 A class can implement the <code>Observer</code> interface when it
 wants to be informed of changes in observable objects.

 @author  Chris Warth
 @version 1.20, 11/17/05
 @see     java.util.Observable
 @since   JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.Observer.update(Observable o, Object arg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is called whenever the observed object is changed. An
 application calls an <tt>Observable</tt> object's
 <code>notifyObservers</code> method to have all the object's
 observers notified of the change.

 @param   o     the observable object.
 @param   arg   an argument passed to the <code>notifyObservers</code>
                 method.

<!-- END DATA -->
