<!-- BEGIN KEY -->
public class java.util.MissingResourceException extends java.lang.RuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Signals that a resource is missing.
 @see java.lang.Exception
 @see ResourceBundle
 @version     1.19, 11/17/05
 @author      Mark Davis
 @since       JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.util.MissingResourceException.className
<!-- END KEY -->
<!-- BEGIN DATA -->
 The class name of the resource bundle requested by the user.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.util.MissingResourceException.key
<!-- END KEY -->
<!-- BEGIN DATA -->
 The name of the specific resource requested by the user.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.MissingResourceException(String s, String className, String key)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a MissingResourceException with the specified information.
 A detail message is a String that describes this particular exception.
 @param s the detail message
 @param className the name of the resource class
 @param key the key for the missing resource.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.MissingResourceException.getClassName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets parameter passed by constructor.

 @return the name of the resource class

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.MissingResourceException.getKey()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets parameter passed by constructor.

 @return the key for the missing resource

<!-- END DATA -->
