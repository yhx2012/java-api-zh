<!-- BEGIN KEY -->
public class java.util.jar.Attributes extends java.lang.Object implements java.util.Map, java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Attributes class maps Manifest attribute names to associated string
 values. Valid attribute names are case-insensitive, are restricted to 
 the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 
 characters in length. Attribute values can contain any characters and 
 will be UTF8-encoded when written to the output stream.  See the 
 <a href="../../../../technotes/guides/jar/jar.html">JAR File Specification</a> 
 for more information about valid attribute names and values.

 @author  David Connelly
 @version 1.54, 04/21/06
 @see	    Manifest
 @since   1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.util.Map<java.lang.Object, java.lang.Object> java.util.jar.Attributes.map
<!-- END KEY -->
<!-- BEGIN DATA -->
 The attribute name-value mappings.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.jar.Attributes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new, empty Attributes object with default size.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.jar.Attributes(int size)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new, empty Attributes object with the specified
 initial size.

 @param size the initial number of attributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.jar.Attributes(Attributes attr)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new Attributes object with the same attribute name-value
 mappings as in the specified Attributes.

 @param attr the specified Attributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.util.jar.Attributes.get(Object name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified attribute name, or null if the
 attribute name was not found.

 @param name the attribute name
 @return the value of the specified attribute name, or null if
         not found.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.jar.Attributes.getValue(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified attribute name, specified as
 a string, or null if the attribute was not found. The attribute
 name is case-insensitive.
 <p>
 This method is defined as:
 <pre>
	    return (String)get(new Attributes.Name((String)name));
 </pre>

 @param name the attribute name as a string
 @return the String value of the specified attribute name, or null if
         not found.
 @throws IllegalArgumentException if the attribute name is invalid

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.jar.Attributes.getValue(Attributes.Name name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value of the specified Attributes.Name, or null if the
 attribute was not found.
 <p>
 This method is defined as:
 <pre>
     return (String)get(name);
 </pre>

 @param name the Attributes.Name object
 @return the String value of the specified Attribute.Name, or null if
         not found.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.util.jar.Attributes.put(Object name, Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Associates the specified value with the specified attribute name
 (key) in this Map. If the Map previously contained a mapping for
 the attribute name, the old value is replaced.

 @param name the attribute name
 @param value the attribute value
 @return the previous value of the attribute, or null if none
 @exception ClassCastException if the name is not a Attributes.Name
            or the value is not a String

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.util.jar.Attributes.putValue(String name, String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Associates the specified value with the specified attribute name,
 specified as a String. The attributes name is case-insensitive.
 If the Map previously contained a mapping for the attribute name,
 the old value is replaced.
 <p>
 This method is defined as:
 <pre>
	    return (String)put(new Attributes.Name(name), value);
 </pre>

 @param name the attribute name as a string
 @param value the attribute value
 @return the previous value of the attribute, or null if none
 @exception IllegalArgumentException if the attribute name is invalid

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.util.jar.Attributes.remove(Object name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the attribute with the specified name (key) from this Map.
 Returns the previous attribute value, or null if none.

 @param name attribute name
 @return the previous value of the attribute, or null if none

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.util.jar.Attributes.containsValue(Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if this Map maps one or more attribute names (keys)
 to the specified value.

 @param value the attribute value
 @return true if this Map maps one or more attribute names to
         the specified value

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.util.jar.Attributes.containsKey(Object name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if this Map contains the specified attribute name (key).

 @param name the attribute name
 @return true if this Map contains the specified attribute name

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.jar.Attributes.putAll(java.util.Map<?, ?> attr)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Copies all of the attribute name-value mappings from the specified
 Attributes to this Map. Duplicate mappings will be replaced.

 @param attr the Attributes to be stored in this map
 @exception ClassCastException if attr is not an Attributes

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.util.jar.Attributes.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes all attributes from this Map.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.jar.Attributes.size()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of attributes in this Map.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.util.jar.Attributes.isEmpty()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if this Map contains no attributes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.lang.Object> java.util.jar.Attributes.keySet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a Set view of the attribute names (keys) contained in this Map.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Collection<java.lang.Object> java.util.jar.Attributes.values()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a Collection view of the attribute values contained in this Map.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> java.util.jar.Attributes.entrySet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a Collection view of the attribute name-value mappings
 contained in this Map.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.util.jar.Attributes.equals(Object o)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares the specified Attributes object with this Map for equality.
 Returns true if the given object is also an instance of Attributes
 and the two Attributes objects represent the same mappings.

 @param o the Object to be compared
 @return true if the specified Object is equal to this Map

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.util.jar.Attributes.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the hash code value for this Map.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.util.jar.Attributes.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a copy of the Attributes, implemented as follows:
 <pre>
     public Object clone() { return new Attributes(this); }
 </pre>
 Since the attribute names and values are themselves immutable,
 the Attributes returned can be safely modified without affecting
 the original.

<!-- END DATA -->
