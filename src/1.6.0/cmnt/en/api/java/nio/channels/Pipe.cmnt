<!-- BEGIN KEY -->
public abstract class java.nio.channels.Pipe extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 A pair of channels that implements a unidirectional pipe.

 <p> A pipe consists of a pair of channels: A writable {@link
 Pipe.SinkChannel </code>sink<code>} channel and a readable {@link
 Pipe.SourceChannel </code>source<code>} channel.  Once some bytes are
 written to the sink channel they can be read from source channel in exactly
 the order in which they were written.

 <p> Whether or not a thread writing bytes to a pipe will block until another
 thread reads those bytes, or some previously-written bytes, from the pipe is
 system-dependent and therefore unspecified.  Many pipe implementations will
 buffer up to a certain number of bytes between the sink and source channels,
 but such buffering should not be assumed.  </p>


 @author Mark Reinhold
 @author JSR-51 Expert Group
 @version 1.21, 05/11/17
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.nio.channels.Pipe()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Initializes a new instance of this class.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.nio.channels.Pipe.SourceChannel java.nio.channels.Pipe.source()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns this pipe's source channel.  </p>

 @return  This pipe's source channel

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.nio.channels.Pipe.SinkChannel java.nio.channels.Pipe.sink()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns this pipe's sink channel.  </p>

 @return  This pipe's sink channel

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.nio.channels.Pipe java.nio.channels.Pipe.open() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Opens a pipe.

 <p> The new pipe is created by invoking the {@link
 java.nio.channels.spi.SelectorProvider#openPipe openPipe} method of the
 system-wide default {@link java.nio.channels.spi.SelectorProvider}
 object.  </p>

 @return  A new pipe

 @throws  IOException
          If an I/O error occurs

<!-- END DATA -->
