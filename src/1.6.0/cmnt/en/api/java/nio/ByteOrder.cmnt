<!-- BEGIN KEY -->
public final class java.nio.ByteOrder extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 A typesafe enumeration for byte orders.

 @author Mark Reinhold
 @author JSR-51 Expert Group
 @version 1.14, 05/11/17
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.nio.ByteOrder java.nio.ByteOrder.BIG_ENDIAN
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constant denoting big-endian byte order.  In this order, the bytes of a
 multibyte value are ordered from most significant to least significant.
 </p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.nio.ByteOrder java.nio.ByteOrder.LITTLE_ENDIAN
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constant denoting little-endian byte order.  In this order, the bytes of
 a multibyte value are ordered from least significant to most
 significant.  </p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.nio.ByteOrder java.nio.ByteOrder.nativeOrder()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the native byte order of the underlying platform.

 <p> This method is defined so that performance-sensitive Java code can
 allocate direct buffers with the same byte order as the hardware.
 Native code libraries are often more efficient when such buffers are
 used.  </p>

 @return  The native byte order of the hardware upon which this Java
          virtual machine is running

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.nio.ByteOrder.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a string describing this object.

 <p> This method returns the string <tt>"BIG_ENDIAN"</tt> for {@link
 #BIG_ENDIAN} and <tt>"LITTLE_ENDIAN"</tt> for {@link #LITTLE_ENDIAN}.
 </p>

 @return  The specified string

<!-- END DATA -->
