<!-- BEGIN KEY -->
public class java.text.FieldPosition extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>FieldPosition</code> is a simple class used by <code>Format</code>
 and its subclasses to identify fields in formatted output. Fields can
 be identified in two ways:
 <ul>
  <li>By an integer constant, whose names typically end with
      <code>_FIELD</code>. The constants are defined in the various
      subclasses of <code>Format</code>.
  <li>By a <code>Format.Field</code> constant, see <code>ERA_FIELD</code>
      and its friends in <code>DateFormat</code> for an example.
 </ul>
 <p>
 <code>FieldPosition</code> keeps track of the position of the
 field within the formatted output with two indices: the index
 of the first character of the field and the index of the last
 character of the field.

 <p>
 One version of the <code>format</code> method in the various
 <code>Format</code> classes requires a <code>FieldPosition</code>
 object as an argument. You use this <code>format</code> method
 to perform partial formatting or to get information about the
 formatted output (such as the position of a field).

 <p>
 If you are interested in the positions of all attributes in the
 formatted string use the <code>Format</code> method
 <code>formatToCharacterIterator</code>.

 @version     1.22 11/17/05
 @author      Mark Davis
 @see         java.text.Format

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.text.FieldPosition(int field)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a FieldPosition object for the given field.  Fields are
 identified by constants, whose names typically end with _FIELD,
 in the various subclasses of Format.

 @see java.text.NumberFormat#INTEGER_FIELD
 @see java.text.NumberFormat#FRACTION_FIELD
 @see java.text.DateFormat#YEAR_FIELD
 @see java.text.DateFormat#MONTH_FIELD

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.text.FieldPosition(Format.Field attribute)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a FieldPosition object for the given field constant. Fields are
 identified by constants defined in the various <code>Format</code>
 subclasses. This is equivalent to calling
 <code>new FieldPosition(attribute, -1)</code>.

 @param attribute Format.Field constant identifying a field
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.text.FieldPosition(Format.Field attribute, int fieldID)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a <code>FieldPosition</code> object for the given field.
 The field is identified by an attribute constant from one of the
 <code>Field</code> subclasses as well as an integer field ID
 defined by the <code>Format</code> subclasses. <code>Format</code>
 subclasses that are aware of <code>Field</code> should give precedence
 to <code>attribute</code> and ignore <code>fieldID</code> if
 <code>attribute</code> is not null. However, older <code>Format</code>
 subclasses may not be aware of <code>Field</code> and rely on
 <code>fieldID</code>. If the field has no corresponding integer
 constant, <code>fieldID</code> should be -1.

 @param attribute Format.Field constant identifying a field
 @param fieldID integer constantce identifying a field
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.text.Format.Field java.text.FieldPosition.getFieldAttribute()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the field identifier as an attribute constant
 from one of the <code>Field</code> subclasses. May return null if
 the field is specified only by an integer field ID.

 @return Identifier for the field
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.text.FieldPosition.getField()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the field identifier.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.text.FieldPosition.getBeginIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the index of the first character in the requested field.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.text.FieldPosition.getEndIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the index of the character following the last character in the
 requested field.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.text.FieldPosition.setBeginIndex(int bi)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the begin index.  For use by subclasses of Format.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.text.FieldPosition.setEndIndex(int ei)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the end index.  For use by subclasses of Format.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.text.FieldPosition.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Overrides equals

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.text.FieldPosition.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a hash code for this FieldPosition.
 @return a hash code value for this object

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.text.FieldPosition.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return a string representation of this FieldPosition.
 @return  a string representation of this object

<!-- END DATA -->
