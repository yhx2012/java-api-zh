<!-- BEGIN KEY -->
public abstract class java.io.FilterWriter extends java.io.Writer
<!-- END KEY -->
<!-- BEGIN DATA -->
 Abstract class for writing filtered character streams.
 The abstract class <code>FilterWriter</code> itself
 provides default methods that pass all requests to the
 contained stream. Subclasses of <code>FilterWriter</code>
 should override some of these methods and may also 
 provide additional methods and fields.

 @version 	1.18, 05/11/17
 @author	Mark Reinhold
 @since	JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.io.Writer java.io.FilterWriter.out
<!-- END KEY -->
<!-- BEGIN DATA -->
 The underlying character-output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.io.FilterWriter(Writer out)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new filtered writer.

 @param out  a Writer object to provide the underlying stream.
 @throws NullPointerException if <code>out</code> is <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.FilterWriter.write(int c) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes a single character.

 @exception  IOException  If an I/O error occurs

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.FilterWriter.write(char[] cbuf, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes a portion of an array of characters.

 @param  cbuf  Buffer of characters to be written
 @param  off   Offset from which to start reading characters
 @param  len   Number of characters to be written

 @exception  IOException  If an I/O error occurs

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.FilterWriter.write(String str, int off, int len) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes a portion of a string.

 @param  str  String to be written
 @param  off  Offset from which to start reading characters
 @param  len  Number of characters to be written

 @exception  IOException  If an I/O error occurs

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.io.FilterWriter.flush() throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Flushes the stream.

 @exception  IOException  If an I/O error occurs

<!-- END DATA -->
