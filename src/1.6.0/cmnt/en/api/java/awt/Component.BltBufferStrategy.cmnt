<!-- BEGIN KEY -->
protected class java.awt.Component.BltBufferStrategy extends java.awt.image.BufferStrategy
<!-- END KEY -->
<!-- BEGIN DATA -->
 Inner class for blitting offscreen surfaces to a component.

 @author Michael Martak
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.BufferCapabilities java.awt.Component.BltBufferStrategy.caps
<!-- END KEY -->
<!-- BEGIN DATA -->
 The buffering capabilities

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.image.VolatileImage[] java.awt.Component.BltBufferStrategy.backBuffers
<!-- END KEY -->
<!-- BEGIN DATA -->
 The back buffers

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean java.awt.Component.BltBufferStrategy.validatedContents
<!-- END KEY -->
<!-- BEGIN DATA -->
 Whether or not the drawing buffer has been recently restored from
 a lost state.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected int java.awt.Component.BltBufferStrategy.width
<!-- END KEY -->
<!-- BEGIN DATA -->
 Size of the back buffers

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.Component.BltBufferStrategy(int numBuffers, BufferCapabilities caps)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new blt buffer strategy around a component
 @param numBuffers number of buffers to create, including the
 front buffer
 @param caps the capabilities of the buffers

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Component.BltBufferStrategy.dispose()
<!-- END KEY -->
<!-- BEGIN DATA -->
 {@inheritDoc}
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.awt.Component.BltBufferStrategy.createBackBuffers(int numBuffers)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates the back buffers

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.BufferCapabilities java.awt.Component.BltBufferStrategy.getCapabilities()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the buffering capabilities of this strategy

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Graphics java.awt.Component.BltBufferStrategy.getDrawGraphics()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the draw graphics

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Component.BltBufferStrategy.show()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Makes the next available buffer visible.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.awt.Component.BltBufferStrategy.revalidate()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Restore the drawing buffer if it has been lost

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.Component.BltBufferStrategy.contentsLost()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return whether the drawing buffer was lost since the last call to
 <code>getDrawGraphics</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.Component.BltBufferStrategy.contentsRestored()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return whether the drawing buffer was recently restored from a lost
 state and reinitialized to the default background color (white)

<!-- END DATA -->
