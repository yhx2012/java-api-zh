<!-- BEGIN KEY -->
public abstract class java.awt.geom.Point2D extends java.lang.Object implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>Point2D</code> class defines a point representing a location
 in {@code (x,y)} coordinate space.
 <p>
 This class is only the abstract superclass for all objects that
 store a 2D coordinate.
 The actual storage representation of the coordinates is left to
 the subclass.

 @version 	1.21, 02/24/06
 @author	Jim Graham
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.geom.Point2D()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is an abstract class that cannot be instantiated directly.
 Type-specific implementation subclasses are available for
 instantiation and provide a number of formats for storing
 the information necessary to satisfy the various accessor
 methods below.

 @see java.awt.geom.Point2D.Float
 @see java.awt.geom.Point2D.Double
 @see java.awt.Point
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract double java.awt.geom.Point2D.getX()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the X coordinate of this <code>Point2D</code> in 
 <code>double</code> precision.
 @return the X coordinate of this <code>Point2D</code>.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract double java.awt.geom.Point2D.getY()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the Y coordinate of this <code>Point2D</code> in 
 <code>double</code> precision.
 @return the Y coordinate of this <code>Point2D</code>. 
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void java.awt.geom.Point2D.setLocation(double x, double y)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the location of this <code>Point2D</code> to the 
 specified <code>double</code> coordinates.

 @param x the new X coordinate of this {@code Point2D}
 @param y the new Y coordinate of this {@code Point2D}
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.geom.Point2D.setLocation(Point2D p)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the location of this <code>Point2D</code> to the same
 coordinates as the specified <code>Point2D</code> object.
 @param p the specified <code>Point2D</code> to which to set
 this <code>Point2D</code>
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public static double java.awt.geom.Point2D.distanceSq(double x1, double y1, double x2, double y2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the square of the distance between two points.

 @param x1 the X coordinate of the first specified point
 @param y1 the Y coordinate of the first specified point
 @param x2 the X coordinate of the second specified point
 @param y2 the Y coordinate of the second specified point
 @return the square of the distance between the two
 sets of specified coordinates.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public static double java.awt.geom.Point2D.distance(double x1, double y1, double x2, double y2)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the distance between two points.

 @param x1 the X coordinate of the first specified point
 @param y1 the Y coordinate of the first specified point
 @param x2 the X coordinate of the second specified point
 @param y2 the Y coordinate of the second specified point
 @return the distance between the two sets of specified
 coordinates.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distanceSq(double px, double py)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the square of the distance from this 
 <code>Point2D</code> to a specified point.

 @param px the X coordinate of the specified point to be measured
           against this <code>Point2D</code>
 @param py the Y coordinate of the specified point to be measured
           against this <code>Point2D</code>
 @return the square of the distance between this
 <code>Point2D</code> and the specified point.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distanceSq(Point2D pt)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the square of the distance from this 
 <code>Point2D</code> to a specified <code>Point2D</code>.

 @param pt the specified point to be measured
           against this <code>Point2D</code>
 @return the square of the distance between this
 <code>Point2D</code> to a specified <code>Point2D</code>.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distance(double px, double py)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the distance from this <code>Point2D</code> to 
 a specified point.

 @param px the X coordinate of the specified point to be measured
           against this <code>Point2D</code>
 @param py the Y coordinate of the specified point to be measured
           against this <code>Point2D</code>
 @return the distance between this <code>Point2D</code>
 and a specified point.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.geom.Point2D.distance(Point2D pt)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the distance from this <code>Point2D</code> to a
 specified <code>Point2D</code>.

 @param pt the specified point to be measured
           against this <code>Point2D</code>
 @return the distance between this <code>Point2D</code> and
 the specified <code>Point2D</code>.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.geom.Point2D.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new object of the same class and with the
 same contents as this object.
 @return     a clone of this instance.
 @exception  OutOfMemoryError            if there is not enough memory.
 @see        java.lang.Cloneable
 @since      1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.geom.Point2D.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the hashcode for this <code>Point2D</code>.
 @return      a hash code for this <code>Point2D</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.geom.Point2D.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines whether or not two points are equal. Two instances of
 <code>Point2D</code> are equal if the values of their 
 <code>x</code> and <code>y</code> member fields, representing
 their position in the coordinate space, are the same.
 @param obj an object to be compared with this <code>Point2D</code>
 @return <code>true</code> if the object to be compared is
         an instance of <code>Point2D</code> and has
         the same values; <code>false</code> otherwise.
 @since 1.2

<!-- END DATA -->
