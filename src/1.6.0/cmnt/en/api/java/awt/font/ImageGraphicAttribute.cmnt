<!-- BEGIN KEY -->
public final class java.awt.font.ImageGraphicAttribute extends java.awt.font.GraphicAttribute
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>ImageGraphicAttribute</code> class is an implementation of
 {@link GraphicAttribute} which draws images in
 a {@link TextLayout}.
 @see GraphicAttribute

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.font.ImageGraphicAttribute(Image image, int alignment)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constucts an <code>ImageGraphicAttribute</code> from the specified
 {@link Image}.  The origin is at (0,&nbsp;0).
 @param image the <code>Image</code> rendered by this
 <code>ImageGraphicAttribute</code>.
 This object keeps a reference to <code>image</code>.
 @param alignment one of the alignments from this
 <code>ImageGraphicAttribute</code> 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.font.ImageGraphicAttribute(Image image, int alignment, float originX, float originY)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>ImageGraphicAttribute</code> from the specified
 <code>Image</code>. The point
 (<code>originX</code>,&nbsp;<code>originY</code>) in the 
 <code>Image</code> appears at the origin of the 
 <code>ImageGraphicAttribute</code> within the text.
 @param image the <code>Image</code> rendered by this
 <code>ImageGraphicAttribute</code>.
 This object keeps a reference to <code>image</code>.
 @param alignment one of the alignments from this 
 <code>ImageGraphicAttribute</code>
 @param originX the X coordinate of the point within
 the <code>Image</code> that appears at the origin of the
 <code>ImageGraphicAttribute</code> in the text line.
 @param originY the Y coordinate of the point within
 the <code>Image</code> that appears at the origin of the
 <code>ImageGraphicAttribute</code> in the text line.

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.font.ImageGraphicAttribute.getAscent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the ascent of this <code>ImageGraphicAttribute</code>.  The
 ascent of an <code>ImageGraphicAttribute</code> is the distance
 from the top of the image to the origin.
 @return the ascent of this <code>ImageGraphicAttribute</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.font.ImageGraphicAttribute.getDescent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the descent of this <code>ImageGraphicAttribute</code>.
 The descent of an <code>ImageGraphicAttribute</code> is the
 distance from the origin to the bottom of the image.
 @return the descent of this <code>ImageGraphicAttribute</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.font.ImageGraphicAttribute.getAdvance()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the advance of this <code>ImageGraphicAttribute</code>.
 The advance of an <code>ImageGraphicAttribute</code> is the
 distance from the origin to the right edge of the image.
 @return the advance of this <code>ImageGraphicAttribute</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.Rectangle2D java.awt.font.ImageGraphicAttribute.getBounds()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a {@link Rectangle2D} that encloses all of the
 bits rendered by this <code>ImageGraphicAttribute</code>, relative
 to the rendering position.  A graphic can be rendered beyond its
 origin, ascent, descent, or advance;  but if it is, this
 method's implementation must indicate where the graphic is rendered.
 @return a <code>Rectangle2D</code> that encloses all of the bits
 rendered by this <code>ImageGraphicAttribute</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.font.ImageGraphicAttribute.draw(Graphics2D graphics, float x, float y)
<!-- END KEY -->
<!-- BEGIN DATA -->
 {@inheritDoc}

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.font.ImageGraphicAttribute.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a hashcode for this <code>ImageGraphicAttribute</code>.
 @return  a hash code value for this object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.font.ImageGraphicAttribute.equals(Object rhs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares this <code>ImageGraphicAttribute</code> to the specified
 {@link Object}.
 @param rhs the <code>Object</code> to compare for equality
 @return <code>true</code> if this 
 <code>ImageGraphicAttribute</code> equals <code>rhs</code>;
 <code>false</code> otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.font.ImageGraphicAttribute.equals(ImageGraphicAttribute rhs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares this <code>ImageGraphicAttribute</code> to the specified
 <code>ImageGraphicAttribute</code>.
 @param rhs the <code>ImageGraphicAttribute</code> to compare for
 equality
 @return <code>true</code> if this
 <code>ImageGraphicAttribute</code> equals <code>rhs</code>;
 <code>false</code> otherwise.

<!-- END DATA -->
