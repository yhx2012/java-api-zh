<!-- BEGIN KEY -->
public final class java.awt.font.TransformAttribute extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>TransformAttribute</code> class provides an immutable
 wrapper for a transform so that it is safe to use as an attribute.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.font.TransformAttribute java.awt.font.TransformAttribute.IDENTITY
<!-- END KEY -->
<!-- BEGIN DATA -->
 A <code>TransformAttribute</code> representing the identity transform.
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.awt.geom.AffineTransform java.awt.font.TransformAttribute.transform
<!-- END KEY -->
<!-- BEGIN DATA -->

 The <code>AffineTransform</code> for this 
 <code>TransformAttribute</code>, or <code>null</code>
 if <code>AffineTransform</code> is the identity transform.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.font.TransformAttribute(AffineTransform transform)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Wraps the specified transform.  The transform is cloned and a
 reference to the clone is kept.  The original transform is unchanged.
 If null is passed as the argument, this constructor behaves as though 
 it were the identity transform.  (Note that it is preferable to use
 {@link #IDENTITY} in this case.)
 @param transform the specified {@link AffineTransform} to be wrapped,
 or null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.geom.AffineTransform java.awt.font.TransformAttribute.getTransform()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a copy of the wrapped transform.
 @return a <code>AffineTransform</code> that is a copy of the wrapped
 transform of this <code>TransformAttribute</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.font.TransformAttribute.isIdentity()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> if the wrapped transform is
 an identity transform.
 @return <code>true</code> if the wrapped transform is
 an identity transform; <code>false</code> otherwise.
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.font.TransformAttribute.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.font.TransformAttribute.equals(Object rhs)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> if rhs is a <code>TransformAttribute</code>
 whose transform is equal to this <code>TransformAttribute</code>'s
 transform.
 @param rhs the object to compare to
 @return <code>true</code> if the argument is a <code>TransformAttribute</code>
 whose transform is equal to this <code>TransformAttribute</code>'s
 transform.
 @since 1.6

<!-- END DATA -->
