<!-- BEGIN KEY -->
public interface java.awt.PaintContext
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>PaintContext</code> interface defines the encapsulated 
 and optimized environment to generate color patterns in device 
 space for fill or stroke operations on a 
 {@link Graphics2D}.  The <code>PaintContext</code> provides
 the necessary colors for <code>Graphics2D</code> operations in the 
 form of a {@link Raster} associated with a {@link ColorModel}.  
 The <code>PaintContext</code> maintains state for a particular paint 
 operation.  In a multi-threaded environment, several
 contexts can exist simultaneously for a single {@link Paint} object.
 @see Paint
 @version 10 Feb 1997

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.PaintContext.dispose()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Releases the resources allocated for the operation.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.ColorModel java.awt.PaintContext.getColorModel()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>ColorModel</code> of the output.  Note that
 this <code>ColorModel</code> might be different from the hint
 specified in the 
 {@link Paint#createContext(ColorModel, Rectangle, Rectangle2D,
AffineTransform, RenderingHints) createContext} method of
 <code>Paint</code>.  Not all <code>PaintContext</code> objects are
 capable of generating color patterns in an arbitrary
 <code>ColorModel</code>.
 @return the <code>ColorModel</code> of the output.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.Raster java.awt.PaintContext.getRaster(int x, int y, int w, int h)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a <code>Raster</code> containing the colors generated for 
 the graphics operation.
 @param x the x coordinate of the area in device space
 for which colors are generated.
 @param y the y coordinate of the area in device space
 for which colors are generated.
 @param w the width of the area in device space 
 @param h the height of the area in device space
 @return a <code>Raster</code> representing the specified 
 rectangular area and containing the colors generated for
 the graphics operation.

<!-- END DATA -->
