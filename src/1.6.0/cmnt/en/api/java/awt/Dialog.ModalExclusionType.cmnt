<!-- BEGIN KEY -->
public static final class java.awt.Dialog.ModalExclusionType extends java.lang.Enum
<!-- END KEY -->
<!-- BEGIN DATA -->
 Any top-level window can be marked not to be blocked by modal
 dialogs. This is called "modal exclusion". This enum specifies
 the possible modal exclusion types.

 @see Window#getModalExclusionType
 @see Window#setModalExclusionType
 @see Toolkit#isModalExclusionTypeSupported

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.Dialog.ModalExclusionType java.awt.Dialog.ModalExclusionType.NO_EXCLUDE
<!-- END KEY -->
<!-- BEGIN DATA -->
 No modal exclusion.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.Dialog.ModalExclusionType java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>APPLICATION_EXCLUDE</code> indicates that a top-level window
 won't be blocked by any application-modal dialogs. Also, it isn't
 blocked by document-modal dialogs from outside of its child hierarchy.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.awt.Dialog.ModalExclusionType java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>TOOLKIT_EXCLUDE</code> indicates that a top-level window
 won't be blocked by  application-modal or toolkit-modal dialogs. Also,
 it isn't blocked by document-modal dialogs from outside of its
 child hierarchy.
 The "toolkitModality" <code>AWTPermission</code> must be granted
 for this exclusion. If an exclusion property is being changed to
 <code>TOOLKIT_EXCLUDE</code> and this permission is not granted, a
 <code>SecurityEcxeption</code> will be thrown, and the exclusion
 property will be left unchanged.

<!-- END DATA -->
