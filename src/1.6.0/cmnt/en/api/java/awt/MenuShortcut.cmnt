<!-- BEGIN KEY -->
public class java.awt.MenuShortcut extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>MenuShortcut</code>class represents a keyboard accelerator 
 for a MenuItem.
 <p>
 Menu shortcuts are created using virtual keycodes, not characters.  
 For example, a menu shortcut for Ctrl-a (assuming that Control is
 the accelerator key) would be created with code like the following: 
 <p>
 MenuShortcut ms = new MenuShortcut(KeyEvent.VK_A, false);
 <p>
 The accelerator key is platform-dependent and may be obtained
 via {@link Toolkit#getMenuShortcutKeyMask}.

 @author Thomas Ball
 @version 1.26, 11/17/05
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
 int java.awt.MenuShortcut.key
<!-- END KEY -->
<!-- BEGIN DATA -->
 The virtual keycode for the menu shortcut.
 This is the keycode with which the menu shortcut will be created.
 Note that it is a virtual keycode, not a character, 
 e.g. KeyEvent.VK_A, not 'a'.
 Note: in 1.1.x you must use setActionCommand() on a menu item
 in order for its shortcut to work, otherwise it will fire a null
 action command.

 @serial
 @see #getKey()
 @see #usesShiftModifier()
 @see java.awt.event.KeyEvent
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
 boolean java.awt.MenuShortcut.usesShift
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates whether the shft key was pressed.
 If true, the shift key was pressed.
 If false, the shift key was not pressed

 @serial
 @see #usesShiftModifier()
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.MenuShortcut(int key)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new MenuShortcut for the specified virtual keycode.
 @param key the raw keycode for this MenuShortcut, as would be returned
 in the keyCode field of a {@link java.awt.event.KeyEvent KeyEvent} if 
 this key were pressed.
 @see java.awt.event.KeyEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.MenuShortcut(int key, boolean useShiftModifier)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new MenuShortcut for the specified virtual keycode.
 @param key the raw keycode for this MenuShortcut, as would be returned
 in the keyCode field of a {@link java.awt.event.KeyEvent KeyEvent} if 
 this key were pressed.
 @param useShiftModifier indicates whether this MenuShortcut is invoked
 with the SHIFT key down.
 @see java.awt.event.KeyEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.MenuShortcut.getKey()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the raw keycode of this MenuShortcut.
 @return the raw keycode of this MenuShortcut.
 @see java.awt.event.KeyEvent
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.MenuShortcut.usesShiftModifier()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether this MenuShortcut must be invoked using the SHIFT key.
 @return <code>true</code> if this MenuShortcut must be invoked using the 
 SHIFT key, <code>false</code> otherwise.
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.MenuShortcut.equals(MenuShortcut s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether this MenuShortcut is the same as another:
 equality is defined to mean that both MenuShortcuts use the same key
 and both either use or don't use the SHIFT key.
 @param s the MenuShortcut to compare with this.
 @return <code>true</code> if this MenuShortcut is the same as another, 
 <code>false</code> otherwise.
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.MenuShortcut.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether this MenuShortcut is the same as another:
 equality is defined to mean that both MenuShortcuts use the same key
 and both either use or don't use the SHIFT key.
 @param obj the Object to compare with this.
 @return <code>true</code> if this MenuShortcut is the same as another, 
 <code>false</code> otherwise.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.MenuShortcut.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the hashcode for this MenuShortcut.
 @return the hashcode for this MenuShortcut.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.MenuShortcut.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an internationalized description of the MenuShortcut.
 @return a string representation of this MenuShortcut.
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String java.awt.MenuShortcut.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the parameter string representing the state of this
 MenuShortcut. This string is useful for debugging.
 @return    the parameter string of this MenuShortcut.
 @since JDK1.1

<!-- END DATA -->
