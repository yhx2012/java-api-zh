<!-- BEGIN KEY -->
public class java.awt.Event extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is 
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 <code>Event</code> is a platform-independent class that
 encapsulates events from the platform's Graphical User
 Interface in the Java&nbsp;1.0 event model. In Java&nbsp;1.1
 and later versions, the <code>Event</code> class is maintained
 only for backwards compatibilty. The information in this
 class description is provided to assist programmers in
 converting Java&nbsp;1.0 programs to the new event model.
 <p>
 In the Java&nbsp;1.0 event model, an event contains an
 {@link Event#id} field
 that indicates what type of event it is and which other
 <code>Event</code> variables are relevant for the event.
 <p>
 For keyboard events, {@link Event#key}
 contains a value indicating which key was activated, and
 {@link Event#modifiers} contains the
 modifiers for that event.  For the KEY_PRESS and KEY_RELEASE
 event ids, the value of <code>key</code> is the unicode
 character code for the key. For KEY_ACTION and
 KEY_ACTION_RELEASE, the value of <code>key</code> is
 one of the defined action-key identifiers in the
 <code>Event</code> class (<code>PGUP</code>,
 <code>PGDN</code>, <code>F1</code>, <code>F2</code>, etc).

 @version 1.76 11/17/05
 @author     Sami Shaio
 @since      JDK1.0

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SHIFT_MASK
<!-- END KEY -->
<!-- BEGIN DATA -->
 This flag indicates that the Shift key was down when the event
 occurred.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.CTRL_MASK
<!-- END KEY -->
<!-- BEGIN DATA -->
 This flag indicates that the Control key was down when the event
 occurred.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.META_MASK
<!-- END KEY -->
<!-- BEGIN DATA -->
 This flag indicates that the Meta key was down when the event
 occurred. For mouse events, this flag indicates that the right
 button was pressed or released.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.ALT_MASK
<!-- END KEY -->
<!-- BEGIN DATA -->
 This flag indicates that the Alt key was down when
 the event occurred. For mouse events, this flag indicates that the
 middle mouse button was pressed or released.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.HOME
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Home key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.END
<!-- END KEY -->
<!-- BEGIN DATA -->
 The End key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.PGUP
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Page Up key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.PGDN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Page Down key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.UP
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Up Arrow key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.DOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Down Arrow key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.LEFT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Left Arrow key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.RIGHT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Right Arrow key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F1
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F1 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F2
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F2 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F3
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F3 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F4
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F4 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F5
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F5 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F6
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F6 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F7
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F7 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F8
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F8 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F9
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F9 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F10
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F10 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F11
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F11 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.F12
<!-- END KEY -->
<!-- BEGIN DATA -->
 The F12 function key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.PRINT_SCREEN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Print Screen key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_LOCK
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Scroll Lock key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.CAPS_LOCK
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Caps Lock key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.NUM_LOCK
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Num Lock key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.PAUSE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Pause key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.INSERT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Insert key, a non-ASCII action key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.ENTER
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Enter key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.BACK_SPACE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The BackSpace key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.TAB
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Tab key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.ESCAPE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Escape key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.DELETE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Delete key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.WINDOW_DESTROY
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has asked the window manager to kill the window.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.WINDOW_EXPOSE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has asked the window manager to expose the window.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.WINDOW_ICONIFY
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has asked the window manager to iconify the window.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.WINDOW_DEICONIFY
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has asked the window manager to de-iconify the window.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.WINDOW_MOVED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has asked the window manager to move the window.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.KEY_PRESS
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has pressed a normal key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.KEY_RELEASE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has released a normal key.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.KEY_ACTION
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has pressed a non-ASCII <em>action</em> key.
 The <code>key</code> field contains a value that indicates
 that the event occurred on one of the action keys, which
 comprise the 12 function keys, the arrow (cursor) keys,
 Page Up, Page Down, Home, End, Print Screen, Scroll Lock,
 Caps Lock, Num Lock, Pause, and Insert.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.KEY_ACTION_RELEASE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has released a non-ASCII <em>action</em> key.
 The <code>key</code> field contains a value that indicates
 that the event occurred on one of the action keys, which
 comprise the 12 function keys, the arrow (cursor) keys,
 Page Up, Page Down, Home, End, Print Screen, Scroll Lock,
 Caps Lock, Num Lock, Pause, and Insert.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.MOUSE_DOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has pressed the mouse button. The <code>ALT_MASK</code>
 flag indicates that the middle button has been pressed.
 The <code>META_MASK</code>flag indicates that the
 right button has been pressed.
 @see     java.awt.Event#ALT_MASK
 @see     java.awt.Event#META_MASK

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.MOUSE_UP
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has released the mouse button. The <code>ALT_MASK</code>
 flag indicates that the middle button has been released.
 The <code>META_MASK</code>flag indicates that the
 right button has been released.
 @see     java.awt.Event#ALT_MASK
 @see     java.awt.Event#META_MASK

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.MOUSE_MOVE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The mouse has moved with no button pressed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.MOUSE_ENTER
<!-- END KEY -->
<!-- BEGIN DATA -->
 The mouse has entered a component.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.MOUSE_EXIT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The mouse has exited a component.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.MOUSE_DRAG
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has moved the mouse with a button pressed. The
 <code>ALT_MASK</code> flag indicates that the middle
 button is being pressed. The <code>META_MASK</code> flag indicates
 that the right button is being pressed.
 @see     java.awt.Event#ALT_MASK
 @see     java.awt.Event#META_MASK

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_LINE_UP
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has activated the <em>line up</em>
 area of a scroll bar.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_LINE_DOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has activated the <em>line down</em>
 area of a scroll bar.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_PAGE_UP
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has activated the <em>page up</em>
 area of a scroll bar.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_PAGE_DOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has activated the <em>page down</em>
 area of a scroll bar.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_ABSOLUTE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The user has moved the bubble (thumb) in a scroll bar,
 moving to an "absolute" position, rather than to
 an offset from the last postion.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_BEGIN
<!-- END KEY -->
<!-- BEGIN DATA -->
 The scroll begin event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SCROLL_END
<!-- END KEY -->
<!-- BEGIN DATA -->
 The scroll end event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.LIST_SELECT
<!-- END KEY -->
<!-- BEGIN DATA -->
 An item in a list has been selected.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.LIST_DESELECT
<!-- END KEY -->
<!-- BEGIN DATA -->
 An item in a list has been deselected.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.ACTION_EVENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 This event indicates that the user wants some action to occur.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.LOAD_FILE
<!-- END KEY -->
<!-- BEGIN DATA -->
 A file loading event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.SAVE_FILE
<!-- END KEY -->
<!-- BEGIN DATA -->
 A file saving event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.GOT_FOCUS
<!-- END KEY -->
<!-- BEGIN DATA -->
 A component gained the focus.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Event.LOST_FOCUS
<!-- END KEY -->
<!-- BEGIN DATA -->
 A component lost the focus.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.Event.target
<!-- END KEY -->
<!-- BEGIN DATA -->
 The target component. This indicates the component over which the
 event occurred or with which the event is associated.
 This object has been replaced by AWTEvent.getSource()

 @serial
 @see java.awt.AWTEvent#getSource()

<!-- END DATA -->
<!-- BEGIN KEY -->
public long java.awt.Event.when
<!-- END KEY -->
<!-- BEGIN DATA -->
 The time stamp.
 Replaced by InputEvent.getWhen().

 @serial
 @see java.awt.event.InputEvent#getWhen()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Event.id
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates which type of event the event is, and which
 other <code>Event</code> variables are relevant for the event.
 This has been replaced by AWTEvent.getID()

 @serial
 @see java.awt.AWTEvent#getID()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Event.x
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <i>x</i> coordinate of the event.
 Replaced by MouseEvent.getX()

 @serial
 @see java.awt.event.MouseEvent#getX()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Event.y
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <i>y</i> coordinate of the event.
 Replaced by MouseEvent.getY()

 @serial
 @see java.awt.event.MouseEvent#getY()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Event.key
<!-- END KEY -->
<!-- BEGIN DATA -->
 The key code of the key that was pressed in a keyboard event.
 This has been replaced by KeyEvent.getKeyCode()

 @serial
 @see java.awt.event.KeyEvent#getKeyCode()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Event.modifiers
<!-- END KEY -->
<!-- BEGIN DATA -->
 The state of the modifier keys.
 This is replaced with InputEvent.getModifiers()
 In java 1.1 MouseEvent and KeyEvent are subclasses
 of InputEvent.

 @serial
 @see java.awt.event.InputEvent#getModifiers()

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Event.clickCount
<!-- END KEY -->
<!-- BEGIN DATA -->
 For <code>MOUSE_DOWN</code> events, this field indicates the
 number of consecutive clicks. For other events, its value is
 <code>0</code>.
 This field has been replaced by MouseEvent.getClickCount().

 @serial
 @see java.awt.event.MouseEvent#getClickCount().

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.Event.arg
<!-- END KEY -->
<!-- BEGIN DATA -->
 An arbitrary argument of the event. The value of this field
 depends on the type of event.
 <code>arg</code> has been replaced by event specific property.

 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Event java.awt.Event.evt
<!-- END KEY -->
<!-- BEGIN DATA -->
 The next event. This field is set when putting events into a
 linked list.
 This has been replaced by EventQueue.

 @serial
 @see java.awt.EventQueue

<!-- END DATA -->
<!-- BEGIN KEY -->
private boolean java.awt.Event.consumed
<!-- END KEY -->
<!-- BEGIN DATA -->
 This field controls whether or not the event is sent back
 down to the peer once the target has processed it -
 false means it's sent to the peer, true means it's not.

 @serial
 @see #isConsumed()

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Event(Object target, long when, int id, int x, int y, int key, int modifiers, Object arg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Creates an instance of <code>Event</code> with the specified target
 component, time stamp, event type, <i>x</i> and <i>y</i>
 coordinates, keyboard key, state of the modifier keys, and
 argument.
 @param     target     the target component.
 @param     when       the time stamp.
 @param     id         the event type.
 @param     x          the <i>x</i> coordinate.
 @param     y          the <i>y</i> coordinate.
 @param     key        the key pressed in a keyboard event.
 @param     modifiers  the state of the modifier keys.
 @param     arg        the specified argument.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Event(Object target, long when, int id, int x, int y, int key, int modifiers)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Creates an instance of <code>Event</code>, with the specified target
 component, time stamp, event type, <i>x</i> and <i>y</i>
 coordinates, keyboard key, state of the modifier keys, and an
 argument set to <code>null</code>.
 @param     target     the target component.
 @param     when       the time stamp.
 @param     id         the event type.
 @param     x          the <i>x</i> coordinate.
 @param     y          the <i>y</i> coordinate.
 @param     key        the key pressed in a keyboard event.
 @param     modifiers  the state of the modifier keys.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Event(Object target, int id, Object arg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Creates an instance of <code>Event</code> with the specified
 target component, event type, and argument.
 @param     target     the target component.
 @param     id         the event type.
 @param     arg        the specified argument.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Event.translate(int dx, int dy)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Translates this event so that its <i>x</i> and <i>y</i>
 coordinates are increased by <i>dx</i> and <i>dy</i>,
 respectively.
 <p>
 This method translates an event relative to the given component.
 This involves, at a minimum, translating the coordinates into the
 local coordinate system of the given component. It may also involve
 translating a region in the case of an expose event.
 @param     dx     the distance to translate the <i>x</i> coordinate.
 @param     dy     the distance to translate the <i>y</i> coordinate.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.Event.shiftDown()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Checks if the Shift key is down.
 @return    <code>true</code> if the key is down;
            <code>false</code> otherwise.
 @see       java.awt.Event#modifiers
 @see       java.awt.Event#controlDown
 @see       java.awt.Event#metaDown

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.Event.controlDown()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Checks if the Control key is down.
 @return    <code>true</code> if the key is down;
            <code>false</code> otherwise.
 @see       java.awt.Event#modifiers
 @see       java.awt.Event#shiftDown
 @see       java.awt.Event#metaDown

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.Event.metaDown()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Checks if the Meta key is down.

 @return    <code>true</code> if the key is down;
            <code>false</code> otherwise.
 @see       java.awt.Event#modifiers
 @see       java.awt.Event#shiftDown
 @see       java.awt.Event#controlDown

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.String java.awt.Event.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Returns a string representing the state of this <code>Event</code>.
 This method is intended to be used only for debugging purposes, and the 
 content and format of the returned string may vary between 
 implementations. The returned string may be empty but may not be 
 <code>null</code>.

 @return    the parameter string of this event

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.Event.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 <b>NOTE:</b> The <code>Event</code> class is obsolete and is
 available only for backwards compatilibility.  It has been replaced 
 by the <code>AWTEvent</code> class and its subclasses.
 <p>
 Returns a representation of this event's values as a string.
 @return    a string that represents the event and the values
                 of its member fields.
 @see       java.awt.Event#paramString
 @since     JDK1.1

<!-- END DATA -->
