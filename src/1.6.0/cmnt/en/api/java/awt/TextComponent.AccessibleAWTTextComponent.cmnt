<!-- BEGIN KEY -->
protected class java.awt.TextComponent.AccessibleAWTTextComponent extends java.awt.Component.AccessibleAWTComponent implements javax.accessibility.AccessibleText, java.awt.event.TextListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class implements accessibility support for the 
 <code>TextComponent</code> class.  It provides an implementation of the 
 Java Accessibility API appropriate to text component user-interface 
 elements.
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.TextComponent.AccessibleAWTTextComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an AccessibleAWTTextComponent.  Adds a listener to track
 caret change.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.TextComponent.AccessibleAWTTextComponent.textValueChanged(TextEvent textEvent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 TextListener notification of a text value change.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleStateSet java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleStateSet()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the state set of the TextComponent.
 The AccessibleStateSet of an object is composed of a set of 
 unique AccessibleStates.  A change in the AccessibleStateSet 
 of an object will cause a PropertyChangeEvent to be fired
 for the AccessibleContext.ACCESSIBLE_STATE_PROPERTY property.

 @return an instance of AccessibleStateSet containing the
 current state set of the object
 @see AccessibleStateSet
 @see AccessibleState
 @see #addPropertyChangeListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleRole java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleRole()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the role of this object.

 @return an instance of AccessibleRole describing the role of the 
 object (AccessibleRole.TEXT)
 @see AccessibleRole

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.accessibility.AccessibleText java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleText()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the AccessibleText associated with this object.  In the
 implementation of the Java Accessibility API for this class, 
 return this object, which is responsible for implementing the
 AccessibleText interface on behalf of itself.
 
 @return this object 

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.TextComponent.AccessibleAWTTextComponent.getIndexAtPoint(Point p)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Given a point in local coordinates, return the zero-based index
 of the character under that Point.  If the point is invalid,
 this method returns -1.

 @param p the Point in local coordinates
 @return the zero-based index of the character under Point p.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Rectangle java.awt.TextComponent.AccessibleAWTTextComponent.getCharacterBounds(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determines the bounding box of the character at the given
 index into the string.  The bounds are returned in local
 coordinates.  If the index is invalid a null rectangle
 is returned.

 @param i the index into the String >= 0
 @return the screen coordinates of the character's bounding box

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.TextComponent.AccessibleAWTTextComponent.getCharCount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of characters (valid indicies)

 @return the number of characters >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.TextComponent.AccessibleAWTTextComponent.getCaretPosition()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the zero-based offset of the caret.

 Note: The character to the right of the caret will have the
 same index value as the offset (the caret is between
 two characters).

 @return the zero-based offset of the caret.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.swing.text.AttributeSet java.awt.TextComponent.AccessibleAWTTextComponent.getCharacterAttribute(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the AttributeSet for a given character (at a given index).

 @param i the zero-based index into the text
 @return the AttributeSet of the character

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.TextComponent.AccessibleAWTTextComponent.getSelectionStart()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the start offset within the selected text.
 If there is no selection, but there is
 a caret, the start and end offsets will be the same.
 Return 0 if the text is empty, or the caret position
 if no selection.

 @return the index into the text of the start of the selection >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.TextComponent.AccessibleAWTTextComponent.getSelectionEnd()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the end offset within the selected text.
 If there is no selection, but there is
 a caret, the start and end offsets will be the same.
 Return 0 if the text is empty, or the caret position
 if no selection.

 @return the index into teh text of the end of the selection >= 0

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.TextComponent.AccessibleAWTTextComponent.getSelectedText()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the portion of the text that is selected.

 @return the text, null if no selection

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.TextComponent.AccessibleAWTTextComponent.getAtIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the String at a given index. 

 @param part the AccessibleText.CHARACTER, AccessibleText.WORD,
 or AccessibleText.SENTENCE to retrieve
 @param index an index within the text >= 0
 @return the letter, word, or sentence,
   null for an invalid index or part

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.TextComponent.AccessibleAWTTextComponent.getAfterIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the String after a given index.

 @param part the AccessibleText.CHARACTER, AccessibleText.WORD,
 or AccessibleText.SENTENCE to retrieve
 @param index an index within the text >= 0
 @return the letter, word, or sentence, null for an invalid
  index or part

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.TextComponent.AccessibleAWTTextComponent.getBeforeIndex(int part, int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the String before a given index.

 @param part the AccessibleText.CHARACTER, AccessibleText.WORD,
   or AccessibleText.SENTENCE to retrieve
 @param index an index within the text >= 0
 @return the letter, word, or sentence, null for an invalid index
  or part

<!-- END DATA -->
