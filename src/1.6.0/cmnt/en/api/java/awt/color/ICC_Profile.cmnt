<!-- BEGIN KEY -->
public class java.awt.color.ICC_Profile extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 A representation of color profile data for device independent and
 device dependent color spaces based on the International Color
 Consortium Specification ICC.1:2001-12, File Format for Color Profiles,
 (see <A href="http://www.color.org"> http://www.color.org</A>).
 <p>
 An ICC_ColorSpace object can be constructed from an appropriate
 ICC_Profile.
 Typically, an ICC_ColorSpace would be associated with an ICC
 Profile which is either an input, display, or output profile (see
 the ICC specification).  There are also device link, abstract,
 color space conversion, and named color profiles.  These are less
 useful for tagging a color or image, but are useful for other
 purposes (in particular device link profiles can provide improved
 performance for converting from one device's color space to
 another's).
 <p> 
 ICC Profiles represent transformations from the color space of
 the profile (e.g. a monitor) to a Profile Connection Space (PCS).
 Profiles of interest for tagging images or colors have a PCS
 which is one of the two specific device independent
 spaces (one CIEXYZ space and one CIELab space) defined in the
 ICC Profile Format Specification.  Most profiles of interest
 either have invertible transformations or explicitly specify
 transformations going both directions.
 <p>
 @version 10 Feb 1997
 @see ICC_ColorSpace

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_INPUT
<!-- END KEY -->
<!-- BEGIN DATA -->
 Profile class is input.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_DISPLAY
<!-- END KEY -->
<!-- BEGIN DATA -->
 Profile class is display.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_OUTPUT
<!-- END KEY -->
<!-- BEGIN DATA -->
 Profile class is output.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_DEVICELINK
<!-- END KEY -->
<!-- BEGIN DATA -->
 Profile class is device link.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_COLORSPACECONVERSION
<!-- END KEY -->
<!-- BEGIN DATA -->
 Profile class is color space conversion.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_ABSTRACT
<!-- END KEY -->
<!-- BEGIN DATA -->
 Profile class is abstract.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.CLASS_NAMEDCOLOR
<!-- END KEY -->
<!-- BEGIN DATA -->
 Profile class is named color.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigXYZData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'XYZ '.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLabData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'Lab '.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLuvData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'Luv '.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigYCbCrData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'YCbr'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigYxyData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'Yxy '.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRgbData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'RGB '.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGrayData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'GRAY'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigHsvData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'HSV'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigHlsData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'HLS'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCmykData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'CMYK'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCmyData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'CMY '.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace2CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '2CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace3CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '3CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace4CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '4CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace5CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '5CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace6CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '6CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace7CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '7CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace8CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '8CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpace9CLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: '9CLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceACLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'ACLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceBCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'BCLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceCCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'CCLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceDCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'DCLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceECLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'ECLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigSpaceFCLR
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Color Space Type Signature: 'FCLR'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigInputClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Class Signature: 'scnr'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDisplayClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Class Signature: 'mntr'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigOutputClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Class Signature: 'prtr'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLinkClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Class Signature: 'link'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAbstractClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Class Signature: 'abst'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigColorSpaceClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Class Signature: 'spac'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigNamedColorClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Class Signature: 'nmcl'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icPerceptual
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Rendering Intent: Perceptual.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icRelativeColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Rendering Intent: RelativeColorimetric.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icMediaRelativeColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Rendering Intent: Media-RelativeColorimetric.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSaturation
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Rendering Intent: Saturation.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icAbsoluteColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Rendering Intent: AbsoluteColorimetric.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icICCAbsoluteColorimetric
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Rendering Intent: ICC-AbsoluteColorimetric.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigHead
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'head' - special.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAToB0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'A2B0'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAToB1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'A2B1'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigAToB2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'A2B2'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBlueColorantTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'bXYZ'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBlueMatrixColumnTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'bXYZ'.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBlueTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'bTRC'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBToA0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'B2A0'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBToA1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'B2A1'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigBToA2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'B2A2'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCalibrationDateTimeTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'calt'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCharTargetTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'targ'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCopyrightTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'cprt'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigCrdInfoTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'crdi'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDeviceMfgDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'dmnd'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDeviceModelDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'dmdd'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigDeviceSettingsTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'devs'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGamutTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'gamt'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGrayTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'kTRC'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGreenColorantTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'gXYZ'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGreenMatrixColumnTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'gXYZ'.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigGreenTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'gTRC'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigLuminanceTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'lumi'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigMeasurementTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'meas'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigMediaBlackPointTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'bkpt'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigMediaWhitePointTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'wtpt'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigNamedColor2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'ncl2'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigOutputResponseTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'resp'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPreview0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'pre0'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPreview1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'pre1'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPreview2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'pre2'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigProfileDescriptionTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'desc'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigProfileSequenceDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'pseq'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD0Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'psd0'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD1Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'psd1'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD2Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'psd2'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CRD3Tag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'psd3'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2CSATag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'ps2s'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigPs2RenderingIntentTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'ps2i'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRedColorantTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'rXYZ'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRedMatrixColumnTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'rXYZ'.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigRedTRCTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'rTRC'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigScreeningDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'scrd'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigScreeningTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'scrn'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigTechnologyTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'tech'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigUcrBgTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'bfd '.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigViewingCondDescTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'vued'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigViewingConditionsTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'view'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigChromaticityTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'chrm'.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigChromaticAdaptationTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'chad'.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigColorantOrderTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'clro'.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icSigColorantTableTag
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Tag Signature: 'clrt'.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrSize
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: profile size in bytes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrCmmId
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: CMM for this profile.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrVersion
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: format version number.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrDeviceClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: type of profile.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrColorSpace
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: color space of data.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrPcs
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: PCS - XYZ or Lab only.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrDate
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: date profile was created.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrMagic
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: icMagicNumber.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrPlatform
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: primary platform.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrFlags
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: various bit settings.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrManufacturer
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: device manufacturer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrModel
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: device model number.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrAttributes
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: device attributes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrRenderingIntent
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: rendering intent.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrIlluminant
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: profile illuminant.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrCreator
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: profile creator.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icHdrProfileID
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Header Location: profile's ID.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icTagType
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Constant: tag type signaturE.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icTagReserved
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Constant: reserved.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icCurveCount
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Constant: curveType count.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icCurveData
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Constant: curveType data.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.color.ICC_Profile.icXYZNumberX
<!-- END KEY -->
<!-- BEGIN DATA -->
 ICC Profile Constant: XYZNumber X.

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.color.ICC_Profile.iccProfileSerializedDataVersion
<!-- END KEY -->
<!-- BEGIN DATA -->
 Version of the format of additional serialized data in the
 stream.  Version&nbsp;<code>1</code> corresponds to Java&nbsp;2
 Platform,&nbsp;v1.3.
 @since 1.3
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
protected void java.awt.color.ICC_Profile.finalize()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Frees the resources associated with an ICC_Profile object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(byte[] data)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an ICC_Profile object corresponding to the data in
 a byte array.  Throws an IllegalArgumentException if the data
 does not correspond to a valid ICC Profile.
 @param data the specified ICC Profile data
 @return an <code>ICC_Profile</code> object corresponding to
          the data in the specified <code>data</code> array.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(int cspace)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an ICC_Profile corresponding to one of the specific color
 spaces defined by the ColorSpace class (for example CS_sRGB).
 Throws an IllegalArgumentException if cspace is not one of the
 defined color spaces.
   
 @param cspace the type of color space to create a profile for.
 The specified type is one of the color
 space constants defined in the  <CODE>ColorSpace</CODE> class.
       
 @return an <code>ICC_Profile</code> object corresponding to
          the specified <code>ColorSpace</code> type.
 @exception IllegalArgumentException If <CODE>cspace</CODE> is not
 one of the predefined color space types.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(String fileName) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an ICC_Profile corresponding to the data in a file.
 fileName may be an absolute or a relative file specification.
 Relative file names are looked for in several places: first, relative
 to any directories specified by the java.iccprofile.path property;
 second, relative to any directories specified by the java.class.path
 property; finally, in a directory used to store profiles always
 available, such as the profile for sRGB.  Built-in profiles use .pf as
 the file name extension for profiles, e.g. sRGB.pf.
 This method throws an IOException if the specified file cannot be
 opened or if an I/O error occurs while reading the file.  It throws
 an IllegalArgumentException if the file does not contain valid ICC
 Profile data.
 @param fileName The file that contains the data for the profile.

 @return an <code>ICC_Profile</code> object corresponding to
          the data in the specified file.
 @exception IOException If the specified file cannot be opened or
 an I/O error occurs while reading the file.
   
 @exception IllegalArgumentException If the file does not
 contain valid ICC Profile data. 

 @exception SecurityException If a security manager is installed
 and it does not permit read access to the given file.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(InputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an ICC_Profile corresponding to the data in an InputStream.
 This method throws an IllegalArgumentException if the stream does not
 contain valid ICC Profile data.  It throws an IOException if an I/O
 error occurs while reading the stream.
 @param s The input stream from which to read the profile data.

 @return an <CODE>ICC_Profile</CODE> object corresponding to the
     data in the specified <code>InputStream</code>.

 @exception IOException If an I/O error occurs while reading the stream.
   
 @exception IllegalArgumentException If the stream does not
 contain valid ICC Profile data.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getMajorVersion()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns profile major version.
 @return  The major version of the profile.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getMinorVersion()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns profile minor version.
 @return The minor version of the profile.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getProfileClass()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the profile class.
 @return One of the predefined profile class constants.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getColorSpaceType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the color space type.  Returns one of the color space type
 constants defined by the ColorSpace class.  This is the
 "input" color space of the profile.  The type defines the
 number of components of the color space and the interpretation,
 e.g. TYPE_RGB identifies a color space with three components - red,
 green, and blue.  It does not define the particular color
 characteristics of the space, e.g. the chromaticities of the
 primaries.
 @return One of the color space type constants defined in the
 <CODE>ColorSpace</CODE> class.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getPCSType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the color space type of the Profile Connection Space (PCS).
 Returns one of the color space type constants defined by the
 ColorSpace class.  This is the "output" color space of the
 profile.  For an input, display, or output profile useful
 for tagging colors or images, this will be either TYPE_XYZ or
 TYPE_Lab and should be interpreted as the corresponding specific
 color space defined in the ICC specification.  For a device
 link profile, this could be any of the color space type constants.
 @return One of the color space type constants defined in the
 <CODE>ColorSpace</CODE> class.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.color.ICC_Profile.write(String fileName) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Write this ICC_Profile to a file.
  
 @param fileName The file to write the profile data to.

 @exception IOException If the file cannot be opened for writing
 or an I/O error occurs while writing to the file.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.color.ICC_Profile.write(OutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Write this ICC_Profile to an OutputStream.

 @param s The stream to write the profile data to.

 @exception IOException If an I/O error occurs while writing to the
 stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.awt.color.ICC_Profile.getData()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a byte array corresponding to the data of this ICC_Profile.
 @return A byte array that contains the profile data.
 @see #setData(int, byte[])

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.awt.color.ICC_Profile.getData(int tagSignature)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a particular tagged data element from the profile as
 a byte array.  Elements are identified by signatures
 as defined in the ICC specification.  The signature
 icSigHead can be used to get the header.  This method is useful
 for advanced applets or applications which need to access
 profile data directly.
  
 @param tagSignature The ICC tag signature for the data element you
 want to get.
 
 @return A byte array that contains the tagged data element. Returns
 <code>null</code> if the specified tag doesn't exist.
 @see #setData(int, byte[])

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.color.ICC_Profile.setData(int tagSignature, byte[] tagData)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets a particular tagged data element in the profile from
 a byte array.  This method is useful
 for advanced applets or applications which need to access
 profile data directly.
                                        
 @param tagSignature The ICC tag signature for the data element
 you want to set.
 @param tagData the data to set for the specified tag signature
 @see #getData

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.color.ICC_Profile.getNumComponents()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the number of color components in the "input" color
 space of this profile.  For example if the color space type
 of this profile is TYPE_RGB, then this method will return 3.

 @return The number of color components in the profile's input
 color space.

 @throws ProfileDataException if color space is in the profile
         is invalid

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object java.awt.color.ICC_Profile.readResolve() throws java.io.ObjectStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Resolves instances being deserialized into instances registered
 with CMM.
 @return ICC_Profile object for profile registered with CMM.
 @throws ObjectStreamException
     never thrown, but mandated by the serialization spec.
 @since 1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.awt.color.ICC_Profile.readObject(ObjectInputStream s) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Reads default serializable fields from the stream.  Reads from
 the stream a string and an array of bytes as additional data.

 @param s stream used for deserialization.
 @throws IOException
     thrown by <code>ObjectInputStream</code>.
 @throws ClassNotFoundException
     thrown by <code>ObjectInputStream</code>.
 @serialData
     The <code>String</code> is the name of one of
     <code>CS_<var>*</var></code> constants defined in the
     {@link ColorSpace} class if the profile object is a profile
     for a predefined color space (for example
     <code>"CS_sRGB"</code>).  The string is <code>null</code>
     otherwise.
     <p>
     The <code>byte[]</code> array is the profile data for the
     profile.  It will usually be <code>null</code> for the
     predefined profiles.
     <p>
     If the string is recognized as a constant name for
     predefined color space the object will be resolved into
     profile obtained with
     <code>getInstance(int&nbsp;cspace)</code> and the profile
     data are ignored.  Otherwise the object will be resolved
     into profile obtained with
     <code>getInstance(byte[]&nbsp;data)</code>.
 @see #readResolve()
 @see #getInstance(int)
 @see #getInstance(byte[])

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.awt.color.ICC_Profile.writeObject(ObjectOutputStream s) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes default serializable fields to the stream.  Writes a
 string and an array of bytes to the stream as additional data.

 @param s stream used for serialization.
 @throws IOException
     thrown by <code>ObjectInputStream</code>.
 @serialData 
     The <code>String</code> is the name of one of
     <code>CS_<var>*</var></code> constants defined in the
     {@link ColorSpace} class if the profile object is a profile
     for a predefined color space (for example
     <code>"CS_sRGB"</code>).  The string is <code>null</code>
     otherwise.
     <p>
     The <code>byte[]</code> array is the profile data for the
     profile.  For predefined color spaces <code>null</code> is
     written instead of the profile data.  If in the future
     versions of Java API new predefined color spaces will be
     added, future versions of this class may choose to write
     for new predefined color spaces not only the color space
     name, but the profile data as well so that older versions
     could still deserialize the object.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Object java.awt.color.ICC_Profile.readResolve() throws java.io.ObjectStreamException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Resolves instances being deserialized into instances registered
 with CMM.
 @return ICC_Profile object for profile registered with CMM.
 @throws ObjectStreamException
     never thrown, but mandated by the serialization spec.
 @since 1.3

<!-- END DATA -->
