<!-- BEGIN KEY -->
public class java.awt.ScrollPaneAdjustable extends java.lang.Object implements java.awt.Adjustable, java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class represents the state of a horizontal or vertical
 scrollbar of a <code>ScrollPane</code>.  Objects of this class are
 returned by <code>ScrollPane</code> methods.

 @version     1.11 07/11/06
 @since	1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.awt.ScrollPane java.awt.ScrollPaneAdjustable.sp
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>ScrollPane</code> this object is a scrollbar of.
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.orientation
<!-- END KEY -->
<!-- BEGIN DATA -->
 Orientation of this scrollbar.
 
 @serial
 @see #getOrientation
 @see java.awt.Adjustable#HORIZONTAL
 @see java.awt.Adjustable#VERTICAL

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.value
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value of this scrollbar.
 <code>value</code> should be greater than <code>minimum</code>
 and less than <code>maximum</code>
 
 @serial
 @see #getValue
 @see #setValue

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.minimum
<!-- END KEY -->
<!-- BEGIN DATA -->
 The minimum value of this scrollbar.
 This value can only be set by the <code>ScrollPane</code>.
 <p>
 <strong>ATTN:</strong> In current implementation
 <code>minimum</code> is always <code>0</code>.  This field can
 only be altered via <code>setSpan</code> method and
 <code>ScrollPane</code> always calls that method with
 <code>0</code> for the minimum.  <code>getMinimum</code> method
 always returns <code>0</code> without checking this field.
 
 @serial
 @see #getMinimum
 @see #setSpan(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.maximum
<!-- END KEY -->
<!-- BEGIN DATA -->
 The maximum value of this scrollbar.
 This value can only be set by the <code>ScrollPane</code>.
 
 @serial
 @see #getMaximum
 @see #setSpan(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.visibleAmount
<!-- END KEY -->
<!-- BEGIN DATA -->
 The size of the visible portion of this scrollbar.
 This value can only be set by the <code>ScrollPane</code>.
 
 @serial
 @see #getVisibleAmount
 @see #setSpan(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.unitIncrement
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount by which the scrollbar value will change when going
 up or down by a line.
 This value should be a non negative integer.

 @serial
 @see #getUnitIncrement
 @see #setUnitIncrement

<!-- END DATA -->
<!-- BEGIN KEY -->
private int java.awt.ScrollPaneAdjustable.blockIncrement
<!-- END KEY -->
<!-- BEGIN DATA -->
 The amount by which the scrollbar value will change when going
 up or down by a page.
 This value should be a non negative integer.

 @serial
 @see #getBlockIncrement
 @see #setBlockIncrement

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.ScrollPaneAdjustable.getOrientation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the orientation of this scrollbar.
 @return    the orientation of this scrollbar, either
            <code>Adjustable.HORIZONTAL</code> or
            <code>Adjustable.VERTICAL</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setMinimum(int min)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method should <strong>NOT</strong> be called by user code.
 This method is public for this class to properly implement
 <code>Adjustable</code> interface.

 @throws <code>AWTError</code>  Always throws an error when called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setMaximum(int max)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method should <strong>NOT</strong> be called by user code.
 This method is public for this class to properly implement
 <code>Adjustable</code> interface.

 @throws <code>AWTError</code>  Always throws an error when called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setVisibleAmount(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method should <strong>NOT</strong> be called by user code.
 This method is public for this class to properly implement
 <code>Adjustable</code> interface.

 @throws <code>AWTError</code>  Always throws an error when called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setValueIsAdjusting(boolean b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the <code>valueIsAdjusting</code> property.
 
 @param b new adjustment-in-progress status
 @see #getValueIsAdjusting
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.ScrollPaneAdjustable.getValueIsAdjusting()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if the value is in the process of changing as a
 result of actions being taken by the user.

 @return the value of the <code>valueIsAdjusting</code> property
 @see #setValueIsAdjusting

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.ScrollPaneAdjustable.setValue(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the value of this scrollbar to the specified value.
 <p>
 If the value supplied is less than the current minimum or
 greater than the current maximum, then one of those values is
 substituted, as appropriate.

 @param v the new value of the scrollbar

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.ScrollPaneAdjustable.addAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds the specified adjustment listener to receive adjustment
 events from this <code>ScrollPaneAdjustable</code>.
 If <code>l</code> is <code>null</code>, no exception is thrown
 and no action is performed.
 <p>Refer to <a href="doc-files/AWTThreadIssues.html#ListenersThreads"
 >AWT Threading Issues</a> for details on AWT's threading model.

 @param    l   the adjustment listener.
 @see      #removeAdjustmentListener
 @see      #getAdjustmentListeners
 @see      java.awt.event.AdjustmentListener
 @see      java.awt.event.AdjustmentEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.ScrollPaneAdjustable.removeAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the specified adjustment listener so that it no longer
 receives adjustment events from this <code>ScrollPaneAdjustable</code>.
 If <code>l</code> is <code>null</code>, no exception is thrown
 and no action is performed.
 <p>Refer to <a href="doc-files/AWTThreadIssues.html#ListenersThreads"
 >AWT Threading Issues</a> for details on AWT's threading model.

 @param         l     the adjustment listener.
 @see           #addAdjustmentListener
 @see           #getAdjustmentListeners
 @see           java.awt.event.AdjustmentListener
 @see           java.awt.event.AdjustmentEvent
 @since         JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.awt.event.AdjustmentListener[] java.awt.ScrollPaneAdjustable.getAdjustmentListeners()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an array of all the adjustment listeners
 registered on this <code>ScrollPaneAdjustable</code>.

 @return all of this <code>ScrollPaneAdjustable</code>'s
         <code>AdjustmentListener</code>s
         or an empty array if no adjustment
         listeners are currently registered

 @see           #addAdjustmentListener
 @see           #removeAdjustmentListener
 @see           java.awt.event.AdjustmentListener
 @see           java.awt.event.AdjustmentEvent
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.ScrollPaneAdjustable.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string representation of this scrollbar and its values.
 @return    a string representation of this scrollbar.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.ScrollPaneAdjustable.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string representing the state of this scrollbar.
 This method is intended to be used only for debugging purposes,
 and the content and format of the returned string may vary
 between implementations.  The returned string may be empty but
 may not be <code>null</code>.

 @return      the parameter string of this scrollbar.

<!-- END DATA -->
