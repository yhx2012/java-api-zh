<!-- BEGIN KEY -->
public class java.awt.BufferCapabilities extends java.lang.Object implements java.lang.Cloneable
<!-- END KEY -->
<!-- BEGIN DATA -->
 Capabilities and properties of buffers.

 @see java.awt.image.BufferStrategy#getCapabilities()
 @see GraphicsConfiguration#getBufferCapabilities
 @author Michael Martak
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.BufferCapabilities(ImageCapabilities frontCaps, ImageCapabilities backCaps, BufferCapabilities.FlipContents flipContents)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new object for specifying buffering capabilities
 @param frontCaps the capabilities of the front buffer; cannot be
 <code>null</code>
 @param backCaps the capabilities of the back and intermediate buffers;
 cannot be <code>null</code>
 @param flipContents the contents of the back buffer after page-flipping,
 <code>null</code> if page flipping is not used (implies blitting)
 @exception IllegalArgumentException if frontCaps or backCaps are
 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.ImageCapabilities java.awt.BufferCapabilities.getFrontBufferCapabilities()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the image capabilities of the front (displayed) buffer

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.ImageCapabilities java.awt.BufferCapabilities.getBackBufferCapabilities()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the image capabilities of all back buffers (intermediate buffers
 are considered back buffers)

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.BufferCapabilities.isPageFlipping()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return whether or not the buffer strategy uses page flipping; a set of
 buffers that uses page flipping
 can swap the contents internally between the front buffer and one or
 more back buffers by switching the video pointer (or by copying memory
 internally).  A non-flipping set of
 buffers uses blitting to copy the contents from one buffer to
 another; when this is the case, <code>getFlipContents</code> returns
 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.BufferCapabilities.FlipContents java.awt.BufferCapabilities.getFlipContents()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return the resulting contents of the back buffer after page-flipping.
 This value is <code>null</code> when the <code>isPageFlipping</code>
 returns <code>false</code>, implying blitting.  It can be one of
 <code>FlipContents.UNDEFINED</code>
 (the assumed default), <code>FlipContents.BACKGROUND</code>,
 <code>FlipContents.PRIOR</code>, or
 <code>FlipContents.COPIED</code>.
 @see #isPageFlipping
 @see FlipContents#UNDEFINED
 @see FlipContents#BACKGROUND
 @see FlipContents#PRIOR
 @see FlipContents#COPIED

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.BufferCapabilities.isFullScreenRequired()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return whether page flipping is only available in full-screen mode.  If this
 is <code>true</code>, full-screen exclusive mode is required for
 page-flipping.
 @see #isPageFlipping
 @see GraphicsDevice#setFullScreenWindow

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.BufferCapabilities.isMultiBufferAvailable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return whether or not
 page flipping can be performed using more than two buffers (one or more
 intermediate buffers as well as the front and back buffer).
 @see #isPageFlipping

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.BufferCapabilities.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 @return a copy of this BufferCapabilities object.

<!-- END DATA -->
