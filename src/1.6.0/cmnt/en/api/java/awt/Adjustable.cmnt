<!-- BEGIN KEY -->
public interface java.awt.Adjustable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The interface for objects which have an adjustable numeric value
 contained within a bounded range of values.

 @version 1.19 11/17/05
 @author Amy Fowler
 @author Tim Prinzing

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Adjustable.HORIZONTAL
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates that the <code>Adjustable</code> has horizontal orientation.  

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Adjustable.VERTICAL
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates that the <code>Adjustable</code> has vertical orientation.  

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.Adjustable.NO_ORIENTATION
<!-- END KEY -->
<!-- BEGIN DATA -->
 Indicates that the <code>Adjustable</code> has no orientation.  

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getOrientation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the orientation of the adjustable object.
 @return the orientation of the adjustable object;
   either <code>HORIZONTAL</code>, <code>VERTICAL</code>,
   or <code>NO_ORIENTATION</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setMinimum(int min)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the minimum value of the adjustable object.
 @param min the minimum value

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getMinimum()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the minimum value of the adjustable object.
 @return the minimum value of the adjustable object

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setMaximum(int max)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the maximum value of the adjustable object.
 @param max the maximum value

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getMaximum()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the maximum value of the adjustable object.
 @return the maximum value of the adjustable object

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setUnitIncrement(int u)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the unit value increment for the adjustable object.
 @param u the unit increment

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getUnitIncrement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the unit value increment for the adjustable object.
 @return the unit value increment for the adjustable object

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setBlockIncrement(int b)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the block value increment for the adjustable object.
 @param b the block increment

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getBlockIncrement()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the block value increment for the adjustable object.
 @return the block value increment for the adjustable object

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setVisibleAmount(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the length of the proportional indicator of the
 adjustable object.
 @param v the length of the indicator

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getVisibleAmount()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the length of the proportional indicator.
 @return the length of the proportional indicator

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.setValue(int v)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the current value of the adjustable object. If
 the value supplied is less than <code>minimum</code>
 or greater than <code>maximum</code> - <code>visibleAmount</code>,
 then one of those values is substituted, as appropriate.
 <p>
 Calling this method does not fire an
 <code>AdjustmentEvent</code>. 

 @param v the current value, between <code>minimum</code>
    and <code>maximum</code> - <code>visibleAmount</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.Adjustable.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the current value of the adjustable object.
 @return the current value of the adjustable object

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.addAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds a listener to receive adjustment events when the value of
 the adjustable object changes.
 @param l the listener to receive events
 @see AdjustmentEvent

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.Adjustable.removeAdjustmentListener(AdjustmentListener l)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes an adjustment listener.
 @param l the listener being removed
 @see AdjustmentEvent

<!-- END DATA -->
