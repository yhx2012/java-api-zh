<!-- BEGIN KEY -->
public final class java.awt.image.DataBufferInt extends java.awt.image.DataBuffer
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class extends <CODE>DataBuffer</CODE> and stores data internally 
 as integers.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferInt(int size)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an integer-based <CODE>DataBuffer</CODE> with a single bank 
 and the specified size.

 @param size The size of the <CODE>DataBuffer</CODE>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferInt(int size, int numBanks)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an integer-based <CODE>DataBuffer</CODE> with the specified number of
 banks, all of which are the specified size.

 @param size The size of the banks in the <CODE>DataBuffer</CODE>.
 @param numBanks The number of banks in the a<CODE>DataBuffer</CODE>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferInt(int[] dataArray, int size)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an integer-based <CODE>DataBuffer</CODE> with a single bank using the
 specified array.                            
 Only the first <CODE>size</CODE> elements should be used by accessors of
 this <CODE>DataBuffer</CODE>.  <CODE>dataArray</CODE> must be large enough to
 hold <CODE>size</CODE> elements.

 @param dataArray The integer array for the <CODE>DataBuffer</CODE>.
 @param size The size of the <CODE>DataBuffer</CODE> bank.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferInt(int[] dataArray, int size, int offset)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an integer-based <CODE>DataBuffer</CODE> with a single bank using the
 specified array, size, and offset.  <CODE>dataArray</CODE> must have at least
 <CODE>offset</CODE> + <CODE>size</CODE> elements.  Only elements <CODE>offset</CODE> 
 through <CODE>offset</CODE> + <CODE>size</CODE> - 1
 should be used by accessors of this <CODE>DataBuffer</CODE>.

 @param dataArray The integer array for the <CODE>DataBuffer</CODE>.
 @param size The size of the <CODE>DataBuffer</CODE> bank.
 @param offset The offset into the <CODE>dataArray</CODE>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferInt(int[][] dataArray, int size)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an integer-based <CODE>DataBuffer</CODE> with the specified arrays.
 The number of banks will be equal to <CODE>dataArray.length</CODE>.
 Only the first <CODE>size</CODE> elements of each array should be used by
 accessors of this <CODE>DataBuffer</CODE>.

 @param dataArray The integer arrays for the <CODE>DataBuffer</CODE>.
 @param size The size of the banks in the <CODE>DataBuffer</CODE>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferInt(int[][] dataArray, int size, int[] offsets)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an integer-based <CODE>DataBuffer</CODE> with the specified arrays, size,
 and offsets.
 The number of banks is equal to <CODE>dataArray.length</CODE>.  Each array must
 be at least as large as <CODE>size</CODE> + the corresponding offset.   There must
 be an entry in the offset array for each <CODE>dataArray</CODE> entry.  For each
 bank, only elements <CODE>offset</CODE> through 
 <CODE>offset</CODE> + <CODE>size</CODE> - 1 should be
 used by accessors of this <CODE>DataBuffer</CODE>.

 @param dataArray The integer arrays for the <CODE>DataBuffer</CODE>.
 @param size The size of the banks in the <CODE>DataBuffer</CODE>.
 @param offsets The offsets into each array.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int[] java.awt.image.DataBufferInt.getData()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the default (first) int data array in <CODE>DataBuffer</CODE>.
    
 @return The first integer data array.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int[] java.awt.image.DataBufferInt.getData(int bank)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the data array for the specified bank.    
   
 @param bank The bank whose data array you want to get. 
 @return The data array for the specified bank.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int[][] java.awt.image.DataBufferInt.getBankData()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the data arrays for all banks. 
 @return All of the data arrays.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.image.DataBufferInt.getElem(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the first (default) bank.
 
 @param i The data array element you want to get.
 @return The requested data array element as an integer.
 @see #setElem(int, int)
 @see #setElem(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.image.DataBufferInt.getElem(int bank, int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the specified bank.
 
 @param bank The bank from which you want to get a data array element.
 @param i The data array element you want to get.
 @return The requested data array element as an integer.
 @see #setElem(int, int)
 @see #setElem(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferInt.setElem(int i, int val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the first (default) bank
 to the specified value.

 @param i The data array element you want to set.
 @param val The integer value to which you want to set the data array element.
 @see #getElem(int)
 @see #getElem(int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferInt.setElem(int bank, int i, int val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the specified bank
 to the integer value <CODE>i</CODE>.
 @param bank The bank in which you want to set the data array element.
 @param i The data array element you want to set.
 @param val The integer value to which you want to set the specified data array element.
 @see #getElem(int)
 @see #getElem(int, int)

<!-- END DATA -->
