<!-- BEGIN KEY -->
public class java.awt.image.renderable.RenderableImageProducer extends java.lang.Object implements java.awt.image.ImageProducer, java.lang.Runnable
<!-- END KEY -->
<!-- BEGIN DATA -->

 An adapter class that implements ImageProducer to allow the
 asynchronous production of a RenderableImage.  The size of the
 ImageConsumer is determined by the scale factor of the usr2dev
 transform in the RenderContext.  If the RenderContext is null, the
 default rendering of the RenderableImage is used.  This class
 implements an asynchronous production that produces the image in
 one thread at one resolution.  This class may be subclassed to
 implement versions that will render the image using several
 threads.  These threads could render either the same image at
 progressively better quality, or different sections of the image at
 a single resolution.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.renderable.RenderableImageProducer(RenderableImage rdblImage, RenderContext rc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new RenderableImageProducer from a RenderableImage
 and a RenderContext.

 @param rdblImage the RenderableImage to be rendered.
 @param rc the RenderContext to use for producing the pixels.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.image.renderable.RenderableImageProducer.setRenderContext(RenderContext rc)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets a new RenderContext to use for the next startProduction() call.

 @param rc the new RenderContext.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.image.renderable.RenderableImageProducer.addConsumer(ImageConsumer ic)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds an ImageConsumer to the list of consumers interested in
 data for this image.

 @param ic an ImageConsumer to be added to the interest list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized boolean java.awt.image.renderable.RenderableImageProducer.isConsumer(ImageConsumer ic)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Determine if an ImageConsumer is on the list of consumers
 currently interested in data for this image.

 @param ic the ImageConsumer to be checked.
 @return true if the ImageConsumer is on the list; false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.image.renderable.RenderableImageProducer.removeConsumer(ImageConsumer ic)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Remove an ImageConsumer from the list of consumers interested in
 data for this image.

 @param ic the ImageConsumer to be removed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.awt.image.renderable.RenderableImageProducer.startProduction(ImageConsumer ic)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds an ImageConsumer to the list of consumers interested in
 data for this image, and immediately starts delivery of the
 image data through the ImageConsumer interface.

 @param ic the ImageConsumer to be added to the list of consumers.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderableImageProducer.requestTopDownLeftRightResend(ImageConsumer ic)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Requests that a given ImageConsumer have the image data delivered
 one more time in top-down, left-right order.

 @param ic the ImageConsumer requesting the resend.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.renderable.RenderableImageProducer.run()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The runnable method for this class. This will produce an image using
 the current RenderableImage and RenderContext and send it to all the
 ImageConsumer currently registered with this class.

<!-- END DATA -->
