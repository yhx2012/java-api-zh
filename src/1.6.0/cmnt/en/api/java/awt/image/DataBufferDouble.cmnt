<!-- BEGIN KEY -->
public final class java.awt.image.DataBufferDouble extends java.awt.image.DataBuffer
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class extends <code>DataBuffer</code> and stores data internally
 in <code>double</code> form.

 @see DataBuffer
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferDouble(int size)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>double</code>-based <code>DataBuffer</code>
 with a specified size.

 @param size The number of elements in the <code>DataBuffer</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferDouble(int size, int numBanks)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>double</code>-based <code>DataBuffer</code>
 with a specified number of banks, all of which are of a
 specified size.

 @param size The number of elements in each bank of the
        <code>DataBuffer</code>.
 @param numBanks The number of banks in the <code>DataBuffer</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferDouble(double[] dataArray, int size)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>double</code>-based <code>DataBuffer</code>
 with the specified data array.  Only the first
 <code>size</code> elements are available for use by this
 <code>DataBuffer</code>.  The array must be large enough to
 hold <code>size</code> elements.

 @param dataArray An array of <code>double</code>s to be used as the
                  first and only bank of this <code>DataBuffer</code>.
 @param size The number of elements of the array to be used.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferDouble(double[] dataArray, int size, int offset)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>double</code>-based <code>DataBuffer</code>
 with the specified data array.  Only the elements between
 <code>offset</code> and <code>offset + size - 1</code> are
 available for use by this <code>DataBuffer</code>.  The array
 must be large enough to hold <code>offset + size</code> elements.

 @param dataArray An array of <code>double</code>s to be used as the
                  first and only bank of this <code>DataBuffer</code>.
 @param size The number of elements of the array to be used.
 @param offset The offset of the first element of the array
               that will be used.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferDouble(double[][] dataArray, int size)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>double</code>-based <code>DataBuffer</code>
 with the specified data arrays.  Only the first
 <code>size</code> elements of each array are available for use
 by this <code>DataBuffer</code>.  The number of banks will be
 equal <code>to dataArray.length</code>.

 @param dataArray An array of arrays of <code>double</code>s to be
        used as the banks of this <code>DataBuffer</code>.
 @param size The number of elements of each array to be used.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.image.DataBufferDouble(double[][] dataArray, int size, int[] offsets)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>double</code>-based <code>DataBuffer</code>
 with the specified data arrays, size, and per-bank offsets.
 The number of banks is equal to dataArray.length.  Each array
 must be at least as large as <code>size</code> plus the
 corresponding offset.  There must be an entry in the
 <code>offsets</code> array for each data array.

 @param dataArray An array of arrays of <code>double</code>s to be
        used as the banks of this <code>DataBuffer</code>.
 @param size The number of elements of each array to be used.
 @param offsets An array of integer offsets, one for each bank.

<!-- END DATA -->
<!-- BEGIN KEY -->
public double[] java.awt.image.DataBufferDouble.getData()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the default (first) <code>double</code> data array. 
 @return the first double data array.

<!-- END DATA -->
<!-- BEGIN KEY -->
public double[] java.awt.image.DataBufferDouble.getData(int bank)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the data array for the specified bank. 
 @param bank the data array
 @return the data array specified by <code>bank</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public double[][] java.awt.image.DataBufferDouble.getBankData()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the data array for all banks. 
 @return all data arrays from this data buffer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.image.DataBufferDouble.getElem(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the first
 (default) bank as an <code>int</code>.

 @param i The desired data array element.
 @return The data entry as an <code>int</code>.
 @see #setElem(int, int)
 @see #setElem(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.image.DataBufferDouble.getElem(int bank, int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the specified
 bank as an <code>int</code>.

 @param bank The bank number.
 @param i The desired data array element.

 @return The data entry as an <code>int</code>.
 @see #setElem(int, int)
 @see #setElem(int, int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferDouble.setElem(int i, int val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the first (default)
 bank to the given <code>int</code>.

 @param i The desired data array element.
 @param val The value to be set.
 @see #getElem(int)
 @see #getElem(int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferDouble.setElem(int bank, int i, int val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the specified bank
 to the given <code>int</code>.

 @param bank The bank number.
 @param i The desired data array element.
 @param val The value to be set.
 @see #getElem(int)
 @see #getElem(int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.image.DataBufferDouble.getElemFloat(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the first
 (default) bank as a <code>float</code>.

 @param i The desired data array element.

 @return The data entry as a <code>float</code>.
 @see #setElemFloat(int, float)
 @see #setElemFloat(int, int, float)

<!-- END DATA -->
<!-- BEGIN KEY -->
public float java.awt.image.DataBufferDouble.getElemFloat(int bank, int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the specified
 bank as a <code>float</code>.

 @param bank The bank number.
 @param i The desired data array element.

 @return The data entry as a <code>float</code>.
 @see #setElemFloat(int, float)
 @see #setElemFloat(int, int, float)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferDouble.setElemFloat(int i, float val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the first (default)
 bank to the given <code>float</code>.

 @param i The desired data array element.
 @param val The value to be set.
 @see #getElemFloat(int)
 @see #getElemFloat(int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferDouble.setElemFloat(int bank, int i, float val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the specified bank to
 the given <code>float</code>.

 @param bank The bank number.
 @param i The desired data array element.
 @param val The value to be set.
 @see #getElemFloat(int)       
 @see #getElemFloat(int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.image.DataBufferDouble.getElemDouble(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the first
 (default) bank as a <code>double</code>.

 @param i The desired data array element.

 @return The data entry as a <code>double</code>.
 @see #setElemDouble(int, double)  
 @see #setElemDouble(int, int, double)

<!-- END DATA -->
<!-- BEGIN KEY -->
public double java.awt.image.DataBufferDouble.getElemDouble(int bank, int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the requested data array element from the specified
 bank as a <code>double</code>.

 @param bank The bank number.
 @param i The desired data array element.

 @return The data entry as a <code>double</code>.
 @see #setElemDouble(int, double)
 @see #setElemDouble(int, int, double)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferDouble.setElemDouble(int i, double val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the first (default)
 bank to the given <code>double</code>.

 @param i The desired data array element.
 @param val The value to be set.
 @see #getElemDouble(int)
 @see #getElemDouble(int, int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.image.DataBufferDouble.setElemDouble(int bank, int i, double val)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the requested data array element in the specified bank to
 the given <code>double</code>.

 @param bank The bank number.
 @param i The desired data array element.
 @param val The value to be set.
 @see #getElemDouble(int)        
 @see #getElemDouble(int, int)

<!-- END DATA -->
