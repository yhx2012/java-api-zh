<!-- BEGIN KEY -->
public class java.awt.datatransfer.StringSelection extends java.lang.Object implements java.awt.datatransfer.Transferable, java.awt.datatransfer.ClipboardOwner
<!-- END KEY -->
<!-- BEGIN DATA -->
 A <code>Transferable</code> which implements the capability required
 to transfer a <code>String</code>.

 This <code>Transferable</code> properly supports
 <code>DataFlavor.stringFlavor</code>
 and all equivalent flavors. Support for
 <code>DataFlavor.plainTextFlavor</code>
 and all equivalent flavors is <b>deprecated</b>. No other
 <code>DataFlavor</code>s are supported.

 @see java.awt.datatransfer.DataFlavor#stringFlavor
 @see java.awt.datatransfer.DataFlavor#plainTextFlavor

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.datatransfer.StringSelection(String data)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a <code>Transferable</code> capable of transferring
 the specified <code>String</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.datatransfer.DataFlavor[] java.awt.datatransfer.StringSelection.getTransferDataFlavors()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an array of flavors in which this <code>Transferable</code>
 can provide the data. <code>DataFlavor.stringFlavor</code>
 is properly supported.
 Support for <code>DataFlavor.plainTextFlavor</code> is
 <b>deprecated</b>.

 @return an array of length two, whose elements are <code>DataFlavor.
         stringFlavor</code> and <code>DataFlavor.plainTextFlavor</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.datatransfer.StringSelection.isDataFlavorSupported(DataFlavor flavor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether the requested flavor is supported by this
 <code>Transferable</code>.

 @param flavor the requested flavor for the data
 @return true if <code>flavor</code> is equal to
   <code>DataFlavor.stringFlavor</code> or
   <code>DataFlavor.plainTextFlavor</code>; false if <code>flavor</code>
   is not one of the above flavors
 @throws NullPointerException if flavor is <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.datatransfer.StringSelection.getTransferData(DataFlavor flavor) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>Transferable</code>'s data in the requested
 <code>DataFlavor</code> if possible. If the desired flavor is
 <code>DataFlavor.stringFlavor</code>, or an equivalent flavor,
 the <code>String</code> representing the selection is
 returned. If the desired flavor is
 <code>DataFlavor.plainTextFlavor</code>,
 or an equivalent flavor, a <code>Reader</code> is returned.
 <b>Note:</b> The behavior of this method for
 <code>DataFlavor.plainTextFlavor</code>
 and equivalent <code>DataFlavor</code>s is inconsistent with the
 definition of <code>DataFlavor.plainTextFlavor</code>.

 @param flavor the requested flavor for the data
 @return the data in the requested flavor, as outlined above
 @throws UnsupportedFlavorException if the requested data flavor is
         not equivalent to either <code>DataFlavor.stringFlavor</code>
         or <code>DataFlavor.plainTextFlavor</code>
 @throws IOException if an IOException occurs while retrieving the data.
         By default, StringSelection never throws this exception, but a
         subclass may.
 @throws NullPointerException if flavor is <code>null</code>
 @see java.io.Reader

<!-- END DATA -->
