<!-- BEGIN KEY -->
protected class java.awt.dnd.DropTargetContext.TransferableProxy extends java.lang.Object implements java.awt.datatransfer.Transferable
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>TransferableProxy</code> is a helper inner class that implements
 <code>Transferable</code> interface and serves as a proxy for another 
 <code>Transferable</code> object which represents data transfer for
 a particular drag-n-drop operation.
 <p>
 The proxy forwards all requests to the encapsulated transferable 
 and automatically performs additional conversion on the data 
 returned by the encapsulated transferable in case of local transfer.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.awt.datatransfer.Transferable java.awt.dnd.DropTargetContext.TransferableProxy.transferable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The encapsulated <code>Transferable</code> object.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected boolean java.awt.dnd.DropTargetContext.TransferableProxy.isLocal
<!-- END KEY -->
<!-- BEGIN DATA -->
 A <code>boolean</code> indicating if the encapsulated 
 <code>Transferable</code> object represents the result
 of local drag-n-drop operation (within the same JVM).

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.datatransfer.DataFlavor[] java.awt.dnd.DropTargetContext.TransferableProxy.getTransferDataFlavors()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns an array of DataFlavor objects indicating the flavors 
 the data can be provided in by the encapsulated transferable.
 <p>
 @return an array of data flavors in which the data can be 
         provided by the encapsulated transferable

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.dnd.DropTargetContext.TransferableProxy.isDataFlavorSupported(DataFlavor flavor)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns whether or not the specified data flavor is supported by
 the encapsulated transferable.
 @param flavor the requested flavor for the data
 @return <code>true</code> if the data flavor is supported,
         <code>false</code> otherwise

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.dnd.DropTargetContext.TransferableProxy.getTransferData(DataFlavor df) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an object which represents the data provided by 
 the encapsulated transferable for the requested data flavor.
 <p>
 In case of local transfer a serialized copy of the object
 returned by the encapsulated transferable is provided when 
 the data is requested in application/x-java-serialized-object 
 data flavor.

 @param df the requested flavor for the data
 @throws IOException if the data is no longer available
              in the requested flavor.
 @throws UnsupportedFlavorException if the requested data flavor is
              not supported.

<!-- END DATA -->
