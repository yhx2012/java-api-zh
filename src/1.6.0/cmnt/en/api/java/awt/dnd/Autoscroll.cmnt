<!-- BEGIN KEY -->
public interface java.awt.dnd.Autoscroll
<!-- END KEY -->
<!-- BEGIN DATA -->
 During DnD operations it is possible that a user may wish to drop the 
 subject of the operation on a region of a scrollable GUI control that is
 not currently visible to the user.
 <p>
 In such situations it is desirable that the GUI control detect this
 and institute a scroll operation in order to make obscured region(s)
 visible to the user. This feature is known as autoscrolling.
 <p>
 If a GUI control is both an active <code>DropTarget</code>
 and is also scrollable, it
 can receive notifications of autoscrolling gestures by the user from
 the DnD system by implementing this interface.
 <p>
 An autoscrolling gesture is initiated by the user by keeping the drag
 cursor motionless with a border region of the <code>Component</code>, 
 referred to as
 the "autoscrolling region", for a predefined period of time, this will
 result in repeated scroll requests to the <code>Component</code> 
 until the drag <code>Cursor</code> resumes its motion.

 @version 	1.14, 11/17/05
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Insets java.awt.dnd.Autoscroll.getAutoscrollInsets()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method returns the <code>Insets</code> describing 
 the autoscrolling region or border relative
 to the geometry of the implementing Component.
 <P>
 This value is read once by the <code>DropTarget</code> 
 upon entry of the drag <code>Cursor</code>
 into the associated <code>Component</code>.
 <P>
 @return the Insets

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.dnd.Autoscroll.autoscroll(Point cursorLocn)
<!-- END KEY -->
<!-- BEGIN DATA -->
 notify the <code>Component</code> to autoscroll
 <P>
 @param cursorLocn A <code>Point</code> indicating the 
 location of the cursor that triggered this operation.

<!-- END DATA -->
