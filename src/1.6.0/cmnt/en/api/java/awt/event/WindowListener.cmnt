<!-- BEGIN KEY -->
public interface java.awt.event.WindowListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 The listener interface for receiving window events.
 The class that is interested in processing a window event
 either implements this interface (and all the methods it
 contains) or extends the abstract <code>WindowAdapter</code> class
 (overriding only the methods of interest).
 The listener object created from that class is then registered with a
 Window using the window's <code>addWindowListener</code> 
 method. When the window's status changes by virtue of being opened,
 closed, activated or deactivated, iconified or deiconified, 
 the relevant method in the listener object is invoked, and the 
 <code>WindowEvent</code> is passed to it.

 @author Carl Quinn
 @version 1.22, 11/17/05

 @see WindowAdapter
 @see WindowEvent
 @see <a href="http://java.sun.com/docs/books/tutorial/uiswing/events/windowlistener.html">Tutorial: How to Write Window Listeners</a>

 @since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowListener.windowOpened(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked the first time a window is made visible.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowListener.windowClosing(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the user attempts to close the window
 from the window's system menu.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowListener.windowClosed(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a window has been closed as the result
 of calling dispose on the window.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowListener.windowIconified(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a window is changed from a normal to a
 minimized state. For many platforms, a minimized window 
 is displayed as the icon specified in the window's 
 iconImage property.
 @see java.awt.Frame#setIconImage

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowListener.windowDeiconified(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a window is changed from a minimized
 to a normal state.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowListener.windowActivated(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the Window is set to be the active Window. Only a Frame or
 a Dialog can be the active Window. The native windowing system may
 denote the active Window or its children with special decorations, such
 as a highlighted title bar. The active Window is always either the
 focused Window, or the first Frame or Dialog that is an owner of the
 focused Window.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowListener.windowDeactivated(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a Window is no longer the active Window. Only a Frame or a
 Dialog can be the active Window. The native windowing system may denote
 the active Window or its children with special decorations, such as a
 highlighted title bar. The active Window is always either the focused
 Window, or the first Frame or Dialog that is an owner of the focused
 Window.

<!-- END DATA -->
