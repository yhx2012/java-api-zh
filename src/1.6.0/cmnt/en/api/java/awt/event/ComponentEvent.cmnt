<!-- BEGIN KEY -->
public class java.awt.event.ComponentEvent extends java.awt.AWTEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
 A low-level event which indicates that a component moved, changed
 size, or changed visibility (also, the root class for the other 
 component-level events).
 <P>
 Component events are provided for notification purposes ONLY;
 The AWT will automatically handle component moves and resizes
 internally so that GUI layout works properly regardless of
 whether a program is receiving these events or not.
 <P>
 In addition to serving as the base class for other component-related
 events (InputEvent, FocusEvent, WindowEvent, ContainerEvent),
 this class defines the events that indicate changes in
 a component's size, position, or visibility. 
 <P>
 This low-level event is generated by a component object (such as a 
 List) when the component is moved, resized, rendered invisible, or made
 visible again. The event is passed to every <code>ComponentListener</code>
 or <code>ComponentAdapter</code> object which registered to receive such
 events using the component's <code>addComponentListener</code> method.
 (<code>ComponentAdapter</code> objects implement the 
 <code>ComponentListener</code> interface.) Each such listener object 
 gets this <code>ComponentEvent</code> when the event occurs.

 @see ComponentAdapter
 @see ComponentListener
 @see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/componentlistener.html">Tutorial: Writing a Component Listener</a>

 @author Carl Quinn
 @version 1.29 04/13/06
 @since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ComponentEvent.COMPONENT_FIRST
<!-- END KEY -->
<!-- BEGIN DATA -->
 The first number in the range of ids used for component events.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ComponentEvent.COMPONENT_LAST
<!-- END KEY -->
<!-- BEGIN DATA -->
 The last number in the range of ids used for component events.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ComponentEvent.COMPONENT_MOVED
<!-- END KEY -->
<!-- BEGIN DATA -->
 This event indicates that the component's position changed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ComponentEvent.COMPONENT_RESIZED
<!-- END KEY -->
<!-- BEGIN DATA -->
 This event indicates that the component's size changed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ComponentEvent.COMPONENT_SHOWN
<!-- END KEY -->
<!-- BEGIN DATA -->
 This event indicates that the component was made visible.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ComponentEvent.COMPONENT_HIDDEN
<!-- END KEY -->
<!-- BEGIN DATA -->
 This event indicates that the component was rendered invisible.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.ComponentEvent(Component source, int id)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>ComponentEvent</code> object.
 <p>Note that passing in an invalid <code>id</code> results in
 unspecified behavior. This method throws an
 <code>IllegalArgumentException</code> if <code>source</code>
 is <code>null</code>.

 @param source the <code>Component</code> that originated the event
 @param id     an integer indicating the type of event
 @throws IllegalArgumentException if <code>source</code> is null

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Component java.awt.event.ComponentEvent.getComponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the originator of the event.

 @return the <code>Component</code> object that originated 
 the event, or <code>null</code> if the object is not a 
 <code>Component</code>.  

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.event.ComponentEvent.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a parameter string identifying this event.
 This method is useful for event-logging and for debugging.

 @return a string identifying the event and its attributes

<!-- END DATA -->
