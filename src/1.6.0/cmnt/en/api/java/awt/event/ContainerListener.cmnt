<!-- BEGIN KEY -->
public interface java.awt.event.ContainerListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 The listener interface for receiving container events.
 The class that is interested in processing a container event
 either implements this interface (and all the methods it
 contains) or extends the abstract <code>ContainerAdapter</code> class
 (overriding only the methods of interest).
 The listener object created from that class is then registered with a
 component using the component's <code>addContainerListener</code> 
 method. When the container's contents change because a component
 has been added or removed, the relevant method in the listener object 
 is invoked, and the <code>ContainerEvent</code> is passed to it.
 <P>
 Container events are provided for notification purposes ONLY;
 The AWT will automatically handle add and remove operations
 internally so the program works properly regardless of
 whether the program registers a <code>ComponentListener</code> or not.

 @see ContainerAdapter
 @see ContainerEvent
 @see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/containerlistener.html">Tutorial: Writing a Container Listener</a>

 @author Tim Prinzing
 @author Amy Fowler
 @version 1.13 04/13/06
 @since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.ContainerListener.componentAdded(ContainerEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a component has been added to the container.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.ContainerListener.componentRemoved(ContainerEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a component has been removed from the container.

<!-- END DATA -->
