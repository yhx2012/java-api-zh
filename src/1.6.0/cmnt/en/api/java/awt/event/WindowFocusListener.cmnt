<!-- BEGIN KEY -->
public interface java.awt.event.WindowFocusListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 The listener interface for receiving <code>WindowEvents</code>, including
 <code>WINDOW_GAINED_FOCUS</code> and <code>WINDOW_LOST_FOCUS</code> events.
 The class that is interested in processing a <code>WindowEvent</code>
 either implements this interface (and
 all the methods it contains) or extends the abstract
 <code>WindowAdapter</code> class (overriding only the methods of interest).
 The listener object created from that class is then registered with a
 <code>Window</code>
 using the <code>Window</code>'s <code>addWindowFocusListener</code> method.
 When the <code>Window</code>'s
 status changes by virtue of it being opened, closed, activated, deactivated,
 iconified, or deiconified, or by focus being transfered into or out of the
 <code>Window</code>, the relevant method in the listener object is invoked,
 and the <code>WindowEvent</code> is passed to it.

 @author David Mendenhall
 @version 1.8, 04/13/06

 @see WindowAdapter
 @see WindowEvent
 @see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/windowlistener.html">Tutorial: Writing a Window Listener</a>

 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowFocusListener.windowGainedFocus(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the Window is set to be the focused Window, which means
 that the Window, or one of its subcomponents, will receive keyboard
 events.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.WindowFocusListener.windowLostFocus(WindowEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when the Window is no longer the focused Window, which means
 that keyboard events will no longer be delivered to the Window or any of
 its subcomponents.

<!-- END DATA -->
