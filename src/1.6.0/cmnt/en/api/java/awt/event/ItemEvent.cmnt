<!-- BEGIN KEY -->
public class java.awt.event.ItemEvent extends java.awt.AWTEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
 A semantic event which indicates that an item was selected or deselected.
 This high-level event is generated by an ItemSelectable object (such as a 
 List) when an item is selected or deselected by the user.
 The event is passed to every <code>ItemListener</code> object which
 registered to receive such events using the component's
 <code>addItemListener</code> method. 
 <P>
 The object that implements the <code>ItemListener</code> interface gets
 this <code>ItemEvent</code> when the event occurs. The listener is
 spared the details of processing individual mouse movements and mouse
 clicks, and can instead process a "meaningful" (semantic) event like
 "item selected" or "item deselected". 

 @version 1.30 04/13/06
 @author Carl Quinn

 @see java.awt.ItemSelectable
 @see ItemListener
 @see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/itemlistener.html">Tutorial: Writing an Item Listener</a>

 @since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ItemEvent.ITEM_FIRST
<!-- END KEY -->
<!-- BEGIN DATA -->
 The first number in the range of ids used for item events.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ItemEvent.ITEM_LAST
<!-- END KEY -->
<!-- BEGIN DATA -->
 The last number in the range of ids used for item events.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ItemEvent.ITEM_STATE_CHANGED
<!-- END KEY -->
<!-- BEGIN DATA -->

 This event id indicates that an item's state changed.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ItemEvent.SELECTED
<!-- END KEY -->
<!-- BEGIN DATA -->
 This state-change value indicates that an item was selected.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.ItemEvent.DESELECTED
<!-- END KEY -->
<!-- BEGIN DATA -->

 This state-change-value indicates that a selected item was deselected.

<!-- END DATA -->
<!-- BEGIN KEY -->
 java.lang.Object java.awt.event.ItemEvent.item
<!-- END KEY -->
<!-- BEGIN DATA -->
 The item whose selection state has changed.

 @serial
 @see #getItem()

<!-- END DATA -->
<!-- BEGIN KEY -->
 int java.awt.event.ItemEvent.stateChange
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>stateChange</code> indicates whether the <code>item</code>
 was selected or deselected.

 @serial
 @see #getStateChange()

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.ItemEvent(ItemSelectable source, int id, Object item, int stateChange)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>ItemEvent</code> object.
 <p>Note that passing in an invalid <code>id</code> results in
 unspecified behavior. This method throws an
 <code>IllegalArgumentException</code> if <code>source</code>
 is <code>null</code>.

 @param source the <code>ItemSelectable</code> object
               that originated the event
 @param id     an integer that identifies the event type
 @param item   an object -- the item affected by the event
 @param stateChange 
               an integer that indicates whether the item was
               selected or deselected
 @throws IllegalArgumentException if <code>source</code> is null

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.ItemSelectable java.awt.event.ItemEvent.getItemSelectable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the originator of the event.

 @return the ItemSelectable object that originated the event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.awt.event.ItemEvent.getItem()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the item affected by the event.

 @return the item (object) that was affected by the event

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.event.ItemEvent.getStateChange()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the type of state change (selected or deselected).

 @return an integer that indicates whether the item was selected
         or deselected

 @see #SELECTED
 @see #DESELECTED

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.awt.event.ItemEvent.paramString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a parameter string identifying this item event.
 This method is useful for event-logging and for debugging.

 @return a string identifying the event and its attributes

<!-- END DATA -->
