<!-- BEGIN KEY -->
public class java.awt.event.AdjustmentEvent extends java.awt.AWTEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
 The adjustment event emitted by Adjustable objects.
 @see java.awt.Adjustable
 @see AdjustmentListener

 @author Amy Fowler
 @version 1.29 04/07/06
 @since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.ADJUSTMENT_FIRST
<!-- END KEY -->
<!-- BEGIN DATA -->
 Marks the first integer id for the range of adjustment event ids.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.ADJUSTMENT_LAST
<!-- END KEY -->
<!-- BEGIN DATA -->
 Marks the last integer id for the range of adjustment event ids.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.ADJUSTMENT_VALUE_CHANGED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The adjustment value changed event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.UNIT_INCREMENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The unit increment adjustment type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.UNIT_DECREMENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The unit decrement adjustment type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.BLOCK_DECREMENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The block decrement adjustment type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.BLOCK_INCREMENT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The block increment adjustment type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.AdjustmentEvent.TRACK
<!-- END KEY -->
<!-- BEGIN DATA -->
 The absolute tracking adjustment type.

<!-- END DATA -->
<!-- BEGIN KEY -->
 java.awt.Adjustable java.awt.event.AdjustmentEvent.adjustable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The adjustable object that fired the event.

 @serial
 @see #getAdjustable

<!-- END DATA -->
<!-- BEGIN KEY -->
 int java.awt.event.AdjustmentEvent.value
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>value</code> will contain the new value of the
 adjustable object.  This value will always be  in a
 range associated adjustable object.

 @serial
 @see #getValue

<!-- END DATA -->
<!-- BEGIN KEY -->
 int java.awt.event.AdjustmentEvent.adjustmentType
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>adjustmentType</code> describes how the adjustable
 object value has changed.
 This value can be increased/decreased by a block or unit amount
 where the block is associated with page increments/decrements,
 and a unit is associated with line increments/decrements.

 @serial
 @see #getAdjustmentType

<!-- END DATA -->
<!-- BEGIN KEY -->
 boolean java.awt.event.AdjustmentEvent.isAdjusting
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>isAdjusting</code> is true if the event is one
 of the series of multiple adjustment events.

 @since 1.4
 @serial
 @see #getValueIsAdjusting

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.AdjustmentEvent(Adjustable source, int id, int type, int value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>AdjustmentEvent</code> object with the
 specified <code>Adjustable</code> source, event type,
 adjustment type, and value. 
 <p>Note that passing in an invalid <code>id</code> results in
 unspecified behavior.  This method throws an
 <code>IllegalArgumentException</code> if <code>source</code>
 is <code>null</code>.

 @param source the <code>Adjustable</code> object where the
               event originated
 @param id     the event type
 @param type   the adjustment type 
 @param value  the current value of the adjustment
 @throws IllegalArgumentException if <code>source</code> is null

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.AdjustmentEvent(Adjustable source, int id, int type, int value, boolean isAdjusting)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>AdjustmentEvent</code> object with the
 specified Adjustable source, event type, adjustment type, and value.
 <p>Note that passing in an invalid <code>id</code> results in
 unspecified behavior.  This method throws an
 <code>IllegalArgumentException</code> if <code>source</code>
 is <code>null</code>.

 
 @param source the <code>Adjustable</code> object where the
               event originated
 @param id     the event type
 @param type   the adjustment type 
 @param value  the current value of the adjustment
 @param isAdjusting <code>true</code> if the event is one
               of a series of multiple adjusting events,
               otherwise <code>false</code>
 @throws IllegalArgumentException if <code>source</code> is null
 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Adjustable java.awt.event.AdjustmentEvent.getAdjustable()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>Adjustable</code> object where this event originated.

 @return the <code>Adjustable</code> object where this event originated

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.event.AdjustmentEvent.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the current value in the adjustment event.

 @return the current value in the adjustment event

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.awt.event.AdjustmentEvent.getAdjustmentType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the type of adjustment which caused the value changed
 event.  It will have one of the following values:
 <ul>
 <li>{@link #UNIT_INCREMENT}
 <li>{@link #UNIT_DECREMENT}
 <li>{@link #BLOCK_INCREMENT}
 <li>{@link #BLOCK_DECREMENT}
 <li>{@link #TRACK}
 </ul>
 @return one of the adjustment values listed above

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.awt.event.AdjustmentEvent.getValueIsAdjusting()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns <code>true</code> if this is one of multiple
 adjustment events.

 @return <code>true</code> if this is one of multiple
         adjustment events, otherwise returns <code>false</code>
 @since 1.4

<!-- END DATA -->
