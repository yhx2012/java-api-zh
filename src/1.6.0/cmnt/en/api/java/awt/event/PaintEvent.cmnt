<!-- BEGIN KEY -->
public class java.awt.event.PaintEvent extends java.awt.event.ComponentEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
 The component-level paint event.
 This event is a special type which is used to ensure that
 paint/update method calls are serialized along with the other
 events delivered from the event queue.  This event is not
 designed to be used with the Event Listener model; programs
 should continue to override paint/update methods in order
 render themselves properly.

 @author Amy Fowler
 @version 1.21, 11/17/05
 @since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.PaintEvent.PAINT_FIRST
<!-- END KEY -->
<!-- BEGIN DATA -->
 Marks the first integer id for the range of paint event ids.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.PaintEvent.PAINT_LAST
<!-- END KEY -->
<!-- BEGIN DATA -->
 Marks the last integer id for the range of paint event ids.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.PaintEvent.PAINT
<!-- END KEY -->
<!-- BEGIN DATA -->
 The paint event type.  

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final int java.awt.event.PaintEvent.UPDATE
<!-- END KEY -->
<!-- BEGIN DATA -->
 The update event type.  

<!-- END DATA -->
<!-- BEGIN KEY -->
 java.awt.Rectangle java.awt.event.PaintEvent.updateRect
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is the rectangle that represents the area on the source
 component that requires a repaint.
 This rectangle should be non null.

 @serial
 @see java.awt.Rectangle
 @see #setUpdateRect(Rectangle)
 @see #getUpdateRect()

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.event.PaintEvent(Component source, int id, Rectangle updateRect)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>PaintEvent</code> object with the specified
 source component and type.
 <p>Note that passing in an invalid <code>id</code> results in
 unspecified behavior. This method throws an
 <code>IllegalArgumentException</code> if <code>source</code>
 is <code>null</code>.

 @param source     the object where the event originated
 @param id         the event type
 @param updateRect the rectangle area which needs to be repainted
 @throws IllegalArgumentException if <code>source</code> is null

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.awt.Rectangle java.awt.event.PaintEvent.getUpdateRect()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the rectangle representing the area which needs to be
 repainted in response to this event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.PaintEvent.setUpdateRect(Rectangle updateRect)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the rectangle representing the area which needs to be
 repainted in response to this event.
 @param updateRect the rectangle area which needs to be repainted

<!-- END DATA -->
