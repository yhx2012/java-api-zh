<!-- BEGIN KEY -->
public interface java.awt.event.KeyListener extends java.util.EventListener
<!-- END KEY -->
<!-- BEGIN DATA -->
 The listener interface for receiving keyboard events (keystrokes).
 The class that is interested in processing a keyboard event
 either implements this interface (and all the methods it
 contains) or extends the abstract <code>KeyAdapter</code> class
 (overriding only the methods of interest).
 <P>
 The listener object created from that class is then registered with a
 component using the component's <code>addKeyListener</code> 
 method. A keyboard event is generated when a key is pressed, released,
 or typed. The relevant method in the listener 
 object is then invoked, and the <code>KeyEvent</code> is passed to it.

 @author Carl Quinn
 @version 1.20 04/13/06

 @see KeyAdapter
 @see KeyEvent
 @see <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/keylistener.html">Tutorial: Writing a Key Listener</a>

 @since 1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.KeyListener.keyTyped(KeyEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a key has been typed.
 See the class description for {@link KeyEvent} for a definition of 
 a key typed event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.KeyListener.keyPressed(KeyEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a key has been pressed. 
 See the class description for {@link KeyEvent} for a definition of 
 a key pressed event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.awt.event.KeyListener.keyReleased(KeyEvent e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Invoked when a key has been released.
 See the class description for {@link KeyEvent} for a definition of 
 a key released event.

<!-- END DATA -->
