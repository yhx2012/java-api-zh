<!-- BEGIN KEY -->
public interface java.rmi.server.LoaderHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>LoaderHandler</code> is an interface used internally by the RMI
 runtime in previous implementation versions.  It should never be accessed
 by application code.

 @version 1.19, 11/17/05
 @author  Ann Wollrath
 @since   JDK1.1

 @deprecated no replacement

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.String java.rmi.server.LoaderHandler.packagePrefix
<!-- END KEY -->
<!-- BEGIN DATA -->
package of system <code>LoaderHandler</code> implementation. 
<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Class<?> java.rmi.server.LoaderHandler.loadClass(String name) throws java.net.MalformedURLException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Loads a class from the location specified by the
 <code>java.rmi.server.codebase</code> property.

 @param  name the name of the class to load
 @return the <code>Class</code> object representing the loaded class
 @exception MalformedURLException
            if the system property <b>java.rmi.server.codebase</b>
            contains an invalid URL
 @exception ClassNotFoundException
            if a definition for the class could not
            be found at the codebase location.
 @since JDK1.1
 @deprecated no replacement

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Class<?> java.rmi.server.LoaderHandler.loadClass(URL codebase, String name) throws java.net.MalformedURLException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Loads a class from a URL.

 @param codebase  the URL from which to load the class
 @param name      the name of the class to load
 @return the <code>Class</code> object representing the loaded class
 @exception MalformedURLException
            if the <code>codebase</code> paramater
            contains an invalid URL
 @exception ClassNotFoundException
            if a definition for the class could not
            be found at the specified URL
 @since JDK1.1
 @deprecated no replacement

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.rmi.server.LoaderHandler.getSecurityContext(ClassLoader loader)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the security context of the given class loader.

 @param loader  a class loader from which to get the security context
 @return the security context
 @since JDK1.1
 @deprecated no replacement

<!-- END DATA -->
