<!-- BEGIN KEY -->
public abstract class java.rmi.server.RemoteStub extends java.rmi.server.RemoteObject
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>RemoteStub</code> class is the common superclass to client
 stubs and provides the framework to support a wide range of remote
 reference semantics.  Stub objects are surrogates that support
 exactly the same set of remote interfaces defined by the actual
 implementation of the remote object.

 @version 1.22, 11/17/05
 @author  Ann Wollrath
 @since   JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.rmi.server.RemoteStub()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>RemoteStub</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.rmi.server.RemoteStub(RemoteRef ref)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>RemoteStub</code>, with the specified remote
 reference.

 @param ref the remote reference
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
protected static void java.rmi.server.RemoteStub.setRef(RemoteStub stub, RemoteRef ref)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the remote reference inside the remote stub.

 @param stub the remote stub
 @param ref the remote reference
 @since JDK1.1
 @deprecated no replacement.  The <code>setRef</code> method
 is not needed since <code>RemoteStub</code>s can be created with
 the <code>RemoteStub(RemoteRef)</code> constructor.

<!-- END DATA -->
