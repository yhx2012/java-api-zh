<!-- BEGIN KEY -->
public class java.rmi.UnmarshalException extends java.rmi.RemoteException
<!-- END KEY -->
<!-- BEGIN DATA -->
 An <code>UnmarshalException</code> can be thrown while unmarshalling the
 parameters or results of a remote method call if any of the following
 conditions occur:
 <ul>
 <li> if an exception occurs while unmarshalling the call header
 <li> if the protocol for the return value is invalid
 <li> if a <code>java.io.IOException</code> occurs unmarshalling
 parameters (on the server side) or the return value (on the client side).
 <li> if a <code>java.lang.ClassNotFoundException</code> occurs during
 unmarshalling parameters or return values
 <li> if no skeleton can be loaded on the server-side; note that skeletons
 are required in the 1.1 stub protocol, but not in the 1.2 stub protocol.
 <li> if the method hash is invalid (i.e., missing method).
 <li> if there is a failure to create a remote reference object for
 a remote object's stub when it is unmarshalled.
 </ul>
 
 @version 1.13, 11/17/05
 @author  Ann Wollrath
 @since   JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.UnmarshalException(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>UnmarshalException</code> with the specified
 detail message.

 @param s the detail message
 @since JDK1.1

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.UnmarshalException(String s, Exception ex)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs an <code>UnmarshalException</code> with the specified
 detail message and nested exception.

 @param s the detail message
 @param ex the nested exception
 @since JDK1.1

<!-- END DATA -->
