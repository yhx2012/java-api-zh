<!-- BEGIN KEY -->
public final class java.rmi.activation.ActivationGroup_Stub extends java.rmi.server.RemoteStub implements java.rmi.activation.ActivationInstantiator, java.rmi.Remote
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>ActivationGroup_Stub</code> is a stub class
 for the subclasses of <code>java.rmi.activation.ActivationGroup</code>
 that are exported as a <code>java.rmi.server.UnicastRemoteObject</code>.

 @version	1.4, 11/17/05
 @since	1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroup_Stub(RemoteRef ref)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a stub for the <code>ActivationGroup</code> class.  It
 invokes the superclass <code>RemoteStub(RemoteRef)</code>
 constructor with its argument, <code>ref</code>.

 @param	ref a remote ref

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.MarshalledObject java.rmi.activation.ActivationGroup_Stub.newInstance(ActivationID id, ActivationDesc desc) throws java.rmi.RemoteException, java.rmi.activation.ActivationException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Stub method for <code>ActivationGroup.newInstance</code>.  Invokes
 the <code>invoke</code> method on this instance's
 <code>RemoteObject.ref</code> field, with <code>this</code> as the
 first argument, a two-element <code>Object[]</code> as the second
 argument (with <code>id</code> as the first element and
 <code>desc</code> as the second element), and -5274445189091581345L
 as the third argument, and returns the result.  If that invocation
 throws a <code>RuntimeException</code>, <code>RemoteException</code>, 
 or an <code>ActivationException</code>, then that exception is
 thrown to the caller.  If that invocation throws any other
 <code>java.lang.Exception</code>, then a
 <code>java.rmi.UnexpectedException</code> is thrown to the caller
 with the original exception as the cause.

 @param	id an activation identifier
 @param	desc an activation descriptor
 @return  the result of the invocation
 @throws	java.rmi.RemoteException if invocation results in
		a <code>RemoteException</code>
 @throws	java.rmi.activation.ActivationException if invocation
 		results in an <code>ActivationException</code>

<!-- END DATA -->
