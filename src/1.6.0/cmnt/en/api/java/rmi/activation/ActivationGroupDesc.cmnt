<!-- BEGIN KEY -->
public final class java.rmi.activation.ActivationGroupDesc extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 An activation group descriptor contains the information necessary to
 create/recreate an activation group in which to activate objects.
 Such a descriptor contains: <ul>
 <li> the group's class name,
 <li> the group's code location (the location of the group's class), and
 <li> a "marshalled" object that can contain group specific
 initialization data. </ul> <p>

 The group's class must be a concrete subclass of
 <code>ActivationGroup</code>. A subclass of
 <code>ActivationGroup</code> is created/recreated via the
 <code>ActivationGroup.createGroup</code> static method that invokes
 a special constructor that takes two arguments: <ul>

 <li> the group's <code>ActivationGroupID</code>, and
 <li> the group's initialization data (in a
 <code>java.rmi.MarshalledObject</code>)</ul><p>

 @version	1.31, 11/17/05
 @author	Ann Wollrath
 @since	1.2
 @see		ActivationGroup
 @see		ActivationGroupID

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.rmi.activation.ActivationGroupDesc.className
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The group's fully package qualified class name.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.rmi.activation.ActivationGroupDesc.location
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The location from where to load the group's class.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.rmi.MarshalledObject<?> java.rmi.activation.ActivationGroupDesc.data
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The group's initialization data.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.rmi.activation.ActivationGroupDesc.CommandEnvironment java.rmi.activation.ActivationGroupDesc.env
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The controlling options for executing the VM in
 another process.

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.util.Properties java.rmi.activation.ActivationGroupDesc.props
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial A properties map which will override those set
 by default in the subprocess environment.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroupDesc(Properties overrides, ActivationGroupDesc.CommandEnvironment cmd)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a group descriptor that uses the system defaults for group
 implementation and code location.  Properties specify Java
 environment overrides (which will override system properties in
 the group implementation's VM).  The command
 environment can control the exact command/options used in
 starting the child VM, or can be <code>null</code> to accept
 rmid's default.

 <p>This constructor will create an <code>ActivationGroupDesc</code>
 with a <code>null</code> group class name, which indicates the system's
 default <code>ActivationGroup</code> implementation.

 @param overrides the set of properties to set when the group is
 recreated.
 @param cmd the controlling options for executing the VM in
 another process (or <code>null</code>).
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroupDesc(String className, String location, java.rmi.MarshalledObject<?> data, Properties overrides, ActivationGroupDesc.CommandEnvironment cmd)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Specifies an alternate group implementation and execution
 environment to be used for the group.
 
 @param className the group's package qualified class name or
 <code>null</code>. A <code>null</code> group class name indicates
 the system's default <code>ActivationGroup</code> implementation.
 @param location the location from where to load the group's
 class
 @param data the group's initialization data contained in
 marshalled form (could contain properties, for example)
 @param overrides a properties map which will override those set
 by default in the subprocess environment (will be translated
 into <code>-D</code> options), or <code>null</code>.
 @param cmd the controlling options for executing the VM in
 another process (or <code>null</code>).
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.rmi.activation.ActivationGroupDesc.getClassName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the group's class name (possibly <code>null</code>).  A
 <code>null</code> group class name indicates the system's default
 <code>ActivationGroup</code> implementation.
 @return the group's class name
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.rmi.activation.ActivationGroupDesc.getLocation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the group's code location.
 @return the group's code location
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.MarshalledObject<?> java.rmi.activation.ActivationGroupDesc.getData()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the group's initialization data.
 @return the group's initialization data
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Properties java.rmi.activation.ActivationGroupDesc.getPropertyOverrides()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the group's property-override list.
 @return the property-override list, or <code>null</code>
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroupDesc.CommandEnvironment java.rmi.activation.ActivationGroupDesc.getCommandEnvironment()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the group's command-environment control object.
 @return the command-environment object, or <code>null</code>
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.rmi.activation.ActivationGroupDesc.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares two activation group descriptors for content equality.

 @param	obj	the Object to compare with
 @return	true if these Objects are equal; false otherwise.
 @see		java.util.Hashtable
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.rmi.activation.ActivationGroupDesc.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Produce identical numbers for similar <code>ActivationGroupDesc</code>s.
 @return an integer
 @see java.util.Hashtable

<!-- END DATA -->
