<!-- BEGIN KEY -->
public static class java.rmi.activation.ActivationGroupDesc.CommandEnvironment extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 Startup options for ActivationGroup implementations.

 This class allows overriding default system properties and
 specifying implementation-defined options for ActivationGroups.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String java.rmi.activation.ActivationGroupDesc.CommandEnvironment.command
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.String[] java.rmi.activation.ActivationGroupDesc.CommandEnvironment.options
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.rmi.activation.ActivationGroupDesc.CommandEnvironment(String cmdpath, java.lang.String[] argv)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a CommandEnvironment with all the necessary
 information.
 
 @param cmdpath the name of the java executable, including
 the full path, or <code>null</code>, meaning "use rmid's default".
 The named program <em>must</em> be able to accept multiple
 <code>-Dpropname=value</code> options (as documented for the
 "java" tool)
 
 @param argv extra options which will be used in creating the
 ActivationGroup.  Null has the same effect as an empty
 list.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandPath()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetch the configured path-qualified java command name.

 @return the configured name, or <code>null</code> if configured to
 accept the default
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String[] java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandOptions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Fetch the configured java command options.

 @return An array of the command options which will be passed
 to the new child command by rmid.
 Note that rmid may add other options before or after these
 options, or both.
 Never returns <code>null</code>.
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.rmi.activation.ActivationGroupDesc.CommandEnvironment.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares two command environments for content equality.

 @param	obj	the Object to compare with
 @return	true if these Objects are equal; false otherwise.
 @see		java.util.Hashtable
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.rmi.activation.ActivationGroupDesc.CommandEnvironment.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return identical values for similar
 <code>CommandEnvironment</code>s.
 @return an integer
 @see java.util.Hashtable

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.rmi.activation.ActivationGroupDesc.CommandEnvironment.readObject(ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 <code>readObject</code> for custom serialization.

 <p>This method reads this object's serialized form for this
 class as follows:
 
 <p>This method first invokes <code>defaultReadObject</code> on
 the specified object input stream, and if <code>options</code>
 is <code>null</code>, then <code>options</code> is set to a
 zero-length array of <code>String</code>.

<!-- END DATA -->
