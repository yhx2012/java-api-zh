<!-- BEGIN KEY -->
public abstract class java.net.SecureCacheResponse extends java.net.CacheResponse
<!-- END KEY -->
<!-- BEGIN DATA -->
 Represents a cache response originally retrieved through secure
 means, such as TLS.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String java.net.SecureCacheResponse.getCipherSuite()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the cipher suite in use on the original connection that
 retrieved the network resource.

 @return a string representing the cipher suite

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.util.List<java.security.cert.Certificate> java.net.SecureCacheResponse.getLocalCertificateChain()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the certificate chain that were sent to the server during
 handshaking of the original connection that retrieved the
 network resource.  Note: This method is useful only
 when using certificate-based cipher suites.

 @return an immutable List of Certificate representing the
           certificate chain that was sent to the server. If no
           certificate chain was sent, null will be returned.
 @see #getLocalPrincipal()

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.util.List<java.security.cert.Certificate> java.net.SecureCacheResponse.getServerCertificateChain() throws javax.net.ssl.SSLPeerUnverifiedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the server's certificate chain, which was established as
 part of defining the session in the original connection that
 retrieved the network resource, from cache.  Note: This method
 can be used only when using certificate-based cipher suites;
 using it with non-certificate-based cipher suites, such as
 Kerberos, will throw an SSLPeerUnverifiedException.

 @return an immutable List of Certificate representing the server's
         certificate chain.
 @throws SSLPeerUnverifiedException if the peer is not verified.
 @see #getPeerPrincipal()

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.security.Principal java.net.SecureCacheResponse.getPeerPrincipal() throws javax.net.ssl.SSLPeerUnverifiedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the server's principal which was established as part of
 defining the session during the original connection that
 retrieved the network resource.

 @return the server's principal. Returns an X500Principal of the
 end-entity certiticate for X509-based cipher suites, and
 KerberosPrincipal for Kerberos cipher suites.

 @throws SSLPeerUnverifiedException if the peer was not verified.

 @see #getServerCertificateChain()
 @see #getLocalPrincipal()

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.security.Principal java.net.SecureCacheResponse.getLocalPrincipal()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the principal that was sent to the server during
 handshaking in the original connection that retrieved the
 network resource.

 @return the principal sent to the server. Returns an X500Principal
 of the end-entity certificate for X509-based cipher suites, and
 KerberosPrincipal for Kerberos cipher suites. If no principal was
 sent, then null is returned.

 @see #getLocalCertificateChain()
 @see #getPeerPrincipal()

<!-- END DATA -->
