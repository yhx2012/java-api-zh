<!-- BEGIN KEY -->
public class java.security.KeyManagementException extends java.security.KeyException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This is the general key management exception for all operations
 dealing with key management. Examples of subclasses of 
 KeyManagementException that developers might create for 
 giving more detailed information could include:

 <ul>
 <li>KeyIDConflictException
 <li>KeyAuthorizationFailureException
 <li>ExpiredKeyException
 </ul>

 @version 1.19 05/11/17
 @author Benjamin Renaud

 @see Key
 @see KeyException

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyManagementException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a KeyManagementException with no detail message. A
 detail message is a String that describes this particular
 exception.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyManagementException(String msg)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a KeyManagementException with the specified detail
 message. A detail message is a String that describes this
 particular exception.  

 @param msg the detail message.  

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyManagementException(String message, Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a <code>KeyManagementException</code> with the specified
 detail message and cause.

 @param message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
 @param cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
        and indicates that the cause is nonexistent or unknown.)
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.KeyManagementException(Throwable cause)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a <code>KeyManagementException</code> with the specified cause
 and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
 (which typically contains the class and detail message of
 <tt>cause</tt>).

 @param cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
        and indicates that the cause is nonexistent or unknown.)
 @since 1.5

<!-- END DATA -->
