<!-- BEGIN KEY -->
public interface java.security.interfaces.RSAMultiPrimePrivateCrtKey extends java.security.interfaces.RSAPrivateKey
<!-- END KEY -->
<!-- BEGIN DATA -->
 The interface to an RSA multi-prime private key, as defined in the 
 PKCS#1 v2.1, using the <i>Chinese Remainder Theorem</i> 
 (CRT) information values.

 @author Valerie Peng

 @version 1.7 05/11/17
 
 @see java.security.spec.RSAPrivateKeySpec
 @see java.security.spec.RSAMultiPrimePrivateCrtKeySpec
 @see RSAPrivateKey
 @see RSAPrivateCrtKey

 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.interfaces.RSAMultiPrimePrivateCrtKey.getPublicExponent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the public exponent.

 @return the public exponent.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.interfaces.RSAMultiPrimePrivateCrtKey.getPrimeP()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the primeP.

 @return the primeP.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.interfaces.RSAMultiPrimePrivateCrtKey.getPrimeQ()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the primeQ.

 @return the primeQ.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.interfaces.RSAMultiPrimePrivateCrtKey.getPrimeExponentP()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the primeExponentP.

 @return the primeExponentP.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.interfaces.RSAMultiPrimePrivateCrtKey.getPrimeExponentQ()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the primeExponentQ.

 @return the primeExponentQ.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.interfaces.RSAMultiPrimePrivateCrtKey.getCrtCoefficient()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the crtCoefficient.

 @return the crtCoefficient.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.RSAOtherPrimeInfo[] java.security.interfaces.RSAMultiPrimePrivateCrtKey.getOtherPrimeInfo()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the otherPrimeInfo or null if there are only 
 two prime factors (p and q).

 @return the otherPrimeInfo.

<!-- END DATA -->
