<!-- BEGIN KEY -->
public abstract class java.security.spec.EncodedKeySpec extends java.lang.Object implements java.security.spec.KeySpec
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class represents a public or private key in encoded format.

 @author Jan Luehe

 @version 1.23, 11/17/05

 @see java.security.Key
 @see java.security.KeyFactory
 @see KeySpec
 @see X509EncodedKeySpec
 @see PKCS8EncodedKeySpec

 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.EncodedKeySpec(byte[] encodedKey)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new EncodedKeySpec with the given encoded key.

 @param encodedKey the encoded key. The contents of the 
 array are copied to protect against subsequent modification.
 @exception NullPointerException if <code>encodedKey</code>
 is null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.security.spec.EncodedKeySpec.getEncoded()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the encoded key.

 @return the encoded key. Returns a new array each time
 this method is called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String java.security.spec.EncodedKeySpec.getFormat()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of the encoding format associated with this
 key specification.

 <p>If the opaque representation of a key
 (see {@link java.security.Key Key}) can be transformed
 (see {@link java.security.KeyFactory KeyFactory})
 into this key specification (or a subclass of it),
 <code>getFormat</code> called
 on the opaque key returns the same value as the
 <code>getFormat</code> method
 of this key specification.

 @return a string representation of the encoding format.

<!-- END DATA -->
