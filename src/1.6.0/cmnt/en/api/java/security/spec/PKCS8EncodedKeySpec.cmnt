<!-- BEGIN KEY -->
public class java.security.spec.PKCS8EncodedKeySpec extends java.security.spec.EncodedKeySpec
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class represents the ASN.1 encoding of a private key,
 encoded according to the ASN.1 type <code>PrivateKeyInfo</code>.
 The <code>PrivateKeyInfo</code> syntax is defined in the PKCS#8 standard
 as follows:

 <pre>
 PrivateKeyInfo ::= SEQUENCE {
   version Version,
   privateKeyAlgorithm PrivateKeyAlgorithmIdentifier,
   privateKey PrivateKey,
   attributes [0] IMPLICIT Attributes OPTIONAL }

 Version ::= INTEGER

 PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier

 PrivateKey ::= OCTET STRING

 Attributes ::= SET OF Attribute
 </pre>

 @author Jan Luehe

 @version 1.22, 11/17/05

 @see java.security.Key
 @see java.security.KeyFactory
 @see KeySpec
 @see EncodedKeySpec
 @see X509EncodedKeySpec

 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.PKCS8EncodedKeySpec(byte[] encodedKey)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new PKCS8EncodedKeySpec with the given encoded key.

 @param encodedKey the key, which is assumed to be
 encoded according to the PKCS #8 standard. The contents of 
 the array are copied to protect against subsequent modification.
 @exception NullPointerException if <code>encodedKey</code>
 is null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] java.security.spec.PKCS8EncodedKeySpec.getEncoded()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the key bytes, encoded according to the PKCS #8 standard.

 @return the PKCS #8 encoding of the key. Returns a new array 
 each time this method is called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String java.security.spec.PKCS8EncodedKeySpec.getFormat()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of the encoding format associated with this
 key specification.

 @return the string <code>"PKCS#8"</code>.

<!-- END DATA -->
