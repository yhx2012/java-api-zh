<!-- BEGIN KEY -->
public class java.security.spec.ECFieldF2m extends java.lang.Object implements java.security.spec.ECField
<!-- END KEY -->
<!-- BEGIN DATA -->
 This immutable class defines an elliptic curve (EC)
 characteristic 2 finite field.

 @see ECField

 @author Valerie Peng
 @version 1.4, 11/17/05

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.ECFieldF2m(int m)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an elliptic curve characteristic 2 finite
 field which has 2^<code>m</code> elements with normal basis.
 @param m with 2^<code>m</code> being the number of elements.
 @exception IllegalArgumentException if <code>m</code>
 is not positive.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.ECFieldF2m(int m, BigInteger rp)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an elliptic curve characteristic 2 finite
 field which has 2^<code>m</code> elements with 
 polynomial basis.
 The reduction polynomial for this field is based
 on <code>rp</code> whose i-th bit correspondes to
 the i-th coefficient of the reduction polynomial.<p> 
 Note: A valid reduction polynomial is either a 
 trinomial (X^<code>m</code> + X^<code>k</code> + 1
 with <code>m</code> > <code>k</code> >= 1) or a
 pentanomial (X^<code>m</code> + X^<code>k3</code> 
 + X^<code>k2</code> + X^<code>k1</code> + 1 with
 <code>m</code> > <code>k3</code> > <code>k2</code> 
 > <code>k1</code> >= 1). 
 @param m with 2^<code>m</code> being the number of elements.
 @param rp the BigInteger whose i-th bit corresponds to
 the i-th coefficient of the reduction polynomial. 
 @exception NullPointerException if <code>rp</code> is null.
 @exception IllegalArgumentException if <code>m</code> 
 is not positive, or <code>rp</code> does not represent 
 a valid reduction polynomial. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.spec.ECFieldF2m(int m, int[] ks)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an elliptic curve characteristic 2 finite
 field which has 2^<code>m</code> elements with
 polynomial basis. The reduction polynomial for this
 field is based on <code>ks</code> whose content
 contains the order of the middle term(s) of the 
 reduction polynomial. 
 Note: A valid reduction polynomial is either a
 trinomial (X^<code>m</code> + X^<code>k</code> + 1
 with <code>m</code> > <code>k</code> >= 1) or a
 pentanomial (X^<code>m</code> + X^<code>k3</code>
 + X^<code>k2</code> + X^<code>k1</code> + 1 with
 <code>m</code> > <code>k3</code> > <code>k2</code>
 > <code>k1</code> >= 1), so <code>ks</code> should
 have length 1 or 3.
 @param m with 2^<code>m</code> being the number of elements. 
 @param ks the order of the middle term(s) of the
 reduction polynomial. Contents of this array are copied 
 to protect against subsequent modification.
 @exception NullPointerException if <code>ks</code> is null.
 @exception IllegalArgumentException if<code>m</code> 
 is not positive, or the length of <code>ks</code> 
 is neither 1 nor 3, or values in <code>ks</code> 
 are not between <code>m</code>-1 and 1 (inclusive) 
 and in descending order. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.spec.ECFieldF2m.getFieldSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the field size in bits which is <code>m</code>
 for this characteristic 2 finite field.
 @return the field size in bits.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.spec.ECFieldF2m.getM()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the value <code>m</code> of this characteristic
 2 finite field.
 @return <code>m</code> with 2^<code>m</code> being the 
 number of elements.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.math.BigInteger java.security.spec.ECFieldF2m.getReductionPolynomial()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a BigInteger whose i-th bit corresponds to the 
 i-th coefficient of the reduction polynomial for polynomial 
 basis or null for normal basis. 
 @return a BigInteger whose i-th bit corresponds to the 
 i-th coefficient of the reduction polynomial for polynomial
 basis or null for normal basis.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int[] java.security.spec.ECFieldF2m.getMidTermsOfReductionPolynomial()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns an integer array which contains the order of the 
 middle term(s) of the reduction polynomial for polynomial 
 basis or null for normal basis.
 @return an integer array which contains the order of the 
 middle term(s) of the reduction polynomial for polynomial 
 basis or null for normal basis. A new array is returned 
 each time this method is called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.security.spec.ECFieldF2m.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares this finite field for equality with the
 specified object. 
 @param obj the object to be compared.
 @return true if <code>obj</code> is an instance
 of ECFieldF2m and both <code>m</code> and the reduction 
 polynomial match, false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.spec.ECFieldF2m.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a hash code value for this characteristic 2 
 finite field.
 @return a hash code value.

<!-- END DATA -->
