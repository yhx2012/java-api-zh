<!-- BEGIN KEY -->
public class java.security.GuardedObject extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 A GuardedObject is an object that is used to protect access to
 another object.

 <p>A GuardedObject encapsulates a target object and a Guard object,
 such that access to the target object is possible
 only if the Guard object allows it.
 Once an object is encapsulated by a GuardedObject,
 access to that object is controlled by the <code>getObject</code>
 method, which invokes the
 <code>checkGuard</code> method on the Guard object that is
 guarding access. If access is not allowed,
 an exception is thrown.

 @see Guard
 @see Permission

 @version 1.17 05/11/17
 @author Roland Schemers
 @author Li Gong

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.GuardedObject(Object object, Guard guard)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a GuardedObject using the specified object and guard.
 If the Guard object is null, then no restrictions will
 be placed on who can access the object.

 @param object the object to be guarded.

 @param guard the Guard object that guards access to the object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.security.GuardedObject.getObject() throws java.lang.SecurityException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the guarded object, or throws an exception if access
 to the guarded object is denied by the guard.

 @return the guarded object.

 @exception SecurityException if access to the guarded object is
 denied.

<!-- END DATA -->
<!-- BEGIN KEY -->
private void java.security.GuardedObject.writeObject(ObjectOutputStream oos) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Writes this object out to a stream (i.e., serializes it).
 We check the guard if there is one.

<!-- END DATA -->
