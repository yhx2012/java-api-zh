<!-- BEGIN KEY -->
public abstract class java.security.SecureRandomSpi extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
 for the <code>SecureRandom</code> class.
 All the abstract methods in this class must be implemented by each
 service provider who wishes to supply the implementation
 of a cryptographically strong pseudo-random number generator.

 @version 1.13, 11/17/05

 @see SecureRandom
 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void java.security.SecureRandomSpi.engineSetSeed(byte[] seed)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Reseeds this random object. The given seed supplements, rather than
 replaces, the existing seed. Thus, repeated calls are guaranteed
 never to reduce randomness.

 @param seed the seed.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void java.security.SecureRandomSpi.engineNextBytes(byte[] bytes)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Generates a user-specified number of random bytes.

 <p> If a call to <code>engineSetSeed</code> had not occurred previously,
 the first call to this method forces this SecureRandom implementation
 to seed itself.  This self-seeding will not occur if
 <code>engineSetSeed</code> was previously called.
 
 @param bytes the array to be filled in with random bytes.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract byte[] java.security.SecureRandomSpi.engineGenerateSeed(int numBytes)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the given number of seed bytes.  This call may be used to
 seed other random number generators.

 @param numBytes the number of seed bytes to generate.
 
 @return the seed bytes.

<!-- END DATA -->
