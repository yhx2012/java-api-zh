<!-- BEGIN KEY -->
public final class java.security.CodeSigner extends java.lang.Object implements java.io.Serializable
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class encapsulates information about a code signer.
 It is immutable.

 @since 1.5
 @version 1.5, 11/17/05
 @author Vincent Ryan

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.security.cert.CertPath java.security.CodeSigner.signerCertPath
<!-- END KEY -->
<!-- BEGIN DATA -->
 The signer's certificate path.

 @serial

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.CodeSigner(CertPath signerCertPath, Timestamp timestamp)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a CodeSigner object.

 @param signerCertPath The signer's certificate path. 
                       It must not be <code>null</code>.
 @param timestamp A signature timestamp. 
                  If <code>null</code> then no timestamp was generated
                  for the signature.
 @throws NullPointerException if <code>signerCertPath</code> is 
                              <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.CertPath java.security.CodeSigner.getSignerCertPath()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the signer's certificate path.

 @return A certificate path.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.Timestamp java.security.CodeSigner.getTimestamp()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the signature timestamp.

 @return The timestamp or <code>null</code> if none is present.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.CodeSigner.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the hash code value for this code signer.
 The hash code is generated using the signer's certificate path and the
 timestamp, if present.

 @return a hash code value for this code signer.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.security.CodeSigner.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Tests for equality between the specified object and this
 code signer. Two code signers are considered equal if their 
 signer certificate paths are equal and if their timestamps are equal,
 if present in both.
 
 @param obj the object to test for equality with this object.
 
 @return true if the objects are considered equal, false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.CodeSigner.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a string describing this code signer.
 
 @return A string comprising the signer's certificate and a timestamp,
         if present.

<!-- END DATA -->
