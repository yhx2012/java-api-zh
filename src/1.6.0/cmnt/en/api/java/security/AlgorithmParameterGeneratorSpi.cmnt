<!-- BEGIN KEY -->
public abstract class java.security.AlgorithmParameterGeneratorSpi extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
 for the <code>AlgorithmParameterGenerator</code> class, which 
 is used to generate a set of parameters to be used with a certain algorithm.

 <p> All the abstract methods in this class must be implemented by each 
 cryptographic service provider who wishes to supply the implementation
 of a parameter generator for a particular algorithm.

 <p> In case the client does not explicitly initialize the
 AlgorithmParameterGenerator (via a call to an <code>engineInit</code>
 method), each provider must supply (and document) a default initialization.
 For example, the Sun provider uses a default modulus prime size of 1024
 bits for the generation of DSA parameters.

 @author Jan Luehe

 @version 1.15, 11/17/05

 @see AlgorithmParameterGenerator
 @see AlgorithmParameters
 @see java.security.spec.AlgorithmParameterSpec

 @since 1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void java.security.AlgorithmParameterGeneratorSpi.engineInit(int size, SecureRandom random)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Initializes this parameter generator for a certain size
 and source of randomness.

 @param size the size (number of bits).
 @param random the source of randomness.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract void java.security.AlgorithmParameterGeneratorSpi.engineInit(AlgorithmParameterSpec genParamSpec, SecureRandom random) throws java.security.InvalidAlgorithmParameterException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Initializes this parameter generator with a set of
 algorithm-specific parameter generation values.

 @param genParamSpec the set of algorithm-specific parameter generation values.
 @param random the source of randomness.

 @exception InvalidAlgorithmParameterException if the given parameter
 generation values are inappropriate for this parameter generator.

<!-- END DATA -->
<!-- BEGIN KEY -->
protected abstract java.security.AlgorithmParameters java.security.AlgorithmParameterGeneratorSpi.engineGenerateParameters()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Generates the parameters.

 @return the new AlgorithmParameters object.

<!-- END DATA -->
