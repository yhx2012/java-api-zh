<!-- BEGIN KEY -->
public class java.security.cert.LDAPCertStoreParameters extends java.lang.Object implements java.security.cert.CertStoreParameters
<!-- END KEY -->
<!-- BEGIN DATA -->
 Parameters used as input for the LDAP <code>CertStore</code> algorithm.
 <p>
 This class is used to provide necessary configuration parameters (server
 name and port number) to implementations of the LDAP <code>CertStore</code>
 algorithm.
 <p>
 <b>Concurrent Access</b>
 <p>
 Unless otherwise specified, the methods defined in this class are not
 thread-safe. Multiple threads that need to access a single
 object concurrently should synchronize amongst themselves and
 provide the necessary locking. Multiple threads each manipulating
 separate objects need not synchronize.

 @version 	1.9 11/17/05
 @since	1.4
 @author	Steve Hanna
 @see         CertStore

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.LDAPCertStoreParameters(String serverName, int port)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an instance of <code>LDAPCertStoreParameters</code> with the
 specified parameter values.

 @param serverName the DNS name of the LDAP server
 @param port the port number of the LDAP server
 @exception NullPointerException if <code>serverName</code> is
 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.LDAPCertStoreParameters(String serverName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an instance of <code>LDAPCertStoreParameters</code> with the
 specified server name and a default port of 389.

 @param serverName the DNS name of the LDAP server
 @exception NullPointerException if <code>serverName</code> is
 <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.LDAPCertStoreParameters()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an instance of <code>LDAPCertStoreParameters</code> with the
 default parameter values (server name "localhost", port 389).

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.cert.LDAPCertStoreParameters.getServerName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the DNS name of the LDAP server.

 @return the name (not <code>null</code>)

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.security.cert.LDAPCertStoreParameters.getPort()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the port number of the LDAP server.

 @return the port number

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.security.cert.LDAPCertStoreParameters.clone()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a copy of this object. Changes to the copy will not affect
 the original and vice versa.
 <p>
 Note: this method currently performs a shallow copy of the object
 (simply calls <code>Object.clone()</code>). This may be changed in a 
 future revision to perform a deep copy if new parameters are added 
 that should not be shared.

 @return the copy

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.cert.LDAPCertStoreParameters.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a formatted string describing the parameters.

 @return a formatted string describing the parameters

<!-- END DATA -->
