<!-- BEGIN KEY -->
public class java.security.cert.PolicyQualifierInfo extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 An immutable policy qualifier represented by the ASN.1 PolicyQualifierInfo 
 structure.

 <p>The ASN.1 definition is as follows:
 <p><pre>
   PolicyQualifierInfo ::= SEQUENCE {
        policyQualifierId       PolicyQualifierId,
        qualifier               ANY DEFINED BY policyQualifierId }
 </pre>
 <p>
 A certificate policies extension, if present in an X.509 version 3 
 certificate, contains a sequence of one or more policy information terms,
 each of which consists of an object identifier (OID) and optional
 qualifiers. In an end-entity certificate, these policy information terms
 indicate the policy under which the certificate has been issued and the 
 purposes for which the certificate may be used. In a CA certificate, these 
 policy information terms limit the set of policies for certification paths 
 which include this certificate.
 <p>
 A <code>Set</code> of <code>PolicyQualifierInfo</code> objects are returned 
 by the {@link PolicyNode#getPolicyQualifiers PolicyNode.getPolicyQualifiers} 
 method. This allows applications with specific policy requirements to 
 process and validate each policy qualifier. Applications that need to 
 process policy qualifiers should explicitly set the 
 <code>policyQualifiersRejected</code> flag to false (by calling the 
 {@link PKIXParameters#setPolicyQualifiersRejected 
 PKIXParameters.setPolicyQualifiersRejected} method) before validating 
 a certification path.

 <p>Note that the PKIX certification path validation algorithm specifies
 that any policy qualifier in a certificate policies extension that is 
 marked critical must be processed and validated. Otherwise the 
 certification path must be rejected. If the 
 <code>policyQualifiersRejected</code> flag is set to false, it is up to 
 the application to validate all policy qualifiers in this manner in order 
 to be PKIX compliant.

 <p><b>Concurrent Access</b>

 <p>All <code>PolicyQualifierInfo</code> objects must be immutable and
 thread-safe. That is, multiple threads may concurrently invoke the
 methods defined in this class on a single <code>PolicyQualifierInfo</code> 
 object (or more than one) with no ill effects. Requiring 
 <code>PolicyQualifierInfo</code> objects to be immutable and thread-safe 
 allows them to be passed around to various pieces of code without 
 worrying about coordinating access.

 @author 	seth proctor
 @author 	Sean Mullan
 @version 	1.12 11/17/05
 @since 	1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.security.cert.PolicyQualifierInfo(byte[] encoded) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates an instance of <code>PolicyQualifierInfo</code> from the
 encoded bytes. The encoded byte array is copied on construction.

 @param encoded a byte array containing the qualifier in DER encoding
 @exception IOException thrown if the byte array does not represent a
 valid and parsable policy qualifier

<!-- END DATA -->
<!-- BEGIN KEY -->
public final java.lang.String java.security.cert.PolicyQualifierInfo.getPolicyQualifierId()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the <code>policyQualifierId</code> field of this 
 <code>PolicyQualifierInfo</code>. The <code>policyQualifierId</code>
 is an Object Identifier (OID) represented by a set of nonnegative 
 integers separated by periods.

 @return the OID (never <code>null</code>)

<!-- END DATA -->
<!-- BEGIN KEY -->
public final byte[] java.security.cert.PolicyQualifierInfo.getEncoded()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the ASN.1 DER encoded form of this 
 <code>PolicyQualifierInfo</code>.

 @return the ASN.1 DER encoded bytes (never <code>null</code>).
 Note that a copy is returned, so the data is cloned each time 
 this method is called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public final byte[] java.security.cert.PolicyQualifierInfo.getPolicyQualifier()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the ASN.1 DER encoded form of the <code>qualifier</code> 
 field of this <code>PolicyQualifierInfo</code>.

 @return the ASN.1 DER encoded bytes of the <code>qualifier</code>
 field. Note that a copy is returned, so the data is cloned each 
 time this method is called.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.security.cert.PolicyQualifierInfo.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return a printable representation of this 
 <code>PolicyQualifierInfo</code>.

 @return a <code>String</code> describing the contents of this
         <code>PolicyQualifierInfo</code>

<!-- END DATA -->
