<!-- BEGIN KEY -->
public class java.sql.SQLDataSetSyncException extends java.sql.SQLRuntimeException
<!-- END KEY -->
<!-- BEGIN DATA -->
 The subclass of {@link SQLRuntimeException}  thrown 
 when an invocation of the <code>sync</code> method for a disconnected 
 <code>DataSet</code> fails.
  
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.SQLDataSetSyncException(Throwable cause, java.sql.DataSetResolver<?> ds)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Reconstructs a <code>SQLDataSetSyncException</code> object with a given
 <code>cause</code>.
 The <code>reason</code>  is initialized to <code>null</code> if
 <code>cause==null</code> or to <code>cause.toString()</code> if
 <code>cause!=null</code>.
 <p>
 @param cause the underlying reason for this <code>SQLDataSetSyncException</code>
 (which is saved for later retrieval by the <code>getCause()</code> method);
 may be null indicating the cause is non-existent or unknown.
 @param ds a DataSetSetResolver containing the rows caused the conflict.

 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.DataSetResolver<?> java.sql.SQLDataSetSyncException.getDataSetResolver()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves a <code>DataSetResolver</code> object that contains
 the rows that could not be propagated to the underlying data source
 by calling the <code>sync</code> method on a disconnected <code>DataSet</code>.

<!-- END DATA -->
