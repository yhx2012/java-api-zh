<!-- BEGIN KEY -->
public class java.sql.Time extends java.util.Date
<!-- END KEY -->
<!-- BEGIN DATA -->
 <P>A thin wrapper around the <code>java.util.Date</code> class that allows the JDBC
 API to identify this as an SQL <code>TIME</code> value. The <code>Time</code>
 class adds formatting and
 parsing operations to support the JDBC escape syntax for time
 values. 
 <p>The date components should be set to the "zero epoch"
 value of January 1, 1970 and should not be accessed. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.Time(int hour, int minute, int second)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>Time</code> object initialized with the 
 given values for the hour, minute, and second.
 The driver sets the date components to January 1, 1970.
 Any method that attempts to access the date components of a
 <code>Time</code> object will throw a
 <code>java.lang.IllegalArgumentException</code>.
 <P>
 The result is undefined if a given argument is out of bounds.

 @param hour 0 to 23
 @param minute 0 to 59
 @param second 0 to 59

 @deprecated Use the constructor that takes a milliseconds value
             in place of this constructor

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.sql.Time(long time)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>Time</code> object using a milliseconds time value.

 @param time milliseconds since January 1, 1970, 00:00:00 GMT;
             a negative number is milliseconds before
               January 1, 1970, 00:00:00 GMT

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setTime(long time)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets a <code>Time</code> object using a milliseconds time value.

 @param time milliseconds since January 1, 1970, 00:00:00 GMT;
             a negative number is milliseconds before
               January 1, 1970, 00:00:00 GMT

<!-- END DATA -->
<!-- BEGIN KEY -->
public static java.sql.Time java.sql.Time.valueOf(String s)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts a string in JDBC time escape format to a <code>Time</code> value.

 @param s time in format "hh:mm:ss"
 @return a corresponding <code>Time</code> object

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.sql.Time.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Formats a time in JDBC time escape format.  

 @return a <code>String</code> in hh:mm:ss format

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getYear()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is deprecated and should not be used because SQL <code>TIME</code> 
 values do not have a year component.

 @deprecated
 @exception java.lang.IllegalArgumentException if this
           method is invoked
 @see #setYear

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getMonth()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is deprecated and should not be used because SQL <code>TIME</code> 
 values do not have a month component.

 @deprecated
 @exception java.lang.IllegalArgumentException if this
           method is invoked
 @see #setMonth

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getDay()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is deprecated and should not be used because SQL <code>TIME</code> 
 values do not have a day component.

 @deprecated
 @exception java.lang.IllegalArgumentException if this
           method is invoked

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.sql.Time.getDate()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is deprecated and should not be used because SQL <code>TIME</code> 
 values do not have a date component.

 @deprecated
 @exception java.lang.IllegalArgumentException if this
           method is invoked
 @see #setDate

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setYear(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is deprecated and should not be used because SQL <code>TIME</code> 
 values do not have a year component.

 @deprecated
 @exception java.lang.IllegalArgumentException if this
           method is invoked
 @see #getYear

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setMonth(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is deprecated and should not be used because SQL <code>TIME</code> 
 values do not have a month component.

 @deprecated
 @exception java.lang.IllegalArgumentException if this
           method is invoked
 @see #getMonth

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.sql.Time.setDate(int i)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is deprecated and should not be used because SQL <code>TIME</code> 
 values do not have a date component.

 @deprecated
 @exception java.lang.IllegalArgumentException if this
           method is invoked
 @see #getDate

<!-- END DATA -->
