<!-- BEGIN KEY -->
public interface class java.sql.AutoGeneratedKeys implements java.lang.annotation.Annotation
<!-- END KEY -->
<!-- BEGIN DATA -->
 Annotation  used to indicate that a <code>DataSet</code> 
 returned by invoking a method decorated by the 
 <code>Update</code> annotation is used to hold the columns which represent 
 the returned. auto-generated keys.
 To return auto-generated keys, the <code>keys</code> annotation element
 will have a value of <code>GeneratedKeys.RETURNED_KEYS_DRIVER_DEFINED</code> 
 or <code>GeneratedKeys.RETURNED_KEYS_COLUMNS_SPECIFIED</code>.
 
 
 <p>
 A <i>data class</i> that wishes to store auto-generated keys in a <code>
 DataSet</code> needs to annotate the  <i>data class</i> with this 
 marker annotation.

 <p>For example:
<blockquote>
<pre>
  <code>@</code>AutoGeneratedKeys
 public class myKeys {
    public String col1;
 }

 public interface MyQueries{
   <code>@</code>Update(sql="insert into tabName(?1, ?2)",
    keys=GeneratedKeys.RETURNED_KEYS_DRIVER_DEFINED) 
   DatSet&lt;myKeys&gt; addPerson(String name, int age);
 }

 </pre>
</blockquote>
 <p>After a call to the annotated method, addPerson, the auto-generated keys if any 
 are stored in the <code>DataSet</code>.  The JDBC driver will determine which
 columns to return as the auto-generated key. 
 If the <i>data class</i>, myKeys, is not annotated with the <code>AutoGeneratedKeys</code> annotation,
 then a <code>SQLRuntimeException</code> is thrown.

  @see GeneratedKeys
  @see Statement#executeUpdate(java.lang.String, java.lang.String [])
  @see Statement#executeUpdate(java.lang.String, int)
 @since 1.6

<!-- END DATA -->
