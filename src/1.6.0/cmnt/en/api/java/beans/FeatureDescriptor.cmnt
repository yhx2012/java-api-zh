<!-- BEGIN KEY -->
public class java.beans.FeatureDescriptor extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 The FeatureDescriptor class is the common baseclass for PropertyDescriptor,
 EventSetDescriptor, and MethodDescriptor, etc.
 <p>
 It supports some common information that can be set and retrieved for
 any of the introspection descriptors.
 <p>
 In addition it provides an extension mechanism so that arbitrary
 attribute/value pairs can be associated with a design feature.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.FeatureDescriptor()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <code>FeatureDescriptor</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.beans.FeatureDescriptor.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the programmatic name of this feature.

 @return The programmatic name of the property/method/event

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setName(String name)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the programmatic name of this feature.

 @param name  The programmatic name of the property/method/event

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.beans.FeatureDescriptor.getDisplayName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the localized display name of this feature.

 @return The localized display name for the property/method/event.
	This defaults to the same as its programmatic name from getName.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setDisplayName(String displayName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the localized display name of this feature.

 @param displayName  The localized display name for the
		property/method/event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.FeatureDescriptor.isExpert()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "expert" flag is used to distinguish between those features that are
 intended for expert users from those that are intended for normal users.

 @return True if this feature is intended for use by experts only.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setExpert(boolean expert)
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "expert" flag is used to distinguish between features that are
 intended for expert users from those that are intended for normal users.

 @param expert True if this feature is intended for use by experts only.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.FeatureDescriptor.isHidden()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "hidden" flag is used to identify features that are intended only
 for tool use, and which should not be exposed to humans.

 @return True if this feature should be hidden from human users.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setHidden(boolean hidden)
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "hidden" flag is used to identify features that are intended only
 for tool use, and which should not be exposed to humans.

 @param hidden  True if this feature should be hidden from human users.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.FeatureDescriptor.isPreferred()
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "preferred" flag is used to identify features that are particularly
 important for presenting to humans.

 @return True if this feature should be preferentially shown to human users.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setPreferred(boolean preferred)
<!-- END KEY -->
<!-- BEGIN DATA -->
 The "preferred" flag is used to identify features that are particularly
 important for presenting to humans.

 @param preferred  True if this feature should be preferentially shown
		    	 to human users.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String java.beans.FeatureDescriptor.getShortDescription()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the short description of this feature.

 @return  A localized short description associated with this 
   property/method/event.  This defaults to be the display name.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setShortDescription(String text)
<!-- END KEY -->
<!-- BEGIN DATA -->
 You can associate a short descriptive string with a feature.  Normally
 these descriptive strings should be less than about 40 characters.
 @param text  A (localized) short description to be associated with
 this property/method/event.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.FeatureDescriptor.setValue(String attributeName, Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Associate a named attribute with this feature.

 @param attributeName  The locale-independent name of the attribute
 @param value  The value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.beans.FeatureDescriptor.getValue(String attributeName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieve a named attribute with this feature.

 @param attributeName  The locale-independent name of the attribute
 @return  The value of the attribute.  May be null if
	   the attribute is unknown.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Enumeration<java.lang.String> java.beans.FeatureDescriptor.attributeNames()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets an enumeration of the locale-independent names of this
 feature.

 @return  An enumeration of the locale-independent names of any 
    attributes that have been registered with setValue.

<!-- END DATA -->
