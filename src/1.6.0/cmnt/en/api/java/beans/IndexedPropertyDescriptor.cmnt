<!-- BEGIN KEY -->
public class java.beans.IndexedPropertyDescriptor extends java.beans.PropertyDescriptor
<!-- END KEY -->
<!-- BEGIN DATA -->
 An IndexedPropertyDescriptor describes a property that acts like an
 array and has an indexed read and/or indexed write method to access
 specific elements of the array.
 <p>
 An indexed property may also provide simple non-indexed read and write
 methods.  If these are present, they read and write arrays of the type
 returned by the indexed read method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.IndexedPropertyDescriptor(String propertyName, java.lang.Class<?> beanClass) throws java.beans.IntrospectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This constructor constructs an IndexedPropertyDescriptor for a property
 that follows the standard Java conventions by having getFoo and setFoo 
 accessor methods, for both indexed access and array access.
 <p>
 Thus if the argument name is "fred", it will assume that there
 is an indexed reader method "getFred", a non-indexed (array) reader
 method also called "getFred", an indexed writer method "setFred",
 and finally a non-indexed writer method "setFred".

 @param propertyName The programmatic name of the property.
 @param beanClass The Class object for the target bean.
 @exception IntrospectionException if an exception occurs during
              introspection.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.IndexedPropertyDescriptor(String propertyName, java.lang.Class<?> beanClass, String readMethodName, String writeMethodName, String indexedReadMethodName, String indexedWriteMethodName) throws java.beans.IntrospectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This constructor takes the name of a simple property, and method
 names for reading and writing the property, both indexed
 and non-indexed.

 @param propertyName The programmatic name of the property.
 @param beanClass  The Class object for the target bean.
 @param readMethodName The name of the method used for reading the property
		 values as an array.  May be null if the property is write-only
		 or must be indexed.
 @param writeMethodName The name of the method used for writing the property
		 values as an array.  May be null if the property is read-only
		 or must be indexed.
 @param indexedReadMethodName The name of the method used for reading
		an indexed property value.
		May be null if the property is write-only.
 @param indexedWriteMethodName The name of the method used for writing
		an indexed property value.  
		May be null if the property is read-only.
 @exception IntrospectionException if an exception occurs during
              introspection.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.IndexedPropertyDescriptor(String propertyName, Method readMethod, Method writeMethod, Method indexedReadMethod, Method indexedWriteMethod) throws java.beans.IntrospectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This constructor takes the name of a simple property, and Method
 objects for reading and writing the property.

 @param propertyName The programmatic name of the pro
perty.
 @param readMethod The method used for reading the property values as an array.
		May be null if the property is write-only or must be indexed.
 @param writeMethod The method used for writing the property values as an array.
		May be null if the property is read-only or must be indexed.
 @param indexedReadMethod The method used for reading an indexed property value.
		May be null if the property is write-only.
 @param indexedWriteMethod The method used for writing an indexed property value.  
		May be null if the property is read-only.
 @exception IntrospectionException if an exception occurs during
              introspection.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.reflect.Method java.beans.IndexedPropertyDescriptor.getIndexedReadMethod()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the method that should be used to read an indexed
 property value.

 @return The method that should be used to read an indexed
 property value.
 May return null if the property isn't indexed or is write-only.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.beans.IndexedPropertyDescriptor.setIndexedReadMethod(Method readMethod) throws java.beans.IntrospectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the method that should be used to read an indexed property value.

 @param readMethod The new indexed read method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.reflect.Method java.beans.IndexedPropertyDescriptor.getIndexedWriteMethod()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the method that should be used to write an indexed property value.

 @return The method that should be used to write an indexed
 property value.
 May return null if the property isn't indexed or is read-only.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized void java.beans.IndexedPropertyDescriptor.setIndexedWriteMethod(Method writeMethod) throws java.beans.IntrospectionException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Sets the method that should be used to write an indexed property value.

 @param writeMethod The new indexed write method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public synchronized java.lang.Class<?> java.beans.IndexedPropertyDescriptor.getIndexedPropertyType()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the <code>Class</code> object of the indexed properties' type.
 The returned <code>Class</code> may describe a primitive type such as <code>int</code>.

 @return The <code>Class</code> for the indexed properties' type; may return <code>null</code>
         if the type cannot be determined.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.IndexedPropertyDescriptor.equals(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Compares this <code>PropertyDescriptor</code> against the specified object.
 Returns true if the objects are the same. Two <code>PropertyDescriptor</code>s
 are the same if the read, write, property types, property editor and
 flags  are equivalent.

 @since 1.4

<!-- END DATA -->
<!-- BEGIN KEY -->
public int java.beans.IndexedPropertyDescriptor.hashCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a hash code value for the object. 
 See {@link java.lang.Object#hashCode} for a complete description.

 @return a hash code value for this object.
 @since 1.5

<!-- END DATA -->
