<!-- BEGIN KEY -->
public interface java.beans.beancontext.BeanContext extends java.beans.beancontext.BeanContextChild, java.util.Collection, java.beans.DesignMode, java.beans.Visibility
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>
 The BeanContext acts a logical hierarchical container for JavaBeans.
 </p>

 @author Laurence P. G. Cable
 @version 1.23, 12/19/03
 @since 1.2

 @see java.beans.Beans
 @see java.beans.beancontext.BeanContextChild
 @see java.beans.beancontext.BeanContextMembershipListener
 @see java.beans.PropertyChangeEvent
 @see java.beans.VetoableChangeEvent
 @see java.beans.DesignMode
 @see java.beans.Visibility
 @see java.util.Collection

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final java.lang.Object java.beans.beancontext.BeanContext.globalHierarchyLock
<!-- END KEY -->
<!-- BEGIN DATA -->
 This global lock is used by both <code>BeanContext</code> 
 and <code>BeanContextServices</code> implementors 
 to serialize changes in a <code>BeanContext</code> 
 hierarchy and any service requests etc.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.beans.beancontext.BeanContext.instantiateChild(String beanName) throws java.io.IOException, java.lang.ClassNotFoundException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Instantiate the javaBean named as a 
 child of this <code>BeanContext</code>.
 The implementation of the JavaBean is 
 derived from the value of the beanName parameter, 
 and is defined by the 
 <code>java.beans.Beans.instantiate()</code> method.

 @param beanName The name of the JavaBean to instantiate 
 as a child of this <code>BeanContext</code>
 @throws <code>IOException</code>
 @throws <code>ClassNotFoundException</code> if the class identified
 by the beanName parameter is not found

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.InputStream java.beans.beancontext.BeanContext.getResourceAsStream(String name, BeanContextChild bcc) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Analagous to <code>java.lang.ClassLoader.getResourceAsStream()</code>, 
 this method allows a <code>BeanContext</code> implementation 
 to interpose behavior between the child <code>Component</code> 
 and underlying <code>ClassLoader</code>.
 
 @param name the resource name
 @param bcc the specified child
 @return an <code>InputStream</code> for reading the resource, 
 or <code>null</code> if the resource could not
 be found.
 @throws <code>IllegalArgumentException</code> if 
 the resource is not valid

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.net.URL java.beans.beancontext.BeanContext.getResource(String name, BeanContextChild bcc) throws java.lang.IllegalArgumentException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Analagous to <code>java.lang.ClassLoader.getResource()</code>, this
 method allows a <code>BeanContext</code> implementation to interpose
 behavior between the child <code>Component</code> 
 and underlying <code>ClassLoader</code>.
 
 @param name the resource name
 @param bcc the specified child
 @return a <code>URL</code> for the named 
 resource for the specified child
 @throws <code>IllegalArgumentException</code> 
 if the resource is not valid

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.beancontext.BeanContext.addBeanContextMembershipListener(BeanContextMembershipListener bcml)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adds the specified <code>BeanContextMembershipListener</code> 
 to receive <code>BeanContextMembershipEvents</code> from 
 this <code>BeanContext</code> whenever it adds
 or removes a child <code>Component</code>(s).
 
 @param bcml the <code>BeanContextMembershipListener</code> to be added

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.beancontext.BeanContext.removeBeanContextMembershipListener(BeanContextMembershipListener bcml)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Removes the specified <code>BeanContextMembershipListener</code> 
 so that it no longer receives <code>BeanContextMembershipEvent</code>s 
 when the child <code>Component</code>(s) are added or removed.
 
 @param bcml the <code>BeanContextMembershipListener</code> 
 to be removed

<!-- END DATA -->
