<!-- BEGIN KEY -->
public class java.beans.beancontext.BeanContextServiceRevokedEvent extends java.beans.beancontext.BeanContextEvent
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>
 This event type is used by the 
 <code>BeanContextServiceRevokedListener</code> in order to
 identify the service being revoked.
 </p>

<!-- END DATA -->
<!-- BEGIN KEY -->
protected java.lang.Class java.beans.beancontext.BeanContextServiceRevokedEvent.serviceClass
<!-- END KEY -->
<!-- BEGIN DATA -->
 A <code>Class</code> reference to the service that is being revoked.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.beancontext.BeanContextServiceRevokedEvent(BeanContextServices bcs, java.lang.Class sc, boolean invalidate)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a <code>BeanContextServiceEvent</code>.
 @param bcs the <code>BeanContextServices</code> 
 from which this service is being revoked
 @param sc the service that is being revoked
 @param invalidate <code>true</code> for immediate revocation 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.beancontext.BeanContextServices java.beans.beancontext.BeanContextServiceRevokedEvent.getSourceAsBeanContextServices()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the source as a reference of type <code>BeanContextServices</code>
 @return the <code>BeanContextServices</code> from which 
 this service is being revoked

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Class java.beans.beancontext.BeanContextServiceRevokedEvent.getServiceClass()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the service class that is the subject of this notification
 @return A <code>Class</code> reference to the 
 service that is being revoked

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.beancontext.BeanContextServiceRevokedEvent.isServiceClass(java.lang.Class service)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Checks this event to determine whether or not
 the service being revoked is of a particular class.
 @param service the service of interest (should be non-null)
 @return <code>true</code> if the service being revoked is of the
 same class as the specified service

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean java.beans.beancontext.BeanContextServiceRevokedEvent.isCurrentServiceInvalidNow()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Reports if the current service is being forcibly revoked,
 in which case the references are now invalidated and unusable.
 @return <code>true</code> if current service is being forcibly revoked

<!-- END DATA -->
