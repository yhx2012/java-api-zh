<!-- BEGIN KEY -->
public class java.beans.XMLDecoder extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>XMLDecoder</code> class is used to read XML documents 
 created using the <code>XMLEncoder</code> and is used just like 
 the <code>ObjectInputStream</code>. For example, one can use 
 the following fragment to read the first object defined 
 in an XML document written by the <code>XMLEncoder</code> 
 class: 
 <pre>
       XMLDecoder d = new XMLDecoder(
                          new BufferedInputStream(
                              new FileInputStream("Test.xml")));
       Object result = d.readObject();
       d.close();
 </pre>
 
<p>
 For more information you might also want to check out
 <a
 href="http://java.sun.com/products/jfc/tsc/articles/persistence3">Long Term Persistence of JavaBeans Components: XML Schema</a>,
 an article in <em>The Swing Connection.</em>
 @see XMLEncoder
 @see java.io.ObjectInputStream

 @since 1.4
 
 @version 1.32 11/30/05
 @author Philip Milne

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.XMLDecoder(InputStream in)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates a new input stream for reading archives  
 created by the <code>XMLEncoder</code> class. 

 @param in The underlying stream. 

 @see XMLEncoder#XMLEncoder(java.io.OutputStream)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.XMLDecoder(InputStream in, Object owner)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates a new input stream for reading archives  
 created by the <code>XMLEncoder</code> class. 

 @param in The underlying stream. 
 @param owner The owner of this stream. 


<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.XMLDecoder(InputStream in, Object owner, ExceptionListener exceptionListener)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates a new input stream for reading archives  
 created by the <code>XMLEncoder</code> class. 

 @param in the underlying stream. 
 @param owner the owner of this stream. 
 @param exceptionListener the exception handler for the stream;
        if <code>null</code> the default exception listener will be used.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.XMLDecoder(InputStream in, Object owner, ExceptionListener exceptionListener, ClassLoader cl)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Creates a new input stream for reading archives  
 created by the <code>XMLEncoder</code> class. 

 @param in the underlying stream.  <code>null</code> may be passed without
        error, though the resulting XMLDecoder will be useless
 @param owner the owner of this stream.  <code>null</code> is a legal
        value
 @param exceptionListener the exception handler for the stream, or
        <code>null</code> to use the default
 @param cl the class loader used for instantiating objects.  
        <code>null</code> indicates that the default class loader should
        be used
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.XMLDecoder.close()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method closes the input stream associated 
 with this stream. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.XMLDecoder.setExceptionListener(ExceptionListener exceptionListener)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Sets the exception handler for this stream to <code>exceptionListener</code>. 
 The exception handler is notified when this stream catches recoverable 
 exceptions.
 
 @param exceptionListener The exception handler for this stream;
 if <code>null</code> the default exception listener will be used. 

 @see #getExceptionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.beans.ExceptionListener java.beans.XMLDecoder.getExceptionListener()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the exception handler for this stream. 
 
 @return The exception handler for this stream. 
     Will return the default exception listener if this has not explicitly been set.

 @see #setExceptionListener

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.beans.XMLDecoder.readObject()
<!-- END KEY -->
<!-- BEGIN DATA -->

 Reads the next object from the underlying input stream. 

 @return the next object read

 @throws ArrayIndexOutOfBoundsException if the stream contains no objects 
         (or no more objects)

 @see XMLEncoder#writeObject

<!-- END DATA -->
<!-- BEGIN KEY -->
public void java.beans.XMLDecoder.setOwner(Object owner)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Sets the owner of this decoder to <code>owner</code>. 
 
 @param owner The owner of this decoder. 

 @see #getOwner

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object java.beans.XMLDecoder.getOwner()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the owner of this decoder. 
 
 @return The owner of this decoder. 

 @see #setOwner

<!-- END DATA -->
