<!-- BEGIN KEY -->
public interface org.omg.CORBA.DataInputStream extends org.omg.CORBA.portable.ValueBase
<!-- END KEY -->
<!-- BEGIN DATA -->
Defines the methods used to read primitive data types from input streams
 for unmarshaling custom value types.  This interface is used by user
 written custom unmarshaling code for custom value types.
 @see org.omg.CORBA.DataOutputStream
 @see org.omg.CORBA.CustomMarshal
 @version 1.11 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Any org.omg.CORBA.DataInputStream.read_any()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL <code>Any</code> value from the input stream.
 @return  the <code>Any</code> read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.CORBA.DataInputStream.read_boolean()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL boolean value from the input stream.
 @return  the boolean read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public char org.omg.CORBA.DataInputStream.read_char()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL character value from the input stream.
 @return  the character read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public char org.omg.CORBA.DataInputStream.read_wchar()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL wide character value from the input stream.
 @return  the wide character read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte org.omg.CORBA.DataInputStream.read_octet()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL octet value from the input stream.
 @return  the octet value read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public short org.omg.CORBA.DataInputStream.read_short()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL short from the input stream.
 @return  the short read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public short org.omg.CORBA.DataInputStream.read_ushort()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL unsigned short from the input stream.
 @return  the unsigned short read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.CORBA.DataInputStream.read_long()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL long from the input stream.
 @return  the long read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.CORBA.DataInputStream.read_ulong()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL unsigned long from the input stream.
 @return  the unsigned long read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long org.omg.CORBA.DataInputStream.read_longlong()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL long long from the input stream.
 @return  the long long read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long org.omg.CORBA.DataInputStream.read_ulonglong()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an unsigned IDL long long from the input stream.
 @return  the unsigned long long read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public float org.omg.CORBA.DataInputStream.read_float()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL float from the input stream.
 @return  the float read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public double org.omg.CORBA.DataInputStream.read_double()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL double from the input stream.
 @return  the double read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.CORBA.DataInputStream.read_string()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL string from the input stream.
 @return  the string read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.CORBA.DataInputStream.read_wstring()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL wide string from the input stream.
 @return  the wide string read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.CORBA.DataInputStream.read_Object()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL CORBA::Object from the input stream.
 @return  the CORBA::Object read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object org.omg.CORBA.DataInputStream.read_Abstract()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL Abstract interface from the input stream.
 @return  the Abstract interface read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.io.Serializable org.omg.CORBA.DataInputStream.read_Value()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL value type from the input stream.
 @return  the value type read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TypeCode org.omg.CORBA.DataInputStream.read_TypeCode()
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads an IDL typecode from the input stream.
 @return  the typecode read.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_any_array(AnySeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL Anys from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_boolean_array(BooleanSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL booleans from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_char_array(CharSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL characters from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_wchar_array(WCharSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL wide characters from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_octet_array(OctetSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL octets from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_short_array(ShortSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL shorts from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_ushort_array(UShortSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL unsigned shorts from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_long_array(LongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL longs from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_ulong_array(ULongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL unsigned longs from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_ulonglong_array(ULongLongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL unsigned long longs from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_longlong_array(LongLongSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL long longs from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_float_array(FloatSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL floats from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataInputStream.read_double_array(DoubleSeqHolder seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
Reads array of IDL doubles from offset for length elements from the
 input stream.  
 @param seq The out parameter holder for the array to be read.
 @param offset The index into seq of the first element to read from the
 input stream.
 @param length The number of elements to read from the input stream.
 @throws <code>org.omg.CORBA.MARSHAL</code>
 If an inconsistency is detected, including not having registered 
 a streaming policy, then the standard system exception MARSHAL is raised.

<!-- END DATA -->
