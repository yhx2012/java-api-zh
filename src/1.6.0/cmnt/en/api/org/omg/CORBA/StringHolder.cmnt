<!-- BEGIN KEY -->
public final class org.omg.CORBA.StringHolder extends java.lang.Object implements org.omg.CORBA.portable.Streamable
<!-- END KEY -->
<!-- BEGIN DATA -->
 The Holder for <tt>String</tt>.  For more information on 
 Holder files, see <a href="doc-files/generatedfiles.html#holder">
 "Generated Files: Holder Files"</a>.<P>
 A Holder class for a <code>String</code>
 that is used to store "out" and "inout" parameters in IDL operations.
 If an IDL operation signature has an IDL <code>string</code> as an "out"
 or "inout" parameter, the programmer must pass an instance of
 <code>StringHolder</code> as the corresponding
 parameter in the method invocation; for "inout" parameters, the programmer
 must also fill the "in" value to be sent to the server.
 Before the method invocation returns, the ORB will fill in the
 value corresponding to the "out" value returned from the server.
 <P>
 If <code>myStringHolder</code> is an instance of <code>StringHolder</code>,
 the value stored in its <code>value</code> field can be accessed with
 <code>myStringHolder.value</code>.

 @version	1.14, 09/09/97
 @since       JDK1.2

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.CORBA.StringHolder.value
<!-- END KEY -->
<!-- BEGIN DATA -->
 The <code>String</code> value held by this <code>StringHolder</code>
 object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.StringHolder()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>StringHolder</code> object with its
 <code>value</code> field initialized to <code>null</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.StringHolder(String initial)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a new <code>StringHolder</code> object with its
 <code>value</code> field initialized to the given
 <code>String</code>.
 @param initial the <code>String</code> with which to initialize
                the <code>value</code> field of the newly-created
                <code>StringHolder</code> object

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.StringHolder._read(InputStream input)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Reads the unmarshalled data from <code>input</code> and assigns it to
 the <code>value</code> field of this <code>StringHolder</code> object.

 @param input the InputStream containing CDR formatted data from the wire.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.StringHolder._write(OutputStream output)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Marshals the value held by this <code>StringHolder</code> object
 to the output stream  <code>output</code>.

 @param output the OutputStream which will contain the CDR formatted data.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TypeCode org.omg.CORBA.StringHolder._type()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Retrieves the <code>TypeCode</code> object that corresponds to
 the value held in this <code>StringHolder</code> object.

 @return    the type code of the value held in this <code>StringHolder</code>
            object

<!-- END DATA -->
