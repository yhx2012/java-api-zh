<!-- BEGIN KEY -->
public interface org.omg.CORBA.DataOutputStream extends org.omg.CORBA.portable.ValueBase
<!-- END KEY -->
<!-- BEGIN DATA -->
Defines the methods used to write primitive data types to output streams
 for marshalling custom value types.  This interface is used by user
 written custom marshalling code for custom value types.
 @see org.omg.CORBA.DataInputStream
 @see org.omg.CORBA.CustomMarshal
 @version 1.13 11/17/05

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_any(Any value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the Any value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_boolean(boolean value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the boolean value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_char(char value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL character value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_wchar(char value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL wide character value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_octet(byte value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL octet value (represented as a Java byte) to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_short(short value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL short value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ushort(short value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL unsigned short value (represented as a Java short 
 value) to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_long(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL long value (represented as a Java int) to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulong(int value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL unsigned long value (represented as a Java int) to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_longlong(long value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL long long value (represented as a Java long) to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulonglong(long value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL unsigned long long value (represented as a Java long)
 to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_float(float value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL float value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_double(double value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL double value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_string(String value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL string value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_wstring(String value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL wide string value (represented as a Java String) to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_Object(Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL CORBA::Object value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_Abstract(Object value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL Abstract interface type to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_Value(Serializable value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the IDL value type value to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_TypeCode(TypeCode value)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the typecode to the output stream.
 @param value The value to be written.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_any_array(org.omg.CORBA.Any[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL Anys from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_boolean_array(boolean[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL booleans from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_char_array(char[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL characters from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_wchar_array(char[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL wide characters from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_octet_array(byte[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL octets from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_short_array(short[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL shorts from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ushort_array(short[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL unsigned shorts (represented as Java shorts)
 from offset for length elements to the output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_long_array(int[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL longs from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulong_array(int[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL unsigned longs (represented as Java ints) 
 from offset for length elements to the output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_ulonglong_array(long[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL unsigned long longs (represented as Java longs)
 from offset for length elements to the output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_longlong_array(long[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL long longs from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_float_array(float[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL floats from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.CORBA.DataOutputStream.write_double_array(double[] seq, int offset, int length)
<!-- END KEY -->
<!-- BEGIN DATA -->

 Writes the array of IDL doubles from offset for length elements to the
 output stream.  
 @param seq The array to be written.
 @param offset The index into seq of the first element to write to the
 output stream.
 @param length The number of elements to write to the output stream.

<!-- END DATA -->
