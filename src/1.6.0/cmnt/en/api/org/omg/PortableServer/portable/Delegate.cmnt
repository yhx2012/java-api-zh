<!-- BEGIN KEY -->
public interface org.omg.PortableServer.portable.Delegate
<!-- END KEY -->
<!-- BEGIN DATA -->
 The portability package contains interfaces and classes 
 that are designed for and intended to be used by ORB 
 implementor. It exposes the publicly defined APIs that 
 are used to connect stubs and skeletons to the ORB.
 The Delegate interface provides the ORB vendor specific 
 implementation of PortableServer::Servant.
 Conformant to spec CORBA V2.3.1, ptc/00-01-08.pdf

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.ORB org.omg.PortableServer.portable.Delegate.orb(Servant Self)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Convenience method that returns the instance of the ORB
 currently associated with the Servant.
 @param Self the servant.
 @return ORB associated with the Servant.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.PortableServer.portable.Delegate.this_object(Servant Self)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This allows the servant to obtain the object reference for
 the target CORBA Object it is incarnating for that request.
 @param Self the servant.
 @return Object reference associated with the request.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableServer.POA org.omg.PortableServer.portable.Delegate.poa(Servant Self)
<!-- END KEY -->
<!-- BEGIN DATA -->
 The method _poa() is equivalent to
 calling PortableServer::Current:get_POA.
 @param Self the servant.
 @return POA associated with the servant.

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] org.omg.PortableServer.portable.Delegate.object_id(Servant Self)
<!-- END KEY -->
<!-- BEGIN DATA -->
 The method _object_id() is equivalent
 to calling PortableServer::Current::get_object_id.
 @param Self the servant.
 @return ObjectId associated with this servant.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableServer.POA org.omg.PortableServer.portable.Delegate.default_POA(Servant Self)
<!-- END KEY -->
<!-- BEGIN DATA -->
 The default behavior of this function is to return the
 root POA from the ORB instance associated with the servant.
 @param Self the servant.
 @return POA associated with the servant class.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.PortableServer.portable.Delegate.is_a(Servant Self, String Repository_Id)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method checks to see if the specified repid is present
 on the list returned by _all_interfaces() or is the
 repository id for the generic CORBA Object.
 @param Self the servant.
 @param Repository_Id the repository_id to be checked in the
            repository list or against the id of generic CORBA
            object.
 @return boolean indicating whether the specified repid is
         in the list or is same as that got generic CORBA
         object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.omg.PortableServer.portable.Delegate.non_existent(Servant Self)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This operation is used to check for the existence of the
 Object.
 @param Self the servant.
 @return boolean true to indicate that object does not exist,
                 and false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Object org.omg.PortableServer.portable.Delegate.get_interface_def(Servant self)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This operation returns an object in the Interface Repository
 which provides type information that may be useful to a program.
 @param self the servant.
 @return type information corresponding to the object.

<!-- END DATA -->
