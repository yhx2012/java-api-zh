<!-- BEGIN KEY -->
public interface org.omg.PortableServer.POAManagerOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
 Each POA object has an associated POAManager object. 
 A POA manager may be associated with one or more 
 POA objects. A POA manager encapsulates the processing 
 state of the POAs it is associated with.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.PortableServer.POAManagerOperations.activate() throws org.omg.PortableServer.POAManagerPackage.AdapterInactive
<!-- END KEY -->
<!-- BEGIN DATA -->
 This operation changes the state of the POA manager 
 to active, causing associated POAs to start processing
 requests.
 @exception AdapterInactive is raised if the operation is
            invoked on the POAManager in inactive state.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.PortableServer.POAManagerOperations.hold_requests(boolean wait_for_completion) throws org.omg.PortableServer.POAManagerPackage.AdapterInactive
<!-- END KEY -->
<!-- BEGIN DATA -->
 This operation changes the state of the POA manager 
 to holding, causing associated POAs to queue incoming
 requests.
 @param wait_for_completion if FALSE, the operation 
            returns immediately after changing state.  
            If TRUE, it waits for all active requests 
            to complete. 
 @exception AdapterInactive is raised if the operation is
            invoked on the POAManager in inactive state.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.PortableServer.POAManagerOperations.discard_requests(boolean wait_for_completion) throws org.omg.PortableServer.POAManagerPackage.AdapterInactive
<!-- END KEY -->
<!-- BEGIN DATA -->
 This operation changes the state of the POA manager 
 to discarding. This causes associated POAs to discard
 incoming requests.
 @param wait_for_completion if FALSE, the operation 
            returns immediately after changing state.  
            If TRUE, it waits for all active requests 
            to complete. 
 @exception AdapterInactive is raised if the operation is
            invoked on the POAManager in inactive state.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.PortableServer.POAManagerOperations.deactivate(boolean etherealize_objects, boolean wait_for_completion) throws org.omg.PortableServer.POAManagerPackage.AdapterInactive
<!-- END KEY -->
<!-- BEGIN DATA -->
 This operation changes the state of the POA manager 
 to inactive, causing associated POAs to reject the
 requests that have not begun executing as well as
 as any new requests.
 @param etherealize_objects a flag to indicate whether
        to invoke the etherealize operation of the
        associated servant manager for all active 
        objects.
 @param wait_for_completion if FALSE, the operation 
            returns immediately after changing state.  
            If TRUE, it waits for all active requests 
            to complete. 
 @exception AdapterInactive is raised if the operation is
            invoked on the POAManager in inactive state.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableServer.POAManagerPackage.State org.omg.PortableServer.POAManagerOperations.get_state()
<!-- END KEY -->
<!-- BEGIN DATA -->
 This operation returns the state of the POA manager.

<!-- END DATA -->
