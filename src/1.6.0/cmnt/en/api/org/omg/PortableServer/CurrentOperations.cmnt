<!-- BEGIN KEY -->
public interface org.omg.PortableServer.CurrentOperations extends org.omg.CORBA.CurrentOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
 The PortableServer::Current interface, derived from 
 CORBA::Current, provides method implementations with 
 access to the identity of the object on which the 
 method was invoked. The Current interface is provided 
 to support servants that implement multiple objects, 
 but can be used within the context of POA-dispatched 
 method invocations on any servant. To provide location 
 transparency, ORBs are required to support use of 
 Current in the context of both locally and remotely 
 invoked operations. An instance of Current can be 
 obtained by the application by issuing the 
 CORBA::ORB::resolve_initial_references("POACurrent") 
 operation. Thereafter, it can be used within the 
 context of a method dispatched by the POA to obtain 
 the POA and ObjectId that identify the object on 
 which that operation was invoked.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableServer.POA org.omg.PortableServer.CurrentOperations.get_POA() throws org.omg.PortableServer.CurrentPackage.NoContext
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns reference to the POA implementing the 
 object in whose context it is called. 

 @return The poa implementing the object
 
 @exception NoContext is raised when the operation is
            outside the context of a POA-dispatched 
            operation

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte[] org.omg.PortableServer.CurrentOperations.get_object_id() throws org.omg.PortableServer.CurrentPackage.NoContext
<!-- END KEY -->
<!-- BEGIN DATA -->

 Returns the ObjectId identifying the object in 
 whose context it is called. 

 @return the ObjectId of the object

 @exception NoContext is raised when the operation
 is called outside the context of a POA-dispatched 
 operation.

<!-- END DATA -->
