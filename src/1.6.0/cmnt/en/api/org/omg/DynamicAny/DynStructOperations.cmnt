<!-- BEGIN KEY -->
public interface org.omg.DynamicAny.DynStructOperations extends org.omg.DynamicAny.DynAnyOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
 DynStruct objects support the manipulation of IDL struct and exception values.
 Members of the exceptions are handled in the same way as members of a struct.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.omg.DynamicAny.DynStructOperations.current_member_name() throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the name of the member at the current position.
 This operation may return an empty string since the TypeCode of the value being
 manipulated may not contain the names of members.

 @exception TypeMismatch if the DynStruct represents an empty exception.
 @exception InvalidValue if the current position does not indicate a member

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.TCKind org.omg.DynamicAny.DynStructOperations.current_member_kind() throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the TCKind associated with the member at the current position.

 @exception TypeMismatch if the DynStruct represents an empty exception.
 @exception InvalidValue if the current position does not indicate a member

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.DynamicAny.NameValuePair[] org.omg.DynamicAny.DynStructOperations.get_members()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a sequence of NameValuePairs describing the name and the value of each member
 in the struct associated with a DynStruct object.
 The sequence contains members in the same order as the declaration order of members
 as indicated by the DynStruct's TypeCode. The current position is not affected.
 The member names in the returned sequence will be empty strings if the DynStruct's TypeCode
 does not contain member names.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynStructOperations.set_members(org.omg.DynamicAny.NameValuePair[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
 Initializes the struct data value associated with a DynStruct object from a sequence of NameValuePairs.
 The operation sets the current position to zero if the passed sequences has non-zero length. Otherwise,
 if an empty sequence is passed, the current position is set to -1.
 <P>Members must appear in the NameValuePairs in the order in which they appear in the IDL specification
 of the struct as indicated by the DynStruct's TypeCode or they must be empty strings.
 The operation makes no attempt to assign member values based on member names.

 @exception TypeMismatch if the member names supplied in the passed sequence do not match the
            corresponding member name in the DynStruct's TypeCode and they are not empty strings
 @exception InvalidValue if the passed sequence has a number of elements that disagrees
            with the number of members as indicated by the DynStruct's TypeCode

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.DynamicAny.NameDynAnyPair[] org.omg.DynamicAny.DynStructOperations.get_members_as_dyn_any()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a sequence of NameDynAnyPairs describing the name and the value of each member
 in the struct associated with a DynStruct object.
 The sequence contains members in the same order as the declaration order of members
 as indicated by the DynStruct's TypeCode. The current position is not affected.
 The member names in the returned sequence will be empty strings if the DynStruct's TypeCode
 does not contain member names.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.DynamicAny.DynStructOperations.set_members_as_dyn_any(org.omg.DynamicAny.NameDynAnyPair[] value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue
<!-- END KEY -->
<!-- BEGIN DATA -->
 Initializes the struct data value associated with a DynStruct object from a sequence of NameDynAnyPairs.
 The operation sets the current position to zero if the passed sequences has non-zero length. Otherwise,
 if an empty sequence is passed, the current position is set to -1.
 <P>Members must appear in the NameDynAnyPairs in the order in which they appear in the IDL specification
 of the struct as indicated by the DynStruct's TypeCode or they must be empty strings.
 The operation makes no attempt to assign member values based on member names.

 @exception TypeMismatch if the member names supplied in the passed sequence do not match the
            corresponding member name in the DynStruct's TypeCode and they are not empty strings
 @exception InvalidValue if the passed sequence has a number of elements that disagrees
            with the number of members as indicated by the DynStruct's TypeCode

<!-- END DATA -->
