<!-- BEGIN KEY -->
public interface org.omg.PortableInterceptor.IORInfoOperations
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides the server-side ORB service with access to the applicable 
 policies during IOR construction and the ability to add components. 
 The ORB passes an instance of its implementation of this interface as 
 a parameter to <code>IORInterceptor.establish_components</code>.

 @see IORInterceptor

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.CORBA.Policy org.omg.PortableInterceptor.IORInfoOperations.get_effective_policy(int type)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Allows an ORB service implementation to determine what server side 
 policy of a particular type is in effect for an IOR being 
 constructed.  When the IOR being constructed is for an object 
 implemented using a POA, all Policy objects passed to the 
 <code>PortableServer.POA.create_POA</code> call that created that 
 POA are accessable via <code>get_effective_policy</code>. 
 <p>
 If a policy for the given type is not known to the ORB, then this 
 operation will throw <code>INV_POLICY</code> with a standard minor 
 code of 2. 
 
 @param type an int specifying the type of policy to return. 
 @return The effective <code>CORBA.Policy</code> object of the 
     requested type. If the given policy type is known, but no policy 
     of that type is in effect, then this operation will return a 
     nil object reference.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.PortableInterceptor.IORInfoOperations.add_ior_component(TaggedComponent tagged_component)
<!-- END KEY -->
<!-- BEGIN DATA -->
 A portable ORB service implementation calls 
 <code>add_ior_component</code> from its implementation of 
 <code>establish_components</code> to add a tagged component to the 
 set which will be included when constructing IORs. The components in 
 this set will be included in all profiles. 
 <p>
 Any number of components may exist with the same component ID. 
 
 @param a_component The IOP.TaggedComponent to add.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.PortableInterceptor.IORInfoOperations.add_ior_component_to_profile(TaggedComponent tagged_component, int profile_id)
<!-- END KEY -->
<!-- BEGIN DATA -->
 A portable ORB service implementation calls 
 <code>add_ior_component_to_profile</code> from its implementation of 
 <code>establish_components</code> to add a tagged component to the 
 set which will be included when constructing IORs. The components in 
 this set will be included in the specified profile. 
 <p>
 Any number of components may exist with the same component ID. 
 
 @param a_component The <code>IOP.TaggedComponent</code> to add. 
 @param profile_id The profile id of the profile to 
     which this component will be added.
 @exception BAD_PARAM thrown, with a standard minor code of 29, if the 
     given profile ID does not define a known profile or it is 
     impossible to add components to that profile.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.omg.PortableInterceptor.IORInfoOperations.manager_id()
<!-- END KEY -->
<!-- BEGIN DATA -->
Return the adapter manager id of the object adapter
 that was just created and is running IOR interceptors.

<!-- END DATA -->
<!-- BEGIN KEY -->
public short org.omg.PortableInterceptor.IORInfoOperations.state()
<!-- END KEY -->
<!-- BEGIN DATA -->
Return the adapter state of the object adapter
 that was just created and is running IOR interceptors.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableInterceptor.ObjectReferenceTemplate org.omg.PortableInterceptor.IORInfoOperations.adapter_template()
<!-- END KEY -->
<!-- BEGIN DATA -->
Return the object reference template of the object adapter
 that was just created and is running IOR interceptors.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.omg.PortableInterceptor.ObjectReferenceFactory org.omg.PortableInterceptor.IORInfoOperations.current_factory()
<!-- END KEY -->
<!-- BEGIN DATA -->
On read, returns the current factory that will be used to create
 object references for the object adapter that was just created
 and is running IOR interceptors.  By default, this factory is the same
 as the value of the adapter_template attribute.  The current_factory 
 may also be set to another object reference template inside an
 IORInterceptor_3_0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.omg.PortableInterceptor.IORInfoOperations.current_factory(ObjectReferenceFactory newCurrent_factory)
<!-- END KEY -->
<!-- BEGIN DATA -->
On read, returns the current factory that will be used to create
 object references for the object adapter that was just created
 and is running IOR interceptors.  By default, this factory is the same
 as the value of the adapter_template attribute.  The current_factory 
 may also be set to another object reference template inside an
 IORInterceptor_3_0.

<!-- END DATA -->
