<!-- BEGIN KEY -->
public interface org.w3c.dom.UserDataHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
 When associating an object to a key on a node using 
 <code>Node.setUserData()</code> the application can provide a handler 
 that gets called when the node the object is associated to is being 
 cloned, imported, or renamed. This can be used by the application to 
 implement various behaviors regarding the data it associates to the DOM 
 nodes. This interface defines that handler. 
 <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.
 @since DOM Level 3

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_CLONED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The node is cloned, using <code>Node.cloneNode()</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_IMPORTED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The node is imported, using <code>Document.importNode()</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_DELETED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The node is deleted.
 <p ><b>Note:</b> This may not be supported or may not be reliable in 
 certain environments, such as Java, where the implementation has no 
 real control over when objects are actually deleted.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_RENAMED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The node is renamed, using <code>Document.renameNode()</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static final short org.w3c.dom.UserDataHandler.NODE_ADOPTED
<!-- END KEY -->
<!-- BEGIN DATA -->
 The node is adopted, using <code>Document.adoptNode()</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.UserDataHandler.handle(short operation, String key, Object data, Node src, Node dst)
<!-- END KEY -->
<!-- BEGIN DATA -->
 This method is called whenever the node for which this handler is 
 registered is imported or cloned.
 <br> DOM applications must not raise exceptions in a 
 <code>UserDataHandler</code>. The effect of throwing exceptions from 
 the handler is DOM implementation dependent. 
 @param operation Specifies the type of operation that is being 
   performed on the node.
 @param key Specifies the key for which this handler is being called. 
 @param data Specifies the data for which this handler is being called. 
 @param src Specifies the node being cloned, adopted, imported, or 
   renamed. This is <code>null</code> when the node is being deleted.
 @param dst Specifies the node newly created if any, or 
   <code>null</code>.

<!-- END DATA -->
