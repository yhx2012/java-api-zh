<!-- BEGIN KEY -->
public class org.xml.sax.SAXException extends java.lang.Exception
<!-- END KEY -->
<!-- BEGIN DATA -->
 Encapsulate a general SAX error or warning.

 <blockquote>
 <em>This module, both source code and documentation, is in the
 Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
 See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
 for further information.
 </blockquote>

 <p>This class can contain basic error or warning information from
 either the XML parser or the application: a parser writer or
 application writer can subclass it to provide additional
 functionality.  SAX handlers may throw this exception or
 any exception subclassed from it.</p>

 <p>If the application needs to pass through other types of
 exceptions, it must wrap those exceptions in a SAXException
 or an exception derived from a SAXException.</p>

 <p>If the parser or application needs to include information about a
 specific location in an XML document, it should use the
 {@link org.xml.sax.SAXParseException SAXParseException} subclass.</p>

 @since SAX 1.0
 @author David Megginson
 @version 2.0.1 (sax2r2)
 @see org.xml.sax.SAXParseException

<!-- END DATA -->
<!-- BEGIN KEY -->
private java.lang.Exception org.xml.sax.SAXException.exception
<!-- END KEY -->
<!-- BEGIN DATA -->
 @serial The embedded exception if tunnelling, or null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new SAXException.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new SAXException.

 @param message The error or warning message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXException(Exception e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new SAXException wrapping an existing exception.

 <p>The existing exception will be embedded in the new
 one, and its message will become the default message for
 the SAXException.</p>

 @param e The exception to be wrapped in a SAXException.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.SAXException(String message, Exception e)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new SAXException from an existing exception.

 <p>The existing exception will be embedded in the new
 one, but the new exception will have its own message.</p>

 @param message The detail message.
 @param e The exception to be wrapped in a SAXException.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.SAXException.getMessage()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return a detail message for this exception.

 <p>If there is an embedded exception, and if the SAXException
 has no detail message of its own, this method will return
 the detail message from the embedded exception.</p>

 @return The error or warning message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Exception org.xml.sax.SAXException.getException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the embedded exception, if any.

 @return The embedded exception, or null if there is none.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.SAXException.toString()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Override toString to pick up any embedded exception.

 @return A string representation of this exception.

<!-- END DATA -->
