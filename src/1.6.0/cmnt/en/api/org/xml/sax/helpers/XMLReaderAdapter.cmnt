<!-- BEGIN KEY -->
public class org.xml.sax.helpers.XMLReaderAdapter extends java.lang.Object implements org.xml.sax.Parser, org.xml.sax.ContentHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 XMLReader as a SAX1 Parser.

 <blockquote>
 <em>This module, both source code and documentation, is in the
 Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
 See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
 for further information.
 </blockquote>

 <p>This class wraps a SAX2 {@link org.xml.sax.XMLReader XMLReader}
 and makes it act as a SAX1 {@link org.xml.sax.Parser Parser}.  The XMLReader 
 must support a true value for the 
 http://xml.org/sax/features/namespace-prefixes property or parsing will fail
 with a {@link org.xml.sax.SAXException SAXException}; if the XMLReader 
 supports a false value for the http://xml.org/sax/features/namespaces 
 property, that will also be used to improve efficiency.</p>

 @since SAX 2.0
 @author David Megginson
 @version 2.0.1 (sax2r2)
 @see org.xml.sax.Parser
 @see org.xml.sax.XMLReader

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.XMLReaderAdapter() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new adapter.

 <p>Use the "org.xml.sax.driver" property to locate the SAX2
 driver to embed.</p>

 @exception org.xml.sax.SAXException If the embedded driver
            cannot be instantiated or if the
            org.xml.sax.driver property is not specified.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.XMLReaderAdapter(XMLReader xmlReader)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Create a new adapter.

 <p>Create a new adapter, wrapped around a SAX2 XMLReader.
 The adapter will make the XMLReader act like a SAX1
 Parser.</p>

 @param xmlReader The SAX2 XMLReader to wrap.
 @exception java.lang.NullPointerException If the argument is null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setLocale(Locale locale) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the locale for error reporting.

 <p>This is not supported in SAX2, and will always throw
 an exception.</p>

 @param locale the locale for error reporting.
 @see org.xml.sax.Parser#setLocale
 @exception org.xml.sax.SAXException Thrown unless overridden.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver(EntityResolver resolver)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Register the entity resolver.

 @param resolver The new resolver.
 @see org.xml.sax.Parser#setEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler(DTDHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Register the DTD event handler.

 @param handler The new DTD event handler.
 @see org.xml.sax.Parser#setDTDHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler(DocumentHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Register the SAX1 document event handler.

 <p>Note that the SAX1 document handler has no Namespace
 support.</p>

 @param handler The new SAX1 document event handler.
 @see org.xml.sax.Parser#setDocumentHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler(ErrorHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Register the error event handler.

 @param handler The new error event handler.
 @see org.xml.sax.Parser#setErrorHandler

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.parse(String systemId) throws java.io.IOException, org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Parse the document.

 <p>This method will throw an exception if the embedded
 XMLReader does not support the 
 http://xml.org/sax/features/namespace-prefixes property.</p>

 @param systemId The absolute URL of the document.
 @exception java.io.IOException If there is a problem reading
            the raw content of the document.
 @exception org.xml.sax.SAXException If there is a problem
            processing the document.
 @see #parse(org.xml.sax.InputSource)
 @see org.xml.sax.Parser#parse(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.parse(InputSource input) throws java.io.IOException, org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Parse the document.

 <p>This method will throw an exception if the embedded
 XMLReader does not support the 
 http://xml.org/sax/features/namespace-prefixes property.</p>

 @param input An input source for the document.
 @exception java.io.IOException If there is a problem reading
            the raw content of the document.
 @exception org.xml.sax.SAXException If there is a problem
            processing the document.
 @see #parse(java.lang.String)
 @see org.xml.sax.Parser#parse(org.xml.sax.InputSource)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator(Locator locator)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set a document locator.

 @param locator The document locator.
 @see org.xml.sax.ContentHandler#setDocumentLocator

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.startDocument() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Start document event.

 @exception org.xml.sax.SAXException The client may raise a
            processing exception.
 @see org.xml.sax.ContentHandler#startDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.endDocument() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 End document event.

 @exception org.xml.sax.SAXException The client may raise a
            processing exception.
 @see org.xml.sax.ContentHandler#endDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping(String prefix, String uri)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 start prefix mapping event.

 @param prefix The prefix being mapped.
 @param uri The Namespace URI being mapped to.
 @see org.xml.sax.ContentHandler#startPrefixMapping

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping(String prefix)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 end prefix mapping event.

 @param prefix The prefix being mapped.
 @see org.xml.sax.ContentHandler#endPrefixMapping

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.startElement(String uri, String localName, String qName, Attributes atts) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 start element event.

 @param uri The Namespace URI.
 @param localName The Namespace local name.
 @param qName The qualified (prefixed) name.
 @param atts The SAX2 attributes.
 @exception org.xml.sax.SAXException The client may raise a
            processing exception.
 @see org.xml.sax.ContentHandler#endDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.endElement(String uri, String localName, String qName) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 end element event.

 @param uri The Namespace URI.
 @param localName The Namespace local name.
 @param qName The qualified (prefixed) name.
 @exception org.xml.sax.SAXException The client may raise a
            processing exception.
 @see org.xml.sax.ContentHandler#endElement

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.characters(char[] ch, int start, int length) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 characters event.

 @param ch An array of characters.
 @param start The starting position in the array.
 @param length The number of characters to use.
 @exception org.xml.sax.SAXException The client may raise a
            processing exception.
 @see org.xml.sax.ContentHandler#characters

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace(char[] ch, int start, int length) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 ignorable whitespace event.

 @param ch An array of characters.
 @param start The starting position in the array.
 @param length The number of characters to use.
 @exception org.xml.sax.SAXException The client may raise a
            processing exception.
 @see org.xml.sax.ContentHandler#ignorableWhitespace

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.processingInstruction(String target, String data) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 processing instruction event.

 @param target The processing instruction target.
 @param data The remainder of the processing instruction
 @exception org.xml.sax.SAXException The client may raise a
            processing exception.
 @see org.xml.sax.ContentHandler#processingInstruction

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.XMLReaderAdapter.skippedEntity(String name) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX2 skipped entity event.

 @param name The name of the skipped entity.
 @see org.xml.sax.ContentHandler#skippedEntity
 @exception org.xml.sax.SAXException Throwable by subclasses.

<!-- END DATA -->
