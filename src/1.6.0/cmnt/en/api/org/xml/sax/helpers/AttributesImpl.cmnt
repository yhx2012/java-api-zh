<!-- BEGIN KEY -->
public class org.xml.sax.helpers.AttributesImpl extends java.lang.Object implements org.xml.sax.Attributes
<!-- END KEY -->
<!-- BEGIN DATA -->
 Default implementation of the Attributes interface.

 <blockquote>
 <em>This module, both source code and documentation, is in the
 Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
 See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
 for further information.
 </blockquote>

 <p>This class provides a default implementation of the SAX2
 {@link org.xml.sax.Attributes Attributes} interface, with the 
 addition of manipulators so that the list can be modified or 
 reused.</p>

 <p>There are two typical uses of this class:</p>

 <ol>
 <li>to take a persistent snapshot of an Attributes object
  in a {@link org.xml.sax.ContentHandler#startElement startElement} event; or</li>
 <li>to construct or modify an Attributes object in a SAX2 driver or filter.</li>
 </ol>

 <p>This class replaces the now-deprecated SAX1 {@link 
 org.xml.sax.helpers.AttributeListImpl AttributeListImpl}
 class; in addition to supporting the updated Attributes
 interface rather than the deprecated {@link org.xml.sax.AttributeList
 AttributeList} interface, it also includes a much more efficient 
 implementation using a single array rather than a set of Vectors.</p>

 @since SAX 2.0
 @author David Megginson
 @version 2.0.1 (sax2r2)

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.AttributesImpl()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new, empty AttributesImpl object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.AttributesImpl(Attributes atts)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Copy an existing Attributes object.

 <p>This constructor is especially useful inside a
 {@link org.xml.sax.ContentHandler#startElement startElement} event.</p>

 @param atts The existing Attributes object.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.helpers.AttributesImpl.getLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the number of attributes in the list.

 @return The number of attributes in the list.
 @see org.xml.sax.Attributes#getLength

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getURI(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return an attribute's Namespace URI.

 @param index The attribute's index (zero-based).
 @return The Namespace URI, the empty string if none is
         available, or null if the index is out of range.
 @see org.xml.sax.Attributes#getURI

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getLocalName(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return an attribute's local name.

 @param index The attribute's index (zero-based).
 @return The attribute's local name, the empty string if 
         none is available, or null if the index if out of range.
 @see org.xml.sax.Attributes#getLocalName

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getQName(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return an attribute's qualified (prefixed) name.

 @param index The attribute's index (zero-based).
 @return The attribute's qualified name, the empty string if 
         none is available, or null if the index is out of bounds.
 @see org.xml.sax.Attributes#getQName

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getType(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return an attribute's type by index.

 @param index The attribute's index (zero-based).
 @return The attribute's type, "CDATA" if the type is unknown, or null
         if the index is out of bounds.
 @see org.xml.sax.Attributes#getType(int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getValue(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return an attribute's value by index.

 @param index The attribute's index (zero-based).
 @return The attribute's value or null if the index is out of bounds.
 @see org.xml.sax.Attributes#getValue(int)

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.helpers.AttributesImpl.getIndex(String uri, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Look up an attribute's index by Namespace name.

 <p>In many cases, it will be more efficient to look up the name once and
 use the index query methods rather than using the name query methods
 repeatedly.</p>

 @param uri The attribute's Namespace URI, or the empty
        string if none is available.
 @param localName The attribute's local name.
 @return The attribute's index, or -1 if none matches.
 @see org.xml.sax.Attributes#getIndex(java.lang.String,java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.xml.sax.helpers.AttributesImpl.getIndex(String qName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Look up an attribute's index by qualified (prefixed) name.

 @param qName The qualified name.
 @return The attribute's index, or -1 if none matches.
 @see org.xml.sax.Attributes#getIndex(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getType(String uri, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Look up an attribute's type by Namespace-qualified name.

 @param uri The Namespace URI, or the empty string for a name
        with no explicit Namespace URI.
 @param localName The local name.
 @return The attribute's type, or null if there is no
         matching attribute.
 @see org.xml.sax.Attributes#getType(java.lang.String,java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getType(String qName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Look up an attribute's type by qualified (prefixed) name.

 @param qName The qualified name.
 @return The attribute's type, or null if there is no
         matching attribute.
 @see org.xml.sax.Attributes#getType(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getValue(String uri, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Look up an attribute's value by Namespace-qualified name.

 @param uri The Namespace URI, or the empty string for a name
        with no explicit Namespace URI.
 @param localName The local name.
 @return The attribute's value, or null if there is no
         matching attribute.
 @see org.xml.sax.Attributes#getValue(java.lang.String,java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.xml.sax.helpers.AttributesImpl.getValue(String qName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Look up an attribute's value by qualified (prefixed) name.

 @param qName The qualified name.
 @return The attribute's value, or null if there is no
         matching attribute.
 @see org.xml.sax.Attributes#getValue(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.clear()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Clear the attribute list for reuse.

 <p>Note that little memory is freed by this call:
 the current array is kept so it can be 
 reused.</p>

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.setAttributes(Attributes atts)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Copy an entire Attributes object.

 <p>It may be more efficient to reuse an existing object
 rather than constantly allocating new ones.</p>
 
 @param atts The attributes to copy.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.addAttribute(String uri, String localName, String qName, String type, String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Add an attribute to the end of the list.

 <p>For the sake of speed, this method does no checking
 to see if the attribute is already in the list: that is
 the responsibility of the application.</p>

 @param uri The Namespace URI, or the empty string if
        none is available or Namespace processing is not
        being performed.
 @param localName The local name, or the empty string if
        Namespace processing is not being performed.
 @param qName The qualified (prefixed) name, or the empty string
        if qualified names are not available.
 @param type The attribute type as a string.
 @param value The attribute value.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.setAttribute(int index, String uri, String localName, String qName, String type, String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set an attribute in the list.

 <p>For the sake of speed, this method does no checking
 for name conflicts or well-formedness: such checks are the
 responsibility of the application.</p>

 @param index The index of the attribute (zero-based).
 @param uri The Namespace URI, or the empty string if
        none is available or Namespace processing is not
        being performed.
 @param localName The local name, or the empty string if
        Namespace processing is not being performed.
 @param qName The qualified name, or the empty string
        if qualified names are not available.
 @param type The attribute type as a string.
 @param value The attribute value.
 @exception java.lang.ArrayIndexOutOfBoundsException When the
            supplied index does not point to an attribute
            in the list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.removeAttribute(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Remove an attribute from the list.

 @param index The index of the attribute (zero-based).
 @exception java.lang.ArrayIndexOutOfBoundsException When the
            supplied index does not point to an attribute
            in the list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.setURI(int index, String uri)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the Namespace URI of a specific attribute.

 @param index The index of the attribute (zero-based).
 @param uri The attribute's Namespace URI, or the empty
        string for none.
 @exception java.lang.ArrayIndexOutOfBoundsException When the
            supplied index does not point to an attribute
            in the list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.setLocalName(int index, String localName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the local name of a specific attribute.

 @param index The index of the attribute (zero-based).
 @param localName The attribute's local name, or the empty
        string for none.
 @exception java.lang.ArrayIndexOutOfBoundsException When the
            supplied index does not point to an attribute
            in the list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.setQName(int index, String qName)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the qualified name of a specific attribute.

 @param index The index of the attribute (zero-based).
 @param qName The attribute's qualified name, or the empty
        string for none.
 @exception java.lang.ArrayIndexOutOfBoundsException When the
            supplied index does not point to an attribute
            in the list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.setType(int index, String type)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the type of a specific attribute.

 @param index The index of the attribute (zero-based).
 @param type The attribute's type.
 @exception java.lang.ArrayIndexOutOfBoundsException When the
            supplied index does not point to an attribute
            in the list.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.AttributesImpl.setValue(int index, String value)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the value of a specific attribute.

 @param index The index of the attribute (zero-based).
 @param value The attribute's value.
 @exception java.lang.ArrayIndexOutOfBoundsException When the
            supplied index does not point to an attribute
            in the list.

<!-- END DATA -->
