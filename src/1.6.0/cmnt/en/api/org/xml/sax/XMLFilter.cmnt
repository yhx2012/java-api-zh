<!-- BEGIN KEY -->
public interface org.xml.sax.XMLFilter extends org.xml.sax.XMLReader
<!-- END KEY -->
<!-- BEGIN DATA -->
 Interface for an XML filter.

 <blockquote>
 <em>This module, both source code and documentation, is in the
 Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
 See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
 for further information.
 </blockquote>

 <p>An XML filter is like an XML reader, except that it obtains its
 events from another XML reader rather than a primary source like
 an XML document or database.  Filters can modify a stream of
 events as they pass on to the final application.</p>

 <p>The XMLFilterImpl helper class provides a convenient base
 for creating SAX2 filters, by passing on all {@link org.xml.sax.EntityResolver
 EntityResolver}, {@link org.xml.sax.DTDHandler DTDHandler},
 {@link org.xml.sax.ContentHandler ContentHandler} and {@link org.xml.sax.ErrorHandler
 ErrorHandler} events automatically.</p>

 @since SAX 2.0
 @author David Megginson
 @version 2.0.1 (sax2r2)
 @see org.xml.sax.helpers.XMLFilterImpl

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.XMLFilter.setParent(XMLReader parent)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the parent reader.

 <p>This method allows the application to link the filter to
 a parent reader (which may be another filter).  The argument
 may not be null.</p>

 @param parent The parent reader.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.XMLReader org.xml.sax.XMLFilter.getParent()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the parent reader.

 <p>This method allows the application to query the parent
 reader (which may be another filter).  It is generally a
 bad idea to perform any operations on the parent reader
 directly: they should all pass through this filter.</p>

 @return The parent filter, or null if none has been set.

<!-- END DATA -->
