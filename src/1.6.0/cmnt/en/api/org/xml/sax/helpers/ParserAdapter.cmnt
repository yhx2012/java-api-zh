<!-- BEGIN KEY -->
public class org.xml.sax.helpers.ParserAdapter extends java.lang.Object implements org.xml.sax.XMLReader, org.xml.sax.DocumentHandler
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapt a SAX1 Parser as a SAX2 XMLReader.

 <blockquote>
 <em>This module, both source code and documentation, is in the
 Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
 See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
 for further information.
 </blockquote>

 <p>This class wraps a SAX1 {@link org.xml.sax.Parser Parser}
 and makes it act as a SAX2 {@link org.xml.sax.XMLReader XMLReader},
 with feature, property, and Namespace support.  Note
 that it is not possible to report {@link org.xml.sax.ContentHandler#skippedEntity
 skippedEntity} events, since SAX1 does not make that information available.</p>

 <p>This adapter does not test for duplicate Namespace-qualified
 attribute names.</p>

 @since SAX 2.0
 @author David Megginson
 @version 2.0.1 (sax2r2)
 @see org.xml.sax.helpers.XMLReaderAdapter
 @see org.xml.sax.XMLReader
 @see org.xml.sax.Parser

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.ParserAdapter() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new parser adapter.

 <p>Use the "org.xml.sax.parser" property to locate the
 embedded SAX1 driver.</p>

 @exception SAXException If the embedded driver
            cannot be instantiated or if the
            org.xml.sax.parser property is not specified.

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.helpers.ParserAdapter(Parser parser)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Construct a new parser adapter.

 <p>Note that the embedded parser cannot be changed once the
 adapter is created; to embed a different parser, allocate
 a new ParserAdapter.</p>

 @param parser The SAX1 parser to embed.
 @exception java.lang.NullPointerException If the parser parameter
            is null.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.setFeature(String name, boolean value) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set a feature flag for the parser.

 <p>The only features recognized are namespaces and 
 namespace-prefixes.</p>

 @param name The feature name, as a complete URI.
 @param value The requested feature value.
 @exception SAXNotRecognizedException If the feature
            can't be assigned or retrieved.
 @exception SAXNotSupportedException If the feature
            can't be assigned that value.
 @see org.xml.sax.XMLReader#setFeature

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.xml.sax.helpers.ParserAdapter.getFeature(String name) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Check a parser feature flag.

 <p>The only features recognized are namespaces and 
 namespace-prefixes.</p>

 @param name The feature name, as a complete URI.
 @return The current feature value.
 @exception SAXNotRecognizedException If the feature
            value can't be assigned or retrieved.
 @exception SAXNotSupportedException If the
            feature is not currently readable.
 @see org.xml.sax.XMLReader#setFeature

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.setProperty(String name, Object value) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set a parser property.

 <p>No properties are currently recognized.</p>

 @param name The property name.
 @param value The property value.
 @exception SAXNotRecognizedException If the property
            value can't be assigned or retrieved.
 @exception SAXNotSupportedException If the property
            can't be assigned that value.
 @see org.xml.sax.XMLReader#setProperty

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.Object org.xml.sax.helpers.ParserAdapter.getProperty(String name) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get a parser property.

 <p>No properties are currently recognized.</p>

 @param name The property name.
 @return The property value.
 @exception SAXNotRecognizedException If the property
            value can't be assigned or retrieved.
 @exception SAXNotSupportedException If the property
            value is not currently readable.
 @see org.xml.sax.XMLReader#getProperty

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.setEntityResolver(EntityResolver resolver)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the entity resolver.

 @param resolver The new entity resolver.
 @see org.xml.sax.XMLReader#setEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.EntityResolver org.xml.sax.helpers.ParserAdapter.getEntityResolver()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the current entity resolver.

 @return The current entity resolver, or null if none was supplied.
 @see org.xml.sax.XMLReader#getEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.setDTDHandler(DTDHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the DTD handler.

 @param handler the new DTD handler
 @see org.xml.sax.XMLReader#setEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.DTDHandler org.xml.sax.helpers.ParserAdapter.getDTDHandler()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the current DTD handler.

 @return the current DTD handler, or null if none was supplied
 @see org.xml.sax.XMLReader#getEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.setContentHandler(ContentHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the content handler.

 @param handler the new content handler
 @see org.xml.sax.XMLReader#setEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.ContentHandler org.xml.sax.helpers.ParserAdapter.getContentHandler()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the current content handler.

 @return The current content handler, or null if none was supplied.
 @see org.xml.sax.XMLReader#getEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.setErrorHandler(ErrorHandler handler)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Set the error handler.

 @param handler The new error handler.
 @see org.xml.sax.XMLReader#setEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.xml.sax.ErrorHandler org.xml.sax.helpers.ParserAdapter.getErrorHandler()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the current error handler.

 @return The current error handler, or null if none was supplied.
 @see org.xml.sax.XMLReader#getEntityResolver

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.parse(String systemId) throws java.io.IOException, org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Parse an XML document.

 @param systemId The absolute URL of the document.
 @exception java.io.IOException If there is a problem reading
            the raw content of the document.
 @exception SAXException If there is a problem
            processing the document.
 @see #parse(org.xml.sax.InputSource)
 @see org.xml.sax.Parser#parse(java.lang.String)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.parse(InputSource input) throws java.io.IOException, org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Parse an XML document.

 @param input An input source for the document.
 @exception java.io.IOException If there is a problem reading
            the raw content of the document.
 @exception SAXException If there is a problem
            processing the document.
 @see #parse(java.lang.String)
 @see org.xml.sax.Parser#parse(org.xml.sax.InputSource)

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.setDocumentLocator(Locator locator)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 document locator event.

 @param locator A document locator.
 @see org.xml.sax.ContentHandler#setDocumentLocator

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.startDocument() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 start document event.

 @exception SAXException The client may raise a
            processing exception.
 @see org.xml.sax.DocumentHandler#startDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.endDocument() throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 end document event.

 @exception SAXException The client may raise a
            processing exception.
 @see org.xml.sax.DocumentHandler#endDocument

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.startElement(String qName, AttributeList qAtts) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 startElement event.

 <p>If necessary, perform Namespace processing.</p>

 @param qName The qualified (prefixed) name.
 @param qAtts The XML attribute list (with qnames).
 @exception SAXException The client may raise a
            processing exception.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.endElement(String qName) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 end element event.

 @param qName The qualified (prefixed) name.
 @exception SAXException The client may raise a
            processing exception.
 @see org.xml.sax.DocumentHandler#endElement

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.characters(char[] ch, int start, int length) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 characters event.

 @param ch An array of characters.
 @param start The starting position in the array.
 @param length The number of characters to use.
 @exception SAXException The client may raise a
            processing exception.
 @see org.xml.sax.DocumentHandler#characters

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.ignorableWhitespace(char[] ch, int start, int length) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 ignorable whitespace event.

 @param ch An array of characters.
 @param start The starting position in the array.
 @param length The number of characters to use.
 @exception SAXException The client may raise a
            processing exception.
 @see org.xml.sax.DocumentHandler#ignorableWhitespace

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.xml.sax.helpers.ParserAdapter.processingInstruction(String target, String data) throws org.xml.sax.SAXException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Adapter implementation method; do not call.
 Adapt a SAX1 processing instruction event.

 @param target The processing instruction target.
 @param data The remainder of the processing instruction
 @exception SAXException The client may raise a
            processing exception.
 @see org.xml.sax.DocumentHandler#processingInstruction

<!-- END DATA -->
