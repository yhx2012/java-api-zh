<!-- BEGIN KEY -->
public interface com.sun.mirror.util.TypeVisitor
<!-- END KEY -->
<!-- BEGIN DATA -->
 A visitor for types, in the style of the standard visitor design pattern.
 This is used to operate on a type when the kind
 of type is unknown at compile time.
 When a visitor is passed to a type's
 {@link TypeMirror#accept accept} method,
 the most specific <tt>visit<i>Xxx</i></tt> method applicable to
 that type is invoked.

 @author Joseph D. Darcy
 @author Scott Seligman
 @version 1.5 05/11/17
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitTypeMirror(TypeMirror t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a type mirror.

 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitPrimitiveType(PrimitiveType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a primitive type.

 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitVoidType(VoidType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a void type.

 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitReferenceType(ReferenceType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a reference type.

 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitDeclaredType(DeclaredType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a declared type.

 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitClassType(ClassType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a class type.
 
 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitEnumType(EnumType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an enum type.
 
 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitInterfaceType(InterfaceType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an interface type.
 
 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitAnnotationType(AnnotationType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an annotation type.
 
 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitArrayType(ArrayType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits an array type.
 
 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitTypeVariable(TypeVariable t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a type variable.
 
 @param t the type to visit

<!-- END DATA -->
<!-- BEGIN KEY -->
public void com.sun.mirror.util.TypeVisitor.visitWildcardType(WildcardType t)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Visits a wildcard.
 
 @param t the type to visit

<!-- END DATA -->
