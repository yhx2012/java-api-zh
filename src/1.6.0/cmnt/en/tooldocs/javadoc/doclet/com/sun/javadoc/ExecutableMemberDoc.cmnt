<!-- BEGIN KEY -->
public interface com.sun.javadoc.ExecutableMemberDoc extends com.sun.javadoc.MemberDoc
<!-- END KEY -->
<!-- BEGIN DATA -->
 Represents a method or constructor of a java class.

 @since 1.2
 @author Robert Field

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.ClassDoc[] com.sun.javadoc.ExecutableMemberDoc.thrownExceptions()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return exceptions this method or constructor throws.
 If the type of the exception is a type variable, return the
 <code>ClassDoc</code> of its erasure.

 <p> <i>The <code>thrownExceptions</code> method cannot
 accommodate certain generic type constructs.  The
 <code>thrownExceptionTypes</code> method should be used
 instead.</i>

 @return an array of ClassDoc[] representing the exceptions
         thrown by this method.
 @see #thrownExceptionTypes

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.Type[] com.sun.javadoc.ExecutableMemberDoc.thrownExceptionTypes()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return exceptions this method or constructor throws.

 @return an array representing the exceptions thrown by this method.
         Each array element is either a <code>ClassDoc</code> or a
         <code>TypeVariable</code>.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.javadoc.ExecutableMemberDoc.isNative()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return true if this method is native

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.javadoc.ExecutableMemberDoc.isSynchronized()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return true if this method is synchronized

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.javadoc.ExecutableMemberDoc.isVarArgs()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return true if this method was declared to take a variable number
 of arguments.

 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.Parameter[] com.sun.javadoc.ExecutableMemberDoc.parameters()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get argument information.

 @see Parameter

 @return an array of Parameter, one element per argument
 in the order the arguments are present.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.ThrowsTag[] com.sun.javadoc.ExecutableMemberDoc.throwsTags()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the throws tags in this method.

 @return an array of ThrowTag containing all <code>&#64exception</code>
 and <code>&#64throws</code> tags.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.ParamTag[] com.sun.javadoc.ExecutableMemberDoc.paramTags()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the param tags in this method, excluding the type
 parameter tags.

 @return an array of ParamTag containing all <code>&#64param</code> tags
 corresponding to the parameters of this method.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.ParamTag[] com.sun.javadoc.ExecutableMemberDoc.typeParamTags()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the type parameter tags in this method.

 @return an array of ParamTag containing all <code>&#64param</code> tags
 corresponding to the type parameters of this method.
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.javadoc.ExecutableMemberDoc.signature()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Get the signature. It is the parameter list, type is qualified.
      For instance, for a method <code>mymethod(String x, int y)</code>,
      it will return <code>(java.lang.String,int)</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.javadoc.ExecutableMemberDoc.flatSignature()
<!-- END KEY -->
<!-- BEGIN DATA -->
 get flat signature.  all types are not qualified.
      return a String, which is the flat signiture of this member.
      It is the parameter list, type is not qualified.
      For instance, for a method <code>mymethod(String x, int y)</code>,
      it will return <code>(String, int)</code>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.javadoc.TypeVariable[] com.sun.javadoc.ExecutableMemberDoc.typeParameters()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Return the formal type parameters of this method or constructor.
 Return an empty array if this method or constructor is not generic.

 @return the formal type parameters of this method or constructor.
 @since 1.5

<!-- END DATA -->
