<!-- BEGIN KEY -->
public class com.sun.management.GcInfo extends java.lang.Object implements javax.management.openmbean.CompositeData, javax.management.openmbean.CompositeDataView
<!-- END KEY -->
<!-- BEGIN DATA -->
 Garbage collection information.  It contains the following 
 information for one garbage collection as well as GC-specific
 attributes:
 <blockquote>
 <ul>
   <li>Start time</li>
   <li>End time</li>
   <li>Duration</li>
   <li>Memory usage before the collection starts</li>
   <li>Memory usage after the collection ends</li>
 </ul>
 </blockquote>

 <p>
 <tt>GcInfo</tt> is a {@link CompositeData CompositeData}
 The GC-specific attributes can be obtained via the CompositeData
 interface.  This is a historical relic, and other classes should
 not copy this pattern.  Use {@link CompositeDataView} instead.

 <h4>MXBean Mapping</h4>
 <tt>GcInfo</tt> is mapped to a {@link CompositeData CompositeData}
 with attributes as specified in the {@link #from from} method.

 @author  Mandy Chung
 @version 1.9, 03/15/06
 @since   1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public long com.sun.management.GcInfo.getId()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the identifier of this garbage collection which is
 the number of collections that this collector has done.

 @return the identifier of this garbage collection which is
 the number of collections that this collector has done.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long com.sun.management.GcInfo.getStartTime()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the start time of this GC in milliseconds
 since the Java virtual machine was started.

 @return the start time of this GC.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long com.sun.management.GcInfo.getEndTime()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the end time of this GC in milliseconds
 since the Java virtual machine was started.

 @return the end time of this GC.

<!-- END DATA -->
<!-- BEGIN KEY -->
public long com.sun.management.GcInfo.getDuration()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the elapsed time of this GC in milliseconds.

 @return the elapsed time of this GC in milliseconds.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Map<java.lang.String, java.lang.management.MemoryUsage> com.sun.management.GcInfo.getMemoryUsageBeforeGc()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the memory usage of all memory pools 
 at the beginning of this GC.
 This method returns
 a <tt>Map</tt> of the name of a memory pool 
 to the memory usage of the corresponding 
 memory pool before GC starts.

 @return a <tt>Map</tt> of memory pool names to the memory
 usage of a memory pool before GC starts.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.util.Map<java.lang.String, java.lang.management.MemoryUsage> com.sun.management.GcInfo.getMemoryUsageAfterGc()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the memory usage of all memory pools
 at the end of this GC.
 This method returns
 a <tt>Map</tt> of the name of a memory pool 
 to the memory usage of the corresponding 
 memory pool when GC finishes.

 @return a <tt>Map</tt> of memory pool names to the memory
 usage of a memory pool when GC finishes.

<!-- END DATA -->
<!-- BEGIN KEY -->
public static com.sun.management.GcInfo com.sun.management.GcInfo.from(CompositeData cd)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a <tt>GcInfo</tt> object represented by the
 given <tt>CompositeData</tt>. The given
 <tt>CompositeData</tt> must contain
 all the following attributes:

 <p>
 <blockquote>
 <table border>
 <tr>
   <th align=left>Attribute Name</th>
   <th align=left>Type</th>
 </tr>
 <tr>
   <td>index</td>
   <td><tt>java.lang.Long</tt></td>
 </tr>
 <tr>
   <td>startTime</td>
   <td><tt>java.lang.Long</tt></td>
 </tr>
 <tr>
   <td>endTime</td>
   <td><tt>java.lang.Long</tt></td>
 </tr>
 <tr>
   <td>memoryUsageBeforeGc</td>
   <td><tt>javax.management.openmbean.TabularData</tt></td>
 </tr>
 <tr>
   <td>memoryUsageAfterGc</td>
   <td><tt>javax.management.openmbean.TabularData</tt></td>
 </tr>
 </table>
 </blockquote>

 @throws IllegalArgumentException if <tt>cd</tt> does not
   represent a <tt>GcInfo</tt> object with the attributes
   described above.

 @return a <tt>GcInfo</tt> object represented by <tt>cd</tt>
 if <tt>cd</tt> is not <tt>null</tt>; <tt>null</tt> otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public javax.management.openmbean.CompositeData com.sun.management.GcInfo.toCompositeData(CompositeType ct)
<!-- END KEY -->
<!-- BEGIN DATA -->
 <p>Return the {@code CompositeData} representation of this
 {@code GcInfo}, including any GC-specific attributes.  The
 returned value will have at least all the attributes described
 in the {@link #from(CompositeData) from} method, plus optionally
 other attributes.

 @param ct the {@code CompositeType} that the caller expects.
 This parameter is ignored and can be null.

 @return the {@code CompositeData} representation.

<!-- END DATA -->
