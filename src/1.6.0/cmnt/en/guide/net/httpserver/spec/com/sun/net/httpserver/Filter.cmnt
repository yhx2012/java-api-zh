<!-- BEGIN KEY -->
public abstract class com.sun.net.httpserver.Filter extends java.lang.Object
<!-- END KEY -->
<!-- BEGIN DATA -->
 A filter used to pre- and post-process incoming requests. Pre-processing occurs
 before the application's exchange handler is invoked, and post-processing
 occurs after the exchange handler returns.  Filters
 are organised in chains, and are associated with HttpContext instances.
 <p>
 Each Filter in the chain, invokes the next filter within its own
 doFilter() implementation. The final Filter in the chain invokes the applications
 exchange handler.
 @since 1.6

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract void com.sun.net.httpserver.Filter.doFilter(HttpExchange exchange, Filter.Chain chain) throws java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Asks this filter to pre/post-process the given exchange. The filter
 can :-
 <ul><li>examine or modify the request headers</li>
 <li>filter the request body or the response body, by creating suitable
 filter streams and calling 
 {@link HttpExchange#setStreams(InputStream,OutputStream)}</li>
 <li>set attribute Objects in the exchange, which other filters or the
 exchange handler can access.</li>
 <li>decide to either :-<ol>
 <li>invoke the next filter in the chain, by calling 
 {@link Filter.Chain#doFilter(HttpExchange)}</li>
 <li>terminate the chain of invocation, by <b>not</b> calling
 {@link Filter.Chain#doFilter(HttpExchange)}</li></ol>
 <li>if option 1. above taken, then when doFilter() returns all subsequent
 filters in the Chain have been called, and the response headers can be
 examined or modified.</li>
 <li>if option 2. above taken, then this Filter must use the HttpExchange
 to send back an appropriate response</li></ul><p>
 @param exchange the <code>HttpExchange</code> to be filtered.
 @param chain the Chain which allows the next filter to be invoked.
 @throws IOException may be thrown by any filter module, and if
 		caught, must be rethrown again.
 @throws NullPointerException if either exchange or chain are <code>null</code>

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract java.lang.String com.sun.net.httpserver.Filter.description()
<!-- END KEY -->
<!-- BEGIN DATA -->
 returns a short description of this Filter
 @return a string describing the Filter

<!-- END DATA -->
