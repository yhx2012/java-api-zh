<!-- BEGIN KEY -->
public interface org.w3c.dom.html.HTMLSelectElement extends org.w3c.dom.html.HTMLElement
<!-- END KEY -->
<!-- BEGIN DATA -->
  The select element allows the selection of an option. The contained 
 options can be directly accessed through the select element as a 
 collection. See the  SELECT element definition in HTML 4.0.
 <p>See also the <a href='http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510'>Document Object Model (DOM) Level 2 Specification</a>.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLSelectElement.getType()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The type of this form control. This is the string "select-multiple" 
 when the multiple attribute is <code>true</code> and the string 
 "select-one" when <code>false</code> .

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.html.HTMLSelectElement.getSelectedIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The ordinal index of the selected option, starting from 0. The value 
 -1 is returned if no element is selected. If multiple options are 
 selected, the index of the first selected option is returned. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLSelectElement.getValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The current form control value. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.html.HTMLSelectElement.getLength()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The number of options in this <code>SELECT</code> . 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLFormElement org.w3c.dom.html.HTMLSelectElement.getForm()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Returns the <code>FORM</code> element containing this control. Returns 
 <code>null</code> if this control is not within the context of a form. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public org.w3c.dom.html.HTMLCollection org.w3c.dom.html.HTMLSelectElement.getOptions()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The collection of <code>OPTION</code> elements contained by this 
 element. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.w3c.dom.html.HTMLSelectElement.getDisabled()
<!-- END KEY -->
<!-- BEGIN DATA -->
  The control is unavailable in this context. See the  disabled 
 attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean org.w3c.dom.html.HTMLSelectElement.getMultiple()
<!-- END KEY -->
<!-- BEGIN DATA -->
  If true, multiple <code>OPTION</code> elements may  be selected in 
 this <code>SELECT</code> . See the  multiple attribute definition in 
 HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String org.w3c.dom.html.HTMLSelectElement.getName()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Form control or object name when submitted with a form. See the  name 
 attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.html.HTMLSelectElement.getSize()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Number of visible rows. See the  size attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public int org.w3c.dom.html.HTMLSelectElement.getTabIndex()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Index that represents the element's position in the tabbing order. See 
 the  tabindex attribute definition in HTML 4.0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLSelectElement.add(HTMLElement element, HTMLElement before) throws org.w3c.dom.DOMException
<!-- END KEY -->
<!-- BEGIN DATA -->
  Add a new element to the collection of <code>OPTION</code> elements 
 for this <code>SELECT</code> . This method is the equivalent of the 
 <code>appendChild</code> method of the <code>Node</code> interface if 
 the <code>before</code> parameter is <code>null</code> . It is 
 equivalent to the <code>insertBefore</code> method on the parent of 
 <code>before</code> in all other cases.
 @param element  The element to add.
 @param before  The element to insert before, or <code>null</code> for 
   the tail of the list.
 @exception DOMException
    NOT_FOUND_ERR: Raised if <code>before</code> is not a descendant of 
   the <code>SELECT</code> element. 

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLSelectElement.remove(int index)
<!-- END KEY -->
<!-- BEGIN DATA -->
  Remove an element from the collection of <code>OPTION</code> elements 
 for this <code>SELECT</code> . Does nothing if no element has the given
  index.
 @param index  The index of the item to remove, starting from 0.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLSelectElement.blur()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Removes keyboard focus from this element.

<!-- END DATA -->
<!-- BEGIN KEY -->
public void org.w3c.dom.html.HTMLSelectElement.focus()
<!-- END KEY -->
<!-- BEGIN DATA -->
  Gives keyboard focus to this element.

<!-- END DATA -->
