<!-- BEGIN KEY -->
public com.sun.java.browser.dom.DOMServiceProvider()
<!-- END KEY -->
<!-- BEGIN DATA -->
 An empty constructor is provided. Implementations should 
 provide a public constructor so that the DOMService
 can instantiate instances of the implementation class. 
 Application programmers should not be able to directly
 construct implementation subclasses of this abstract subclass.
 The only way an application should be able to obtain a 
 reference to a DOMServiceProvider implementation
 instance is by using the appropriate methods of the
 DOMService.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract boolean com.sun.java.browser.dom.DOMServiceProvider.canHandle(Object obj)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns true if the DOMService can determine the association
 between the obj and the underlying DOM in the browser.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.w3c.dom.Document com.sun.java.browser.dom.DOMServiceProvider.getDocument(Object obj) throws com.sun.java.browser.dom.DOMUnsupportedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the Document object of the DOM.

<!-- END DATA -->
<!-- BEGIN KEY -->
public abstract org.w3c.dom.DOMImplementation com.sun.java.browser.dom.DOMServiceProvider.getDOMImplementation()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the DOMImplemenation object of the DOM.

<!-- END DATA -->
