<!-- BEGIN KEY -->
public interface com.sun.jdi.PrimitiveValue extends com.sun.jdi.Value
<!-- END KEY -->
<!-- BEGIN DATA -->
 The value assigned to a field or variable of primitive type in a 
 target VM. Each primitive values is accessed through a subinterface
 of this interface. 

 @author Robert Field
 @author Gordon Hirsch
 @author James McIlree
 @since  1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public boolean com.sun.jdi.PrimitiveValue.booleanValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to a BooleanValue and returns the result
 as a boolean.
 
 @return <code>true</code> if this value is non-zero (or 
 <code>true</code> if already a BooleanValue); false otherwise.

<!-- END DATA -->
<!-- BEGIN KEY -->
public byte com.sun.jdi.PrimitiveValue.byteValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to a ByteValue and returns the result
 as a byte. The value will be narrowed as 
 necessary, and magnitude or precision information
 may be lost (as if the primitive had been cast to a byte).
 
 @return the value, converted to byte

<!-- END DATA -->
<!-- BEGIN KEY -->
public char com.sun.jdi.PrimitiveValue.charValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to a CharValue and returns the result
 as a char. The value will be narrowed or widened as 
 necessary, and magnitude or precision information
 may be lost (as if the primitive had been cast to a char,
 in the narrowing case).
 
 @return the value, converted to char

<!-- END DATA -->
<!-- BEGIN KEY -->
public short com.sun.jdi.PrimitiveValue.shortValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to a ShortValue and returns the result
 as a short. The value will be narrowed or widened as 
 necessary, and magnitude or precision information
 may be lost (as if the primitive had been cast to a short,
 in the narrowing case).
 
 @return the value, converted to short

<!-- END DATA -->
<!-- BEGIN KEY -->
public int com.sun.jdi.PrimitiveValue.intValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to an IntegerValue and returns the result
 as an int. The value will be narrowed or widened as 
 necessary, and magnitude or precision information
 may be lost (as if the primitive had been cast to an int,
 in the narrowing case).
 
 @return the value, converted to int

<!-- END DATA -->
<!-- BEGIN KEY -->
public long com.sun.jdi.PrimitiveValue.longValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to a LongValue and returns the result
 as a long. The value will be narrowed or widened as 
 necessary, and magnitude or precision information
 may be lost (as if the primitive had been cast to a long,
 in the narrowing case).
 
 @return the value, converted to long

<!-- END DATA -->
<!-- BEGIN KEY -->
public float com.sun.jdi.PrimitiveValue.floatValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to a FloatValue and returns the result
 as a float. The value will be narrowed or widened as 
 necessary, and magnitude or precision information
 may be lost (as if the primitive had been cast to a float,
 in the narrowing case).
 
 @return the value, converted to float

<!-- END DATA -->
<!-- BEGIN KEY -->
public double com.sun.jdi.PrimitiveValue.doubleValue()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Converts this value to a DoubleValue and returns the result
 as a double. The value will be widened as 
 necessary, and precision information
 may be lost.
 
 @return the value, converted to double

<!-- END DATA -->
