<!-- BEGIN KEY -->
public class com.sun.jdi.connect.spi.ClosedConnectionException extends java.io.IOException
<!-- END KEY -->
<!-- BEGIN DATA -->
 This exception may be thrown as a result of an asynchronous
 close of a {@link Connection} while an I/O operation is
 in progress.

 <p> When a thread is blocked in {@link Connection#readPacket
 readPacket} waiting for packet from a target VM the
 {@link Connection} may be closed asynchronous by another
 thread invokving the {@link Connection#close close} method.
 When this arises the thread in readPacket will throw this
 exception. Similiarly when a thread is blocked in 
 {@link Connection#writePacket} the Connection may be closed.
 When this occurs the thread in writePacket will throw
 this exception.

 @see Connection#readPacket
 @see Connection#writePacket
 
 @since 1.5

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.jdi.connect.spi.ClosedConnectionException()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <tt>ClosedConnectionException</tt> with no detail
 message.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.jdi.connect.spi.ClosedConnectionException(String message)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Constructs a <tt>ClosedConnectionException</tt> with the 
 specified detail message.

 @param message the detail message pertaining to this exception.

<!-- END DATA -->
