<!-- BEGIN KEY -->
public interface com.sun.jdi.ArrayType extends com.sun.jdi.ReferenceType
<!-- END KEY -->
<!-- BEGIN DATA -->
 Provides access to the class of an array and the type of 
 its components in the target VM. 

 @see ArrayReference

 @author Robert Field
 @author Gordon Hirsch
 @author James McIlree
 @since  1.3

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.jdi.ArrayReference com.sun.jdi.ArrayType.newInstance(int length)
<!-- END KEY -->
<!-- BEGIN DATA -->
 Creates a new instance of this array class in the target VM.
 The array is created with the given length and each component 
 is initialized to is standard default value.

 @param length the number of components in the new array
 @return the newly created {@link ArrayReference} mirroring
 the new object in the target VM.

 @throws VMCannotBeModifiedException if the VirtualMachine is read-only - see {@link VirtualMachine#canBeModified()}.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.jdi.ArrayType.componentSignature()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Gets the JNI signature of the components of this
 array class. The signature 
 describes the declared type of the components. If the components
 are objects, their actual type in a particular run-time context
 may be a subclass of the declared class.

 @return a string containing the JNI signature of array components.

<!-- END DATA -->
<!-- BEGIN KEY -->
public java.lang.String com.sun.jdi.ArrayType.componentTypeName()
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns a text representation of the component
 type of this array.

 @return a text representation of the component type.

<!-- END DATA -->
<!-- BEGIN KEY -->
public com.sun.jdi.Type com.sun.jdi.ArrayType.componentType() throws com.sun.jdi.ClassNotLoadedException
<!-- END KEY -->
<!-- BEGIN DATA -->
 Returns the component type of this array,
 as specified in the array declaration.
 <P>
 Note: The component type of a array will always be
 created or loaded before the array - see the
 <a href="http://java.sun.com/docs/books/vmspec/">Java Virtual
 Machine Specification</a>, section
 <a href="http://java.sun.com/docs/books/vmspec/2nd-edition/html/ConstantPool.doc.html#79473">5.3.3
 Creating Array Classes</a>.
 However, although the component type will be loaded it may 
 not yet be prepared, in which case the type will be returned
 but attempts to perform some operations on the returned type
 (e.g. {@link ReferenceType#fields() fields()}) will throw
 a {@link ClassNotPreparedException}.
 Use {@link ReferenceType#isPrepared()} to determine if
 a reference type is prepared.

 @see Type
 @see Field#type() Field.type() - for usage examples
 @return the {@link Type} of this array's components.

<!-- END DATA -->
